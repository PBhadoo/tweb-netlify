{"version":3,"file":"mtproto.worker.ff170e690c26321d22d4.chunk.js","mappings":"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Ac,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAc,MAAO,cAAckBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,mBAAmB,MAAO,kBAAkB,MAAO,QAAQ,MAAO,kBAAkB,MAAO,4CAA4C,MAAO,4CAA4C,MAAO,4CAA4C,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,mBAAmB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,mBAAmB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,yCAAyC,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,yCAAyC,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,6BAA6B,KAAM,wCAAwC,KAAM,QAAQ,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,8BAA8B,KAAM,yCAAyC,KAAM,yCAAyC,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,6BAA6B,KAAM,6BAA6B,KAAM,wCAAwC,KAAM,wCAAwC,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkkBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,GAAI,QAAQ,IAAK,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,mBAAmB,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,mBAAmB,IAAK,QAAQ,IAAK,mBAAmB,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,IAAK,QAAQ,GAAI,QAAQ,IAAK,QAAQ,IAAK,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,MAAO,QAAQ,KAAM,QAAQ,MAAO,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkkBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,IAAK,QAAQ,IAAK,QAAQ,IAAK,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkkBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,MAAO,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,IAAK,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,8BAA8B,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,mBAAmB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkB,KAAM,QAAQ,KAAM,kBAAkB,KAAM,kBAAkiBAAiB,KAAM,iBAAiB,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,KAAM,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,kBAAkB,KAAM,kBAAkB,KAAM,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,MAAO,OAAO,KAAM,OAAO,MAAO,OAAO,MAAO,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,oDAAoD,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,yCAAyC,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,0CAA0C,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,yBAAyB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,wBAAwB,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,cAAc,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,uBAAuB,EAAG,uBAAuB,EAAG,uBAAuB,EAAG,uBAAuB,EAAG,uBAAuB,EAAG,uBAAuB,EAAG,uBAAuB,EAAG,uBAAuB,EAAG,uBAAuB,EAAG,uBAAuB,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aAAa,EAAG,aA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","sources":["webpack://tweb/webpack/runtime/chunk loaded","webpack://tweb/webpack/runtime/startup chunk dependencies","webpack://tweb/./src/config/debug.ts","webpack://tweb/./src/config/emoji.ts","webpack://tweb/./src/environment/userAgent.ts","webpack://tweb/./src/helpers/cleanSearchText.ts","webpack://tweb/./src/helpers/fileName.ts","webpack://tweb/./src/helpers/restrictions.ts","webpack://tweb/./src/lib/appManagers/utils/peers/getPeerId.ts","webpack://tweb/./src/lib/files/idb.ts","webpack://tweb/./src/environment/utils.ts","webpack://tweb/./src/lib/rootScope.ts","webpack://tweb/./src/lib/appManagers/appStateManager.ts","webpack://tweb/./src/helpers/object/setDeepProperty.ts","webpack://tweb/./src/lib/mtproto/transports/http.ts","webpack://tweb/./src/lib/mtproto/transports/websocket.ts","webpack://tweb/./src/helpers/array/randomize.ts","webpack://tweb/./src/lib/mtproto/transports/obfuscation.ts","webpack://tweb/./src/lib/mtproto/transports/abridged.ts","webpack://tweb/./src/helpers/bytes/bytesToHex.ts","webpack://tweb/./src/lib/mtproto/transports/tcpObfuscated.ts","webpack://tweb/./src/lib/mtproto/dcConfigurator.ts","webpack://tweb/./src/lib/mtproto/transports/controller.ts","webpack://tweb/./src/lib/appManagers/utils/storages/resetStoragesPromise.ts","webpack://tweb/./src/lib/appManagers/manager.ts","webpack://tweb/./src/lib/appManagers/utils/storages/loadStorages.ts","webpack://tweb/./src/lib/appManagers/appStoragesManager.ts","webpack://tweb/./src/lib/appManagers/utils/storages/createStorages.ts","webpack://tweb/./src/lib/mtproto/passwordManager.ts","webpack://tweb/./src/lib/mtproto/referenceDatabase.ts","webpack://tweb/./src/helpers/object/safeReplaceObject.ts","webpack://tweb/./src/lib/appManagers/utils/messages/getPeerIdsFromMessage.ts","webpack://tweb/./src/lib/appManagers/utils/dialogs/setDialogIndex.ts","webpack://tweb/./src/lib/storages/dialogs.ts","webpack://tweb/./src/lib/storages/filters.ts","webpack://tweb/./src/helpers/applyMixins.ts","webpack://tweb/./src/lib/appManagers/apiUpdatesManager.ts","webpack://tweb/./src/lib/appManagers/appAvatarsManager.ts","webpack://tweb/./src/lib/appManagers/appCallsManager.ts","webpack://tweb/./src/lib/appManagers/appChatsManager.ts","webpack://tweb/./src/lib/langPack.ts","webpack://tweb/./src/lib/richTextProcessor/wrapUrl.ts","webpack://tweb/./src/helpers/dom/setInnerHTML.ts","webpack://tweb/./src/helpers/date.ts","webpack://tweb/./src/helpers/object/safeReplaceArrayInObject.ts","webpack://tweb/./src/environment/mimeTypeMap.ts","webpack://tweb/./src/lib/appManagers/appDocsManager.ts","webpack://tweb/./src/lib/appManagers/utils/docs/getDocumentURL.ts","webpack://tweb/./src/lib/appManagers/appDraftsManager.ts","webpack://tweb/./src/lib/appManagers/appEmojiManager.ts","webpack://tweb/./src/lib/appManagers/appGroupCallsManager.ts","webpack://tweb/./src/lib/appManagers/utils/photos/getPhotoInput.ts","webpack://tweb/./src/lib/appManagers/utils/photos/getPhotoMediaInput.ts","webpack://tweb/./src/lib/appManagers/utils/docs/getDocumentMediaInput.ts","webpack://tweb/./src/lib/appManagers/appInlineBotsManager.ts","webpack://tweb/./src/lib/appManagers/appMessagesIdsManager.ts","webpack://tweb/./src/helpers/string/splitStringByLength.ts","webpack://tweb/./src/lib/appManagers/appTabsManager.ts","webpack://tweb/./src/lib/appManagers/utils/docs/getDocumentInput.ts","webpack://tweb/./src/helpers/object/setBooleanFlag.ts","webpack://tweb/./src/lib/appManagers/appMessagesManager.ts","webpack://tweb/./src/lib/appManagers/utils/docs/getDocumentInputFileName.ts","webpack://tweb/./src/helpers/string/convertInputKeyToKey.ts","webpack://tweb/./src/lib/appManagers/appNotificationsManager.ts","webpack://tweb/./src/lib/appManagers/appPeersManager.ts","webpack://tweb/./src/lib/appManagers/appPhotosManager.ts","webpack://tweb/./src/lib/appManagers/appPollsManager.ts","webpack://tweb/./src/lib/appManagers/appPrivacyManager.ts","webpack://tweb/./src/lib/appManagers/appProfileManager.ts","webpack://tweb/./src/helpers/callbackifyAll.ts","webpack://tweb/./src/lib/appManagers/appReactionsManager.ts","webpack://tweb/./src/lib/appManagers/appStickersManager.ts","webpack://tweb/./src/helpers/fixBase64String.ts","webpack://tweb/./src/lib/appManagers/appUsersManager.ts","webpack://tweb/./src/helpers/cleanUsername.ts","webpack://tweb/./src/lib/appManagers/appWebPagesManager.ts","webpack://tweb/./src/helpers/blob/readBlobAsArrayBuffer.ts","webpack://tweb/./src/helpers/string/fileNameRFC.ts","webpack://tweb/./src/lib/files/downloadWriter.ts","webpack://tweb/./src/lib/files/downloadStorage.ts","webpack://tweb/./src/lib/mtproto/apiFileManager.ts","webpack://tweb/./src/helpers/fixFirefoxSvg.ts","webpack://tweb/./src/helpers/blob/readBlobAsUint8Array.ts","webpack://tweb/./src/lib/mtproto/api_methods.ts","webpack://tweb/./src/lib/mtproto/apiManager.ts","webpack://tweb/./src/lib/storages/peers.ts","webpack://tweb/./src/lib/storages/thumbs.ts","webpack://tweb/./src/lib/mtproto/schema.ts","webpack://tweb/./src/helpers/number/intToUint.ts","webpack://tweb/./src/helpers/long/ulongFromInts.ts","webpack://tweb/./src/helpers/bigInt/bigIntConstants.ts","webpack://tweb/./src/helpers/bigInt/bigIntConversion.ts","webpack://tweb/./src/lib/mtproto/tl_utils.ts","webpack://tweb/./src/helpers/gzipUncompress.ts","webpack://tweb/./src/helpers/bytes/addPadding.ts","webpack://tweb/./src/lib/mtproto/networker.ts","webpack://tweb/./src/helpers/long/sortLongsArray.ts","webpack://tweb/./src/helpers/long/longToBytes.ts","webpack://tweb/./src/lib/mtproto/networkerFactory.ts","webpack://tweb/./src/lib/mtproto/rsaKeysManager.ts","webpack://tweb/./src/helpers/bytes/bytesXor.ts","webpack://tweb/./src/lib/mtproto/authorizer.ts","webpack://tweb/./src/lib/mtproto/timeManager.ts","webpack://tweb/./src/lib/appManagers/appWebDocsManager.ts","webpack://tweb/./src/lib/appManagers/appPaymentsManager.ts","webpack://tweb/./src/lib/appManagers/appAttachMenuBotsManager.ts","webpack://tweb/./src/lib/appManagers/appSeamlessLoginManager.ts","webpack://tweb/./src/lib/appManagers/appThemesManager.ts","webpack://tweb/./src/lib/appManagers/appManagersManager.ts","webpack://tweb/./src/lib/appManagers/createManagers.ts","webpack://tweb/./src/lib/mtproto/mtproto.worker.ts","webpack://tweb/./src/helpers/listenMessagePort.ts","webpack://tweb/./src/lib/mtproto/mtproto_config.ts","webpack://tweb/./src/lib/richTextProcessor/index.ts","webpack://tweb/./src/vendor/emoji/index.ts","webpack://tweb/webpack/bootstrap","webpack://tweb/webpack/runtime/compat get default export","webpack://tweb/webpack/runtime/define property getters","webpack://tweb/webpack/runtime/ensure chunk","webpack://tweb/webpack/runtime/get javascript chunk filename","webpack://tweb/webpack/runtime/get mini-css chunk filename","webpack://tweb/webpack/runtime/global","webpack://tweb/webpack/runtime/hasOwnProperty shorthand","webpack://tweb/webpack/runtime/make namespace object","webpack://tweb/webpack/runtime/node module decorator","webpack://tweb/webpack/runtime/publicPath","webpack://tweb/webpack/runtime/compat","webpack://tweb/webpack/runtime/importScripts chunk loading","webpack://tweb/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([699,211,147,85,110].map(__webpack_require__.e, __webpack_require__)).then(next);\n};","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport Modes from './modes';\n\nexport const IS_BETA = process.env.NODE_ENV !== 'production';\nexport const DEBUG = (IS_BETA || Modes.debug)/*  && false */;\nconst ctx: any = typeof(window) !== 'undefined' ? window : self;\nexport const MOUNT_CLASS_TO: any = DEBUG || true/*  && false */ ? ctx : {};\nexport default DEBUG;\n\n// let m = DEBUG;\n/* if(!DEBUG) {\n  ctx.sandpitTurtle = () => {\n    //if(!m) {\n      for(let i in MOUNT_CLASS_TO) {\n        ctx[i] = MOUNT_CLASS_TO[i];\n      }\n      //m = true;\n    //}\n\n    //DEBUG = !DEBUG;\n  };\n} */\n\n/* export const superDebug = (object: any, key: string) => {\n  var d = object[key];\n  var beforeStr = '', afterStr = '';\n  for(var r of d) {\n    beforeStr += r.before.hex + '\\n';\n    afterStr += r.after.hex + '\\n';\n  }\n\n  beforeStr = beforeStr.trim();\n  afterStr = afterStr.trim();\n  //var beforeStr = d.map((r) => r.before.hex).join('\\n');\n  //var afterStr = d.map((r) => r.after.hex).join('\\n');\n\n  var dada = (name: string, str: string) => {\n    var a = document.createElement('a');\n    a.target = '_blank';\n    a.download = name + '.txt';\n    a.href = URL.createObjectURL(new Blob([str], {\n      type: 'text/plain'\n    }));\n    document.body.append(a);\n    a.click();\n  };\n\n  dada(key + '_' + 'before', beforeStr);\n  dada(key + '_' + 'after', afterStr);\n}\n\nMOUNT_CLASS_TO.superDebug = superDebug; */\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {EMOJI_VERSION} from '../environment/emojiVersionsSupport';\n\nexport const EmojiVersions: {[version in EMOJI_VERSION]: {[emoji: string]: number}} = {'14':{'1f6dd':4867, '1f6de':4916, '1f6df':4923, '1f7f0':62832, '1f979':183, '1f9cc':1557, '1fa7b':61332, '1fa7c':61330, '1faa9':51093, '1faaa':61364, '1faab':61189, '1faac':51085, '1fab7':2651, '1fab8':2631, '1fab9':2672, '1faba':2673, '1fac3':1520, '1fac4':1521, '1fac5':1505, '1fad7':3793, '1fad8':3707, '1fad9':3804, '1fae0':111, '1fae1':136, '1fae2':132, '1fae3':133, '1fae4':174, '1fae5':142, '1fae6':1385, '1fae7':61353, '1faf0':1341, '1faf1':1332, '1faf2':1333, '1faf3':1334, '1faf4':1335, '1faf5':1351, '1faf6':1360, '1faf1-1f3fb-200d-1faf2-1f3fc':0, '1faf1-1f3fb-200d-1faf2-1f3fd':0, '1faf1-1f3fb-200d-1faf2-1f3fe':0, '1faf1-1f3fb-200d-1faf2-1f3ff':0, '1faf1-1f3fc-200d-1faf2-1f3fb':0, '1faf1-1f3fc-200d-1faf2-1f3fd':0, '1faf1-1f3fc-200d-1faf2-1f3fe':0, '1faf1-1f3fc-200d-1faf2-1f3ff':0, '1faf1-1f3fd-200d-1faf2-1f3fb':0, '1faf1-1f3fd-200d-1faf2-1f3fc':0, '1faf1-1f3fd-200d-1faf2-1f3fe':0, '1faf1-1f3fd-200d-1faf2-1f3ff':0, '1faf1-1f3fe-200d-1faf2-1f3fb':0, '1faf1-1f3fe-200d-1faf2-1f3fc':0, '1faf1-1f3fe-200d-1faf2-1f3fd':0, '1faf1-1f3fe-200d-1faf2-1f3ff':0, '1faf1-1f3ff-200d-1faf2-1f3fb':0, '1faf1-1f3ff-200d-1faf2-1f3fc':0, '1faf1-1f3ff-200d-1faf2-1f3fd':0, '1faf1-1f3ff-200d-1faf2-1f3fe':0, '1fac3-1f3fb':0, '1fac3-1f3fc':0, '1fac3-1f3fd':0, '1fac3-1f3fe':0, '1fac3-1f3ff':0, '1fac4-1f3fb':0, '1fac4-1f3fc':0, '1fac4-1f3fd':0, '1fac4-1f3fe':0, '1fac4-1f3ff':0, '1fac5-1f3fb':0, '1fac5-1f3fc':0, '1fac5-1f3fd':0, '1fac5-1f3fe':0, '1fac5-1f3ff':0, '1faf0-1f3fb':0, '1faf0-1f3fc':0, '1faf0-1f3fd':0, '1faf0-1f3fe':0, '1faf0-1f3ff':0, '1faf1-1f3fb':0, '1faf1-1f3fc':0, '1faf1-1f3fd':0, '1faf1-1f3fe':0, '1faf1-1f3ff':0, '1faf2-1f3fb':0, '1faf2-1f3fc':0, '1faf2-1f3fd':0, '1faf2-1f3fe':0, '1faf2-1f3ff':0, '1faf3-1f3fb':0, '1faf3-1f3fc':0, '1faf3-1f3fd':0, '1faf3-1f3fe':0, '1faf3-1f3ff':0, '1faf4-1f3fb':0, '1faf4-1f3fc':0, '1faf4-1f3fd':0, '1faf4-1f3fe':0, '1faf4-1f3ff':0, '1faf5-1f3fb':0, '1faf5-1f3fc':0, '1faf5-1f3fd':0, '1faf5-1f3fe':0, '1faf5-1f3ff':0, '1faf6-1f3fb':0, '1faf6-1f3fc':0, '1faf6-1f3fd':0, '1faf6-1f3fe':0, '1faf6-1f3ff':0}, '':{'2049':62835, '2122':62863, '2139':62888, '2194':62764, '2195':62763, '2196':62762, '2197':62756, '2198':62758, '2199':62760, '2328':61194, '2600':4990, '2601':4998, '2602':41013, '2603':41018, '2604':41020, '2611':62851, '2614':41014, '2615':3781, '2618':2667, '2620':1106, '2622':62753, '2623':62754, '2626':62783, '2638':62780, '2639':177, '2648':62788, '2649':62789, '2650':62796, '2651':62797, '2652':62798, '2653':62799, '2660':51095, '2663':51098, '2665':51096, '2666':51097, '2668':4865, '2692':61297, '2693':4922, '2694':61300, '2696':61311, '2697':61319, '2699':61309, '2702':61284, '2705':62850, '2708':4931, '2709':61245, '2712':61259, '2714':62852, '2716':62828, '2721':62779, '2728':51029, '2733':62858, '2734':62859, '2744':41017, '2747':62860, '2753':62836, '2754':62837, '2755':62838, '2757':62839, '2763':1137, '2764':1141, '2795':62829, '2796':62830, '2797':62831, '2934':62767, '2935':62768, '3030':62840, '3297':62912, '3299':62913, '0023-20e3':62864, '002a-20e3':62865, '0030-20e3':62866, '0031-20e3':62867, '0032-20e3':62868, '0033-20e3':62869, '0034-20e3':62870, '0035-20e3':62871, '0036-20e3':62872, '0037-20e3':62873, '0038-20e3':62874, '0039-20e3':62875, '00a9':62861, '00ae':62862, '1f004':51101, '1f0cf':51100, '1f170':62882, '1f171':62884, '1f17e':62893, '1f17f':62895, '1f18e':62883, '1f191':62885, '1f192':62886, '1f193':62887, '1f194':62889, '1f195':62891, '1f196':62892, '1f197':62894, '1f198':62896, '1f199':62897, '1f19a':62898, '1f1e6-1f1e8':71594, '1f1e6-1f1e9':71595, '1f1e6-1f1ea':71596, '1f1e6-1f1eb':71597, '1f1e6-1f1ec':71598, '1f1e6-1f1ee':71599, '1f1e6-1f1f1':71600, '1f1e6-1f1f2':71601, '1f1e6-1f1f4':71602, '1f1e6-1f1f6':71603, '1f1e6-1f1f7':71604, '1f1e6-1f1f8':71605, '1f1e6-1f1f9':71606, '1f1e6-1f1fa':71607, '1f1e6-1f1fc':71608, '1f1e6-1f1fd':71609, '1f1e6-1f1ff':71610, '1f1e7-1f1e6':71611, '1f1e7-1f1e7':71612, '1f1e7-1f1e9':71613, '1f1e7-1f1ea':71614, '1f1e7-1f1eb':71615, '1f1e7-1f1ec':71616, '1f1e7-1f1ed':71617, '1f1e7-1f1ee':71618, '1f1e7-1f1ef':71619, '1f1e7-1f1f1':71620, '1f1e7-1f1f2':71621, '1f1e7-1f1f3':71622, '1f1e7-1f1f4':71623, '1f1e7-1f1f6':71624, '1f1e7-1f1f7':71625, '1f1e7-1f1f8':71626, '1f1e7-1f1f9':71627, '1f1e7-1f1fb':71628, '1f1e7-1f1fc':71629, '1f1e7-1f1fe':71630, '1f1e7-1f1ff':71631, '1f1e8-1f1e6':71632, '1f1e8-1f1e8':71633, '1f1e8-1f1e9':71634, '1f1e8-1f1eb':71635, '1f1e8-1f1ec':71636, '1f1e8-1f1ed':71637, '1f1e8-1f1ee':71638, '1f1e8-1f1f0':71639, '1f1e8-1f1f1':71640, '1f1e8-1f1f2':71641, '1f1e8-1f1f3':71642, '1f1e8-1f1f4':71643, '1f1e8-1f1f5':71644, '1f1e8-1f1f7':71645, '1f1e8-1f1fa':71646, '1f1e8-1f1fb':71647, '1f1e8-1f1fc':71648, '1f1e8-1f1fd':71649, '1f1e8-1f1fe':71650, '1f1e8-1f1ff':71651, '1f1e9-1f1ea':71652, '1f1e9-1f1ec':71653, '1f1e9-1f1ef':71654, '1f1e9-1f1f0':71655, '1f1e9-1f1f2':71656, '1f1e9-1f1f4':71657, '1f1e9-1f1ff':71658, '1f1ea-1f1e6':71659, '1f1ea-1f1e8':71660, '1f1ea-1f1ea':71661, '1f1ea-1f1ec':71662, '1f1ea-1f1ed':71663, '1f1ea-1f1f7':71664, '1f1ea-1f1f8':71665, '1f1ea-1f1f9':71666, '1f1ea-1f1fa':71667, '1f1eb-1f1ee':71668, '1f1eb-1f1ef':71669, '1f1eb-1f1f0':71670, '1f1eb-1f1f2':71671, '1f1eb-1f1f4':71672, '1f1eb-1f1f7':71673, '1f1ec-1f1e6':71674, '1f1ec-1f1e7':71675, '1f1ec-1f1e9':71676, '1f1ec-1f1ea':71677, '1f1ec-1f1eb':71678, '1f1ec-1f1ec':71679, '1f1ec-1f1ed':71680, '1f1ec-1f1ee':71681, '1f1ec-1f1f1':71682, '1f1ec-1f1f2':71683, '1f1ec-1f1f3':71684, '1f1ec-1f1f5':71685, '1f1ec-1f1f6':71686, '1f1ec-1f1f7':71687, '1f1ec-1f1f8':71688, '1f1ec-1f1f9':71689, '1f1ec-1f1fa':71690, '1f1ec-1f1fc':71691, '1f1ec-1f1fe':71692, '1f1ed-1f1f0':71693, '1f1ed-1f1f2':71694, '1f1ed-1f1f3':71695, '1f1ed-1f1f7':71696, '1f1ed-1f1f9':71697, '1f1ed-1f1fa':71698, '1f1ee-1f1e8':71699, '1f1ee-1f1e9':71700, '1f1ee-1f1ea':71701, '1f1ee-1f1f1':71702, '1f1ee-1f1f2':71703, '1f1ee-1f1f3':71704, '1f1ee-1f1f4':71705, '1f1ee-1f1f6':71706, '1f1ee-1f1f7':71707, '1f1ee-1f1f8':71708, '1f1ee-1f1f9':71709, '1f1ef-1f1ea':71710, '1f1ef-1f1f2':71711, '1f1ef-1f1f4':71712, '1f1ef-1f1f5':71713, '1f1f0-1f1ea':71714, '1f1f0-1f1ec':71715, '1f1f0-1f1ed':71716, '1f1f0-1f1ee':71717, '1f1f0-1f1f2':71718, '1f1f0-1f1f3':71719, '1f1f0-1f1f5':71720, '1f1f0-1f1f7':71721, '1f1f0-1f1fc':71722, '1f1f0-1f1fe':71723, '1f1f0-1f1ff':71724, '1f1f1-1f1e6':71725, '1f1f1-1f1e7':71726, '1f1f1-1f1e8':71727, '1f1f1-1f1ee':71728, '1f1f1-1f1f0':71729, '1f1f1-1f1f7':71730, '1f1f1-1f1f8':71731, '1f1f1-1f1f9':71732, '1f1f1-1f1fa':71733, '1f1f1-1f1fb':71734, '1f1f1-1f1fe':71735, '1f1f2-1f1e6':71736, '1f1f2-1f1e8':71737, '1f1f2-1f1e9':71738, '1f1f2-1f1ea':71739, '1f1f2-1f1eb':71740, '1f1f2-1f1ec':71741, '1f1f2-1f1ed':71742, '1f1f2-1f1f0':71743, '1f1f2-1f1f1':71744, '1f1f2-1f1f2':71745, '1f1f2-1f1f3':71746, '1f1f2-1f1f4':71747, '1f1f2-1f1f5':71748, '1f1f2-1f1f6':71749, '1f1f2-1f1f7':71750, '1f1f2-1f1f8':71751, '1f1f2-1f1f9':71752, '1f1f2-1f1fa':71753, '1f1f2-1f1fb':71754, '1f1f2-1f1fc':71755, '1f1f2-1f1fd':71756, '1f1f2-1f1fe':71757, '1f1f2-1f1ff':71758, '1f1f3-1f1e6':71759, '1f1f3-1f1e8':71760, '1f1f3-1f1ea':71761, '1f1f3-1f1eb':71762, '1f1f3-1f1ec':71763, '1f1f3-1f1ee':71764, '1f1f3-1f1f1':71765, '1f1f3-1f1f4':71766, '1f1f3-1f1f5':71767, '1f1f3-1f1f7':71768, '1f1f3-1f1fa':71769, '1f1f3-1f1ff':71770, '1f1f4-1f1f2':71771, '1f1f5-1f1e6':71772, '1f1f5-1f1ea':71773, '1f1f5-1f1eb':71774, '1f1f5-1f1ec':71775, '1f1f5-1f1ed':71776, '1f1f5-1f1f0':71777, '1f1f5-1f1f1':71778, '1f1f5-1f1f2':71779, '1f1f5-1f1f3':71780, '1f1f5-1f1f7':71781, '1f1f5-1f1f8':71782, '1f1f5-1f1f9':71783, '1f1f5-1f1fc':71784, '1f1f5-1f1fe':71785, '1f1f6-1f1e6':71786, '1f1f7-1f1ea':71787, '1f1f7-1f1f4':71788, '1f1f7-1f1f8':71789, '1f1f7-1f1fa':71790, '1f1f7-1f1fc':71791, '1f1f8-1f1e6':71792, '1f1f8-1f1e7':71793, '1f1f8-1f1e8':71794, '1f1f8-1f1e9':71795, '1f1f8-1f1ea':71796, '1f1f8-1f1ec':71797, '1f1f8-1f1ed':71798, '1f1f8-1f1ee':71799, '1f1f8-1f1ef':71800, '1f1f8-1f1f0':71801, '1f1f8-1f1f1':71802, '1f1f8-1f1f2':71803, '1f1f8-1f1f3':71804, '1f1f8-1f1f4':71805, '1f1f8-1f1f7':71806, '1f1f8-1f1f8':71807, '1f1f8-1f1f9':71808, '1f1f8-1f1fb':71809, '1f1f8-1f1fd':71810, '1f1f8-1f1fe':71811, '1f1f8-1f1ff':71812, '1f1f9-1f1e6':71813, '1f1f9-1f1e8':71814, '1f1f9-1f1e9':71815, '1f1f9-1f1eb':71816, '1f1f9-1f1ec':71817, '1f1f9-1f1ed':71818, '1f1f9-1f1ef':71819, '1f1f9-1f1f0':71820, '1f1f9-1f1f1':71821, '1f1f9-1f1f2':71822, '1f1f9-1f1f3':71823, '1f1f9-1f1f4':71824, '1f1f9-1f1f7':71825, '1f1f9-1f1f9':71826, '1f1f9-1f1fb':71827, '1f1f9-1f1fc':71828, '1f1f9-1f1ff':71829, '1f1fa-1f1e6':71830, '1f1fa-1f1ec':71831, '1f1fa-1f1f2':71832, '1f1fa-1f1f3':71833, '1f1fa-1f1f8':71834, '1f1fa-1f1fe':71835, '1f1fa-1f1ff':71836, '1f1fb-1f1e6':71837, '1f1fb-1f1e8':71838, '1f1fb-1f1ea':71839, '1f1fb-1f1ec':71840, '1f1fb-1f1ee':71841, '1f1fb-1f1f3':71842, '1f1fb-1f1fa':71843, '1f1fc-1f1eb':71844, '1f1fc-1f1f8':71845, '1f1fd-1f1f0':71846, '1f1fe-1f1ea':71847, '1f1fe-1f1f9':71848, '1f1ff-1f1e6':71849, '1f1ff-1f1f2':71850, '1f1ff-1f1fc':71851, '1f201':62899, '1f202':62900, '1f21a':62906, '1f22f':62903, '1f232':62907, '1f233':62911, '1f234':62910, '1f235':62915, '1f236':62902, '1f237':62901, '1f238':62909, '1f239':62905, '1f23a':62914, '1f250':62904, '1f251':62908, '1f300':41010, '1f301':4857, '1f302':41012, '1f303':4858, '1f304':4860, '1f305':4861, '1f306':4862, '1f307':4863, '1f308':41011, '1f309':4864, '1f30a':41023, '1f30b':4815, '1f30c':4997, '1f30d':4806, '1f30e':4807, '1f30f':4808, '1f310':4809, '1f311':4977, '1f312':4978, '1f313':4979, '1f314':4980, '1f315':4981, '1f316':4982, '1f317':4983, '1f318':4984, '1f319':4985, '1f31a':4986, '1f31b':4987, '1f31c':4988, '1f31d':4991, '1f31e':4992, '1f31f':4995, '1f320':4996, '1f321':4989, '1f324':41001, '1f325':41002, '1f326':41003, '1f327':41004, '1f328':41005, '1f329':41006, '1f32a':41007, '1f32b':41008, '1f32c':41009, '1f32d':3725, '1f32e':3727, '1f32f':3728, '1f330':3708, '1f331':2659, '1f332':2661, '1f333':2662, '1f334':2663, '1f335':2664, '1f336':3698, '1f337':2658, '1f338':2649, '1f339':2653, '1f33a':2655, '1f33b':2656, '1f33c':2657, '1f33d':3697, '1f33e':2665, '1f33f':2666, '1f340':2668, '1f341':2669, '1f342':2670, '1f343':2671, '1f344':3705, '1f345':3690, '1f346':3694, '1f347':3674, '1f348':3675, '1f349':3676, '1f34a':3677, '1f34b':3678, '1f34c':3679, '1f34d':3680, '1f34e':3682, '1f34f':3683, '1f350':3684, '1f351':3685, '1f352':3686, '1f353':3687, '1f354':3722, '1f355':3724, '1f356':3718, '1f357':3719, '1f358':3744, '1f359':3745, '1f35a':3746, '1f35b':3747, '1f35c':3748, '1f35d':3749, '1f35e':3709, '1f35f':3723, '1f360':3750, '1f361':3756, '1f362':3751, '1f363':3752, '1f364':3753, '1f365':3754, '1f366':3765, '1f367':3766, '1f368':3767, '1f369':3768, '1f36a':3769, '1f36b':3774, '1f36c':3775, '1f36d':3776, '1f36e':3777, '1f36f':3778, '1f370':3771, '1f371':3743, '1f372':3735, '1f373':3733, '1f374':3801, '1f375':3783, '1f376':3784, '1f377':3786, '1f378':3787, '1f379':3788, '1f37a':3789, '1f37b':3790, '1f37c':3779, '1f37d':3800, '1f37e':3785, '1f37f':3739, '1f380':51040, '1f381':51041, '1f382':3770, '1f383':51024, '1f384':51025, '1f385':1527, '1f386':51026, '1f387':51027, '1f388':51030, '1f389':51031, '1f38a':51032, '1f38b':51033, '1f38c':71588, '1f38d':51034, '1f38e':51035, '1f38f':51036, '1f390':51037, '1f391':51038, '1f392':61134, '1f393':61147, '1f396':51045, '1f397':51042, '1f399':61167, '1f39a':61168, '1f39b':61169, '1f39e':61203, '1f39f':51043, '1f3a0':4866, '1f3a1':4868, '1f3a2':4869, '1f3a3':51072, '1f3a4':61170, '1f3a5':61202, '1f3a6':62819, '1f3a7':61171, '1f3a8':51105, '1f3a9':61146, '1f3aa':4871, '1f3ab':51044, '1f3ac':61205, '1f3ad':51103, '1f3ae':51086, '1f3af':51078, '1f3b0':51088, '1f3b1':51081, '1f3b2':51089, '1f3b3':51060, '1f3b4':51102, '1f3b5':61165, '1f3b6':61166, '1f3b7':61173, '1f3b8':61175, '1f3b9':61176, '1f3ba':61177, '1f3bb':61178, '1f3bc':61164, '1f3bd':51074, '1f3be':51058, '1f3bf':51075, '1f3c0':51054, '1f3c1':71586, '1f3c2':1600, '1f3c3-200d-2640':1584, '1f3c3-200d-2642':1583, '1f3c3':1582, '1f3c4-200d-2640':1606, '1f3c4-200d-2642':1605, '1f3c4':1604, '1f3c5':51047, '1f3c6':51046, '1f3c7':1598, '1f3c8':51056, '1f3c9':51057, '1f3ca-200d-2640':1612, '1f3ca-200d-2642':1611, '1f3ca':1610, '1f3cb-200d-2640':1618, '1f3cb-200d-2642':1617, '1f3cb':1616, '1f3cc-200d-2640':1603, '1f3cc-200d-2642':1602, '1f3cc':1601, '1f3cd':4902, '1f3ce':4901, '1f3cf':51061, '1f3d0':51055, '1f3d1':51062, '1f3d2':51063, '1f3d3':51065, '1f3d4':4813, '1f3d5':4817, '1f3d6':4818, '1f3d7':4824, '1f3d8':4829, '1f3d9':4859, '1f3da':4830, '1f3db':4823, '1f3dc':4819, '1f3dd':4820, '1f3de':4821, '1f3df':4822, '1f3e0':4831, '1f3e1':4832, '1f3e2':4833, '1f3e3':4834, '1f3e4':4835, '1f3e5':4836, '1f3e6':4837, '1f3e7':62729, '1f3e8':4838, '1f3e9':4839, '1f3ea':4840, '1f3eb':4841, '1f3ec':4842, '1f3ed':4843, '1f3ee':61216, '1f3ef':4844, '1f3f0':4845, '1f3f3-200d-1f308':71591, '1f3f3-200d-26a7':71592, '1f3f3':71590, '1f3f4-200d-2620':71593, '1f3f4-e0067-e0062-e0065-e006e-e0067-e007f':71852, '1f3f4-e0067-e0062-e0073-e0063-e0074-e007f':71853, '1f3f4-e0067-e0062-e0077-e006c-e0073-e007f':71854, '1f3f4':71589, '1f3f5':2652, '1f3f7':61234, '1f3f8':51066, '1f3f9':61303, '1f3fa':3805, '1f3fb':9525, '1f3fc':9526, '1f3fd':9527, '1f3fe':9528, '1f3ff':9529, '1f400':2576, '1f401':2575, '1f402':2556, '1f403':2557, '1f404':2558, '1f405':2547, '1f406':2548, '1f407':2579, '1f408-200d-2b1b':2544, '1f408':2543, '1f409':2618, '1f40a':2613, '1f40b':2622, '1f40c':2632, '1f40d':2616, '1f40e':2550, '1f40f':2563, '1f410':2565, '1f411':2564, '1f412':2531, '1f413':2596, '1f414':2595, '1f415-200d-1f9ba':2537, '1f415':2535, '1f416':2560, '1f417':2561, '1f418':2570, '1f419':2629, '1f41a':2630, '1f41b':2634, '1f41c':2635, '1f41d':2636, '1f41e':2638, '1f41f':2625, '1f420':2626, '1f421':2627, '1f422':2614, '1f423':2597, '1f424':2598, '1f425':2599, '1f426':2600, '1f427':2601, '1f428':2586, '1f429':2538, '1f42a':2566, '1f42b':2567, '1f42c':2623, '1f42d':2574, '1f42e':2555, '1f42f':2546, '1f430':2578, '1f431':2542, '1f432':2617, '1f433':2621, '1f434':2549, '1f435':2530, '1f436':2534, '1f437':2559, '1f438':2612, '1f439':2577, '1f43a':2539, '1f43b-200d-2744':2585, '1f43b':2584, '1f43c':2587, '1f43d':2562, '1f43e':2593, '1f43f':2580, '1f440':1381, '1f441-200d-1f5e8':1159, '1f441':1382, '1f442':1373, '1f443':1375, '1f444':1384, '1f445':1383, '1f446':1347, '1f447':1349, '1f448':1345, '1f449':1346, '1f44a':1355, '1f44b':1327, '1f44c':1336, '1f44d':1352, '1f44e':1353, '1f44f':1358, '1f450':1361, '1f451':61144, '1f452':61145, '1f453':61110, '1f454':61115, '1f455':61116, '1f456':61117, '1f457':61122, '1f458':61123, '1f459':61128, '1f45a':61129, '1f45b':61130, '1f45c':61131, '1f45d':61132, '1f45e':61136, '1f45f':61137, '1f460':61140, '1f461':61141, '1f462':61143, '1f463':1687, '1f464':1684, '1f465':1685, '1f466':1388, '1f467':1389, '1f468-200d-1f33e':1457, '1f468-200d-1f373':1460, '1f468-200d-1f37c':1524, '1f468-200d-1f393':1448, '1f468-200d-1f3a4':1478, '1f468-200d-1f3a8':1481, '1f468-200d-1f3eb':1451, '1f468-200d-1f3ed':1466, '1f468-200d-1f466-200d-1f466':1674, '1f468-200d-1f466':1673, '1f468-200d-1f467-200d-1f466':1676, '1f468-200d-1f467-200d-1f467':1677, '1f468-200d-1f467':1675, '1f468-200d-1f468-200d-1f466':1663, '1f468-200d-1f468-200d-1f466-200d-1f466':1666, '1f468-200d-1f468-200d-1f467':1664, '1f468-200d-1f468-200d-1f467-200d-1f466':1665, '1f468-200d-1f468-200d-1f467-200d-1f467':1667, '1f468-200d-1f469-200d-1f466':1658, '1f468-200d-1f469-200d-1f466-200d-1f466':1661, '1f468-200d-1f469-200d-1f467':1659, '1f468-200d-1f469-200d-1f467-200d-1f466':1660, '1f468-200d-1f469-200d-1f467-200d-1f467':1662, '1f468-200d-1f4bb':1475, '1f468-200d-1f4bc':1469, '1f468-200d-1f527':1463, '1f468-200d-1f52c':1472, '1f468-200d-1f680':1487, '1f468-200d-1f692':1490, '1f468-200d-1f9af':1574, '1f468-200d-1f9b0':1396, '1f468-200d-1f9b1':1397, '1f468-200d-1f9b2':1399, '1f468-200d-1f9b3':1398, '1f468-200d-1f9bc':1577, '1f468-200d-1f9bd':1580, '1f468-200d-2695':1445, '1f468-200d-2696':1454, '1f468-200d-2708':1484, '1f468-200d-2764-200d-1f468':1655, '1f468-200d-2764-200d-1f48b-200d-1f468':1651, '1f468':1392, '1f469-200d-1f33e':1458, '1f469-200d-1f373':1461, '1f469-200d-1f37c':1523, '1f469-200d-1f393':1449, '1f469-200d-1f3a4':1479, '1f469-200d-1f3a8':1482, '1f469-200d-1f3eb':1452, '1f469-200d-1f3ed':1467, '1f469-200d-1f466-200d-1f466':1679, '1f469-200d-1f466':1678, '1f469-200d-1f467-200d-1f466':1681, '1f469-200d-1f467-200d-1f467':1682, '1f469-200d-1f467':1680, '1f469-200d-1f469-200d-1f466':1668, '1f469-200d-1f469-200d-1f466-200d-1f466':1671, '1f469-200d-1f469-200d-1f467':1669, '1f469-200d-1f469-200d-1f467-200d-1f466':1670, '1f469-200d-1f469-200d-1f467-200d-1f467':1672, '1f469-200d-1f4bb':1476, '1f469-200d-1f4bc':1470, '1f469-200d-1f527':1464, '1f469-200d-1f52c':1473, '1f469-200d-1f680':1488, '1f469-200d-1f692':1491, '1f469-200d-1f9af':1575, '1f469-200d-1f9b0':1401, '1f469-200d-1f9b1':1403, '1f469-200d-1f9b2':1407, '1f469-200d-1f9b3':1405, '1f469-200d-1f9bc':1578, '1f469-200d-1f9bd':1581, '1f469-200d-2695':1446, '1f469-200d-2696':1455, '1f469-200d-2708':1485, '1f469-200d-2764-200d-1f468':1654, '1f469-200d-2764-200d-1f469':1656, '1f469-200d-2764-200d-1f48b-200d-1f468':1650, '1f469-200d-2764-200d-1f48b-200d-1f469':1652, '1f469':1400, '1f46a':1657, '1f46b':1647, '1f46c':1648, '1f46d':1646, '1f46e-200d-2640':1494, '1f46e-200d-2642':1493, '1f46e':1492, '1f46f-200d-2640':1590, '1f46f-200d-2642':1589, '1f46f':1588, '1f470-200d-2640':1518, '1f470-200d-2642':1517, '1f470':1516, '1f471-200d-2640':1409, '1f471-200d-2642':1410, '1f471':1391, '1f472':1511, '1f473-200d-2640':1510, '1f473-200d-2642':1509, '1f473':1508, '1f474':1412, '1f475':1413, '1f476':1386, '1f477-200d-2640':1504, '1f477-200d-2642':1503, '1f477':1502, '1f478':1507, '1f479':1109, '1f47a':1110, '1f47b':1111, '1f47c':1526, '1f47d':1112, '1f47e':1113, '1f47f':1104, '1f480':1105, '1f481-200d-2640':1428, '1f481-200d-2642':1427, '1f481':1426, '1f482-200d-2640':1500, '1f482-200d-2642':1499, '1f482':1498, '1f483':1585, '1f484':61152, '1f485':1366, '1f486-200d-2640':1560, '1f486-200d-2642':1559, '1f486':1558, '1f487-200d-2640':1563, '1f487-200d-2642':1562, '1f487':1561, '1f488':4870, '1f489':61326, '1f48a':61328, '1f48b':1127, '1f48c':1128, '1f48d':61153, '1f48e':61154, '1f48f':1649, '1f490':2648, '1f491':1653, '1f492':4846, '1f493':1133, '1f494':1138, '1f495':1135, '1f496':1131, '1f497':1132, '1f498':1129, '1f499':1145, '1f49a':1144, '1f49b':1143, '1f49c':1146, '1f49d':1130, '1f49e':1134, '1f49f':1136, '1f4a0':62946, '1f4a1':61214, '1f4a2':1151, '1f4a3':1157, '1f4a4':1163, '1f4a5':1152, '1f4a6':1154, '1f4a7':41022, '1f4a8':1155, '1f4a9':1107, '1f4aa':1368, '1f4ab':1153, '1f4ac':1158, '1f4ad':1162, '1f4ae':2650, '1f4af':1150, '1f4b0':61235, '1f4b1':62841, '1f4b2':62842, '1f4b3':61242, '1f4b4':61237, '1f4b5':61238, '1f4b6':61239, '1f4b7':61240, '1f4b8':61241, '1f4b9':61244, '1f4ba':4936, '1f4bb':61191, '1f4bc':61265, '1f4bd':61197, '1f4be':61198, '1f4bf':61199, '1f4c0':61200, '1f4c1':61266, '1f4c2':61267, '1f4c3':61227, '1f4c4':61229, '1f4c5':61269, '1f4c6':61270, '1f4c7':61273, '1f4c8':61274, '1f4c9':61275, '1f4ca':61276, '1f4cb':61277, '1f4cc':61278, '1f4cd':61279, '1f4ce':61280, '1f4cf':61282, '1f4d0':61283, '1f4d1':61232, '1f4d2':61226, '1f4d3':61225, '1f4d4':61218, '1f4d5':61219, '1f4d6':61220, '1f4d7':61221, '1f4d8':61222, '1f4d9':61223, '1f4da':61224, '1f4db':62847, '1f4dc':61228, '1f4dd':61264, '1f4de':61185, '1f4df':61186, '1f4e0':61187, '1f4e1':61325, '1f4e2':61159, '1f4e3':61160, '1f4e4':61249, '1f4e5':61250, '1f4e6':61251, '1f4e7':61246, '1f4e8':61247, '1f4e9':61248, '1f4ea':61253, '1f4eb':61252, '1f4ec':61254, '1f4ed':61255, '1f4ee':61256, '1f4ef':61161, '1f4f0':61230, '1f4f1':61182, '1f4f2':61183, '1f4f3':62823, '1f4f4':62824, '1f4f5':62751, '1f4f6':62822, '1f4f7':61207, '1f4f8':61208, '1f4f9':61209, '1f4fa':61206, '1f4fb':61172, '1f4fc':61210, '1f4fd':61204, '1f4ff':61151, '1f500':62801, '1f501':62802, '1f502':62803, '1f503':62769, '1f504':62770, '1f505':62820, '1f506':62821, '1f507':61155, '1f508':61156, '1f509':61157, '1f50a':61158, '1f50b':61188, '1f50c':61190, '1f50d':61211, '1f50e':61212, '1f50f':61290, '1f510':61291, '1f511':61292, '1f512':61288, '1f513':61289, '1f514':61162, '1f515':61163, '1f516':61233, '1f517':61313, '1f518':62947, '1f519':62771, '1f51a':62772, '1f51b':62773, '1f51c':62774, '1f51d':62775, '1f51e':62752, '1f51f':62876, '1f520':62877, '1f521':62878, '1f522':62879, '1f523':62880, '1f524':62881, '1f525':41021, '1f526':61215, '1f527':61306, '1f528':61294, '1f529':61308, '1f52a':3803, '1f52b':61301, '1f52c':61323, '1f52d':61324, '1f52e':51082, '1f52f':62787, '1f530':62848, '1f531':62846, '1f532':62949, '1f533':62948, '1f534':62916, '1f535':62920, '1f536':62940, '1f537':62941, '1f538':62942, '1f539':62943, '1f53a':62944, '1f53b':62945, '1f53c':62811, '1f53d':62813, '1f549':62778, '1f54a':2602, '1f54b':4854, '1f54c':4850, '1f54d':4852, '1f54e':62786, '1f550':4955, '1f551':4957, '1f552':4959, '1f553':4961, '1f554':4963, '1f555':4965, '1f556':4967, '1f557':4969, '1f558':4971, '1f559':4973, '1f55a':4975, '1f55b':4953, '1f55c':4956, '1f55d':4958, '1f55e':4960, '1f55f':4962, '1f560':4964, '1f561':4966, '1f562':4968, '1f563':4970, '1f564':4972, '1f565':4974, '1f566':4976, '1f567':4954, '1f56f':61213, '1f570':4952, '1f573':1156, '1f574':1587, '1f575-200d-2640':1497, '1f575-200d-2642':1496, '1f575':1495, '1f576':61111, '1f577':2641, '1f578':2642, '1f579':51087, '1f57a':1586, '1f587':61281, '1f58a':61261, '1f58b':61260, '1f58c':61262, '1f58d':61263, '1f590':1329, '1f595':1348, '1f596':1331, '1f5a4':1148, '1f5a5':61192, '1f5a8':61193, '1f5b1':61195, '1f5b2':61196, '1f5bc':51104, '1f5c2':61268, '1f5c3':61285, '1f5c4':61286, '1f5d1':61287, '1f5d2':61271, '1f5d3':61272, '1f5dc':61310, '1f5dd':61293, '1f5de':61231, '1f5e1':61299, '1f5e3':1683, '1f5e8':1160, '1f5ef':1161, '1f5f3':61257, '1f5fa':4810, '1f5fb':4816, '1f5fc':4847, '1f5fd':4848, '1f5fe':4811, '1f5ff':61362, '1f600':11, '1f601':14, '1f602':18, '1f603':12, '1f604':13, '1f605':16, '1f606':15, '1f607':114, '1f608':1103, '1f609':112, '1f60a':113, '1f60b':124, '1f60c':150, '1f60d':116, '1f60e':170, '1f60f':144, '1f610':139, '1f611':140, '1f612':145, '1f613':195, '1f614':151, '1f615':173, '1f616':192, '1f617':119, '1f618':118, '1f619':122, '1f61a':121, '1f61b':125, '1f61c':126, '1f61d':128, '1f61e':194, '1f61f':175, '1f620':1101, '1f621':1100, '1f622':189, '1f623':193, '1f624':199, '1f625':188, '1f626':184, '1f627':185, '1f628':186, '1f629':196, '1f62a':152, '1f62b':197, '1f62c':147, '1f62d':190, '1f62e-200d-1f4a8':148, '1f62e':178, '1f62f':179, '1f630':187, '1f631':191, '1f632':180, '1f633':181, '1f634':154, '1f635-200d-1f4ab':165, '1f635':164, '1f636-200d-1f32b':143, '1f636':141, '1f637':155, '1f638':1116, '1f639':1117, '1f63a':1115, '1f63b':1118, '1f63c':1119, '1f63d':1120, '1f63e':1123, '1f63f':1122, '1f640':1121, '1f641':176, '1f642':19, '1f643':110, '1f644':146, '1f645-200d-2640':1422, '1f645-200d-2642':1421, '1f645':1420, '1f646-200d-2640':1425, '1f646-200d-2642':1424, '1f646':1423, '1f647-200d-2640':1437, '1f647-200d-2642':1436, '1f647':1435, '1f648':1124, '1f649':1125, '1f64a':1126, '1f64b-200d-2640':1431, '1f64b-200d-2642':1430, '1f64b':1429, '1f64c':1359, '1f64d-200d-2640':1416, '1f64d-200d-2642':1415, '1f64d':1414, '1f64e-200d-2640':1419, '1f64e-200d-2642':1418, '1f64e':1417, '1f64f':1364, '1f680':4942, '1f681':4937, '1f682':4872, '1f683':4873, '1f684':4874, '1f685':4875, '1f686':4876, '1f687':4877, '1f688':4878, '1f689':4879, '1f68a':4880, '1f68b':4883, '1f68c':4884, '1f68d':4885, '1f68e':4886, '1f68f':4911, '1f690':4887, '1f691':4888, '1f692':4889, '1f693':4890, '1f694':4891, '1f695':4892, '1f696':4893, '1f697':4894, '1f698':4895, '1f699':4896, '1f69a':4898, '1f69b':4899, '1f69c':4900, '1f69d':4881, '1f69e':4882, '1f69f':4938, '1f6a0':4939, '1f6a1':4940, '1f6a2':4930, '1f6a3-200d-2640':1609, '1f6a3-200d-2642':1608, '1f6a3':1607, '1f6a4':4926, '1f6a5':4918, '1f6a6':4919, '1f6a7':4921, '1f6a8':4917, '1f6a9':71587, '1f6aa':61333, '1f6ab':62745, '1f6ac':61358, '1f6ad':62747, '1f6ae':62730, '1f6af':62748, '1f6b0':62731, '1f6b1':62749, '1f6b2':4907, '1f6b3':62746, '1f6b4-200d-2640':1621, '1f6b4-200d-2642':1620, '1f6b4':1619, '1f6b5-200d-2640':1624, '1f6b5-200d-2642':1623, '1f6b5':1622, '1f6b6-200d-2640':1566, '1f6b6-200d-2642':1565, '1f6b6':1564, '1f6b7':62750, '1f6b8':62743, '1f6b9':62733, '1f6ba':62734, '1f6bb':62735, '1f6bc':62736, '1f6bd':61340, '1f6be':62737, '1f6bf':61342, '1f6c0':1643, '1f6c1':61343, '1f6c2':62738, '1f6c3':62739, '1f6c4':62740, '1f6c5':62741, '1f6cb':61338, '1f6cc':1644, '1f6cd':61133, '1f6ce':4944, '1f6cf':61337, '1f6d0':62776, '1f6d1':4920, '1f6d2':61357, '1f6d5':4851, '1f6d6':4828, '1f6d7':61334, '1f6e0':61298, '1f6e1':61304, '1f6e2':4914, '1f6e3':4912, '1f6e4':4913, '1f6e5':4929, '1f6e9':4932, '1f6eb':4933, '1f6ec':4934, '1f6f0':4941, '1f6f3':4927, '1f6f4':4908, '1f6f5':4903, '1f6f6':4925, '1f6f7':51076, '1f6f8':4943, '1f6f9':4909, '1f6fa':4906, '1f6fb':4897, '1f6fc':4910, '1f7e0':62917, '1f7e1':62918, '1f7e2':62919, '1f7e3':62921, '1f7e4':62922, '1f7e5':62925, '1f7e6':62929, '1f7e7':62926, '1f7e8':62927, '1f7e9':62928, '1f7ea':62930, '1f7eb':62931, '1f90c':1337, '1f90d':1149, '1f90e':1147, '1f90f':1338, '1f910':137, '1f911':129, '1f912':156, '1f913':171, '1f914':135, '1f915':157, '1f916':1114, '1f917':130, '1f918':1343, '1f919':1344, '1f91a':1328, '1f91b':1356, '1f91c':1357, '1f91d':1363, '1f91e':1340, '1f91f':1342, '1f920':167, '1f921':1108, '1f922':158, '1f923':17, '1f924':153, '1f925':149, '1f926-200d-2640':1440, '1f926-200d-2642':1439, '1f926':1438, '1f927':160, '1f928':138, '1f929':117, '1f92a':127, '1f92b':134, '1f92c':1102, '1f92d':131, '1f92e':159, '1f92f':166, '1f930':1519, '1f931':1522, '1f932':1362, '1f933':1367, '1f934':1506, '1f935-200d-2640':1515, '1f935-200d-2642':1514, '1f935':1513, '1f936':1528, '1f937-200d-2640':1443, '1f937-200d-2642':1442, '1f937':1441, '1f938-200d-2640':1627, '1f938-200d-2642':1626, '1f938':1625, '1f939-200d-2640':1639, '1f939-200d-2642':1638, '1f939':1637, '1f93a':1597, '1f93c-200d-2640':1630, '1f93c-200d-2642':1629, '1f93c':1628, '1f93d-200d-2640':1633, '1f93d-200d-2642':1632, '1f93d':1631, '1f93e-200d-2640':1636, '1f93e-200d-2642':1635, '1f93e':1634, '1f93f':51073, '1f940':2654, '1f941':61180, '1f942':3791, '1f943':3792, '1f944':3802, '1f945':51069, '1f947':51048, '1f948':51049, '1f949':51050, '1f94a':51067, '1f94b':51068, '1f94c':51077, '1f94d':51064, '1f94e':51053, '1f94f':51059, '1f950':3710, '1f951':3693, '1f952':3700, '1f953':3721, '1f954':3695, '1f955':3696, '1f956':3711, '1f957':3738, '1f958':3734, '1f959':3730, '1f95a':3732, '1f95b':3780, '1f95c':3706, '1f95d':3689, '1f95e':3715, '1f95f':3757, '1f960':3758, '1f961':3759, '1f962':3799, '1f963':3737, '1f964':3794, '1f965':3692, '1f966':3702, '1f967':3773, '1f968':3713, '1f969':3720, '1f96a':3726, '1f96b':3742, '1f96c':3701, '1f96d':3681, '1f96e':3755, '1f96f':3714, '1f970':115, '1f971':198, '1f972':123, '1f973':168, '1f974':163, '1f975':161, '1f976':162, '1f977':1501, '1f978':169, '1f97a':182, '1f97b':61124, '1f97c':61113, '1f97d':61112, '1f97e':61138, '1f97f':61139, '1f980':3760, '1f981':2545, '1f982':2643, '1f983':2594, '1f984':2551, '1f985':2603, '1f986':2604, '1f987':2583, '1f988':2628, '1f989':2606, '1f98a':2540, '1f98b':2633, '1f98c':2553, '1f98d':2532, '1f98e':2615, '1f98f':2572, '1f990':3762, '1f991':3763, '1f992':2569, '1f993':2552, '1f994':2582, '1f995':2619, '1f996':2620, '1f997':2639, '1f998':2591, '1f999':2568, '1f99a':2610, '1f99b':2573, '1f99c':2611, '1f99d':2541, '1f99e':3761, '1f99f':2644, '1f9a0':2647, '1f9a1':2592, '1f9a2':2605, '1f9a3':2571, '1f9a4':2607, '1f9a5':2588, '1f9a6':2589, '1f9a7':2533, '1f9a8':2590, '1f9a9':2609, '1f9aa':3764, '1f9ab':2581, '1f9ac':2554, '1f9ad':2624, '1f9ae':2536, '1f9af':61312, '1f9b4':1380, '1f9b5':1371, '1f9b6':1372, '1f9b7':1379, '1f9b8-200d-2640':1532, '1f9b8-200d-2642':1531, '1f9b8':1530, '1f9b9-200d-2640':1535, '1f9b9-200d-2642':1534, '1f9b9':1533, '1f9ba':61114, '1f9bb':1374, '1f9bc':4905, '1f9bd':4904, '1f9be':1369, '1f9bf':1370, '1f9c0':3717, '1f9c1':3772, '1f9c2':3741, '1f9c3':3796, '1f9c4':3703, '1f9c5':3704, '1f9c6':3731, '1f9c7':3716, '1f9c8':3740, '1f9c9':3797, '1f9ca':3798, '1f9cb':3795, '1f9cd-200d-2640':1569, '1f9cd-200d-2642':1568, '1f9cd':1567, '1f9ce-200d-2640':1572, '1f9ce-200d-2642':1571, '1f9ce':1570, '1f9cf-200d-2640':1434, '1f9cf-200d-2642':1433, '1f9cf':1432, '1f9d0':172, '1f9d1-200d-1f33e':1456, '1f9d1-200d-1f373':1459, '1f9d1-200d-1f37c':1525, '1f9d1-200d-1f384':1529, '1f9d1-200d-1f393':1447, '1f9d1-200d-1f3a4':1477, '1f9d1-200d-1f3a8':1480, '1f9d1-200d-1f3eb':1450, '1f9d1-200d-1f3ed':1465, '1f9d1-200d-1f4bb':1474, '1f9d1-200d-1f4bc':1468, '1f9d1-200d-1f527':1462, '1f9d1-200d-1f52c':1471, '1f9d1-200d-1f680':1486, '1f9d1-200d-1f692':1489, '1f9d1-200d-1f91d-200d-1f9d1':1645, '1f9d1-200d-1f9af':1573, '1f9d1-200d-1f9b0':1402, '1f9d1-200d-1f9b1':1404, '1f9d1-200d-1f9b2':1408, '1f9d1-200d-1f9b3':1406, '1f9d1-200d-1f9bc':1576, '1f9d1-200d-1f9bd':1579, '1f9d1-200d-2695':1444, '1f9d1-200d-2696':1453, '1f9d1-200d-2708':1483, '1f9d1':1390, '1f9d2':1387, '1f9d3':1411, '1f9d4-200d-2640':1395, '1f9d4-200d-2642':1394, '1f9d4':1393, '1f9d5':1512, '1f9d6-200d-2640':1593, '1f9d6-200d-2642':1592, '1f9d6':1591, '1f9d7-200d-2640':1596, '1f9d7-200d-2642':1595, '1f9d7':1594, '1f9d8-200d-2640':1642, '1f9d8-200d-2642':1641, '1f9d8':1640, '1f9d9-200d-2640':1538, '1f9d9-200d-2642':1537, '1f9d9':1536, '1f9da-200d-2640':1541, '1f9da-200d-2642':1540, '1f9da':1539, '1f9db-200d-2640':1544, '1f9db-200d-2642':1543, '1f9db':1542, '1f9dc-200d-2640':1547, '1f9dc-200d-2642':1546, '1f9dc':1545, '1f9dd-200d-2640':1550, '1f9dd-200d-2642':1549, '1f9dd':1548, '1f9de-200d-2640':1553, '1f9de-200d-2642':1552, '1f9de':1551, '1f9df-200d-2640':1556, '1f9df-200d-2642':1555, '1f9df':1554, '1f9e0':1376, '1f9e1':1142, '1f9e2':61148, '1f9e3':61118, '1f9e4':61119, '1f9e5':61120, '1f9e6':61121, '1f9e7':51039, '1f9e8':51028, '1f9e9':51090, '1f9ea':61320, '1f9eb':61321, '1f9ec':61322, '1f9ed':4812, '1f9ee':61201, '1f9ef':61356, '1f9f0':61316, '1f9f1':4825, '1f9f2':61317, '1f9f3':4945, '1f9f4':61346, '1f9f5':51106, '1f9f6':51108, '1f9f7':61347, '1f9f8':51091, '1f9f9':61348, '1f9fa':61349, '1f9fb':61350, '1f9fc':61352, '1f9fd':61355, '1f9fe':61243, '1f9ff':51084, '1fa70':61142, '1fa71':61125, '1fa72':61126, '1fa73':61127, '1fa74':61135, '1fa78':61327, '1fa79':61329, '1fa7a':61331, '1fa80':51079, '1fa81':51080, '1fa82':4935, '1fa83':61302, '1fa84':51083, '1fa85':51092, '1fa86':51094, '1fa90':4993, '1fa91':61339, '1fa92':61345, '1fa93':61295, '1fa94':61217, '1fa95':61179, '1fa96':61149, '1fa97':61174, '1fa98':61181, '1fa99':61236, '1fa9a':61305, '1fa9b':61307, '1fa9c':61318, '1fa9d':61315, '1fa9e':61335, '1fa9f':61336, '1faa0':61341, '1faa1':51107, '1faa2':51109, '1faa3':61351, '1faa4':61344, '1faa5':61354, '1faa6':61360, '1faa7':61363, '1faa8':4826, '1fab0':2645, '1fab1':2646, '1fab2':2637, '1fab3':2640, '1fab4':2660, '1fab5':4827, '1fab6':2608, '1fac0':1377, '1fac1':1378, '1fac2':1686, '1fad0':3688, '1fad1':3699, '1fad2':3691, '1fad3':3712, '1fad4':3729, '1fad5':3736, '1fad6':3782, '203c':62834, '21a9':62765, '21aa':62766, '231a':4948, '231b':4946, '23cf':62818, '23e9':62805, '23ea':62809, '23eb':62812, '23ec':62814, '23ed':62806, '23ee':62810, '23ef':62807, '23f0':4949, '23f1':4950, '23f2':4951, '23f3':4947, '23f8':62815, '23f9':62816, '23fa':62817, '24c2':62890, '25aa':62938, '25ab':62939, '25b6':62804, '25c0':62808, '25fb':62935, '25fc':62934, '25fd':62937, '25fe':62936, '260e':61184, '261d':1350, '262a':62784, '262e':62785, '262f':62781, '263a':120, '264a':62790, '264b':62791, '264c':62792, '264d':62793, '264e':62794, '264f':62795, '265f':51099, '267b':62844, '267e':62833, '267f':62732, '269b':62777, '269c':62845, '26a0':62742, '26a1':41016, '26a7':62827, '26aa':62924, '26ab':62923, '26b0':61359, '26b1':61361, '26bd':51051, '26be':51052, '26c4':41019, '26c5':4999, '26c8':41000, '26ce':62800, '26cf':61296, '26d1':61150, '26d3':61314, '26d4':62744, '26e9':4853, '26ea':4849, '26f0':4814, '26f1':41015, '26f2':4855, '26f3':51070, '26f4':4928, '26f5':4924, '26f7':1599, '26f8':51071, '26f9-200d-2640':1615, '26f9-200d-2642':1614, '26f9':1613, '26fa':4856, '26fd':4915, '270a':1354, '270b':1330, '270c':1339, '270d':1365, '270f':61258, '271d':62782, '274c':62853, '274e':62854, '2764-200d-1f525':1139, '2764-200d-1fa79':1140, '27a1':62757, '27b0':62855, '27bf':62856, '2b05':62761, '2b06':62755, '2b07':62759, '2b1b':62932, '2b1c':62933, '2b50':4994, '2b55':62849, '303d':62857, '1f385-1f3fb':0, '1f385-1f3fc':0, '1f385-1f3fd':0, '1f385-1f3fe':0, '1f385-1f3ff':0, '1f3c2-1f3fb':0, '1f3c2-1f3fc':0, '1f3c2-1f3fd':0, '1f3c2-1f3fe':0, '1f3c2-1f3ff':0, '1f3c3-1f3fb-200d-2640':0, '1f3c3-1f3fc-200d-2640':0, '1f3c3-1f3fd-200d-2640':0, '1f3c3-1f3fe-200d-2640':0, '1f3c3-1f3ff-200d-2640':0, '1f3c3-1f3fb-200d-2642':0, '1f3c3-1f3fc-200d-2642':0, '1f3c3-1f3fd-200d-2642':0, '1f3c3-1f3fe-200d-2642':0, '1f3c3-1f3ff-200d-2642':0, '1f3c3-1f3fb':0, '1f3c3-1f3fc':0, '1f3c3-1f3fd':0, '1f3c3-1f3fe':0, '1f3c3-1f3ff':0, '1f3c4-1f3fb-200d-2640':0, '1f3c4-1f3fc-200d-2640':0, '1f3c4-1f3fd-200d-2640':0, '1f3c4-1f3fe-200d-2640':0, '1f3c4-1f3ff-200d-2640':0, '1f3c4-1f3fb-200d-2642':0, '1f3c4-1f3fc-200d-2642':0, '1f3c4-1f3fd-200d-2642':0, '1f3c4-1f3fe-200d-2642':0, '1f3c4-1f3ff-200d-2642':0, '1f3c4-1f3fb':0, '1f3c4-1f3fc':0, '1f3c4-1f3fd':0, '1f3c4-1f3fe':0, '1f3c4-1f3ff':0, '1f3c7-1f3fb':0, '1f3c7-1f3fc':0, '1f3c7-1f3fd':0, '1f3c7-1f3fe':0, '1f3c7-1f3ff':0, '1f3ca-1f3fb-200d-2640':0, '1f3ca-1f3fc-200d-2640':0, '1f3ca-1f3fd-200d-2640':0, '1f3ca-1f3fe-200d-2640':0, '1f3ca-1f3ff-200d-2640':0, '1f3ca-1f3fb-200d-2642':0, '1f3ca-1f3fc-200d-2642':0, '1f3ca-1f3fd-200d-2642':0, '1f3ca-1f3fe-200d-2642':0, '1f3ca-1f3ff-200d-2642':0, '1f3ca-1f3fb':0, '1f3ca-1f3fc':0, '1f3ca-1f3fd':0, '1f3ca-1f3fe':0, '1f3ca-1f3ff':0, '1f3cb-1f3fb-200d-2640':0, '1f3cb-1f3fc-200d-2640':0, '1f3cb-1f3fd-200d-2640':0, '1f3cb-1f3fe-200d-2640':0, '1f3cb-1f3ff-200d-2640':0, '1f3cb-1f3fb-200d-2642':0, '1f3cb-1f3fc-200d-2642':0, '1f3cb-1f3fd-200d-2642':0, '1f3cb-1f3fe-200d-2642':0, '1f3cb-1f3ff-200d-2642':0, '1f3cb-1f3fb':0, '1f3cb-1f3fc':0, '1f3cb-1f3fd':0, '1f3cb-1f3fe':0, '1f3cb-1f3ff':0, '1f3cc-1f3fb-200d-2640':0, '1f3cc-1f3fc-200d-2640':0, '1f3cc-1f3fd-200d-2640':0, '1f3cc-1f3fe-200d-2640':0, '1f3cc-1f3ff-200d-2640':0, '1f3cc-1f3fb-200d-2642':0, '1f3cc-1f3fc-200d-2642':0, '1f3cc-1f3fd-200d-2642':0, '1f3cc-1f3fe-200d-2642':0, '1f3cc-1f3ff-200d-2642':0, '1f3cc-1f3fb':0, '1f3cc-1f3fc':0, '1f3cc-1f3fd':0, '1f3cc-1f3fe':0, '1f3cc-1f3ff':0, '1f442-1f3fb':0, '1f442-1f3fc':0, '1f442-1f3fd':0, '1f442-1f3fe':0, '1f442-1f3ff':0, '1f443-1f3fb':0, '1f443-1f3fc':0, '1f443-1f3fd':0, '1f443-1f3fe':0, '1f443-1f3ff':0, '1f446-1f3fb':0, '1f446-1f3fc':0, '1f446-1f3fd':0, '1f446-1f3fe':0, '1f446-1f3ff':0, '1f447-1f3fb':0, '1f447-1f3fc':0, '1f447-1f3fd':0, '1f447-1f3fe':0, '1f447-1f3ff':0, '1f448-1f3fb':0, '1f448-1f3fc':0, '1f448-1f3fd':0, '1f448-1f3fe':0, '1f448-1f3ff':0, '1f449-1f3fb':0, '1f449-1f3fc':0, '1f449-1f3fd':0, '1f449-1f3fe':0, '1f449-1f3ff':0, '1f44a-1f3fb':0, '1f44a-1f3fc':0, '1f44a-1f3fd':0, '1f44a-1f3fe':0, '1f44a-1f3ff':0, '1f44b-1f3fb':0, '1f44b-1f3fc':0, '1f44b-1f3fd':0, '1f44b-1f3fe':0, '1f44b-1f3ff':0, '1f44c-1f3fb':0, '1f44c-1f3fc':0, '1f44c-1f3fd':0, '1f44c-1f3fe':0, '1f44c-1f3ff':0, '1f44d-1f3fb':0, '1f44d-1f3fc':0, '1f44d-1f3fd':0, '1f44d-1f3fe':0, '1f44d-1f3ff':0, '1f44e-1f3fb':0, '1f44e-1f3fc':0, '1f44e-1f3fd':0, '1f44e-1f3fe':0, '1f44e-1f3ff':0, '1f44f-1f3fb':0, '1f44f-1f3fc':0, '1f44f-1f3fd':0, '1f44f-1f3fe':0, '1f44f-1f3ff':0, '1f450-1f3fb':0, '1f450-1f3fc':0, '1f450-1f3fd':0, '1f450-1f3fe':0, '1f450-1f3ff':0, '1f466-1f3fb':0, '1f466-1f3fc':0, '1f466-1f3fd':0, '1f466-1f3fe':0, '1f466-1f3ff':0, '1f467-1f3fb':0, '1f467-1f3fc':0, '1f467-1f3fd':0, '1f467-1f3fe':0, '1f467-1f3ff':0, '1f468-1f3fb-200d-1f33e':0, '1f468-1f3fc-200d-1f33e':0, '1f468-1f3fd-200d-1f33e':0, '1f468-1f3fe-200d-1f33e':0, '1f468-1f3ff-200d-1f33e':0, '1f468-1f3fb-200d-1f373':0, '1f468-1f3fc-200d-1f373':0, '1f468-1f3fd-200d-1f373':0, '1f468-1f3fe-200d-1f373':0, '1f468-1f3ff-200d-1f373':0, '1f468-1f3fb-200d-1f37c':0, '1f468-1f3fc-200d-1f37c':0, '1f468-1f3fd-200d-1f37c':0, '1f468-1f3fe-200d-1f37c':0, '1f468-1f3ff-200d-1f37c':0, '1f468-1f3fb-200d-1f393':0, '1f468-1f3fc-200d-1f393':0, '1f468-1f3fd-200d-1f393':0, '1f468-1f3fe-200d-1f393':0, '1f468-1f3ff-200d-1f393':0, '1f468-1f3fb-200d-1f3a4':0, '1f468-1f3fc-200d-1f3a4':0, '1f468-1f3fd-200d-1f3a4':0, '1f468-1f3fe-200d-1f3a4':0, '1f468-1f3ff-200d-1f3a4':0, '1f468-1f3fb-200d-1f3a8':0, '1f468-1f3fc-200d-1f3a8':0, '1f468-1f3fd-200d-1f3a8':0, '1f468-1f3fe-200d-1f3a8':0, '1f468-1f3ff-200d-1f3a8':0, '1f468-1f3fb-200d-1f3eb':0, '1f468-1f3fc-200d-1f3eb':0, '1f468-1f3fd-200d-1f3eb':0, '1f468-1f3fe-200d-1f3eb':0, '1f468-1f3ff-200d-1f3eb':0, '1f468-1f3fb-200d-1f3ed':0, '1f468-1f3fc-200d-1f3ed':0, '1f468-1f3fd-200d-1f3ed':0, '1f468-1f3fe-200d-1f3ed':0, '1f468-1f3ff-200d-1f3ed':0, '1f468-1f3fb-200d-1f4bb':0, '1f468-1f3fc-200d-1f4bb':0, '1f468-1f3fd-200d-1f4bb':0, '1f468-1f3fe-200d-1f4bb':0, '1f468-1f3ff-200d-1f4bb':0, '1f468-1f3fb-200d-1f4bc':0, '1f468-1f3fc-200d-1f4bc':0, '1f468-1f3fd-200d-1f4bc':0, '1f468-1f3fe-200d-1f4bc':0, '1f468-1f3ff-200d-1f4bc':0, '1f468-1f3fb-200d-1f527':0, '1f468-1f3fc-200d-1f527':0, '1f468-1f3fd-200d-1f527':0, '1f468-1f3fe-200d-1f527':0, '1f468-1f3ff-200d-1f527':0, '1f468-1f3fb-200d-1f52c':0, '1f468-1f3fc-200d-1f52c':0, '1f468-1f3fd-200d-1f52c':0, '1f468-1f3fe-200d-1f52c':0, '1f468-1f3ff-200d-1f52c':0, '1f468-1f3fb-200d-1f680':0, '1f468-1f3fc-200d-1f680':0, '1f468-1f3fd-200d-1f680':0, '1f468-1f3fe-200d-1f680':0, '1f468-1f3ff-200d-1f680':0, '1f468-1f3fb-200d-1f692':0, '1f468-1f3fc-200d-1f692':0, '1f468-1f3fd-200d-1f692':0, '1f468-1f3fe-200d-1f692':0, '1f468-1f3ff-200d-1f692':0, '1f468-1f3fb-200d-1f9af':0, '1f468-1f3fc-200d-1f9af':0, '1f468-1f3fd-200d-1f9af':0, '1f468-1f3fe-200d-1f9af':0, '1f468-1f3ff-200d-1f9af':0, '1f468-1f3fb-200d-1f9b0':0, '1f468-1f3fc-200d-1f9b0':0, '1f468-1f3fd-200d-1f9b0':0, '1f468-1f3fe-200d-1f9b0':0, '1f468-1f3ff-200d-1f9b0':0, '1f468-1f3fb-200d-1f9b1':0, '1f468-1f3fc-200d-1f9b1':0, '1f468-1f3fd-200d-1f9b1':0, '1f468-1f3fe-200d-1f9b1':0, '1f468-1f3ff-200d-1f9b1':0, '1f468-1f3fb-200d-1f9b2':0, '1f468-1f3fc-200d-1f9b2':0, '1f468-1f3fd-200d-1f9b2':0, '1f468-1f3fe-200d-1f9b2':0, '1f468-1f3ff-200d-1f9b2':0, '1f468-1f3fb-200d-1f9b3':0, '1f468-1f3fc-200d-1f9b3':0, '1f468-1f3fd-200d-1f9b3':0, '1f468-1f3fe-200d-1f9b3':0, '1f468-1f3ff-200d-1f9b3':0, '1f468-1f3fb-200d-1f9bc':0, '1f468-1f3fc-200d-1f9bc':0, '1f468-1f3fd-200d-1f9bc':0, '1f468-1f3fe-200d-1f9bc':0, '1f468-1f3ff-200d-1f9bc':0, '1f468-1f3fb-200d-1f9bd':0, '1f468-1f3fc-200d-1f9bd':0, '1f468-1f3fd-200d-1f9bd':0, '1f468-1f3fe-200d-1f9bd':0, '1f468-1f3ff-200d-1f9bd':0, '1f468-1f3fb-200d-2695':0, '1f468-1f3fc-200d-2695':0, '1f468-1f3fd-200d-2695':0, '1f468-1f3fe-200d-2695':0, '1f468-1f3ff-200d-2695':0, '1f468-1f3fb-200d-2696':0, '1f468-1f3fc-200d-2696':0, '1f468-1f3fd-200d-2696':0, '1f468-1f3fe-200d-2696':0, '1f468-1f3ff-200d-2696':0, '1f468-1f3fb-200d-2708':0, '1f468-1f3fc-200d-2708':0, '1f468-1f3fd-200d-2708':0, '1f468-1f3fe-200d-2708':0, '1f468-1f3ff-200d-2708':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3fb-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3fc-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3fd-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3fe-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3fb':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3fc':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3fd':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3fe':0, '1f468-1f3ff-200d-2764-200d-1f468-1f3ff':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f468-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f468-1f3fb':0, '1f468-1f3fc':0, '1f468-1f3fd':0, '1f468-1f3fe':0, '1f468-1f3ff':0, '1f469-1f3fb-200d-1f33e':0, '1f469-1f3fc-200d-1f33e':0, '1f469-1f3fd-200d-1f33e':0, '1f469-1f3fe-200d-1f33e':0, '1f469-1f3ff-200d-1f33e':0, '1f469-1f3fb-200d-1f373':0, '1f469-1f3fc-200d-1f373':0, '1f469-1f3fd-200d-1f373':0, '1f469-1f3fe-200d-1f373':0, '1f469-1f3ff-200d-1f373':0, '1f469-1f3fb-200d-1f37c':0, '1f469-1f3fc-200d-1f37c':0, '1f469-1f3fd-200d-1f37c':0, '1f469-1f3fe-200d-1f37c':0, '1f469-1f3ff-200d-1f37c':0, '1f469-1f3fb-200d-1f393':0, '1f469-1f3fc-200d-1f393':0, '1f469-1f3fd-200d-1f393':0, '1f469-1f3fe-200d-1f393':0, '1f469-1f3ff-200d-1f393':0, '1f469-1f3fb-200d-1f3a4':0, '1f469-1f3fc-200d-1f3a4':0, '1f469-1f3fd-200d-1f3a4':0, '1f469-1f3fe-200d-1f3a4':0, '1f469-1f3ff-200d-1f3a4':0, '1f469-1f3fb-200d-1f3a8':0, '1f469-1f3fc-200d-1f3a8':0, '1f469-1f3fd-200d-1f3a8':0, '1f469-1f3fe-200d-1f3a8':0, '1f469-1f3ff-200d-1f3a8':0, '1f469-1f3fb-200d-1f3eb':0, '1f469-1f3fc-200d-1f3eb':0, '1f469-1f3fd-200d-1f3eb':0, '1f469-1f3fe-200d-1f3eb':0, '1f469-1f3ff-200d-1f3eb':0, '1f469-1f3fb-200d-1f3ed':0, '1f469-1f3fc-200d-1f3ed':0, '1f469-1f3fd-200d-1f3ed':0, '1f469-1f3fe-200d-1f3ed':0, '1f469-1f3ff-200d-1f3ed':0, '1f469-1f3fb-200d-1f4bb':0, '1f469-1f3fc-200d-1f4bb':0, '1f469-1f3fd-200d-1f4bb':0, '1f469-1f3fe-200d-1f4bb':0, '1f469-1f3ff-200d-1f4bb':0, '1f469-1f3fb-200d-1f4bc':0, '1f469-1f3fc-200d-1f4bc':0, '1f469-1f3fd-200d-1f4bc':0, '1f469-1f3fe-200d-1f4bc':0, '1f469-1f3ff-200d-1f4bc':0, '1f469-1f3fb-200d-1f527':0, '1f469-1f3fc-200d-1f527':0, '1f469-1f3fd-200d-1f527':0, '1f469-1f3fe-200d-1f527':0, '1f469-1f3ff-200d-1f527':0, '1f469-1f3fb-200d-1f52c':0, '1f469-1f3fc-200d-1f52c':0, '1f469-1f3fd-200d-1f52c':0, '1f469-1f3fe-200d-1f52c':0, '1f469-1f3ff-200d-1f52c':0, '1f469-1f3fb-200d-1f680':0, '1f469-1f3fc-200d-1f680':0, '1f469-1f3fd-200d-1f680':0, '1f469-1f3fe-200d-1f680':0, '1f469-1f3ff-200d-1f680':0, '1f469-1f3fb-200d-1f692':0, '1f469-1f3fc-200d-1f692':0, '1f469-1f3fd-200d-1f692':0, '1f469-1f3fe-200d-1f692':0, '1f469-1f3ff-200d-1f692':0, '1f469-1f3fb-200d-1f9af':0, '1f469-1f3fc-200d-1f9af':0, '1f469-1f3fd-200d-1f9af':0, '1f469-1f3fe-200d-1f9af':0, '1f469-1f3ff-200d-1f9af':0, '1f469-1f3fb-200d-1f9b0':0, '1f469-1f3fc-200d-1f9b0':0, '1f469-1f3fd-200d-1f9b0':0, '1f469-1f3fe-200d-1f9b0':0, '1f469-1f3ff-200d-1f9b0':0, '1f469-1f3fb-200d-1f9b1':0, '1f469-1f3fc-200d-1f9b1':0, '1f469-1f3fd-200d-1f9b1':0, '1f469-1f3fe-200d-1f9b1':0, '1f469-1f3ff-200d-1f9b1':0, '1f469-1f3fb-200d-1f9b2':0, '1f469-1f3fc-200d-1f9b2':0, '1f469-1f3fd-200d-1f9b2':0, '1f469-1f3fe-200d-1f9b2':0, '1f469-1f3ff-200d-1f9b2':0, '1f469-1f3fb-200d-1f9b3':0, '1f469-1f3fc-200d-1f9b3':0, '1f469-1f3fd-200d-1f9b3':0, '1f469-1f3fe-200d-1f9b3':0, '1f469-1f3ff-200d-1f9b3':0, '1f469-1f3fb-200d-1f9bc':0, '1f469-1f3fc-200d-1f9bc':0, '1f469-1f3fd-200d-1f9bc':0, '1f469-1f3fe-200d-1f9bc':0, '1f469-1f3ff-200d-1f9bc':0, '1f469-1f3fb-200d-1f9bd':0, '1f469-1f3fc-200d-1f9bd':0, '1f469-1f3fd-200d-1f9bd':0, '1f469-1f3fe-200d-1f9bd':0, '1f469-1f3ff-200d-1f9bd':0, '1f469-1f3fb-200d-2695':0, '1f469-1f3fc-200d-2695':0, '1f469-1f3fd-200d-2695':0, '1f469-1f3fe-200d-2695':0, '1f469-1f3ff-200d-2695':0, '1f469-1f3fb-200d-2696':0, '1f469-1f3fc-200d-2696':0, '1f469-1f3fd-200d-2696':0, '1f469-1f3fe-200d-2696':0, '1f469-1f3ff-200d-2696':0, '1f469-1f3fb-200d-2708':0, '1f469-1f3fc-200d-2708':0, '1f469-1f3fd-200d-2708':0, '1f469-1f3fe-200d-2708':0, '1f469-1f3ff-200d-2708':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3fb-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3fc-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3fd-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3fe-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3fb':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3fc':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3fd':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3fe':0, '1f469-1f3ff-200d-2764-200d-1f468-1f3ff':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3fb-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3fc-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3fd-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3fe-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3fb':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3fc':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3fd':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3fe':0, '1f469-1f3ff-200d-2764-200d-1f469-1f3ff':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fb':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fc':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fd':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3fe':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f468-1f3ff':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3fb-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3fc-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3fd-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3fe-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fb':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fc':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fd':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3fe':0, '1f469-1f3ff-200d-2764-200d-1f48b-200d-1f469-1f3ff':0, '1f469-1f3fb':0, '1f469-1f3fc':0, '1f469-1f3fd':0, '1f469-1f3fe':0, '1f469-1f3ff':0, '1f46b-1f3fb':0, '1f46b-1f3fc':0, '1f46b-1f3fd':0, '1f46b-1f3fe':0, '1f46b-1f3ff':0, '1f469-1f3fb-200d-1f91d-200d-1f468-1f3fc':0, '1f469-1f3fb-200d-1f91d-200d-1f468-1f3fd':0, '1f469-1f3fb-200d-1f91d-200d-1f468-1f3fe':0, '1f469-1f3fb-200d-1f91d-200d-1f468-1f3ff':0, '1f469-1f3fc-200d-1f91d-200d-1f468-1f3fb':0, '1f469-1f3fc-200d-1f91d-200d-1f468-1f3fd':0, '1f469-1f3fc-200d-1f91d-200d-1f468-1f3fe':0, '1f469-1f3fc-200d-1f91d-200d-1f468-1f3ff':0, '1f469-1f3fd-200d-1f91d-200d-1f468-1f3fb':0, '1f469-1f3fd-200d-1f91d-200d-1f468-1f3fc':0, '1f469-1f3fd-200d-1f91d-200d-1f468-1f3fe':0, '1f469-1f3fd-200d-1f91d-200d-1f468-1f3ff':0, '1f469-1f3fe-200d-1f91d-200d-1f468-1f3fb':0, '1f469-1f3fe-200d-1f91d-200d-1f468-1f3fc':0, '1f469-1f3fe-200d-1f91d-200d-1f468-1f3fd':0, '1f469-1f3fe-200d-1f91d-200d-1f468-1f3ff':0, '1f469-1f3ff-200d-1f91d-200d-1f468-1f3fb':0, '1f469-1f3ff-200d-1f91d-200d-1f468-1f3fc':0, '1f469-1f3ff-200d-1f91d-200d-1f468-1f3fd':0, '1f469-1f3ff-200d-1f91d-200d-1f468-1f3fe':0, '1f46c-1f3fb':0, '1f46c-1f3fc':0, '1f46c-1f3fd':0, '1f46c-1f3fe':0, '1f46c-1f3ff':0, '1f468-1f3fb-200d-1f91d-200d-1f468-1f3fc':0, '1f468-1f3fb-200d-1f91d-200d-1f468-1f3fd':0, '1f468-1f3fb-200d-1f91d-200d-1f468-1f3fe':0, '1f468-1f3fb-200d-1f91d-200d-1f468-1f3ff':0, '1f468-1f3fc-200d-1f91d-200d-1f468-1f3fb':0, '1f468-1f3fc-200d-1f91d-200d-1f468-1f3fd':0, '1f468-1f3fc-200d-1f91d-200d-1f468-1f3fe':0, '1f468-1f3fc-200d-1f91d-200d-1f468-1f3ff':0, '1f468-1f3fd-200d-1f91d-200d-1f468-1f3fb':0, '1f468-1f3fd-200d-1f91d-200d-1f468-1f3fc':0, '1f468-1f3fd-200d-1f91d-200d-1f468-1f3fe':0, '1f468-1f3fd-200d-1f91d-200d-1f468-1f3ff':0, '1f468-1f3fe-200d-1f91d-200d-1f468-1f3fb':0, '1f468-1f3fe-200d-1f91d-200d-1f468-1f3fc':0, '1f468-1f3fe-200d-1f91d-200d-1f468-1f3fd':0, '1f468-1f3fe-200d-1f91d-200d-1f468-1f3ff':0, '1f468-1f3ff-200d-1f91d-200d-1f468-1f3fb':0, '1f468-1f3ff-200d-1f91d-200d-1f468-1f3fc':0, '1f468-1f3ff-200d-1f91d-200d-1f468-1f3fd':0, '1f468-1f3ff-200d-1f91d-200d-1f468-1f3fe':0, '1f46d-1f3fb':0, '1f46d-1f3fc':0, '1f46d-1f3fd':0, '1f46d-1f3fe':0, '1f46d-1f3ff':0, '1f469-1f3fb-200d-1f91d-200d-1f469-1f3fc':0, '1f469-1f3fb-200d-1f91d-200d-1f469-1f3fd':0, '1f469-1f3fb-200d-1f91d-200d-1f469-1f3fe':0, '1f469-1f3fb-200d-1f91d-200d-1f469-1f3ff':0, '1f469-1f3fc-200d-1f91d-200d-1f469-1f3fb':0, '1f469-1f3fc-200d-1f91d-200d-1f469-1f3fd':0, '1f469-1f3fc-200d-1f91d-200d-1f469-1f3fe':0, '1f469-1f3fc-200d-1f91d-200d-1f469-1f3ff':0, '1f469-1f3fd-200d-1f91d-200d-1f469-1f3fb':0, '1f469-1f3fd-200d-1f91d-200d-1f469-1f3fc':0, '1f469-1f3fd-200d-1f91d-200d-1f469-1f3fe':0, '1f469-1f3fd-200d-1f91d-200d-1f469-1f3ff':0, '1f469-1f3fe-200d-1f91d-200d-1f469-1f3fb':0, '1f469-1f3fe-200d-1f91d-200d-1f469-1f3fc':0, '1f469-1f3fe-200d-1f91d-200d-1f469-1f3fd':0, '1f469-1f3fe-200d-1f91d-200d-1f469-1f3ff':0, '1f469-1f3ff-200d-1f91d-200d-1f469-1f3fb':0, '1f469-1f3ff-200d-1f91d-200d-1f469-1f3fc':0, '1f469-1f3ff-200d-1f91d-200d-1f469-1f3fd':0, '1f469-1f3ff-200d-1f91d-200d-1f469-1f3fe':0, '1f46e-1f3fb-200d-2640':0, '1f46e-1f3fc-200d-2640':0, '1f46e-1f3fd-200d-2640':0, '1f46e-1f3fe-200d-2640':0, '1f46e-1f3ff-200d-2640':0, '1f46e-1f3fb-200d-2642':0, '1f46e-1f3fc-200d-2642':0, '1f46e-1f3fd-200d-2642':0, '1f46e-1f3fe-200d-2642':0, '1f46e-1f3ff-200d-2642':0, '1f46e-1f3fb':0, '1f46e-1f3fc':0, '1f46e-1f3fd':0, '1f46e-1f3fe':0, '1f46e-1f3ff':0, '1f470-1f3fb-200d-2640':0, '1f470-1f3fc-200d-2640':0, '1f470-1f3fd-200d-2640':0, '1f470-1f3fe-200d-2640':0, '1f470-1f3ff-200d-2640':0, '1f470-1f3fb-200d-2642':0, '1f470-1f3fc-200d-2642':0, '1f470-1f3fd-200d-2642':0, '1f470-1f3fe-200d-2642':0, '1f470-1f3ff-200d-2642':0, '1f470-1f3fb':0, '1f470-1f3fc':0, '1f470-1f3fd':0, '1f470-1f3fe':0, '1f470-1f3ff':0, '1f471-1f3fb-200d-2640':0, '1f471-1f3fc-200d-2640':0, '1f471-1f3fd-200d-2640':0, '1f471-1f3fe-200d-2640':0, '1f471-1f3ff-200d-2640':0, '1f471-1f3fb-200d-2642':0, '1f471-1f3fc-200d-2642':0, '1f471-1f3fd-200d-2642':0, '1f471-1f3fe-200d-2642':0, '1f471-1f3ff-200d-2642':0, '1f471-1f3fb':0, '1f471-1f3fc':0, '1f471-1f3fd':0, '1f471-1f3fe':0, '1f471-1f3ff':0, '1f472-1f3fb':0, '1f472-1f3fc':0, '1f472-1f3fd':0, '1f472-1f3fe':0, '1f472-1f3ff':0, '1f473-1f3fb-200d-2640':0, '1f473-1f3fc-200d-2640':0, '1f473-1f3fd-200d-2640':0, '1f473-1f3fe-200d-2640':0, '1f473-1f3ff-200d-2640':0, '1f473-1f3fb-200d-2642':0, '1f473-1f3fc-200d-2642':0, '1f473-1f3fd-200d-2642':0, '1f473-1f3fe-200d-2642':0, '1f473-1f3ff-200d-2642':0, '1f473-1f3fb':0, '1f473-1f3fc':0, '1f473-1f3fd':0, '1f473-1f3fe':0, '1f473-1f3ff':0, '1f474-1f3fb':0, '1f474-1f3fc':0, '1f474-1f3fd':0, '1f474-1f3fe':0, '1f474-1f3ff':0, '1f475-1f3fb':0, '1f475-1f3fc':0, '1f475-1f3fd':0, '1f475-1f3fe':0, '1f475-1f3ff':0, '1f476-1f3fb':0, '1f476-1f3fc':0, '1f476-1f3fd':0, '1f476-1f3fe':0, '1f476-1f3ff':0, '1f477-1f3fb-200d-2640':0, '1f477-1f3fc-200d-2640':0, '1f477-1f3fd-200d-2640':0, '1f477-1f3fe-200d-2640':0, '1f477-1f3ff-200d-2640':0, '1f477-1f3fb-200d-2642':0, '1f477-1f3fc-200d-2642':0, '1f477-1f3fd-200d-2642':0, '1f477-1f3fe-200d-2642':0, '1f477-1f3ff-200d-2642':0, '1f477-1f3fb':0, '1f477-1f3fc':0, '1f477-1f3fd':0, '1f477-1f3fe':0, '1f477-1f3ff':0, '1f478-1f3fb':0, '1f478-1f3fc':0, '1f478-1f3fd':0, '1f478-1f3fe':0, '1f478-1f3ff':0, '1f47c-1f3fb':0, '1f47c-1f3fc':0, '1f47c-1f3fd':0, '1f47c-1f3fe':0, '1f47c-1f3ff':0, '1f481-1f3fb-200d-2640':0, '1f481-1f3fc-200d-2640':0, '1f481-1f3fd-200d-2640':0, '1f481-1f3fe-200d-2640':0, '1f481-1f3ff-200d-2640':0, '1f481-1f3fb-200d-2642':0, '1f481-1f3fc-200d-2642':0, '1f481-1f3fd-200d-2642':0, '1f481-1f3fe-200d-2642':0, '1f481-1f3ff-200d-2642':0, '1f481-1f3fb':0, '1f481-1f3fc':0, '1f481-1f3fd':0, '1f481-1f3fe':0, '1f481-1f3ff':0, '1f482-1f3fb-200d-2640':0, '1f482-1f3fc-200d-2640':0, '1f482-1f3fd-200d-2640':0, '1f482-1f3fe-200d-2640':0, '1f482-1f3ff-200d-2640':0, '1f482-1f3fb-200d-2642':0, '1f482-1f3fc-200d-2642':0, '1f482-1f3fd-200d-2642':0, '1f482-1f3fe-200d-2642':0, '1f482-1f3ff-200d-2642':0, '1f482-1f3fb':0, '1f482-1f3fc':0, '1f482-1f3fd':0, '1f482-1f3fe':0, '1f482-1f3ff':0, '1f483-1f3fb':0, '1f483-1f3fc':0, '1f483-1f3fd':0, '1f483-1f3fe':0, '1f483-1f3ff':0, '1f485-1f3fb':0, '1f485-1f3fc':0, '1f485-1f3fd':0, '1f485-1f3fe':0, '1f485-1f3ff':0, '1f486-1f3fb-200d-2640':0, '1f486-1f3fc-200d-2640':0, '1f486-1f3fd-200d-2640':0, '1f486-1f3fe-200d-2640':0, '1f486-1f3ff-200d-2640':0, '1f486-1f3fb-200d-2642':0, '1f486-1f3fc-200d-2642':0, '1f486-1f3fd-200d-2642':0, '1f486-1f3fe-200d-2642':0, '1f486-1f3ff-200d-2642':0, '1f486-1f3fb':0, '1f486-1f3fc':0, '1f486-1f3fd':0, '1f486-1f3fe':0, '1f486-1f3ff':0, '1f487-1f3fb-200d-2640':0, '1f487-1f3fc-200d-2640':0, '1f487-1f3fd-200d-2640':0, '1f487-1f3fe-200d-2640':0, '1f487-1f3ff-200d-2640':0, '1f487-1f3fb-200d-2642':0, '1f487-1f3fc-200d-2642':0, '1f487-1f3fd-200d-2642':0, '1f487-1f3fe-200d-2642':0, '1f487-1f3ff-200d-2642':0, '1f487-1f3fb':0, '1f487-1f3fc':0, '1f487-1f3fd':0, '1f487-1f3fe':0, '1f487-1f3ff':0, '1f48f-1f3fb':0, '1f48f-1f3fc':0, '1f48f-1f3fd':0, '1f48f-1f3fe':0, '1f48f-1f3ff':0, '1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3fc':0, '1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3fd':0, '1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3fe':0, '1f9d1-1f3fb-200d-2764-200d-1f48b-200d-1f9d1-1f3ff':0, '1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3fb':0, '1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3fd':0, '1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3fe':0, '1f9d1-1f3fc-200d-2764-200d-1f48b-200d-1f9d1-1f3ff':0, '1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3fb':0, '1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3fc':0, '1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3fe':0, '1f9d1-1f3fd-200d-2764-200d-1f48b-200d-1f9d1-1f3ff':0, '1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3fb':0, '1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3fc':0, '1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3fd':0, '1f9d1-1f3fe-200d-2764-200d-1f48b-200d-1f9d1-1f3ff':0, '1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fb':0, '1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fc':0, '1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fd':0, '1f9d1-1f3ff-200d-2764-200d-1f48b-200d-1f9d1-1f3fe':0, '1f491-1f3fb':0, '1f491-1f3fc':0, '1f491-1f3fd':0, '1f491-1f3fe':0, '1f491-1f3ff':0, '1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3fc':0, '1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3fd':0, '1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3fe':0, '1f9d1-1f3fb-200d-2764-200d-1f9d1-1f3ff':0, '1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3fb':0, '1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3fd':0, '1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3fe':0, '1f9d1-1f3fc-200d-2764-200d-1f9d1-1f3ff':0, '1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3fb':0, '1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3fc':0, '1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3fe':0, '1f9d1-1f3fd-200d-2764-200d-1f9d1-1f3ff':0, '1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3fb':0, '1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3fc':0, '1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3fd':0, '1f9d1-1f3fe-200d-2764-200d-1f9d1-1f3ff':0, '1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fb':0, '1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fc':0, '1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fd':0, '1f9d1-1f3ff-200d-2764-200d-1f9d1-1f3fe':0, '1f4aa-1f3fb':0, '1f4aa-1f3fc':0, '1f4aa-1f3fd':0, '1f4aa-1f3fe':0, '1f4aa-1f3ff':0, '1f574-1f3fb':0, '1f574-1f3fc':0, '1f574-1f3fd':0, '1f574-1f3fe':0, '1f574-1f3ff':0, '1f575-1f3fb-200d-2640':0, '1f575-1f3fc-200d-2640':0, '1f575-1f3fd-200d-2640':0, '1f575-1f3fe-200d-2640':0, '1f575-1f3ff-200d-2640':0, '1f575-1f3fb-200d-2642':0, '1f575-1f3fc-200d-2642':0, '1f575-1f3fd-200d-2642':0, '1f575-1f3fe-200d-2642':0, '1f575-1f3ff-200d-2642':0, '1f575-1f3fb':0, '1f575-1f3fc':0, '1f575-1f3fd':0, '1f575-1f3fe':0, '1f575-1f3ff':0, '1f57a-1f3fb':0, '1f57a-1f3fc':0, '1f57a-1f3fd':0, '1f57a-1f3fe':0, '1f57a-1f3ff':0, '1f590-1f3fb':0, '1f590-1f3fc':0, '1f590-1f3fd':0, '1f590-1f3fe':0, '1f590-1f3ff':0, '1f595-1f3fb':0, '1f595-1f3fc':0, '1f595-1f3fd':0, '1f595-1f3fe':0, '1f595-1f3ff':0, '1f596-1f3fb':0, '1f596-1f3fc':0, '1f596-1f3fd':0, '1f596-1f3fe':0, '1f596-1f3ff':0, '1f645-1f3fb-200d-2640':0, '1f645-1f3fc-200d-2640':0, '1f645-1f3fd-200d-2640':0, '1f645-1f3fe-200d-2640':0, '1f645-1f3ff-200d-2640':0, '1f645-1f3fb-200d-2642':0, '1f645-1f3fc-200d-2642':0, '1f645-1f3fd-200d-2642':0, '1f645-1f3fe-200d-2642':0, '1f645-1f3ff-200d-2642':0, '1f645-1f3fb':0, '1f645-1f3fc':0, '1f645-1f3fd':0, '1f645-1f3fe':0, '1f645-1f3ff':0, '1f646-1f3fb-200d-2640':0, '1f646-1f3fc-200d-2640':0, '1f646-1f3fd-200d-2640':0, '1f646-1f3fe-200d-2640':0, '1f646-1f3ff-200d-2640':0, '1f646-1f3fb-200d-2642':0, '1f646-1f3fc-200d-2642':0, '1f646-1f3fd-200d-2642':0, '1f646-1f3fe-200d-2642':0, '1f646-1f3ff-200d-2642':0, '1f646-1f3fb':0, '1f646-1f3fc':0, '1f646-1f3fd':0, '1f646-1f3fe':0, '1f646-1f3ff':0, '1f647-1f3fb-200d-2640':0, '1f647-1f3fc-200d-2640':0, '1f647-1f3fd-200d-2640':0, '1f647-1f3fe-200d-2640':0, '1f647-1f3ff-200d-2640':0, '1f647-1f3fb-200d-2642':0, '1f647-1f3fc-200d-2642':0, '1f647-1f3fd-200d-2642':0, '1f647-1f3fe-200d-2642':0, '1f647-1f3ff-200d-2642':0, '1f647-1f3fb':0, '1f647-1f3fc':0, '1f647-1f3fd':0, '1f647-1f3fe':0, '1f647-1f3ff':0, '1f64b-1f3fb-200d-2640':0, '1f64b-1f3fc-200d-2640':0, '1f64b-1f3fd-200d-2640':0, '1f64b-1f3fe-200d-2640':0, '1f64b-1f3ff-200d-2640':0, '1f64b-1f3fb-200d-2642':0, '1f64b-1f3fc-200d-2642':0, '1f64b-1f3fd-200d-2642':0, '1f64b-1f3fe-200d-2642':0, '1f64b-1f3ff-200d-2642':0, '1f64b-1f3fb':0, '1f64b-1f3fc':0, '1f64b-1f3fd':0, '1f64b-1f3fe':0, '1f64b-1f3ff':0, '1f64c-1f3fb':0, '1f64c-1f3fc':0, '1f64c-1f3fd':0, '1f64c-1f3fe':0, '1f64c-1f3ff':0, '1f64d-1f3fb-200d-2640':0, '1f64d-1f3fc-200d-2640':0, '1f64d-1f3fd-200d-2640':0, '1f64d-1f3fe-200d-2640':0, '1f64d-1f3ff-200d-2640':0, '1f64d-1f3fb-200d-2642':0, '1f64d-1f3fc-200d-2642':0, '1f64d-1f3fd-200d-2642':0, '1f64d-1f3fe-200d-2642':0, '1f64d-1f3ff-200d-2642':0, '1f64d-1f3fb':0, '1f64d-1f3fc':0, '1f64d-1f3fd':0, '1f64d-1f3fe':0, '1f64d-1f3ff':0, '1f64e-1f3fb-200d-2640':0, '1f64e-1f3fc-200d-2640':0, '1f64e-1f3fd-200d-2640':0, '1f64e-1f3fe-200d-2640':0, '1f64e-1f3ff-200d-2640':0, '1f64e-1f3fb-200d-2642':0, '1f64e-1f3fc-200d-2642':0, '1f64e-1f3fd-200d-2642':0, '1f64e-1f3fe-200d-2642':0, '1f64e-1f3ff-200d-2642':0, '1f64e-1f3fb':0, '1f64e-1f3fc':0, '1f64e-1f3fd':0, '1f64e-1f3fe':0, '1f64e-1f3ff':0, '1f64f-1f3fb':0, '1f64f-1f3fc':0, '1f64f-1f3fd':0, '1f64f-1f3fe':0, '1f64f-1f3ff':0, '1f6a3-1f3fb-200d-2640':0, '1f6a3-1f3fc-200d-2640':0, '1f6a3-1f3fd-200d-2640':0, '1f6a3-1f3fe-200d-2640':0, '1f6a3-1f3ff-200d-2640':0, '1f6a3-1f3fb-200d-2642':0, '1f6a3-1f3fc-200d-2642':0, '1f6a3-1f3fd-200d-2642':0, '1f6a3-1f3fe-200d-2642':0, '1f6a3-1f3ff-200d-2642':0, '1f6a3-1f3fb':0, '1f6a3-1f3fc':0, '1f6a3-1f3fd':0, '1f6a3-1f3fe':0, '1f6a3-1f3ff':0, '1f6b4-1f3fb-200d-2640':0, '1f6b4-1f3fc-200d-2640':0, '1f6b4-1f3fd-200d-2640':0, '1f6b4-1f3fe-200d-2640':0, '1f6b4-1f3ff-200d-2640':0, '1f6b4-1f3fb-200d-2642':0, '1f6b4-1f3fc-200d-2642':0, '1f6b4-1f3fd-200d-2642':0, '1f6b4-1f3fe-200d-2642':0, '1f6b4-1f3ff-200d-2642':0, '1f6b4-1f3fb':0, '1f6b4-1f3fc':0, '1f6b4-1f3fd':0, '1f6b4-1f3fe':0, '1f6b4-1f3ff':0, '1f6b5-1f3fb-200d-2640':0, '1f6b5-1f3fc-200d-2640':0, '1f6b5-1f3fd-200d-2640':0, '1f6b5-1f3fe-200d-2640':0, '1f6b5-1f3ff-200d-2640':0, '1f6b5-1f3fb-200d-2642':0, '1f6b5-1f3fc-200d-2642':0, '1f6b5-1f3fd-200d-2642':0, '1f6b5-1f3fe-200d-2642':0, '1f6b5-1f3ff-200d-2642':0, '1f6b5-1f3fb':0, '1f6b5-1f3fc':0, '1f6b5-1f3fd':0, '1f6b5-1f3fe':0, '1f6b5-1f3ff':0, '1f6b6-1f3fb-200d-2640':0, '1f6b6-1f3fc-200d-2640':0, '1f6b6-1f3fd-200d-2640':0, '1f6b6-1f3fe-200d-2640':0, '1f6b6-1f3ff-200d-2640':0, '1f6b6-1f3fb-200d-2642':0, '1f6b6-1f3fc-200d-2642':0, '1f6b6-1f3fd-200d-2642':0, '1f6b6-1f3fe-200d-2642':0, '1f6b6-1f3ff-200d-2642':0, '1f6b6-1f3fb':0, '1f6b6-1f3fc':0, '1f6b6-1f3fd':0, '1f6b6-1f3fe':0, '1f6b6-1f3ff':0, '1f6c0-1f3fb':0, '1f6c0-1f3fc':0, '1f6c0-1f3fd':0, '1f6c0-1f3fe':0, '1f6c0-1f3ff':0, '1f6cc-1f3fb':0, '1f6cc-1f3fc':0, '1f6cc-1f3fd':0, '1f6cc-1f3fe':0, '1f6cc-1f3ff':0, '1f90c-1f3fb':0, '1f90c-1f3fc':0, '1f90c-1f3fd':0, '1f90c-1f3fe':0, '1f90c-1f3ff':0, '1f90f-1f3fb':0, '1f90f-1f3fc':0, '1f90f-1f3fd':0, '1f90f-1f3fe':0, '1f90f-1f3ff':0, '1f918-1f3fb':0, '1f918-1f3fc':0, '1f918-1f3fd':0, '1f918-1f3fe':0, '1f918-1f3ff':0, '1f919-1f3fb':0, '1f919-1f3fc':0, '1f919-1f3fd':0, '1f919-1f3fe':0, '1f919-1f3ff':0, '1f91a-1f3fb':0, '1f91a-1f3fc':0, '1f91a-1f3fd':0, '1f91a-1f3fe':0, '1f91a-1f3ff':0, '1f91b-1f3fb':0, '1f91b-1f3fc':0, '1f91b-1f3fd':0, '1f91b-1f3fe':0, '1f91b-1f3ff':0, '1f91c-1f3fb':0, '1f91c-1f3fc':0, '1f91c-1f3fd':0, '1f91c-1f3fe':0, '1f91c-1f3ff':0, '1f91d-1f3fb':0, '1f91d-1f3fc':0, '1f91d-1f3fd':0, '1f91d-1f3fe':0, '1f91d-1f3ff':0, '1f91e-1f3fb':0, '1f91e-1f3fc':0, '1f91e-1f3fd':0, '1f91e-1f3fe':0, '1f91e-1f3ff':0, '1f91f-1f3fb':0, '1f91f-1f3fc':0, '1f91f-1f3fd':0, '1f91f-1f3fe':0, '1f91f-1f3ff':0, '1f926-1f3fb-200d-2640':0, '1f926-1f3fc-200d-2640':0, '1f926-1f3fd-200d-2640':0, '1f926-1f3fe-200d-2640':0, '1f926-1f3ff-200d-2640':0, '1f926-1f3fb-200d-2642':0, '1f926-1f3fc-200d-2642':0, '1f926-1f3fd-200d-2642':0, '1f926-1f3fe-200d-2642':0, '1f926-1f3ff-200d-2642':0, '1f926-1f3fb':0, '1f926-1f3fc':0, '1f926-1f3fd':0, '1f926-1f3fe':0, '1f926-1f3ff':0, '1f930-1f3fb':0, '1f930-1f3fc':0, '1f930-1f3fd':0, '1f930-1f3fe':0, '1f930-1f3ff':0, '1f931-1f3fb':0, '1f931-1f3fc':0, '1f931-1f3fd':0, '1f931-1f3fe':0, '1f931-1f3ff':0, '1f932-1f3fb':0, '1f932-1f3fc':0, '1f932-1f3fd':0, '1f932-1f3fe':0, '1f932-1f3ff':0, '1f933-1f3fb':0, '1f933-1f3fc':0, '1f933-1f3fd':0, '1f933-1f3fe':0, '1f933-1f3ff':0, '1f934-1f3fb':0, '1f934-1f3fc':0, '1f934-1f3fd':0, '1f934-1f3fe':0, '1f934-1f3ff':0, '1f935-1f3fb-200d-2640':0, '1f935-1f3fc-200d-2640':0, '1f935-1f3fd-200d-2640':0, '1f935-1f3fe-200d-2640':0, '1f935-1f3ff-200d-2640':0, '1f935-1f3fb-200d-2642':0, '1f935-1f3fc-200d-2642':0, '1f935-1f3fd-200d-2642':0, '1f935-1f3fe-200d-2642':0, '1f935-1f3ff-200d-2642':0, '1f935-1f3fb':0, '1f935-1f3fc':0, '1f935-1f3fd':0, '1f935-1f3fe':0, '1f935-1f3ff':0, '1f936-1f3fb':0, '1f936-1f3fc':0, '1f936-1f3fd':0, '1f936-1f3fe':0, '1f936-1f3ff':0, '1f937-1f3fb-200d-2640':0, '1f937-1f3fc-200d-2640':0, '1f937-1f3fd-200d-2640':0, '1f937-1f3fe-200d-2640':0, '1f937-1f3ff-200d-2640':0, '1f937-1f3fb-200d-2642':0, '1f937-1f3fc-200d-2642':0, '1f937-1f3fd-200d-2642':0, '1f937-1f3fe-200d-2642':0, '1f937-1f3ff-200d-2642':0, '1f937-1f3fb':0, '1f937-1f3fc':0, '1f937-1f3fd':0, '1f937-1f3fe':0, '1f937-1f3ff':0, '1f938-1f3fb-200d-2640':0, '1f938-1f3fc-200d-2640':0, '1f938-1f3fd-200d-2640':0, '1f938-1f3fe-200d-2640':0, '1f938-1f3ff-200d-2640':0, '1f938-1f3fb-200d-2642':0, '1f938-1f3fc-200d-2642':0, '1f938-1f3fd-200d-2642':0, '1f938-1f3fe-200d-2642':0, '1f938-1f3ff-200d-2642':0, '1f938-1f3fb':0, '1f938-1f3fc':0, '1f938-1f3fd':0, '1f938-1f3fe':0, '1f938-1f3ff':0, '1f939-1f3fb-200d-2640':0, '1f939-1f3fc-200d-2640':0, '1f939-1f3fd-200d-2640':0, '1f939-1f3fe-200d-2640':0, '1f939-1f3ff-200d-2640':0, '1f939-1f3fb-200d-2642':0, '1f939-1f3fc-200d-2642':0, '1f939-1f3fd-200d-2642':0, '1f939-1f3fe-200d-2642':0, '1f939-1f3ff-200d-2642':0, '1f939-1f3fb':0, '1f939-1f3fc':0, '1f939-1f3fd':0, '1f939-1f3fe':0, '1f939-1f3ff':0, '1f93d-1f3fb-200d-2640':0, '1f93d-1f3fc-200d-2640':0, '1f93d-1f3fd-200d-2640':0, '1f93d-1f3fe-200d-2640':0, '1f93d-1f3ff-200d-2640':0, '1f93d-1f3fb-200d-2642':0, '1f93d-1f3fc-200d-2642':0, '1f93d-1f3fd-200d-2642':0, '1f93d-1f3fe-200d-2642':0, '1f93d-1f3ff-200d-2642':0, '1f93d-1f3fb':0, '1f93d-1f3fc':0, '1f93d-1f3fd':0, '1f93d-1f3fe':0, '1f93d-1f3ff':0, '1f93e-1f3fb-200d-2640':0, '1f93e-1f3fc-200d-2640':0, '1f93e-1f3fd-200d-2640':0, '1f93e-1f3fe-200d-2640':0, '1f93e-1f3ff-200d-2640':0, '1f93e-1f3fb-200d-2642':0, '1f93e-1f3fc-200d-2642':0, '1f93e-1f3fd-200d-2642':0, '1f93e-1f3fe-200d-2642':0, '1f93e-1f3ff-200d-2642':0, '1f93e-1f3fb':0, '1f93e-1f3fc':0, '1f93e-1f3fd':0, '1f93e-1f3fe':0, '1f93e-1f3ff':0, '1f977-1f3fb':0, '1f977-1f3fc':0, '1f977-1f3fd':0, '1f977-1f3fe':0, '1f977-1f3ff':0, '1f9b5-1f3fb':0, '1f9b5-1f3fc':0, '1f9b5-1f3fd':0, '1f9b5-1f3fe':0, '1f9b5-1f3ff':0, '1f9b6-1f3fb':0, '1f9b6-1f3fc':0, '1f9b6-1f3fd':0, '1f9b6-1f3fe':0, '1f9b6-1f3ff':0, '1f9b8-1f3fb-200d-2640':0, '1f9b8-1f3fc-200d-2640':0, '1f9b8-1f3fd-200d-2640':0, '1f9b8-1f3fe-200d-2640':0, '1f9b8-1f3ff-200d-2640':0, '1f9b8-1f3fb-200d-2642':0, '1f9b8-1f3fc-200d-2642':0, '1f9b8-1f3fd-200d-2642':0, '1f9b8-1f3fe-200d-2642':0, '1f9b8-1f3ff-200d-2642':0, '1f9b8-1f3fb':0, '1f9b8-1f3fc':0, '1f9b8-1f3fd':0, '1f9b8-1f3fe':0, '1f9b8-1f3ff':0, '1f9b9-1f3fb-200d-2640':0, '1f9b9-1f3fc-200d-2640':0, '1f9b9-1f3fd-200d-2640':0, '1f9b9-1f3fe-200d-2640':0, '1f9b9-1f3ff-200d-2640':0, '1f9b9-1f3fb-200d-2642':0, '1f9b9-1f3fc-200d-2642':0, '1f9b9-1f3fd-200d-2642':0, '1f9b9-1f3fe-200d-2642':0, '1f9b9-1f3ff-200d-2642':0, '1f9b9-1f3fb':0, '1f9b9-1f3fc':0, '1f9b9-1f3fd':0, '1f9b9-1f3fe':0, '1f9b9-1f3ff':0, '1f9bb-1f3fb':0, '1f9bb-1f3fc':0, '1f9bb-1f3fd':0, '1f9bb-1f3fe':0, '1f9bb-1f3ff':0, '1f9cd-1f3fb-200d-2640':0, '1f9cd-1f3fc-200d-2640':0, '1f9cd-1f3fd-200d-2640':0, '1f9cd-1f3fe-200d-2640':0, '1f9cd-1f3ff-200d-2640':0, '1f9cd-1f3fb-200d-2642':0, '1f9cd-1f3fc-200d-2642':0, '1f9cd-1f3fd-200d-2642':0, '1f9cd-1f3fe-200d-2642':0, '1f9cd-1f3ff-200d-2642':0, '1f9cd-1f3fb':0, '1f9cd-1f3fc':0, '1f9cd-1f3fd':0, '1f9cd-1f3fe':0, '1f9cd-1f3ff':0, '1f9ce-1f3fb-200d-2640':0, '1f9ce-1f3fc-200d-2640':0, '1f9ce-1f3fd-200d-2640':0, '1f9ce-1f3fe-200d-2640':0, '1f9ce-1f3ff-200d-2640':0, '1f9ce-1f3fb-200d-2642':0, '1f9ce-1f3fc-200d-2642':0, '1f9ce-1f3fd-200d-2642':0, '1f9ce-1f3fe-200d-2642':0, '1f9ce-1f3ff-200d-2642':0, '1f9ce-1f3fb':0, '1f9ce-1f3fc':0, '1f9ce-1f3fd':0, '1f9ce-1f3fe':0, '1f9ce-1f3ff':0, '1f9cf-1f3fb-200d-2640':0, '1f9cf-1f3fc-200d-2640':0, '1f9cf-1f3fd-200d-2640':0, '1f9cf-1f3fe-200d-2640':0, '1f9cf-1f3ff-200d-2640':0, '1f9cf-1f3fb-200d-2642':0, '1f9cf-1f3fc-200d-2642':0, '1f9cf-1f3fd-200d-2642':0, '1f9cf-1f3fe-200d-2642':0, '1f9cf-1f3ff-200d-2642':0, '1f9cf-1f3fb':0, '1f9cf-1f3fc':0, '1f9cf-1f3fd':0, '1f9cf-1f3fe':0, '1f9cf-1f3ff':0, '1f9d1-1f3fb-200d-1f33e':0, '1f9d1-1f3fc-200d-1f33e':0, '1f9d1-1f3fd-200d-1f33e':0, '1f9d1-1f3fe-200d-1f33e':0, '1f9d1-1f3ff-200d-1f33e':0, '1f9d1-1f3fb-200d-1f373':0, '1f9d1-1f3fc-200d-1f373':0, '1f9d1-1f3fd-200d-1f373':0, '1f9d1-1f3fe-200d-1f373':0, '1f9d1-1f3ff-200d-1f373':0, '1f9d1-1f3fb-200d-1f37c':0, '1f9d1-1f3fc-200d-1f37c':0, '1f9d1-1f3fd-200d-1f37c':0, '1f9d1-1f3fe-200d-1f37c':0, '1f9d1-1f3ff-200d-1f37c':0, '1f9d1-1f3fb-200d-1f384':0, '1f9d1-1f3fc-200d-1f384':0, '1f9d1-1f3fd-200d-1f384':0, '1f9d1-1f3fe-200d-1f384':0, '1f9d1-1f3ff-200d-1f384':0, '1f9d1-1f3fb-200d-1f393':0, '1f9d1-1f3fc-200d-1f393':0, '1f9d1-1f3fd-200d-1f393':0, '1f9d1-1f3fe-200d-1f393':0, '1f9d1-1f3ff-200d-1f393':0, '1f9d1-1f3fb-200d-1f3a4':0, '1f9d1-1f3fc-200d-1f3a4':0, '1f9d1-1f3fd-200d-1f3a4':0, '1f9d1-1f3fe-200d-1f3a4':0, '1f9d1-1f3ff-200d-1f3a4':0, '1f9d1-1f3fb-200d-1f3a8':0, '1f9d1-1f3fc-200d-1f3a8':0, '1f9d1-1f3fd-200d-1f3a8':0, '1f9d1-1f3fe-200d-1f3a8':0, '1f9d1-1f3ff-200d-1f3a8':0, '1f9d1-1f3fb-200d-1f3eb':0, '1f9d1-1f3fc-200d-1f3eb':0, '1f9d1-1f3fd-200d-1f3eb':0, '1f9d1-1f3fe-200d-1f3eb':0, '1f9d1-1f3ff-200d-1f3eb':0, '1f9d1-1f3fb-200d-1f3ed':0, '1f9d1-1f3fc-200d-1f3ed':0, '1f9d1-1f3fd-200d-1f3ed':0, '1f9d1-1f3fe-200d-1f3ed':0, '1f9d1-1f3ff-200d-1f3ed':0, '1f9d1-1f3fb-200d-1f4bb':0, '1f9d1-1f3fc-200d-1f4bb':0, '1f9d1-1f3fd-200d-1f4bb':0, '1f9d1-1f3fe-200d-1f4bb':0, '1f9d1-1f3ff-200d-1f4bb':0, '1f9d1-1f3fb-200d-1f4bc':0, '1f9d1-1f3fc-200d-1f4bc':0, '1f9d1-1f3fd-200d-1f4bc':0, '1f9d1-1f3fe-200d-1f4bc':0, '1f9d1-1f3ff-200d-1f4bc':0, '1f9d1-1f3fb-200d-1f527':0, '1f9d1-1f3fc-200d-1f527':0, '1f9d1-1f3fd-200d-1f527':0, '1f9d1-1f3fe-200d-1f527':0, '1f9d1-1f3ff-200d-1f527':0, '1f9d1-1f3fb-200d-1f52c':0, '1f9d1-1f3fc-200d-1f52c':0, '1f9d1-1f3fd-200d-1f52c':0, '1f9d1-1f3fe-200d-1f52c':0, '1f9d1-1f3ff-200d-1f52c':0, '1f9d1-1f3fb-200d-1f680':0, '1f9d1-1f3fc-200d-1f680':0, '1f9d1-1f3fd-200d-1f680':0, '1f9d1-1f3fe-200d-1f680':0, '1f9d1-1f3ff-200d-1f680':0, '1f9d1-1f3fb-200d-1f692':0, '1f9d1-1f3fc-200d-1f692':0, '1f9d1-1f3fd-200d-1f692':0, '1f9d1-1f3fe-200d-1f692':0, '1f9d1-1f3ff-200d-1f692':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3fb-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3fc-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3fd-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3fe-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fb':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fc':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fd':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3fe':0, '1f9d1-1f3ff-200d-1f91d-200d-1f9d1-1f3ff':0, '1f9d1-1f3fb-200d-1f9af':0, '1f9d1-1f3fc-200d-1f9af':0, '1f9d1-1f3fd-200d-1f9af':0, '1f9d1-1f3fe-200d-1f9af':0, '1f9d1-1f3ff-200d-1f9af':0, '1f9d1-1f3fb-200d-1f9b0':0, '1f9d1-1f3fc-200d-1f9b0':0, '1f9d1-1f3fd-200d-1f9b0':0, '1f9d1-1f3fe-200d-1f9b0':0, '1f9d1-1f3ff-200d-1f9b0':0, '1f9d1-1f3fb-200d-1f9b1':0, '1f9d1-1f3fc-200d-1f9b1':0, '1f9d1-1f3fd-200d-1f9b1':0, '1f9d1-1f3fe-200d-1f9b1':0, '1f9d1-1f3ff-200d-1f9b1':0, '1f9d1-1f3fb-200d-1f9b2':0, '1f9d1-1f3fc-200d-1f9b2':0, '1f9d1-1f3fd-200d-1f9b2':0, '1f9d1-1f3fe-200d-1f9b2':0, '1f9d1-1f3ff-200d-1f9b2':0, '1f9d1-1f3fb-200d-1f9b3':0, '1f9d1-1f3fc-200d-1f9b3':0, '1f9d1-1f3fd-200d-1f9b3':0, '1f9d1-1f3fe-200d-1f9b3':0, '1f9d1-1f3ff-200d-1f9b3':0, '1f9d1-1f3fb-200d-1f9bc':0, '1f9d1-1f3fc-200d-1f9bc':0, '1f9d1-1f3fd-200d-1f9bc':0, '1f9d1-1f3fe-200d-1f9bc':0, '1f9d1-1f3ff-200d-1f9bc':0, '1f9d1-1f3fb-200d-1f9bd':0, '1f9d1-1f3fc-200d-1f9bd':0, '1f9d1-1f3fd-200d-1f9bd':0, '1f9d1-1f3fe-200d-1f9bd':0, '1f9d1-1f3ff-200d-1f9bd':0, '1f9d1-1f3fb-200d-2695':0, '1f9d1-1f3fc-200d-2695':0, '1f9d1-1f3fd-200d-2695':0, '1f9d1-1f3fe-200d-2695':0, '1f9d1-1f3ff-200d-2695':0, '1f9d1-1f3fb-200d-2696':0, '1f9d1-1f3fc-200d-2696':0, '1f9d1-1f3fd-200d-2696':0, '1f9d1-1f3fe-200d-2696':0, '1f9d1-1f3ff-200d-2696':0, '1f9d1-1f3fb-200d-2708':0, '1f9d1-1f3fc-200d-2708':0, '1f9d1-1f3fd-200d-2708':0, '1f9d1-1f3fe-200d-2708':0, '1f9d1-1f3ff-200d-2708':0, '1f9d1-1f3fb':0, '1f9d1-1f3fc':0, '1f9d1-1f3fd':0, '1f9d1-1f3fe':0, '1f9d1-1f3ff':0, '1f9d2-1f3fb':0, '1f9d2-1f3fc':0, '1f9d2-1f3fd':0, '1f9d2-1f3fe':0, '1f9d2-1f3ff':0, '1f9d3-1f3fb':0, '1f9d3-1f3fc':0, '1f9d3-1f3fd':0, '1f9d3-1f3fe':0, '1f9d3-1f3ff':0, '1f9d4-1f3fb-200d-2640':0, '1f9d4-1f3fc-200d-2640':0, '1f9d4-1f3fd-200d-2640':0, '1f9d4-1f3fe-200d-2640':0, '1f9d4-1f3ff-200d-2640':0, '1f9d4-1f3fb-200d-2642':0, '1f9d4-1f3fc-200d-2642':0, '1f9d4-1f3fd-200d-2642':0, '1f9d4-1f3fe-200d-2642':0, '1f9d4-1f3ff-200d-2642':0, '1f9d4-1f3fb':0, '1f9d4-1f3fc':0, '1f9d4-1f3fd':0, '1f9d4-1f3fe':0, '1f9d4-1f3ff':0, '1f9d5-1f3fb':0, '1f9d5-1f3fc':0, '1f9d5-1f3fd':0, '1f9d5-1f3fe':0, '1f9d5-1f3ff':0, '1f9d6-1f3fb-200d-2640':0, '1f9d6-1f3fc-200d-2640':0, '1f9d6-1f3fd-200d-2640':0, '1f9d6-1f3fe-200d-2640':0, '1f9d6-1f3ff-200d-2640':0, '1f9d6-1f3fb-200d-2642':0, '1f9d6-1f3fc-200d-2642':0, '1f9d6-1f3fd-200d-2642':0, '1f9d6-1f3fe-200d-2642':0, '1f9d6-1f3ff-200d-2642':0, '1f9d6-1f3fb':0, '1f9d6-1f3fc':0, '1f9d6-1f3fd':0, '1f9d6-1f3fe':0, '1f9d6-1f3ff':0, '1f9d7-1f3fb-200d-2640':0, '1f9d7-1f3fc-200d-2640':0, '1f9d7-1f3fd-200d-2640':0, '1f9d7-1f3fe-200d-2640':0, '1f9d7-1f3ff-200d-2640':0, '1f9d7-1f3fb-200d-2642':0, '1f9d7-1f3fc-200d-2642':0, '1f9d7-1f3fd-200d-2642':0, '1f9d7-1f3fe-200d-2642':0, '1f9d7-1f3ff-200d-2642':0, '1f9d7-1f3fb':0, '1f9d7-1f3fc':0, '1f9d7-1f3fd':0, '1f9d7-1f3fe':0, '1f9d7-1f3ff':0, '1f9d8-1f3fb-200d-2640':0, '1f9d8-1f3fc-200d-2640':0, '1f9d8-1f3fd-200d-2640':0, '1f9d8-1f3fe-200d-2640':0, '1f9d8-1f3ff-200d-2640':0, '1f9d8-1f3fb-200d-2642':0, '1f9d8-1f3fc-200d-2642':0, '1f9d8-1f3fd-200d-2642':0, '1f9d8-1f3fe-200d-2642':0, '1f9d8-1f3ff-200d-2642':0, '1f9d8-1f3fb':0, '1f9d8-1f3fc':0, '1f9d8-1f3fd':0, '1f9d8-1f3fe':0, '1f9d8-1f3ff':0, '1f9d9-1f3fb-200d-2640':0, '1f9d9-1f3fc-200d-2640':0, '1f9d9-1f3fd-200d-2640':0, '1f9d9-1f3fe-200d-2640':0, '1f9d9-1f3ff-200d-2640':0, '1f9d9-1f3fb-200d-2642':0, '1f9d9-1f3fc-200d-2642':0, '1f9d9-1f3fd-200d-2642':0, '1f9d9-1f3fe-200d-2642':0, '1f9d9-1f3ff-200d-2642':0, '1f9d9-1f3fb':0, '1f9d9-1f3fc':0, '1f9d9-1f3fd':0, '1f9d9-1f3fe':0, '1f9d9-1f3ff':0, '1f9da-1f3fb-200d-2640':0, '1f9da-1f3fc-200d-2640':0, '1f9da-1f3fd-200d-2640':0, '1f9da-1f3fe-200d-2640':0, '1f9da-1f3ff-200d-2640':0, '1f9da-1f3fb-200d-2642':0, '1f9da-1f3fc-200d-2642':0, '1f9da-1f3fd-200d-2642':0, '1f9da-1f3fe-200d-2642':0, '1f9da-1f3ff-200d-2642':0, '1f9da-1f3fb':0, '1f9da-1f3fc':0, '1f9da-1f3fd':0, '1f9da-1f3fe':0, '1f9da-1f3ff':0, '1f9db-1f3fb-200d-2640':0, '1f9db-1f3fc-200d-2640':0, '1f9db-1f3fd-200d-2640':0, '1f9db-1f3fe-200d-2640':0, '1f9db-1f3ff-200d-2640':0, '1f9db-1f3fb-200d-2642':0, '1f9db-1f3fc-200d-2642':0, '1f9db-1f3fd-200d-2642':0, '1f9db-1f3fe-200d-2642':0, '1f9db-1f3ff-200d-2642':0, '1f9db-1f3fb':0, '1f9db-1f3fc':0, '1f9db-1f3fd':0, '1f9db-1f3fe':0, '1f9db-1f3ff':0, '1f9dc-1f3fb-200d-2640':0, '1f9dc-1f3fc-200d-2640':0, '1f9dc-1f3fd-200d-2640':0, '1f9dc-1f3fe-200d-2640':0, '1f9dc-1f3ff-200d-2640':0, '1f9dc-1f3fb-200d-2642':0, '1f9dc-1f3fc-200d-2642':0, '1f9dc-1f3fd-200d-2642':0, '1f9dc-1f3fe-200d-2642':0, '1f9dc-1f3ff-200d-2642':0, '1f9dc-1f3fb':0, '1f9dc-1f3fc':0, '1f9dc-1f3fd':0, '1f9dc-1f3fe':0, '1f9dc-1f3ff':0, '1f9dd-1f3fb-200d-2640':0, '1f9dd-1f3fc-200d-2640':0, '1f9dd-1f3fd-200d-2640':0, '1f9dd-1f3fe-200d-2640':0, '1f9dd-1f3ff-200d-2640':0, '1f9dd-1f3fb-200d-2642':0, '1f9dd-1f3fc-200d-2642':0, '1f9dd-1f3fd-200d-2642':0, '1f9dd-1f3fe-200d-2642':0, '1f9dd-1f3ff-200d-2642':0, '1f9dd-1f3fb':0, '1f9dd-1f3fc':0, '1f9dd-1f3fd':0, '1f9dd-1f3fe':0, '1f9dd-1f3ff':0, '261d-1f3fb':0, '261d-1f3fc':0, '261d-1f3fd':0, '261d-1f3fe':0, '261d-1f3ff':0, '26f9-1f3fb-200d-2640':0, '26f9-1f3fc-200d-2640':0, '26f9-1f3fd-200d-2640':0, '26f9-1f3fe-200d-2640':0, '26f9-1f3ff-200d-2640':0, '26f9-1f3fb-200d-2642':0, '26f9-1f3fc-200d-2642':0, '26f9-1f3fd-200d-2642':0, '26f9-1f3fe-200d-2642':0, '26f9-1f3ff-200d-2642':0, '26f9-1f3fb':0, '26f9-1f3fc':0, '26f9-1f3fd':0, '26f9-1f3fe':0, '26f9-1f3ff':0, '270a-1f3fb':0, '270a-1f3fc':0, '270a-1f3fd':0, '270a-1f3fe':0, '270a-1f3ff':0, '270b-1f3fb':0, '270b-1f3fc':0, '270b-1f3fd':0, '270b-1f3fe':0, '270b-1f3ff':0, '270c-1f3fb':0, '270c-1f3fc':0, '270c-1f3fd':0, '270c-1f3fe':0, '270c-1f3ff':0, '270d-1f3fb':0, '270d-1f3fc':0, '270d-1f3fd':0, '270d-1f3fe':0, '270d-1f3ff':0}};\n\nconst Emoji: {[emoji: string]: number} = EmojiVersions[''];\nfor(const version in EmojiVersions) {\n  if(version) {\n    Object.assign(Emoji, EmojiVersions[version as EMOJI_VERSION]);\n  }\n}\n\nexport default Emoji;\n\n/* Emoji[\"00a9-fe0f\"] = 6362;\nEmoji[\"00ae-fe0f\"] = 6363;\nEmoji[\"2122-fe0f\"] = 6364; */\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport ctx from './ctx';\n\nexport const USER_AGENT = navigator ? navigator.userAgent : null;\nexport const IS_APPLE = navigator.userAgent.search(/OS X|iPhone|iPad|iOS/i) !== -1;\nexport const IS_ANDROID = navigator.userAgent.toLowerCase().indexOf('android') !== -1;\nexport const IS_CHROMIUM = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n\n// https://stackoverflow.com/a/58065241\nexport const IS_APPLE_MOBILE = (/iPad|iPhone|iPod/.test(navigator.platform) ||\n  (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1)) &&\n  !(ctx as any).MSStream;\n\nexport const IS_SAFARI = !!('safari' in ctx) || !!(USER_AGENT && (/\\b(iPad|iPhone|iPod)\\b/.test(USER_AGENT) || (!!USER_AGENT.match('Safari') && !USER_AGENT.match('Chrome'))))/*  || true */;\nexport const IS_FIREFOX = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n\nexport const IS_MOBILE_SAFARI = IS_SAFARI && IS_APPLE_MOBILE;\n\nexport const IS_MOBILE = (navigator.maxTouchPoints === undefined || navigator.maxTouchPoints > 0) && navigator.userAgent.search(/iOS|iPhone OS|Android|BlackBerry|BB10|Series ?[64]0|J2ME|MIDP|opera mini|opera mobi|mobi.+Gecko|Windows Phone/i) != -1;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport LatinizeMap from '../config/latinizeMap';\n\nexport const badCharsRe = /[`~!@#$%^&*()\\-_=+\\[\\]\\\\|{}'\";:\\/?.>,<]+/g;\nconst trimRe = /^\\s+|\\s$/g;\n\nconst C2L: {[k: string]: string} = {\n  'й': 'q',\n  'ц': 'w',\n  'у': 'e',\n  'к': 'r',\n  'е': 't',\n  'н': 'y',\n  'г': 'u',\n  'ш': 'i',\n  'щ': 'o',\n  'з': 'p',\n  'х': '[',\n  'ъ': ']',\n  'ф': 'a',\n  'ы': 's',\n  'в': 'd',\n  'а': 'f',\n  'п': 'g',\n  'р': 'h',\n  'о': 'j',\n  'л': 'k',\n  'д': 'l',\n  'ж': ';',\n  'э': '\\'',\n  'я': 'z',\n  'ч': 'x',\n  'с': 'c',\n  'м': 'v',\n  'и': 'b',\n  'т': 'n',\n  'ь': 'm',\n  'б': ',',\n  'ю': '.',\n  '.': '/'\n};\n\nexport function clearBadCharsAndTrim(text: string) {\n  return text.replace(badCharsRe, '').replace(trimRe, '');\n}\n\nexport function fixCyrillic(text: string) {\n  return text.toLowerCase().replace(/[\\wа-я]/g, (ch) => {\n    const latinizeCh = C2L[ch];\n    return latinizeCh ?? ch;\n  });\n}\n\nexport function latinizeString(text: string) {\n  return text.replace(/[^A-Za-z0-9]/g, (ch) => {\n    const latinizeCh = LatinizeMap[ch];\n    return latinizeCh ?? ch;\n  });\n}\n\nexport default function cleanSearchText(text: string, latinize = true) {\n  return processSearchText(text, {\n    clearBadChars: true,\n    latinize,\n    ignoreCase: true\n  });\n}\n\nexport type ProcessSearchTextOptions = Partial<{\n  clearBadChars: boolean,\n  latinize: boolean,\n  ignoreCase: boolean,\n  includeTag: boolean\n}>;\n\nexport function processSearchText(text: string, options: ProcessSearchTextOptions = {}) {\n  const hasTag = options.includeTag && text.charAt(0) === '%';\n  const originalText = text;\n  if(options.clearBadChars) text = clearBadCharsAndTrim(text);\n  if(options.latinize) text = latinizeString(text);\n  if(options.ignoreCase) text = text.toLowerCase();\n  if(hasTag) text = '%' + text;\n  if(options.latinize) text += '\\x01' + fixCyrillic(originalText);\n  return text;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {InputFileLocation, InputStickerSet, InputWebFileLocation} from '../layer';\nimport type {DownloadOptions} from '../lib/mtproto/apiFileManager';\n\nconst FILENAME_JOINER = '_';\n\nexport function getFileNameByLocation(location: InputFileLocation | InputWebFileLocation, options?: Partial<{\n  fileName: string,\n  downloadId: string\n}>) {\n  const fileName = '';// (options?.fileName || '').split('.');\n  const ext = fileName[fileName.length - 1] || '';\n\n  let str: string;\n  switch(location._) {\n    case 'inputPhotoFileLocation': {\n      str = ['photo', fileName[0], location.id, location.thumb_size].filter(Boolean).join(FILENAME_JOINER);\n      break;\n    }\n\n    case 'inputDocumentFileLocation': {\n      str = ['document', fileName[0], location.id, location.thumb_size].filter(Boolean).join(FILENAME_JOINER);\n      break;\n    }\n\n    case 'inputPeerPhotoFileLocation':\n      str = ['peerPhoto', location.photo_id, location.pFlags.big ? 'big' : 'small'].join(FILENAME_JOINER);\n      break;\n\n    case 'inputStickerSetThumb': {\n      const id = (location.stickerset as InputStickerSet.inputStickerSetID).id ||\n        (location.stickerset as InputStickerSet.inputStickerSetShortName).short_name ||\n        (location.stickerset as InputStickerSet.inputStickerSetDice).emoticon ||\n        location.stickerset._;\n      str = ['stickerSetThumb', id, location.thumb_version].join(FILENAME_JOINER);\n      break;\n    }\n\n    case 'inputFileLocation': {\n      str = [location.volume_id, location.local_id].join(FILENAME_JOINER);\n      break;\n    }\n\n    case 'inputWebFileLocation': {\n      str = ['webFile', location.url].join(FILENAME_JOINER);\n      break;\n    }\n\n    default: {\n      console.error('Unrecognized location:', location);\n      str = '';\n      break;\n    }\n  }\n\n  return str + (options?.downloadId ? '_download' : '') + (ext ? '.' + ext : ext);\n}\n\nexport type FileURLType = 'photo' | 'thumb' | 'document' | 'stream' | 'download';\nexport function getFileURL(type: FileURLType, options: DownloadOptions) {\n  // console.log('getFileURL', location);\n  // const perf = performance.now();\n  const encoded = encodeURIComponent(JSON.stringify(options));\n  // console.log('getFileURL encode:', performance.now() - perf, encoded);\n\n  return /* '/' +  */type + '/' + encoded;\n}\n","import {RestrictionReason} from '../layer';\n\nconst platforms = new Set([\n  'all',\n  'web',\n  'webk'\n]);\n\nconst ignore = new Set();\n\nexport function getRestrictionReason(reasons: RestrictionReason[]) {\n  // return reasons[0];\n  return reasons.find((reason) => platforms.has(reason.platform) && !ignore.has(reason.reason));\n}\n\nexport function isRestricted(reasons: RestrictionReason[]) {\n  return !!getRestrictionReason(reasons);\n}\n\nexport function ignoreRestrictionReasons(reasons: string[]) {\n  ignore.clear();\n  reasons.forEach((reason) => {\n    ignore.add(reason);\n  });\n}\n","import isObject from '../../../../helpers/object/isObject';\nimport {InputChannel, InputPeer, Peer} from '../../../../layer';\nimport {NULL_PEER_ID} from '../../../mtproto/mtproto_config';\n\nexport default function getPeerId(peerId: {user_id: UserId} | {channel_id: ChatId} | {chat_id: ChatId} | InputPeer | InputChannel | PeerId | string): PeerId {\n  if(peerId !== undefined && ((peerId as string).isPeerId ? (peerId as string).isPeerId() : false)) return peerId as PeerId;\n  // if(typeof(peerId) === 'string' && /^[uc]/.test(peerId)) return peerId as PeerId;\n  // if(typeof(peerId) === 'number') return peerId;\n  else if(isObject(peerId)) {\n    const userId = (peerId as Peer.peerUser).user_id;\n    if(userId !== undefined) {\n      return userId.toPeerId(false);\n    }\n\n    const chatId = (peerId as Peer.peerChannel).channel_id || (peerId as Peer.peerChat).chat_id;\n    if(chatId !== undefined) {\n      return chatId.toPeerId(true);\n    }\n\n    return NULL_PEER_ID; // maybe it is an inputPeerSelf\n  // } else if(!peerId) return 'u0';\n  } else if(!peerId) return NULL_PEER_ID;\n\n  const isUser = (peerId as string).charAt(0) === 'u';\n  const peerParams = (peerId as string).substr(1).split('_');\n\n  return isUser ? peerParams[0].toPeerId() : (peerParams[0] || '').toPeerId(true);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {Database} from '../../config/databases';\nimport Modes from '../../config/modes';\nimport makeError from '../../helpers/makeError';\nimport safeAssign from '../../helpers/object/safeAssign';\nimport {logger} from '../logger';\n\n/**\n * https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/createIndex\n */\nexport type IDBIndex = {\n  indexName: string,\n  keyPath: string,\n  objectParameters: IDBIndexParameters\n};\n\nexport type IDBStore = {\n  name: string,\n  indexes?: IDBIndex[]\n};\n\nexport type IDBOptions = {\n  name?: string,\n  storeName: string,\n  stores?: IDBStore[],\n  version?: number\n};\n\nconst DEBUG = false;\n\nexport class IDB {\n  private static INSTANCES: IDB[] = [];\n  private openDbPromise: Promise<IDBDatabase>;\n  private db: IDBDatabase;\n  private storageIsAvailable: boolean;\n  private log: ReturnType<typeof logger>;\n  private name: string;\n  private version: number;\n  private stores: IDBStore[];\n\n  constructor(db: Database<any>) {\n    safeAssign(this, db);\n\n    if(Modes.test) {\n      this.name += '_test';\n    }\n\n    this.storageIsAvailable = true;\n    this.log = logger(['IDB', db.name].join('-'));\n    this.log('constructor');\n\n    this.openDatabase(true);\n\n    IDB.INSTANCES.push(this);\n  }\n\n  public isAvailable() {\n    return this.storageIsAvailable;\n  }\n\n  public openDatabase(createNew = false): Promise<IDBDatabase> {\n    if(this.openDbPromise && !createNew) {\n      return this.openDbPromise;\n    }\n\n    const createIndexes = (os: IDBObjectStore, store: IDBStore) => {\n      const indexNames = Array.from(os.indexNames);\n      for(const indexName of indexNames) {\n        os.deleteIndex(indexName);\n      }\n\n      if(!store.indexes?.length) {\n        return;\n      }\n\n      for(const index of store.indexes) {\n        if(os.indexNames.contains(index.indexName)) {\n          continue;\n        }\n\n        os.createIndex(index.indexName, index.keyPath, index.objectParameters);\n      }\n    };\n\n    const createObjectStore = (db: IDBDatabase, store: IDBStore) => {\n      const os = db.createObjectStore(store.name);\n      createIndexes(os, store);\n    };\n\n    try {\n      var request = indexedDB.open(this.name, this.version);\n\n      if(!request) {\n        return Promise.reject();\n      }\n    } catch(error) {\n      this.log.error('error opening db', (error as Error).message);\n      this.storageIsAvailable = false;\n      return Promise.reject(error);\n    }\n\n    let finished = false;\n    setTimeout(() => {\n      if(!finished) {\n        request.onerror(makeError('IDB_CREATE_TIMEOUT') as Event);\n      }\n    }, 3000);\n\n    return this.openDbPromise = new Promise<IDBDatabase>((resolve, reject) => {\n      request.onsuccess = (event) => {\n        finished = true;\n        const db = request.result;\n        let calledNew = false;\n\n        this.log('Opened');\n\n        db.onerror = (error) => {\n          this.storageIsAvailable = false;\n          this.log.error('Error creating/accessing IndexedDB database', error);\n          reject(error);\n        };\n\n        db.onclose = (e) => {\n          this.log.error('closed:', e);\n          !calledNew && this.openDatabase();\n        };\n\n        db.onabort = (e) => {\n          this.log.error('abort:', e);\n          const transaction = e.target as IDBTransaction;\n\n          this.openDatabase(calledNew = true);\n\n          if(transaction.onerror) {\n            transaction.onerror(e);\n          }\n\n          db.close();\n        };\n\n        db.onversionchange = (e) => {\n          this.log.error('onversionchange, lol?');\n        };\n\n        resolve(this.db = db);\n      };\n\n      request.onerror = (event) => {\n        finished = true;\n        this.storageIsAvailable = false;\n        this.log.error('Error creating/accessing IndexedDB database', event);\n        reject(event);\n      };\n\n      request.onupgradeneeded = (event) => {\n        finished = true;\n        this.log.warn('performing idb upgrade from', event.oldVersion, 'to', event.newVersion);\n\n        const target = event.target as IDBOpenDBRequest;\n        const db = target.result;\n        this.stores.forEach((store) => {\n          /* if(db.objectStoreNames.contains(store.name)) {\n            //if(event.oldVersion === 1) {\n              db.deleteObjectStore(store.name);\n            //}\n          } */\n\n          if(!db.objectStoreNames.contains(store.name)) {\n            createObjectStore(db, store);\n          } else {\n            const txn = target.transaction;\n            const os = txn.objectStore(store.name);\n            createIndexes(os, store);\n          }\n        });\n      };\n    });\n  }\n\n  public static create<T extends Database<any>>(db: T) {\n    return this.INSTANCES.find((instance) => instance.name === db.name) ?? new IDB(db);\n  }\n\n  public static closeDatabases(preserve?: IDB) {\n    this.INSTANCES.forEach((storage) => {\n      if(preserve && preserve === storage) {\n        return;\n      }\n\n      const db = storage.db;\n      if(db) {\n        db.onclose = () => {};\n        db.close();\n      }\n    });\n  }\n}\n\nexport default class IDBStorage<T extends Database<any>, StoreName extends string = T['stores'][0]['name']> {\n  private log: ReturnType<typeof logger>;\n  private storeName: T['stores'][0]['name'];\n  private idb: IDB;\n\n  constructor(db: T, storeName: typeof db['stores'][0]['name']) {\n    this.storeName = storeName;\n    this.log = logger(['IDB', db.name, storeName].join('-'));\n    this.idb = IDB.create(db);\n  }\n\n  /**\n   * ! WARNING ! function requires at least one opened connection\n   */\n  /* public static clearObjectStores() {\n    const storage = this.STORAGES[0];\n    this.closeDatabases(storage);\n\n    const names = Array.from(storage.db.objectStoreNames);\n    const promises = names.map((name) => storage.clear(name));\n    return Promise.all(promises);\n  } */\n\n  /* public static deleteDatabase() {\n    this.closeDatabases();\n\n    const storages = this.STORAGES;\n    const dbNames = Array.from(new Set(storages.map((storage) => storage.name)));\n    const promises = dbNames.map((dbName) => {\n      return new Promise<void>((resolve, reject) => {\n        const deleteRequest = indexedDB.deleteDatabase(dbName);\n\n        deleteRequest.onerror = () => {\n          reject();\n        };\n\n        deleteRequest.onsuccess = () => {\n          resolve();\n        };\n      });\n    });\n\n    return Promise.all(promises);\n  } */\n\n  public delete(entryName: string | string[], storeName?: StoreName): Promise<void> {\n    // return Promise.resolve();\n    const isArray = Array.isArray(entryName);\n    if(!isArray) {\n      entryName = [].concat(entryName);\n    }\n\n    return this.getObjectStore('readwrite', (objectStore) => {\n      const promises = (entryName as string[]).map((entryName) => objectStore.delete(entryName));\n      return isArray ? promises : promises[0];\n    }, DEBUG ? 'delete: ' + (entryName as string[]).join(', ') : '', storeName);\n  }\n\n  public clear(storeName?: StoreName): Promise<void> {\n    return this.getObjectStore('readwrite', (objectStore) => objectStore.clear(), DEBUG ? 'clear' : '', storeName);\n  }\n\n  public save(entryName: string | string[], value: any | any[], storeName?: StoreName) {\n    // const handleError = (error: Error) => {\n    //   this.log.error('save: transaction error:', entryName, value, db, error, error && error.name);\n    //   if((!error || error.name === 'InvalidStateError')/*  && false */) {\n    //     setTimeout(() => {\n    //       this.save(entryName, value);\n    //     }, 2e3);\n    //   } else {\n    //     //console.error('IndexedDB saveFile transaction error:', error, error && error.name);\n    //   }\n    // };\n\n    const isArray = Array.isArray(entryName);\n    if(!isArray) {\n      entryName = [].concat(entryName);\n      value = [].concat(value);\n    }\n\n    return this.getObjectStore('readwrite', (objectStore) => {\n      const promises = (entryName as string[]).map((entryName, idx) => objectStore.put(value[idx], entryName));\n      return isArray ? promises : promises[0];\n    }, DEBUG ? 'save: ' + (entryName as string[]).join(', ') : '', storeName);\n  }\n\n  // public saveFile(fileName: string, blob: Blob | Uint8Array) {\n  //   //return Promise.resolve(blobConstruct([blob]));\n  //   if(!(blob instanceof Blob)) {\n  //     blob = blobConstruct(blob);\n  //   }\n\n  //   return this.save(fileName, blob);\n  // }\n\n  /* public saveFileBase64(db: IDBDatabase, fileName: string, blob: Blob | any): Promise<Blob> {\n    if(this.getBlobSize(blob) > 10 * 1024 * 1024) {\n      return Promise.reject();\n    }\n\n    if(!(blob instanceof Blob)) {\n      var safeMimeType = blobSafeMimeType(blob.type || 'image/jpeg');\n      var address = 'data:' + safeMimeType + ';base64,' + bytesToBase64(blob);\n      return this.storagePutB64String(db, fileName, address).then(() => {\n        return blob;\n      });\n    }\n\n    try {\n      var reader = new FileReader();\n    } catch (e) {\n      this.storageIsAvailable = false;\n      return Promise.reject();\n    }\n\n    let promise = new Promise<Blob>((resolve, reject) => {\n      reader.onloadend = () => {\n        this.storagePutB64String(db, fileName, reader.result as string).then(() => {\n          resolve(blob);\n        }, reject);\n      }\n\n      reader.onerror = reject;\n    });\n\n\n    try {\n      reader.readAsDataURL(blob);\n    } catch (e) {\n      this.storageIsAvailable = false;\n      return Promise.reject();\n    }\n\n    return promise;\n  }\n\n  public storagePutB64String(db: IDBDatabase, fileName: string, b64string: string) {\n    try {\n      var objectStore = db.transaction([this.storeName], 'readwrite')\n        .objectStore(this.storeName);\n      var request = objectStore.put(b64string, fileName);\n    } catch(error) {\n      this.storageIsAvailable = false;\n      return Promise.reject(error);\n    }\n\n    return new Promise((resolve, reject) => {\n      request.onsuccess = function(event) {\n        resolve();\n      };\n\n      request.onerror = reject;\n    });\n  }\n\n  public getBlobSize(blob: any) {\n    return blob.size || blob.byteLength || blob.length;\n  } */\n\n  public get<T>(entryName: string[], storeName?: StoreName): Promise<T[]>;\n  public get<T>(entryName: string, storeName?: StoreName): Promise<T>;\n  public get<T>(entryName: string | string[], storeName?: StoreName): Promise<T> | Promise<T[]> {\n    // return Promise.reject();\n\n    const isArray = Array.isArray(entryName);\n    if(!isArray) {\n      if(!entryName) {\n        return undefined;\n      }\n\n      entryName = [].concat(entryName);\n    } else if(!entryName.length) {\n      return Promise.resolve([]) as any;\n    }\n\n    return this.getObjectStore<T>('readonly', (objectStore) => {\n      const promises = (entryName as string[]).map((entryName) => objectStore.get(entryName));\n      return isArray ? promises : promises[0];\n    }, DEBUG ? 'get: ' + (entryName as string[]).join(', ') : '', storeName);\n  }\n\n  private getObjectStore<T>(\n    mode: IDBTransactionMode,\n    callback: (objectStore: IDBObjectStore) => IDBRequest | IDBRequest[],\n    log?: string,\n    storeName = this.storeName\n  ) {\n    let perf: number;\n\n    if(log) {\n      perf = performance.now();\n      this.log(log + ': start');\n    }\n\n    return this.idb.openDatabase().then((db) => {\n      return new Promise<T>((resolve, reject) => {\n        /* if(mode === 'readwrite') {\n          return;\n        } */\n\n        const transaction = db.transaction([storeName], mode);\n\n        const onError = () => {\n          clearTimeout(timeout);\n          reject(transaction.error);\n        };\n\n        // let resolved = false;\n        const onComplete = (/* what: string */) => {\n          clearTimeout(timeout);\n\n          if(log) {\n            this.log(log + ': end', performance.now() - perf/* , what */);\n          }\n\n          // if(resolved) {\n          //   return;\n          // }\n\n          // resolved = true;\n          const results = requests.map((r) => r.result);\n          resolve(isArray ? results : results[0]);\n        };\n\n        transaction.onerror = onError;\n\n        // * have to wait while clearing or setting something\n        const waitForTransactionComplete = mode === 'readwrite';\n        if(waitForTransactionComplete) {\n          transaction.oncomplete = () => onComplete(/* 'transaction' */);\n        }\n\n        const timeout = setTimeout(() => {\n          this.log.error('transaction not finished', transaction, log);\n        }, 10000);\n\n        /* transaction.addEventListener('abort', (e) => {\n          //handleError();\n          this.log.error('IndexedDB: transaction abort!', transaction.error);\n        }); */\n\n        const callbackResult = callback(transaction.objectStore(storeName));\n\n        const isArray = Array.isArray(callbackResult);\n        const requests: IDBRequest[] = isArray ? callbackResult : [].concat(callbackResult) as any;\n\n        if(waitForTransactionComplete) {\n          return;\n        }\n\n        const length = requests.length;\n        let left = length;\n\n        const onRequestFinished = () => {\n          if(transaction.error) {\n            return;\n          }\n\n          if(!--left) {\n            onComplete(/* 'requests' */);\n          }\n        };\n\n        for(let i = 0; i < length; ++i) {\n          const request = requests[i];\n          request.onerror = onError;\n          request.onsuccess = onRequestFinished;\n        }\n      });\n    });\n  }\n\n  public getAll<T>(storeName?: StoreName): Promise<T[]> {\n    return this.getObjectStore<T[]>('readonly', (objectStore) => objectStore.getAll(), DEBUG ? 'getAll' : '', storeName);\n  }\n\n  /* public getAllKeys(): Promise<Array<string>> {\n    console.time('getAllEntries');\n    return this.openDatabase().then((db) => {\n      var objectStore = db.transaction([this.storeName], 'readonly')\n        .objectStore(this.storeName);\n      var request = objectStore.getAllKeys();\n\n      return new Promise((resolve, reject) => {\n        request.onsuccess = function(event) {\n          // @ts-ignore\n          var result = event.target.result;\n          resolve(result);\n          console.timeEnd('getAllEntries');\n        }\n\n        request.onerror = reject;\n      });\n    });\n  } */\n\n  /* public isFileExists(fileName: string): Promise<boolean> {\n    console.time('isFileExists');\n    return this.openDatabase().then((db) => {\n      var objectStore = db.transaction([this.storeName], 'readonly')\n        .objectStore(this.storeName);\n      var request = objectStore.openCursor(fileName);\n\n      return new Promise((resolve, reject) => {\n        request.onsuccess = function(event) {\n          // @ts-ignore\n          var cursor = event.target.result;\n          resolve(!!cursor);\n          console.timeEnd('isFileExists');\n        }\n\n        request.onerror = reject;\n      });\n    });\n  } */\n\n  /* public getFileWriter(fileName: string, mimeType: string) {\n    var fakeWriter = FileManager.getFakeFileWriter(mimeType, (blob) => {\n      return this.saveFile(fileName, blob);\n    });\n\n    return Promise.resolve(fakeWriter);\n  } */\n}\n","import type ENVIRONMENT from '.';\n\nlet environment: typeof ENVIRONMENT;\nexport function getEnvironment() {\n  return environment;\n}\n\nexport function setEnvironment(env: typeof environment) {\n  return environment = env;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {Message, StickerSet, Update, NotifyPeer, PeerNotifySettings, PollResults, Poll, WebPage, GroupCall, GroupCallParticipant, ReactionCount, MessagePeerReaction, PhoneCall, Config, Reaction} from '../layer';\nimport type {Dialog, ForumTopic, MessagesStorageKey, MyMessage} from './appManagers/appMessagesManager';\nimport type {MyDialogFilter} from './storages/filters';\nimport type {Folder} from './storages/dialogs';\nimport type {UserTyping} from './appManagers/appProfileManager';\nimport type {MyDraftMessage} from './appManagers/appDraftsManager';\nimport type {ConnectionStatusChange} from './mtproto/connectionStatus';\nimport type {GroupCallId} from './appManagers/appGroupCallsManager';\nimport type {AppManagers} from './appManagers/managers';\nimport type {State} from '../config/state';\nimport type {Progress} from './appManagers/appDownloadManager';\nimport type {CallId} from './appManagers/appCallsManager';\nimport type {MyDocument} from './appManagers/appDocsManager';\nimport type {MTAppConfig} from './mtproto/appConfig';\nimport {NULL_PEER_ID, UserAuth} from './mtproto/mtproto_config';\nimport EventListenerBase from '../helpers/eventListenerBase';\nimport {MOUNT_CLASS_TO} from '../config/debug';\nimport MTProtoMessagePort from './mtproto/mtprotoMessagePort';\nimport {IS_WORKER} from '../helpers/context';\n\nexport type BroadcastEvents = {\n  'chat_full_update': ChatId,\n  'chat_update': ChatId,\n  'chat_toggle_forum': {chatId: ChatId, enabled: boolean},\n\n  'channel_update': ChatId,\n\n  'user_update': UserId,\n  'user_auth': UserAuth,\n  'user_full_update': UserId,\n\n  'peer_pinned_messages': {peerId: PeerId, mids?: number[], pinned?: boolean, unpinAll?: true},\n  'peer_pinned_hidden': {peerId: PeerId, maxId: number},\n  'peer_typings': {peerId: PeerId, threadId?: number, typings: UserTyping[]},\n  'peer_block': {peerId: PeerId, blocked: boolean},\n  'peer_title_edit': {peerId: PeerId, threadId?: number},\n  'peer_bio_edit': PeerId,\n  'peer_deleted': PeerId, // left chat, deleted user dialog, left channel\n  'peer_full_update': PeerId,\n\n  'filter_delete': MyDialogFilter,\n  'filter_update': MyDialogFilter,\n  'filter_new': MyDialogFilter,\n  'filter_order': number[],\n\n  'folder_unread': Omit<Folder, 'dialogs' | 'dispatchUnreadTimeout'>,\n\n  'dialog_draft': {peerId: PeerId, dialog: Dialog | ForumTopic, drop: boolean, draft: MyDraftMessage | undefined},\n  'dialog_unread': {peerId: PeerId, dialog: Dialog | ForumTopic},\n  'dialog_flush': {peerId: PeerId, dialog: Dialog},\n  'dialog_drop': Dialog | ForumTopic,\n  'dialog_migrate': {migrateFrom: PeerId, migrateTo: PeerId},\n  // 'dialog_top': Dialog,\n  'dialog_notify_settings': Dialog | ForumTopic,\n  // 'dialog_order': {dialog: Dialog, pos: number},\n  'dialogs_multiupdate': Map<PeerId, {dialog?: Dialog, topics?: Map<number, ForumTopic>}>,\n\n  'history_append': {storageKey: MessagesStorageKey, message: Message.message},\n  'history_update': {storageKey: MessagesStorageKey, message: MyMessage, sequential?: boolean},\n  'history_reply_markup': {peerId: PeerId},\n  'history_multiappend': MyMessage,\n  'history_delete': {peerId: PeerId, msgs: Set<number>},\n  'history_forbidden': PeerId,\n  'history_reload': PeerId,\n  // 'history_request': void,\n\n  'message_edit': {storageKey: MessagesStorageKey, peerId: PeerId, mid: number, message: MyMessage},\n  'message_sent': {storageKey: MessagesStorageKey, tempId: number, tempMessage: any, mid: number, message: MyMessage},\n  'message_error': {storageKey: MessagesStorageKey, tempId: number, error: ApiError},\n  'messages_views': {peerId: PeerId, mid: number, views: number}[],\n  'messages_reactions': {message: Message.message, changedResults: ReactionCount[]}[],\n  'messages_pending': void,\n  'messages_read': void,\n  'messages_downloaded': {peerId: PeerId, mids: number[]},\n  'messages_media_read': {peerId: PeerId, mids: number[]},\n\n  'replies_updated': Message.message,\n\n  'scheduled_new': Message.message,\n  'scheduled_delete': {peerId: PeerId, mids: number[]},\n\n  'album_edit': {peerId: PeerId, groupId: string, deletedMids: number[], messages: Message.message[]},\n\n  'stickers_installed': StickerSet.stickerSet,\n  'stickers_deleted': StickerSet.stickerSet,\n  'stickers_updated': {type: 'recent' | 'faved', stickers: MyDocument[]},\n  'stickers_top': Long,\n  'sticker_updated': {type: 'recent' | 'faved', document: MyDocument, faved: boolean},\n\n  'state_cleared': void,\n  'state_synchronized': ChatId | void,\n  'state_synchronizing': ChatId | void,\n\n  'contacts_update': UserId,\n  'avatar_update': {peerId: PeerId, threadId?: number},\n  'poll_update': {poll: Poll, results: PollResults},\n  'invalidate_participants': ChatId,\n  // 'channel_settings': {channelId: number},\n  'webpage_updated': {id: WebPage.webPage['id'], msgs: {peerId: PeerId, mid: number, isScheduled: boolean}[]},\n\n  'connection_status_change': ConnectionStatusChange,\n  'settings_updated': {key: string, value: any, settings: State['settings']},\n  'draft_updated': {peerId: PeerId, threadId: number, draft: MyDraftMessage | undefined, force?: boolean},\n\n  'background_change': void,\n\n  'privacy_update': Update.updatePrivacy,\n\n  'notify_settings': Update.updateNotifySettings,\n  'notify_peer_type_settings': {key: Exclude<NotifyPeer['_'], 'notifyPeer'>, settings: PeerNotifySettings},\n\n  'notification_reset': string,\n  'notification_cancel': string,\n\n  'language_change': string,\n\n  'theme_change': void,\n\n  'media_play': void,\n\n  'emoji_recent': AppEmoji,\n\n  'download_progress': Progress,\n  'document_downloading': DocId,\n  'document_downloaded': DocId,\n\n  'choosing_sticker': boolean\n\n  'group_call_update': GroupCall,\n  'group_call_participant': {groupCallId: GroupCallId, participant: GroupCallParticipant},\n  // 'group_call_video_track_added': {instance: GroupCallInstance}\n\n  'call_update': PhoneCall,\n  'call_signaling': {callId: CallId, data: Uint8Array},\n\n  'quick_reaction': Reaction,\n\n  'service_notification': Update.updateServiceNotification,\n\n  'logging_out': void,\n\n  'payment_sent': {peerId: PeerId, mid: number, receiptMessage: Message.messageService}\n\n  'premium_toggle': boolean,\n  'premium_toggle_private': {isNew: boolean, isPremium: boolean},\n\n  'config': Config,\n  'app_config': MTAppConfig\n};\n\nexport type BroadcastEventsListeners = {\n  [name in keyof BroadcastEvents]: (e: BroadcastEvents[name]) => void\n};\n\nexport class RootScope extends EventListenerBase<BroadcastEventsListeners> {\n  public myId: PeerId;\n  private connectionStatus: {[name: string]: ConnectionStatusChange};\n  public settings: State['settings'];\n  public managers: AppManagers;\n  public premium: boolean;\n\n  constructor() {\n    super();\n\n    this.myId = NULL_PEER_ID;\n    this.connectionStatus = {};\n    this.premium = false;\n\n    this.addEventListener('user_auth', ({id}) => {\n      this.myId = id.toPeerId();\n    });\n\n    this.addEventListener('premium_toggle_private', ({isNew, isPremium}) => {\n      this.premium = isPremium;\n\n      if(!isNew) {\n        this.dispatchEventSingle('premium_toggle', isPremium);\n      }\n    });\n\n    this.addEventListener('connection_status_change', (status) => {\n      this.connectionStatus[status.name] = status;\n    });\n\n    this.dispatchEvent = (e, ...args) => {\n      super.dispatchEvent(e, ...args);\n      MTProtoMessagePort.getInstance().invokeVoid('event', {name: e as string, args});\n    };\n\n    if(!IS_WORKER) {\n      this.addEventListener('settings_updated', ({settings}) => {\n        this.settings = settings;\n      });\n    }\n  }\n\n  public getConnectionStatus() {\n    return this.connectionStatus;\n  }\n\n  public getPremium() {\n    return this.premium;\n  }\n\n  public dispatchEventSingle(...args: any[]) {\n    // @ts-ignore\n    super.dispatchEvent(...args);\n  }\n}\n\nconst rootScope = new RootScope();\nMOUNT_CLASS_TO.rootScope = rootScope;\nexport default rootScope;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {State} from '../../config/state';\nimport rootScope from '../rootScope';\nimport stateStorage from '../stateStorage';\nimport setDeepProperty from '../../helpers/object/setDeepProperty';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\n\nexport class AppStateManager {\n  private state: State = {} as any;\n  private storage = stateStorage;\n\n  // ! for mtproto worker use only\n  public newVersion: string;\n  public oldVersion: string;\n  public userId: UserId;\n\n  public getState() {\n    return Promise.resolve(this.state);\n  }\n\n  public setByKey(key: string, value: any) {\n    setDeepProperty(this.state, key, value);\n\n    const first = key.split('.')[0] as keyof State;\n    if(first === 'settings') {\n      rootScope.dispatchEvent('settings_updated', {key, value, settings: this.state.settings});\n    }\n\n    this.pushToState(first, this.state[first]);\n  }\n\n  public pushToState<T extends keyof State>(key: T, value: State[T], direct = true, onlyLocal?: boolean) {\n    if(direct) {\n      this.state[key] = value;\n    }\n\n    this.setKeyValueToStorage(key, value, onlyLocal);\n  }\n\n  public setKeyValueToStorage<T extends keyof State>(key: T, value: State[T] = this.state[key], onlyLocal?: boolean) {\n    MTProtoMessagePort.getInstance<false>().invokeVoid('mirror', {name: 'state', key, value});\n\n    this.storage.set({\n      [key]: value\n    }, onlyLocal);\n  }\n\n  /* public resetState() {\n    for(let i in this.state) {\n      // @ts-ignore\n      this.state[i] = false;\n    }\n    sessionStorage.set(this.state).then(() => {\n      location.reload();\n    });\n  } */\n}\n\nconst appStateManager = new AppStateManager();\nexport default appStateManager;\n","import getDeepProperty from './getDeepProperty';\n\nexport default function setDeepProperty(object: any, key: string, value: any) {\n  const splitted = key.split('.');\n  getDeepProperty(object, splitted.slice(0, -1).join('.'))[splitted.pop()] = value;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport pause from '../../../helpers/schedulers/pause';\nimport {DcId} from '../../../types';\nimport {logger, LogTypes} from '../../logger';\nimport type MTPNetworker from '../networker';\nimport MTTransport from './transport';\nimport Modes from '../../../config/modes';\n\n                   \nimport transportController from './controller';\n// import networkStats from '../networkStats';\n         \n\nexport default class HTTP implements MTTransport {\n  public networker: MTPNetworker;\n  private log: ReturnType<typeof logger>;\n\n  private pending: Array<{\n    resolve: (body: Uint8Array) => void,\n    reject: any,\n    body: Uint8Array\n  }> = [];\n  private releasing: boolean;\n\n  public connected: boolean;\n  private destroyed: boolean;\n  private debug: boolean;\n\n  constructor(protected dcId: DcId, protected url: string, logSuffix: string) {\n    this.debug = Modes.debug && false;\n\n    let logTypes = LogTypes.Error | LogTypes.Log;\n    if(this.debug) logTypes |= LogTypes.Debug;\n\n    this.log = logger(`HTTP-${dcId}` + logSuffix, logTypes);\n    this.log('constructor');\n\n    this.connected = false;\n  }\n\n  public _send(body: Uint8Array, mode?: RequestMode) {\n    const length = body.length;\n    this.debug && this.log.debug('-> body length to send:', length);\n\n    // networkStats.addSent(this.dcId, length);\n    return fetch(this.url, {method: 'POST', body, mode}).then((response) => {\n      if(response.status !== 200 && !mode) {\n        response.arrayBuffer().then((buffer) => {\n          this.log.error('not 200',\n            new TextDecoder('utf-8').decode(new Uint8Array(buffer)));\n        });\n\n        throw response;\n      }\n\n      this.setConnected(true);\n\n      // * test resending by dropping random request\n      // if(Math.random() > .5) {\n      //   throw 'asd';\n      // }\n\n      return response.arrayBuffer().then((buffer) => {\n        // networkStats.addReceived(this.dcId, buffer.byteLength);\n        return new Uint8Array(buffer);\n      });\n    }, (err) => {\n      this.setConnected(false);\n      throw err;\n    });\n  }\n\n  private setConnected(connected: boolean) {\n    if(this.connected === connected || this.destroyed) {\n      return;\n    }\n\n    this.connected = connected;\n\n                       \n    transportController.setTransportValue('https', connected);\n             \n  }\n\n  public destroy() {\n    this.setConnected(false);\n    this.destroyed = true;\n    this.pending.forEach((pending) => pending.reject());\n    this.pending.length = 0;\n  }\n\n  public send(body: Uint8Array) {\n    if(this.networker) {\n      return this._send(body);\n    } else {\n      const promise = new Promise<typeof body>((resolve, reject) => {\n        this.pending.push({resolve, reject, body});\n      });\n\n      this.releasePending();\n\n      return promise;\n    }\n  }\n\n  private async releasePending() {\n    if(this.releasing) return;\n\n    this.releasing = true;\n    // this.log('-> messages to send:', this.pending.length);\n    for(let i = 0; i < this.pending.length; ++i) {\n      const pending = this.pending[i];\n      const {body, resolve} = pending;\n\n      try {\n        const result = await this._send(body);\n        resolve(result);\n        this.pending.splice(i, 1);\n      } catch(err) {\n        this.log.error('Send plain request error:', err);\n        await pause(5000);\n      }\n\n      --i;\n    }\n\n    this.releasing = false;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {logger, LogTypes} from '../../logger';\nimport Modes from '../../../config/modes';\nimport EventListenerBase from '../../../helpers/eventListenerBase';\nimport {MTConnection} from './transport';\n\n// let closeSocketBefore = Date.now() + 30e3;\n// let closeSocketAfter = Date.now() + 10e3;\n\nexport default class Socket extends EventListenerBase<{\n  open: () => void,\n  message: (buffer: ArrayBuffer) => any,\n  close: () => void,\n}> implements MTConnection {\n  private ws: WebSocket;\n  private log: ReturnType<typeof logger>;\n  private debug = Modes.debug && false;\n\n  constructor(protected dcId: number, protected url: string, logSuffix: string) {\n    super();\n\n    let logTypes = LogTypes.Error | LogTypes.Log;\n    if(this.debug) logTypes |= LogTypes.Debug;\n    this.log = logger(`WS-${dcId}` + logSuffix, logTypes);\n    this.log('constructor');\n    this.connect();\n\n    return this;\n  }\n\n  private removeListeners() {\n    if(!this.ws) {\n      return;\n    }\n\n    this.ws.removeEventListener('open', this.handleOpen);\n    this.ws.removeEventListener('close', this.handleClose);\n    this.ws.removeEventListener('error', this.handleError);\n    this.ws.removeEventListener('message', this.handleMessage);\n    this.ws = undefined;\n  }\n\n  private connect() {\n    this.ws = new WebSocket(this.url, 'binary');\n    this.ws.binaryType = 'arraybuffer';\n    this.ws.addEventListener('open', this.handleOpen);\n    this.ws.addEventListener('close', this.handleClose);\n    this.ws.addEventListener('error', this.handleError);\n    this.ws.addEventListener('message', this.handleMessage);\n\n    // if(Date.now() < closeSocketBefore) {\n    // if(Date.now() >= closeSocketAfter) {\n    //   this.ws.close();\n    // }\n  }\n\n  public close() {\n    if(!this.ws) {\n      return;\n    }\n\n    this.log('close execution');\n\n    try {\n      this.ws.close();\n    } catch(err) {\n\n    }\n    this.handleClose();\n  }\n\n  private handleOpen = () => {\n    this.log('opened');\n\n    this.debug && this.log.debug('sending init packet');\n    this.dispatchEvent('open');\n  };\n\n  private handleError = (e: Event) => {\n    this.log.error('handleError', e);\n    this.close();\n  };\n\n  private handleClose = (e?: CloseEvent) => {\n    this.log('closed', e/* , this.pending, this.ws.bufferedAmount */);\n\n    this.removeListeners();\n    this.dispatchEvent('close');\n  };\n\n  private handleMessage = (event: MessageEvent) => {\n    this.debug && this.log.debug('<-', 'handleMessage', /* event,  */event.data.byteLength);\n\n    this.dispatchEvent('message', event.data as ArrayBuffer);\n  };\n\n  public send = (body: Uint8Array) => {\n    this.debug && this.log.debug('-> body length to send:', body.length);\n\n    this.ws.send(body);\n  };\n}\n","export default function randomize<T extends ArrayBufferView>(arr: T) {\n  if(crypto && 'getRandomValues' in crypto) {\n    crypto.getRandomValues(arr);\n  } else {\n    throw new Error('NO_SECURE_RANDOM');\n  }\n\n  return arr;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// import aesjs from 'aes-js';\nimport randomize from '../../../helpers/array/randomize';\nimport cryptoMessagePort from '../../crypto/cryptoMessagePort';\nimport {Codec} from './codec';\n\n/*\n@cryptography/aes не работает с массивами которые не кратны 4, поэтому использую intermediate а не abridged\n*/\nexport default class Obfuscation {\n  /* private enc: aesjs.ModeOfOperation.ModeOfOperationCTR;\n  private dec: aesjs.ModeOfOperation.ModeOfOperationCTR; */\n\n  private id: number;\n  private idPromise: Promise<Obfuscation['id']>;\n  private process: (data: Uint8Array, operation: 'encrypt' | 'decrypt') => ReturnType<Obfuscation['_process']>;\n\n  // private cryptoEncKey: CryptoKey;\n  // private cryptoDecKey: CryptoKey;\n  // private cryptoKey: CryptoKey;\n\n  // private encIv: Uint8Array;\n  // private decIv: Uint8Array;\n\n  // private decIvCounter: Counter;\n\n  public async init(codec: Codec) {\n    if(this.idPromise !== undefined) {\n      this.release();\n    }\n\n    const initPayload = new Uint8Array(64);\n    randomize(initPayload);\n\n    while(true) {\n      const val = (initPayload[3] << 24) | (initPayload[2] << 16) | (initPayload[1] << 8) | initPayload[0];\n      const val2 = (initPayload[7] << 24) | (initPayload[6] << 16) | (initPayload[5] << 8) | initPayload[4];\n      if(initPayload[0] !== 0xef &&\n          val !== 0x44414548 &&\n          val !== 0x54534f50 &&\n          val !== 0x20544547 &&\n          val !== 0x4954504f &&\n          val !== 0xeeeeeeee &&\n          val !== 0xdddddddd &&\n          val2 !== 0x00000000) {\n        // initPayload[56] = initPayload[57] = initPayload[58] = initPayload[59] = transport;\n        break;\n      }\n      randomize(initPayload);\n    }\n\n    // //////////////////////initPayload.subarray(60, 62).hex = dcId;\n    /* initPayload.set(new Uint8Array([161, 208, 67, 71, 118, 109, 20, 111, 113, 255, 134, 10, 159, 241, 7, 44, 217, 82, 187, 76, 108, 131, 200, 186, 33, 57, 177, 251, 52, 34, 18, 54, 65, 105, 37, 89, 38, 20, 47, 168, 126, 181, 24, 138, 212, 68, 60, 150, 225, 37, 181, 4, 201, 50, 72, 151, 168, 143, 204, 169, 81, 187, 241, 23]));\n    console.log('initPayload', initPayload); */\n\n    const reversedPayload = initPayload.slice().reverse();\n\n    const encKey = initPayload.slice(8, 40);\n    const encIv = /* this.encIv =  */initPayload.slice(40, 56);\n    const decKey = reversedPayload.slice(8, 40);\n    const decIv = /* this.decIv =  */reversedPayload.slice(40, 56);\n\n    /* this.enc = new aesjs.ModeOfOperation.ctr(encKey, new aesjs.Counter(encIv as any));\n    this.dec = new aesjs.ModeOfOperation.ctr(decKey, new aesjs.Counter(decIv as any)); */\n\n    // console.log('encKey', encKey.hex, encIv.hex);\n    // console.log('decKey', decKey.hex, decIv.hex);\n\n    const idPromise = this.idPromise = cryptoMessagePort.invokeCrypto('aes-ctr-prepare', {\n      encKey,\n      encIv,\n      decKey,\n      decIv\n    });\n\n    this.process = async(data, operation) => {\n      await idPromise;\n      return this._process(data, operation);\n    };\n\n    this.id = await idPromise;\n\n    this.process = this._process;\n\n    // this.decIvCounter = new Counter(this.decIv);\n    /* const key = this.cryptoEncKey = await subtle.importKey(\n      'raw',\n      encKey,\n      {name: 'AES-CTR'},\n      false,\n      ['encrypt']\n    ); */\n\n    // this.cryptoDecKey = await subtle.importKey(\n    //   'raw',\n    //   decKey,\n    //   {name: 'AES-CTR'},\n    //   false,\n    //   ['encrypt']\n    // );\n\n    // this.cryptoKey = await subtle.importKey(\n    //   'raw',\n    //   encKey,\n    //   {name: 'AES-CTR'},\n    //   false,\n    //   ['encrypt', 'decrypt']\n    // );\n\n    initPayload.set(codec.obfuscateTag, 56);\n    const encrypted = await this.encode(initPayload.slice());\n\n    // console.log('encrypted', encrypted);\n\n    initPayload.set(encrypted.slice(56, 64), 56);\n\n    return initPayload;\n  }\n\n  /* public encode(payload: Uint8Array) {\n    let startTime = performance.now();\n    let res = this.enc.encrypt(payload);\n    let time = performance.now() - startTime;\n\n    try {\n      startTime = performance.now();\n      let arr = this.encNew.encrypt(payload);\n      //let resNew = bytesFromWords({words: arr, sigBytes: arr.length});\n      let resNew = new Uint8Array(bytesFromWordss(arr));\n      let time2 = performance.now() - startTime;\n      console.log('Obfuscation: encode comparison:', res, arr, resNew, res.hex === resNew.hex, time2 < time);\n    } catch(err) {\n      console.error('Obfuscation: error:', err);\n    }\n\n    return res;\n  }\n\n  public decode(payload: Uint8Array) {\n    let res = this.dec.encrypt(payload);\n\n    try {\n      let arr = this.decNew.decrypt(payload);\n      //let resNew = bytesFromWords({words: arr, sigBytes: arr.length});\n      let resNew = new Uint8Array(bytesFromWordss(arr));\n      console.log('Obfuscation: decode comparison:', res, arr, resNew, res.hex === resNew.hex);\n    } catch(err) {\n      console.error('Obfuscation: error:', err);\n    }\n\n    return res;\n  } */\n\n  private _process = (data: Uint8Array, operation: 'encrypt' | 'decrypt') => {\n    return cryptoMessagePort.invokeCryptoNew({\n      method: 'aes-ctr-process',\n      args: [{id: this.id, data, operation}],\n      transfer: [data.buffer]\n    }) as Promise<Uint8Array>;\n  };\n\n  public encode(payload: Uint8Array) {\n    /* return subtle.encrypt({\n        name: 'AES-CTR',\n        counter: this.encIv,\n        length: 64\n      },\n      this.cryptoEncKey,\n      payload\n    ); */\n    return this.process(payload, 'encrypt');\n  }\n\n  public decode(payload: Uint8Array) {\n    return this.process(payload, 'decrypt');\n  }\n\n  public async release() {\n    const idPromise = this.idPromise;\n    if(idPromise === undefined) {\n      return;\n    }\n\n    this.id = undefined;\n    this.idPromise = undefined;\n\n    const id = await idPromise;\n    cryptoMessagePort.invokeCrypto('aes-ctr-destroy', id);\n  }\n\n  public destroy() {\n    this.release();\n  }\n\n  // public encode(payload: Uint8Array) {\n  //   let res = this.encNew.encrypt(payload);\n  //   let bytes = new Uint8Array(bytesFromWordss(res));\n\n  //   return bytes;\n  // }\n\n  // public async decode(payload: Uint8Array) {\n  //   const counter = this.decIvCounter.counter.slice();\n  //   this.decIvCounter.increment();\n\n  //   const n: ArrayBuffer = await subtle.encrypt({\n  //       name: 'AES-CTR',\n  //       counter: counter,\n  //       length: 64\n  //     },\n  //     this.cryptoDecKey,\n  //     payload\n  //   );\n\n  //   const decoded = this.decNew.update(payload);\n\n  //   console.log('decode', bytesToHex(decoded), 'new', n, bytesToHex(new Uint8Array(n)));\n\n  //   return decoded;\n  // }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// import { bytesFromHex, addPadding } from \"../../bin_utils\";\nimport {Codec} from './codec';\n\nclass AbridgedPacketCodec implements Codec {\n  public tag = 0xef;\n  public obfuscateTag = new Uint8Array([this.tag, this.tag, this.tag, this.tag]);\n\n  public encodePacket(data: Uint8Array) {\n    const len = data.byteLength >> 2;\n    let header: Uint8Array;\n    if(len < 127) {\n      header = new Uint8Array([len]);\n    } else { // Length: payload length, divided by four, and encoded as 3 length bytes (little endian)\n      // header = new Uint8Array([0x7f, ...addPadding(bytesFromHex(len.toString(16)).reverse(), 3, true)/* .reverse() */]);\n      header = new Uint8Array([0x7f, len & 0xFF, (len >> 8) & 0xFF, (len >> 16) & 0xFF]);\n      // console.log('got nobody cause im braindead', header, len);\n    }\n\n    return header.concat(data);\n    // return new Uint8Array([...header, ...data]);\n  }\n\n  public readPacket(data: Uint8Array) {\n    let length = data[0];\n    if(length >= 127) { // 0x7f\n      length = data[1] | (data[2] << 8) | (data[3] << 16);\n\n      return data.slice(4, length << 2 + 1); // need +1\n    }\n\n    return data.slice(1, length << 2 + 1); // need +1\n  }\n}\n\nexport default new AbridgedPacketCodec();\n","export default function bytesToHex(bytes: ArrayLike<number>) {\n  const length = bytes.length;\n  const arr: string[] = new Array(length);\n  for(let i = 0; i < length; ++i) {\n    arr[i] = (bytes[i] < 16 ? '0' : '') + (bytes[i] || 0).toString(16);\n  }\n  return arr.join('');\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport Modes from '../../../config/modes';\nimport {logger, LogTypes} from '../../logger';\nimport MTPNetworker from '../networker';\nimport Obfuscation from './obfuscation';\nimport MTTransport, {MTConnection, MTConnectionConstructable} from './transport';\n// import intermediatePacketCodec from './intermediate';\nimport abridgedPacketCodec from './abridged';\n// import paddedIntermediatePacketCodec from './padded';\nimport {ConnectionStatus} from '../connectionStatus';\n\n                   \nimport transportController from './controller';\nimport bytesToHex from '../../../helpers/bytes/bytesToHex';\n// import networkStats from '../networkStats';\nimport ctx from '../../../environment/ctx';\n         \n\nexport default class TcpObfuscated implements MTTransport {\n  private codec = abridgedPacketCodec;\n  private obfuscation = new Obfuscation();\n  public networker: MTPNetworker;\n\n  private pending: Array<Partial<{\n    resolve: any,\n    reject: any,\n    body: Uint8Array,\n    encoded?: Uint8Array,\n    bodySent: boolean\n  }>> = [];\n\n  private debug = Modes.debug && false/* true */;\n  private log: ReturnType<typeof logger>;\n  public connected = false;\n  private lastCloseTime: number;\n  public connection: MTConnection;\n\n  private autoReconnect = true;\n  private reconnectTimeout: number;\n  private releasingPending: boolean;\n\n  // private debugPayloads: MTPNetworker['debugRequests'] = [];\n\n  constructor(\n    private Connection: MTConnectionConstructable,\n    private dcId: number,\n    private url: string,\n    private logSuffix: string,\n    private retryTimeout: number\n  ) {\n    let logTypes = LogTypes.Error | LogTypes.Log;\n    if(this.debug) logTypes |= LogTypes.Debug;\n    this.log = logger(`TCP-${dcId}` + logSuffix, logTypes);\n    this.log('constructor');\n\n    this.connect();\n  }\n\n  private onOpen = async() => {\n    this.connected = true;\n\n                       \n    transportController.setTransportOpened('websocket');\n             \n\n    const initPayload = await this.obfuscation.init(this.codec);\n    if(!this.connected) {\n      return;\n    }\n\n    this.connection.send(initPayload);\n\n    if(this.networker) {\n      this.pending.length = 0; // ! clear queue and reformat messages to container, because if sending simultaneously 10+ messages, connection will die\n      this.networker.setConnectionStatus(ConnectionStatus.Connected);\n      this.networker.cleanupSent();\n      this.networker.resend();\n    }/*  else {\n      for(const pending of this.pending) {\n        if(pending.encoded && pending.body) {\n          pending.encoded = this.encodeBody(pending.body);\n        }\n      }\n    } */\n\n    setTimeout(() => {\n      this.releasePending();\n    }, 0);\n  };\n\n  private onMessage = async(buffer: ArrayBuffer) => {\n    // networkStats.addReceived(this.dcId, buffer.byteLength);\n\n    let data = await this.obfuscation.decode(new Uint8Array(buffer));\n    data = this.codec.readPacket(data);\n\n    if(this.networker) { // authenticated!\n      // this.pending = this.pending.filter((p) => p.body); // clear pending\n\n      this.debug && this.log.debug('redirecting to networker', data.length);\n      this.networker.parseResponse(data).then((response) => {\n        this.debug && this.log.debug('redirecting to networker response:', response);\n\n        try {\n          this.networker.processMessage(response.response, response.messageId, response.sessionId);\n        } catch(err) {\n          this.log.error('handleMessage networker processMessage error', err);\n        }\n\n        // this.releasePending();\n      }).catch((err) => {\n        this.log.error('handleMessage networker parseResponse error', err);\n      });\n\n      // this.dd();\n      return;\n    }\n\n    // console.log('got hex:', data.hex);\n    const pending = this.pending.shift();\n    if(!pending) {\n      this.debug && this.log.debug('no pending for res:', bytesToHex(data));\n      return;\n    }\n\n    pending.resolve(data);\n  };\n\n  private onClose = () => {\n    this.clear();\n\n    let needTimeout: number, retryAt: number;\n    if(this.autoReconnect) {\n      const time = Date.now();\n      const diff = time - this.lastCloseTime;\n      needTimeout = !isNaN(diff) && diff < this.retryTimeout ? this.retryTimeout - diff : 0;\n      retryAt = time + needTimeout;\n    }\n\n    if(this.networker) {\n      this.networker.setConnectionStatus(ConnectionStatus.Closed, retryAt);\n      this.pending.length = 0;\n    }\n\n    if(this.autoReconnect) {\n      this.log('will try to reconnect after timeout:', needTimeout / 1000);\n      this.reconnectTimeout = ctx.setTimeout(this.reconnect, needTimeout);\n    } else {\n      this.log('reconnect isn\\'t needed');\n    }\n  };\n\n  public clear() {\n                       \n    if(this.connected) {\n      transportController.setTransportClosed('websocket');\n    }\n             \n\n    this.connected = false;\n\n    if(this.connection) {\n      this.connection.removeEventListener('open', this.onOpen);\n      this.connection.removeEventListener('close', this.onClose);\n      this.connection.removeEventListener('message', this.onMessage);\n      this.connection = undefined;\n    }\n  }\n\n  /**\n   * invoke only when closed\n   */\n  public reconnect = () => {\n    if(this.reconnectTimeout !== undefined) {\n      clearTimeout(this.reconnectTimeout);\n      this.reconnectTimeout = undefined;\n    }\n\n    if(this.connection) {\n      return;\n    }\n\n    this.log('trying to reconnect...');\n    this.lastCloseTime = Date.now();\n\n    if(!this.networker) {\n      for(const pending of this.pending) {\n        if(pending.bodySent) {\n          pending.bodySent = false;\n        }\n      }\n    } else {\n      this.networker.setConnectionStatus(ConnectionStatus.Connecting);\n    }\n\n    this.connect();\n  }\n\n  public forceReconnect() {\n    this.close();\n    this.reconnect();\n  }\n\n  public destroy() {\n    this.setAutoReconnect(false);\n    this.close();\n\n    if(this.obfuscation) {\n      this.obfuscation.destroy();\n    }\n\n    this.pending.forEach((pending) => {\n      if(pending.reject) {\n        pending.reject();\n      }\n    });\n    this.pending.length = 0;\n  }\n\n  public close() {\n    const connection = this.connection;\n    if(connection) {\n      const connected = this.connected;\n      this.clear();\n      if(connected) { // wait for buffered messages if they are there\n        connection.addEventListener('message', this.onMessage);\n        connection.addEventListener('close', () => {\n          connection.removeEventListener('message', this.onMessage);\n        }, {once: true});\n        connection.close();\n      }\n    }\n  }\n\n  /**\n   * Will connect if enable and disconnected \\\n   * Will reset reconnection timeout if disable\n   */\n  public setAutoReconnect(enable: boolean) {\n    this.autoReconnect = enable;\n\n    if(!enable) {\n      if(this.reconnectTimeout !== undefined) {\n        clearTimeout(this.reconnectTimeout);\n        this.reconnectTimeout = undefined;\n      }\n    } else if(!this.connection && this.reconnectTimeout === undefined) {\n      this.reconnect();\n    }\n  }\n\n  private connect() {\n    if(this.connection) {\n      this.close();\n    }\n\n    this.connection = new this.Connection(this.dcId, this.url, this.logSuffix);\n    this.connection.addEventListener('open', this.onOpen);\n    this.connection.addEventListener('close', this.onClose);\n    this.connection.addEventListener('message', this.onMessage);\n  }\n\n  public changeUrl(url: string) {\n    if(this.url === url) {\n      return;\n    }\n\n    this.url = url;\n    this.forceReconnect();\n  }\n\n  private encodeBody(body: Uint8Array) {\n    const toEncode = this.codec.encodePacket(body);\n\n    // this.log('send before obf:', /* body.hex, nonce.hex, */ toEncode.hex);\n    const encoded = this.obfuscation.encode(toEncode);\n    // this.log('send after obf:', enc.hex);\n\n    return encoded;\n  }\n\n  public send(body: Uint8Array) {\n    this.debug && this.log.debug('-> body length to pending:', body.length);\n\n    const encoded: typeof body = /* this.connected ? this.encodeBody(body) :  */undefined;\n\n    // return;\n\n    if(this.networker) {\n      this.pending.push({body, encoded});\n      this.releasePending();\n    } else {\n      const promise = new Promise<typeof body>((resolve, reject) => {\n        this.pending.push({resolve, reject, body, encoded});\n      });\n\n      this.releasePending();\n\n      return promise;\n    }\n  }\n\n  private async releasePending(/* tt = false */) {\n    if(!this.connected || this.releasingPending) {\n      // this.connect();\n      return;\n    }\n\n    this.releasingPending = true;\n\n    /* if(!tt) {\n      this.releasePendingDebounced();\n      return;\n    } */\n\n    // this.log('-> messages to send:', this.pending.length);\n    let length = this.pending.length;\n    let sent = false;\n    // for(let i = length - 1; i >= 0; --i) {\n    for(let i = 0; i < length; ++i) {\n      const pending = this.pending[i];\n      if(!pending) {\n        break;\n      }\n\n      const {body, bodySent} = pending;\n      if(body && !bodySent) {\n        // this.debugPayloads.push({before: body.slice(), after: enc});\n\n        this.debug && this.log.debug('-> body length to send:', body.length);\n\n        // if(!encoded) {\n        //   encoded = pending.encoded = this.encodeBody(body);\n        // }\n\n        const encoded = pending.encoded ??= await this.encodeBody(body);\n        if(!this.connected) {\n          break;\n        }\n\n        // networkStats.addSent(this.dcId, encoded.byteLength);\n        this.connection.send(encoded);\n\n        if(!pending.resolve) { // remove if no response needed\n          this.pending.splice(i--, 1);\n          length--;\n        } else {\n          pending.bodySent = true;\n        }\n\n        sent = true;\n        // delete pending.body;\n      }\n    }\n\n    this.releasingPending = undefined;\n\n    if(this.pending.length && sent) {\n      this.releasePending();\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport MTTransport, {MTConnectionConstructable} from './transports/transport';\nimport Modes from '../../config/modes';\nimport App from '../../config/app';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\n\n                       \nimport HTTP from './transports/http';\n         \n\n                     \nimport Socket from './transports/websocket';\nimport TcpObfuscated from './transports/tcpObfuscated';\nimport {IS_WEB_WORKER} from '../../helpers/context';\nimport {DcId} from '../../types';\nimport {getEnvironment} from '../../environment/utils';\n\n                                            \n                                                       \n         \n\n         \n\nexport type TransportType = 'websocket' | 'https' | 'http';\nexport type ConnectionType = 'client' | 'download' | 'upload';\ntype Servers = {\n  [transportType in TransportType]: {\n    [connectionType in ConnectionType]: {\n      [dcId: DcId]: MTTransport[]\n    }\n  }\n};\n\nconst TEST_SUFFIX = Modes.test ? '_test' : '';\nconst PREMIUM_SUFFIX = '_premium';\n\nexport function getTelegramConnectionSuffix(connectionType: ConnectionType) {\n  return connectionType === 'client' ? '' : '-1';\n}\n\n                     \nexport function constructTelegramWebSocketUrl(dcId: DcId, connectionType: ConnectionType, premium?: boolean) {\n  const suffix = getTelegramConnectionSuffix(connectionType);\n  const path = connectionType !== 'client' ? 'apiws' + TEST_SUFFIX + (premium ? PREMIUM_SUFFIX : '') : ('apiws' + TEST_SUFFIX);\n  const chosenServer = `wss://${App.suffix.toLowerCase()}ws${dcId}${suffix}.web.telegram.org/${path}`;\n\n  return chosenServer;\n}\n         \n\nexport class DcConfigurator {\n  private sslSubdomains = ['pluto', 'venus', 'aurora', 'vesta', 'flora'];\n\n  private dcOptions = Modes.test ?\n    [\n      {id: 1, host: '149.154.175.10',  port: 80},\n      {id: 2, host: '149.154.167.40',  port: 80},\n      {id: 3, host: '149.154.175.117', port: 80}\n    ] :\n    [\n      {id: 1, host: '149.154.175.50',  port: 80},\n      {id: 2, host: '149.154.167.50',  port: 80},\n      {id: 3, host: '149.154.175.100', port: 80},\n      {id: 4, host: '149.154.167.91',  port: 80},\n      {id: 5, host: '149.154.171.5',   port: 80}\n    ];\n\n  public chosenServers: Servers = {} as any;\n\n                       \n  private transportSocket = (dcId: DcId, connectionType: ConnectionType, premium?: boolean) => {\n    const chosenServer = constructTelegramWebSocketUrl(dcId, connectionType, premium);\n    const logSuffix = connectionType === 'upload' ? '-U' : connectionType === 'download' ? '-D' : '';\n\n    const retryTimeout = connectionType === 'client' ? 10000 : 10000;\n\n    let oooohLetMeLive: MTConnectionConstructable;\n                                                \n    oooohLetMeLive = Socket;\n            \n                                                                                                                                                   \n             \n\n    return new TcpObfuscated(oooohLetMeLive, dcId, chosenServer, logSuffix, retryTimeout);\n  };\n           \n\n                         \n  private transportHTTP = (dcId: DcId, connectionType: ConnectionType, premium?: boolean) => {\n    let chosenServer: string;\n    if(Modes.ssl || !Modes.http) {\n      const suffix = getTelegramConnectionSuffix(connectionType);\n      const subdomain = this.sslSubdomains[dcId - 1] + suffix;\n      const path = Modes.test ? 'apiw_test1' : 'apiw1';\n      chosenServer = '/' + subdomain + '/' + path;\n    } else {\n      for(const dcOption of this.dcOptions) {\n        if(dcOption.id === dcId) {\n          chosenServer = 'http://' + dcOption.host + (dcOption.port !== 80 ? ':' + dcOption.port : '') + '/apiw1';\n          break;\n        }\n      }\n    }\n\n    const logSuffix = connectionType === 'upload' ? '-U' : connectionType === 'download' ? '-D' : '';\n    return new HTTP(dcId, chosenServer, logSuffix);\n  };\n           \n\n  public chooseServer(\n    dcId: DcId,\n    connectionType: ConnectionType = 'client',\n    transportType: TransportType = Modes.transport,\n    reuse = true,\n    premium?: boolean\n  ) {\n    /* if(transportType === 'websocket' && !Modes.multipleConnections) {\n      connectionType = 'client';\n    } */\n\n    if(!this.chosenServers.hasOwnProperty(transportType)) {\n      this.chosenServers[transportType] = {\n        client: {},\n        download: {},\n        upload: {}\n      };\n    }\n\n    const servers = this.chosenServers[transportType][connectionType];\n\n    if(!(dcId in servers)) {\n      servers[dcId] = [];\n    }\n\n    const transports = servers[dcId];\n\n    if(!transports.length || !reuse/*  || (upload && transports.length < 1) */) {\n      let transport: MTTransport;\n\n                                               \n      transport = (transportType === 'websocket' ? this.transportSocket : this.transportHTTP)(dcId, connectionType, premium);\n                            \n                                                                      \n              \n                                                                    \n               \n\n      if(!transport) {\n        console.error('No chosenServer!', dcId);\n        return null;\n      }\n\n      if(reuse) {\n        transports.push(transport);\n      }\n\n      return transport;\n    }\n\n    return transports[0];\n  }\n\n  public static removeTransport<T>(obj: any, transport: T) {\n    for(const transportType in obj) {\n      // @ts-ignore\n      for(const connectionType in obj[transportType]) {\n        // @ts-ignore\n        for(const dcId in obj[transportType][connectionType]) {\n          // @ts-ignore\n          const transports: T[] = obj[transportType][connectionType][dcId];\n          indexOfAndSplice(transports, transport);\n        }\n      }\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport App from '../../../config/app';\nimport deferredPromise from '../../../helpers/cancellablePromise';\nimport EventListenerBase from '../../../helpers/eventListenerBase';\nimport pause from '../../../helpers/schedulers/pause';\nimport {TransportType, DcConfigurator} from '../dcConfigurator';\nimport type HTTP from './http';\nimport type TcpObfuscated from './tcpObfuscated';\nimport MTTransport from './transport';\n\nexport class MTTransportController extends EventListenerBase<{\n  change: (opened: MTTransportController['opened']) => void,\n  transport: (type: TransportType) => void\n}> {\n  private opened: Map<TransportType, number>;\n  private transports: {[k in TransportType]?: MTTransport};\n  private pinging: boolean;\n  private dcConfigurator: DcConfigurator;\n\n  constructor() {\n    super(true);\n\n    this.opened = new Map();\n    /* this.addEventListener('change', (opened) => {\n      this.dispatchEvent('transport', opened.get('websocket') || !opened.get('https') ? 'websocket' : 'https');\n    }); */\n\n    this.addEventListener('change', (opened) => {\n      if(!opened.get('websocket')) {\n        this.waitForWebSocket();\n      }\n    });\n\n    // setTimeout(() => {\n    // this.waitForWebSocket();\n    // }, 200); // wait for first transport so won't have delay for first WS\n  }\n\n  public async pingTransports() {\n    const dcConfigurator = this.dcConfigurator ??= new DcConfigurator();\n    const timeout = 2000;\n    const transports: {[k in TransportType]?: MTTransport} = this.transports = {\n      https: dcConfigurator.chooseServer(App.baseDcId, 'client', 'https', false),\n      websocket: dcConfigurator.chooseServer(App.baseDcId, 'client', 'websocket', false)\n    };\n\n    const httpPromise = deferredPromise<boolean>();\n    ((this.transports.https as HTTP)._send(new Uint8Array(), 'no-cors') as any as Promise<any>)\n    .then(() => httpPromise.resolve(true), () => httpPromise.resolve(false));\n    setTimeout(() => httpPromise.resolve(false), timeout);\n\n    const websocketPromise = deferredPromise<boolean>();\n    const socket = transports.websocket as TcpObfuscated;\n    socket.setAutoReconnect(false);\n    socket.connection.addEventListener('close', () => websocketPromise.resolve(false), {once: true});\n    socket.connection.addEventListener('open', () => websocketPromise.resolve(true), {once: true});\n    setTimeout(() => {\n      if(websocketPromise.isFulfilled || websocketPromise.isRejected) {\n        return;\n      }\n\n      if(socket.connection) {\n        socket.connection.close();\n      }\n\n      websocketPromise.resolve(false);\n    }, timeout);\n\n    const [isHttpAvailable, isWebSocketAvailable] = await Promise.all([httpPromise, websocketPromise]);\n\n    for(const transportType in transports) {\n      const transport = transports[transportType as TransportType];\n      transport.destroy();\n    }\n\n    const result = {\n      https: isHttpAvailable || this.opened.get('https') > 0,\n      websocket: isWebSocketAvailable || this.opened.get('websocket') > 0\n    };\n\n    // result.websocket = false;\n    return result;\n  }\n\n  public async waitForWebSocket() {\n    if(this.pinging) return;\n    this.pinging = true;\n\n    while(true) {\n      const {https, websocket} = await this.pingTransports();\n      if(https || websocket) {\n        this.dispatchEvent('transport', websocket || !https ? 'websocket' : 'https');\n      }\n\n      if(websocket) {\n        break;\n      }\n\n      await pause(10000);\n    }\n\n    this.pinging = false;\n  }\n\n  public setTransportValue(type: TransportType, value: boolean) {\n    let length = this.opened.get(type) || 0;\n    length += value ? 1 : -1;\n\n    this.opened.set(type, length);\n    this.dispatchEvent('change', this.opened);\n  }\n\n  public setTransportOpened(type: TransportType) {\n    return this.setTransportValue(type, true);\n  }\n\n  public setTransportClosed(type: TransportType) {\n    return this.setTransportValue(type, false);\n  }\n}\n\nconst transportController = new MTTransportController();\nexport default transportController;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport deferredPromise, {CancellablePromise} from '../../../../helpers/cancellablePromise';\nimport type {StoragesResults} from './loadStorages';\n\nconst RESET_STORAGES_PROMISE: CancellablePromise<Set<keyof StoragesResults>> = deferredPromise();\nexport default RESET_STORAGES_PROMISE;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {CryptoMessagePort} from '../crypto/cryptoMessagePort';\nimport type {ApiFileManager} from '../mtproto/apiFileManager';\nimport type {ApiManager} from '../mtproto/apiManager';\nimport type {Authorizer} from '../mtproto/authorizer';\nimport type {DcConfigurator} from '../mtproto/dcConfigurator';\nimport type {NetworkerFactory} from '../mtproto/networkerFactory';\nimport type {PasswordManager} from '../mtproto/passwordManager';\nimport type {ReferenceDatabase} from '../mtproto/referenceDatabase';\nimport type {TimeManager} from '../mtproto/timeManager';\nimport type {RootScope} from '../rootScope';\nimport type DialogsStorage from '../storages/dialogs';\nimport type FiltersStorage from '../storages/filters';\nimport type PeersStorage from '../storages/peers';\nimport type ThumbsStorage from '../storages/thumbs';\nimport type {ApiUpdatesManager} from './apiUpdatesManager';\nimport type {AppAvatarsManager} from './appAvatarsManager';\nimport type {AppCallsManager} from './appCallsManager';\nimport type {AppChatsManager} from './appChatsManager';\nimport type {AppDocsManager} from './appDocsManager';\nimport type {AppDraftsManager} from './appDraftsManager';\nimport type {AppEmojiManager} from './appEmojiManager';\nimport type {AppGroupCallsManager} from './appGroupCallsManager';\nimport type {AppInlineBotsManager} from './appInlineBotsManager';\nimport type {AppMessagesIdsManager} from './appMessagesIdsManager';\nimport type {AppMessagesManager} from './appMessagesManager';\nimport type {AppNotificationsManager} from './appNotificationsManager';\nimport type AppPaymentsManager from './appPaymentsManager';\nimport type {AppPeersManager} from './appPeersManager';\nimport type {AppPhotosManager} from './appPhotosManager';\nimport type {AppPollsManager} from './appPollsManager';\nimport type {AppPrivacyManager} from './appPrivacyManager';\nimport type {AppProfileManager} from './appProfileManager';\nimport type {AppReactionsManager} from './appReactionsManager';\nimport type {AppStateManager} from './appStateManager';\nimport type {AppStickersManager} from './appStickersManager';\nimport type {AppStoragesManager} from './appStoragesManager';\nimport type {AppUsersManager} from './appUsersManager';\nimport type AppWebDocsManager from './appWebDocsManager';\nimport type {AppWebPagesManager} from './appWebPagesManager';\nimport type AppAttachMenuBotsManager from './appAttachMenuBotsManager';\nimport type AppSeamlessLoginManager from './appSeamlessLoginManager';\nimport type AppThemesManager from './appThemesManager';\nimport type {AppManagers} from './managers';\n\nexport class AppManager {\n  protected appPeersManager: AppPeersManager;\n  protected appChatsManager: AppChatsManager;\n  protected appDocsManager: AppDocsManager;\n  protected appPhotosManager: AppPhotosManager;\n  protected appPollsManager: AppPollsManager;\n  protected appUsersManager: AppUsersManager;\n  protected appWebPagesManager: AppWebPagesManager;\n  protected appDraftsManager: AppDraftsManager;\n  protected appProfileManager: AppProfileManager;\n  protected appNotificationsManager: AppNotificationsManager;\n  protected apiUpdatesManager: ApiUpdatesManager;\n  protected appAvatarsManager: AppAvatarsManager;\n  protected appGroupCallsManager: AppGroupCallsManager;\n  protected appCallsManager: AppCallsManager;\n  protected appReactionsManager: AppReactionsManager;\n  protected appMessagesManager: AppMessagesManager;\n  protected appMessagesIdsManager: AppMessagesIdsManager;\n  protected appPrivacyManager: AppPrivacyManager;\n  protected appInlineBotsManager: AppInlineBotsManager;\n  protected appStickersManager: AppStickersManager;\n  protected referenceDatabase: ReferenceDatabase;\n  protected appEmojiManager: AppEmojiManager;\n  protected dialogsStorage: DialogsStorage;\n  protected filtersStorage: FiltersStorage;\n  protected apiManager: ApiManager;\n  // protected apiManager: ApiManagerProxy;\n  protected passwordManager: PasswordManager;\n  protected cryptoWorker: CryptoMessagePort;\n  protected apiFileManager: ApiFileManager;\n  protected peersStorage: PeersStorage;\n  protected thumbsStorage: ThumbsStorage;\n  protected networkerFactory: NetworkerFactory;\n  protected rootScope: RootScope;\n  protected authorizer: Authorizer;\n  protected dcConfigurator: DcConfigurator;\n  protected timeManager: TimeManager;\n  protected appStoragesManager: AppStoragesManager;\n  protected appStateManager: AppStateManager;\n  protected appWebDocsManager: AppWebDocsManager;\n  protected appPaymentsManager: AppPaymentsManager;\n  protected appAttachMenuBotsManager: AppAttachMenuBotsManager;\n  protected appSeamlessLoginManager: AppSeamlessLoginManager;\n  protected appThemesManager: AppThemesManager;\n\n  public clear: (init?: boolean) => void;\n\n  public setManagers(managers: AppManagers) {\n    Object.assign(this, managers);\n    // this.after();\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type{Chat} from '../../../../layer';\nimport type{Dialog} from '../../appMessagesManager';\nimport type{User} from '../../appUsersManager';\nimport type {StoragesStorages} from './createStorages';\nimport {recordPromiseBound} from '../../../../helpers/recordPromise';\nimport {Awaited} from '../../../../types';\nimport {logger} from '../../../logger';\nimport RESET_STORAGES_PROMISE from './resetStoragesPromise';\n\nexport type StoragesResults = Awaited<ReturnType<typeof loadStoragesInner>>;\n\nasync function loadStoragesInner(storages: StoragesStorages) {\n  const recordPromise = recordPromiseBound(logger('STORAGES-LOADER'));\n  const storagesKeys = Object.keys(storages) as Array<keyof StoragesStorages>;\n  const storagesPromises: Promise<any>[] = storagesKeys.map((key) => {\n    const promise = storages[key].getAll();\n    return recordPromise(promise, 'storage ' + (key as any as string));\n  });\n\n  const storagesResults: {\n    users: User[],\n    chats: Chat[],\n    dialogs: Dialog[]\n  } = {} as any;\n  const arr = await Promise.all(storagesPromises);\n  for(let i = 0, length = storagesKeys.length; i < length; ++i) {\n    storagesResults[storagesKeys[i]] = arr[i] as any;\n  }\n\n  arr.splice(0, storagesKeys.length);\n\n  const resetStorages = await RESET_STORAGES_PROMISE;\n  if(resetStorages.size) {\n    for(const key of resetStorages) {\n      storagesResults[key].length = 0;\n    }\n\n    resetStorages.clear();\n  }\n\n  return storagesResults;\n}\n\nlet promise: ReturnType<typeof loadStoragesInner>;\nexport default function loadStorages(storages: StoragesStorages) {\n  return promise ??= loadStoragesInner(storages);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {logger} from '../logger';\nimport {AppManager} from './manager';\nimport createStorages from './utils/storages/createStorages';\nimport loadStorages from './utils/storages/loadStorages';\n\nexport class AppStoragesManager extends AppManager {\n  private storages: ReturnType<typeof createStorages>;\n\n  // private loadPromise: CancellablePromise<StoragesResults>;\n\n  private log: ReturnType<typeof logger>;\n\n  constructor() {\n    super();\n\n    this.log = logger('STORAGES');\n    this.storages = createStorages();\n    // this.loadPromise = deferredPromise();\n  }\n\n  public loadStorages() {\n    return loadStorages(this.storages);\n    // loadStorages(this.storages).then((storagesResults) => {\n    // this.loadPromise.resolve(storagesResults);\n    // });\n\n    // return this.loadPromise;\n  }\n\n  // public setStoragesResults(storagesResults: StoragesResults) {\n  //   this.loadPromise.resolve(storagesResults);\n  // }\n\n  public async loadStorage<T extends keyof AppStoragesManager['storages']>(name: T) {\n    return this.loadStorages().then((storagesResults) => {\n      return {\n        storage: this.storages[name],\n        results: storagesResults[name]\n      };\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {Chat} from '../../../../layer';\nimport type {Dialog} from '../../appMessagesManager';\nimport type {User} from '../../appUsersManager';\nimport DATABASE_STATE from '../../../../config/databases/state';\nimport AppStorage from '../../../storage';\n\nexport type StoragesStorages = {\n  users: AppStorage<Record<UserId, User>, typeof DATABASE_STATE>,\n  chats: AppStorage<Record<ChatId, Chat>, typeof DATABASE_STATE>,\n  dialogs: AppStorage<Record<PeerId, Dialog>, typeof DATABASE_STATE>\n};\n\nexport default function createStorages() {\n  const names: (keyof StoragesStorages)[] = ['users', 'chats', 'dialogs'];\n  const storages: StoragesStorages = {} as any;\n  for(const name of names) {\n    // @ts-ignore\n    storages[name] = new AppStorage(DATABASE_STATE, name);\n  }\n\n  return storages;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {AccountPassword, AccountUpdatePasswordSettings, InputCheckPasswordSRP, PasswordKdfAlgo} from '../../layer';\nimport randomize from '../../helpers/array/randomize';\nimport {AppManager} from '../appManagers/manager';\n\nexport class PasswordManager extends AppManager {\n  public getState(): Promise<AccountPassword> {\n    return this.apiManager.invokeApi('account.getPassword').then((result) => {\n      return result;\n    });\n  }\n\n  public updateSettings(settings: {\n    hint?: string,\n    email?: string,\n    newPassword?: string,\n    currentPassword?: string\n  } = {}) {\n    // state = Object.assign({}, state);\n    // state.new_algo = Object.assign({}, state.new_algo);\n\n    return this.getState().then((state) => {\n      let currentHashPromise: Promise<InputCheckPasswordSRP>;\n      let newHashPromise: Promise<Uint8Array>;\n      const params: AccountUpdatePasswordSettings = {\n        password: null,\n        new_settings: {\n          _: 'account.passwordInputSettings',\n          hint: settings.hint,\n          email: settings.email\n        }\n      };\n\n      if(settings.currentPassword) {\n        currentHashPromise = this.cryptoWorker.invokeCrypto('computeSRP', settings.currentPassword, state, false) as any;\n      } else {\n        currentHashPromise = Promise.resolve({\n          _: 'inputCheckPasswordEmpty'\n        });\n      }\n\n      // * https://core.telegram.org/api/srp#setting-a-new-2fa-password, but still there is a mistake, TDesktop passes 'new_algo' everytime\n      const newAlgo = state.new_algo as PasswordKdfAlgo.passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow;\n      const salt1 = new Uint8Array(newAlgo.salt1.length + 32);\n      randomize(salt1);\n      salt1.set(newAlgo.salt1, 0);\n      newAlgo.salt1 = salt1;\n\n      if(settings.newPassword) {\n        newHashPromise = this.cryptoWorker.invokeCrypto('computeSRP', settings.newPassword, state, true) as any;\n      } else {\n        newHashPromise = Promise.resolve(new Uint8Array());\n      }\n\n      return Promise.all([currentHashPromise, newHashPromise]).then((hashes) => {\n        params.password = hashes[0];\n        params.new_settings.new_algo = newAlgo;\n        params.new_settings.new_password_hash = hashes[1];\n\n        return this.apiManager.invokeApi('account.updatePasswordSettings', params);\n      });\n    });\n  }\n\n  public getInputCheckPassword(password: string, state: AccountPassword) {\n    return this.cryptoWorker.invokeCrypto('computeSRP', password, state, false) as Promise<InputCheckPasswordSRP.inputCheckPasswordSRP>;\n  }\n\n  public check(password: string, state: AccountPassword, options: any = {}) {\n    return this.getInputCheckPassword(password, state).then((inputCheckPassword) => {\n      // console.log('SRP', inputCheckPassword);\n      return this.apiManager.invokeApi('auth.checkPassword', {\n        password: inputCheckPassword as InputCheckPasswordSRP.inputCheckPasswordSRP\n      }, options).then((auth) => {\n        if(auth._ === 'auth.authorization') {\n          this.apiManager.setUser(auth.user);\n        }\n\n        return auth;\n      });\n    });\n  }\n\n  public confirmPasswordEmail(code: string) {\n    return this.apiManager.invokeApi('account.confirmPasswordEmail', {code});\n  }\n\n  public resendPasswordEmail() {\n    return this.apiManager.invokeApi('account.resendPasswordEmail');\n  }\n\n  public cancelPasswordEmail() {\n    return this.apiManager.invokeApi('account.cancelPasswordEmail');\n  }\n\n  /* public requestRecovery(options: any = {}) {\n    return apiManager.invokeApi('auth.requestPasswordRecovery', {}, options);\n  }\n\n  public recover(code: any, options: any = {}) {\n    return apiManager.invokeApi('auth.recoverPassword', {\n      code\n    }, options);\n  } */\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {Photo, WallPaper} from '../../layer';\nimport {logger} from '../logger';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport deepEqual from '../../helpers/object/deepEqual';\nimport {AppManager} from '../appManagers/manager';\nimport makeError from '../../helpers/makeError';\n\nexport type ReferenceContext = ReferenceContext.referenceContextProfilePhoto | ReferenceContext.referenceContextMessage | ReferenceContext.referenceContextEmojiesSounds | ReferenceContext.referenceContextReactions | ReferenceContext.referenceContextUserFull | ReferenceContext.referenceContextCustomEmoji | ReferenceContext.referenceContextAttachMenuBotIcon | ReferenceContext.referenceContextWallPaper;\nexport namespace ReferenceContext {\n  export type referenceContextProfilePhoto = {\n    type: 'profilePhoto',\n    peerId: PeerId\n  };\n\n  export type referenceContextMessage = {\n    type: 'message',\n    peerId: PeerId,\n    messageId: number\n  };\n\n  export type referenceContextEmojiesSounds = {\n    type: 'emojiesSounds'\n  };\n\n  export type referenceContextReactions = {\n    type: 'reactions'\n  };\n\n  export type referenceContextUserFull = {\n    type: 'userFull',\n    userId: UserId\n  };\n\n  export type referenceContextCustomEmoji = {\n    type: 'customEmoji',\n    docId: DocId\n  };\n\n  export type referenceContextAttachMenuBotIcon = {\n    type: 'attachMenuBotIcon',\n    botId: BotId\n  };\n\n  export type referenceContextWallPaper = {\n    type: 'wallPaper',\n    wallPaperId: WallPaper['id']\n  };\n}\n\nexport type ReferenceBytes = Photo.photo['file_reference'];\nexport type ReferenceContexts = Set<ReferenceContext>;\n\n// type ReferenceBytes = Uint8Array;\n\nexport class ReferenceDatabase extends AppManager {\n  private contexts: Map<ReferenceBytes, ReferenceContexts> = new Map();\n  // private references: Map<ReferenceBytes, number[]> = new Map();\n  private links: {[hex: string]: ReferenceBytes} = {};\n  private log = logger('RD', undefined, true);\n  private refreshEmojiesSoundsPromise: Promise<any>;\n\n  // constructor() {\n  //   super();\n\n  // apiManager.addTaskListener('refreshReference', (task: RefreshReferenceTask) => {\n  //   const originalPayload = task.payload;\n\n  //   assumeType<RefreshReferenceTaskResponse>(task);\n  //   task.originalPayload = originalPayload;\n\n  //   this.refreshReference(originalPayload).then((bytes) => {\n  //     task.payload = bytes;\n  //   }, (err) => {\n  //     task.error = err;\n  //   }).then(() => apiManager.postMessage(task));\n  // });\n  // }\n\n  public saveContext(reference: ReferenceBytes, context: ReferenceContext, contexts?: ReferenceContexts) {\n    [contexts, reference] = this.getContexts(reference);\n    if(!contexts) {\n      contexts = new Set();\n      this.contexts.set(reference, contexts);\n    }\n\n    this.links[bytesToHex(reference)] = reference;\n    for(const _context of contexts) {\n      if(deepEqual(_context, context)) {\n        return;\n      }\n    }\n\n    contexts.add(context);\n  }\n\n  public getReferenceByLink(reference: ReferenceBytes) {\n    return this.links[bytesToHex(reference)];\n  }\n\n  public getContexts(reference: ReferenceBytes): [ReferenceContexts, ReferenceBytes] {\n    const contexts = this.contexts.get(reference) || (reference = this.getReferenceByLink(reference) || reference, this.contexts.get(reference));\n    return [contexts, reference];\n  }\n\n  public getContext(reference: ReferenceBytes): [ReferenceContext, ReferenceBytes] {\n    const contexts = this.getContexts(reference);\n    return contexts[0] ? [contexts[0].values().next().value, contexts[1]] : undefined;\n  }\n\n  public deleteContext(reference: ReferenceBytes, context: ReferenceContext, contexts?: ReferenceContexts) {\n    [contexts, reference] = this.getContexts(reference);\n    if(contexts) {\n      for(const _context of contexts) {\n        if(deepEqual(_context, context)) {\n          contexts.delete(_context);\n          if(!contexts.size) {\n            this.contexts.delete(reference);\n            delete this.links[bytesToHex(reference)];\n          }\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  public refreshReference(reference: ReferenceBytes, context?: ReferenceContext): Promise<Uint8Array | number[]> {\n    this.log('refreshReference: start', reference.slice(), context);\n    if(!context) {\n      const c = this.getContext(reference);\n      if(!c) {\n        this.log('refreshReference: got no context for reference:', reference.slice());\n        return Promise.reject('NO_CONTEXT');\n      }\n\n      [context, reference] = c;\n    }\n\n    let promise: Promise<any>;\n    switch(context?.type) {\n      case 'message': {\n        promise = this.appMessagesManager.reloadMessages(context.peerId, context.messageId, true);\n        break;\n        // .then(() => {\n        //   console.log('FILE_REFERENCE_EXPIRED: got message', context, appMessagesManager.getMessage((context as ReferenceContext.referenceContextMessage).messageId).media, reference);\n        // });\n      }\n\n      case 'emojiesSounds': {\n        promise = this.refreshEmojiesSoundsPromise || this.appStickersManager.getAnimatedEmojiSounds(true).then(() => {\n          this.refreshEmojiesSoundsPromise = undefined;\n        });\n        break;\n      }\n\n      case 'userFull': {\n        promise = Promise.resolve(this.appProfileManager.getProfile(context.userId, true));\n        break;\n      }\n\n      case 'customEmoji': {\n        promise = this.appEmojiManager.getCustomEmojiDocuments([context.docId]);\n        break;\n      }\n\n      case 'attachMenuBotIcon': {\n        promise = this.appAttachMenuBotsManager.getAttachMenuBot(context.botId, true) as any;\n        break;\n      }\n\n      case 'wallPaper': {\n        promise = this.appThemesManager.getWallPaperById(context.wallPaperId);\n        break;\n      }\n\n      default: {\n        this.log.warn('refreshReference: not implemented context', context);\n        return Promise.reject();\n      }\n    }\n\n    const hex = bytesToHex(reference);\n    this.log('refreshReference: refreshing reference:', hex);\n    return promise.then(() => {\n      const newHex = bytesToHex(reference);\n      this.log('refreshReference: refreshed, reference before:', hex, 'after:', newHex);\n      if(hex !== newHex) {\n        return reference;\n      }\n\n      this.deleteContext(reference, context);\n\n      const newContext = this.getContext(reference);\n      if(newContext) {\n        return this.refreshReference(reference, newContext[0]);\n      }\n\n      this.log.error('refreshReference: no new context, reference before:', hex, 'after:', newHex, context);\n\n      throw makeError('NO_NEW_CONTEXT');\n    });\n  }\n\n  /* public replaceReference(oldReference: ReferenceBytes, newReference: ReferenceBytes) {\n    const contexts = this.contexts.get(oldReference);\n    if(contexts) {\n      this.contexts.delete(oldReference);\n      this.contexts.set(newReference, contexts);\n    }\n  } */\n}\n","export default function safeReplaceObject(wasObject: any, newObject: any) {\n  if(!wasObject) {\n    return newObject;\n  }\n\n  for(var key in wasObject) {\n    if(!newObject.hasOwnProperty(key)) {\n      delete wasObject[key];\n    }\n  }\n\n  for(var key in newObject) {\n    // if (newObject.hasOwnProperty(key)) { // useless\n    wasObject[key] = newObject[key];\n    // }\n  }\n\n  return wasObject;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {Message, MessageAction, MessageMedia} from '../../../../layer';\nimport getPeerId from '../peers/getPeerId';\n\nexport default function getPeerIdsFromMessage(message: Message.message | Message.messageService) {\n  const peerIds: number[] = [\n    message.fromId,\n    message.viaBotId,\n    (message as Message.message).fwdFromId\n  ];\n\n  const media = (message as Message.message).media;\n  if(media) {\n    const contactUserId = (media as MessageMedia.messageMediaContact).user_id;\n    if(contactUserId !== undefined) {\n      peerIds.push(contactUserId.toPeerId());\n    }\n\n    const results = (media as MessageMedia.messageMediaPoll).results;\n    const recentVoters = results?.recent_voters;\n    if(recentVoters?.length) {\n      peerIds.push(...recentVoters.map((userId) => userId.toPeerId()));\n    }\n  }\n\n  const recentReactions = ((message as Message.message).reactions)?.recent_reactions;\n  if(recentReactions?.length) {\n    peerIds.push(...recentReactions.map((reaction) => getPeerId(reaction.peer_id)));\n  }\n\n  const action = (message as Message.messageService).action;\n  if(action) {\n    const userIds: UserId[] = [\n      ...((action as MessageAction.messageActionChatAddUser).users || []),\n      (action as MessageAction.messageActionChatDeleteUser).user_id,\n      (action as MessageAction.messageActionChatJoinedByLink).inviter_id\n    ];\n    peerIds.push(...userIds.filter(Boolean).map((userId) => userId.toPeerId()));\n\n    const chatIds: ChatId[] = [\n      (action as MessageAction.messageActionChatMigrateTo).channel_id,\n      (action as MessageAction.messageActionChannelMigrateFrom).chat_id\n    ];\n    peerIds.push(...chatIds.filter(Boolean).map((chatId) => chatId.toPeerId(true)));\n  }\n\n  const recentRepliers = ((message as Message.message).replies)?.recent_repliers;\n  if(recentRepliers?.length) {\n    peerIds.push(...recentRepliers.map((reply) => getPeerId(reply)));\n  }\n\n  return new Set(peerIds.filter(Boolean));\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {ForumTopic} from '../../../../layer';\nimport type {Dialog} from '../../appMessagesManager';\nimport type getDialogIndexKey from './getDialogIndexKey';\n\nexport default function setDialogIndex(\n  dialog: Dialog | ForumTopic.forumTopic,\n  indexKey: ReturnType<typeof getDialogIndexKey>,\n  index: number\n) {\n  return (dialog as Dialog)[indexKey] = index;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {Chat, ForumTopic as MTForumTopic, DialogPeer, Message, MessageAction, MessageMedia, MessagesForumTopics, MessagesPeerDialogs, Update} from '../../layer';\nimport type {Dialog, ForumTopic, MyMessage} from '../appManagers/appMessagesManager';\nimport tsNow from '../../helpers/tsNow';\nimport SearchIndex from '../searchIndex';\nimport {SliceEnd} from '../../helpers/slicedArray';\nimport {MyDialogFilter} from './filters';\nimport {FOLDER_ID_ALL, FOLDER_ID_ARCHIVE, NULL_PEER_ID, REAL_FOLDERS, REAL_FOLDER_ID} from '../mtproto/mtproto_config';\nimport {MaybePromise, NoneToVoidFunction} from '../../types';\nimport ctx from '../../environment/ctx';\nimport AppStorage from '../storage';\nimport type DATABASE_STATE from '../../config/databases/state';\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport insertInDescendSortedArray from '../../helpers/array/insertInDescendSortedArray';\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\nimport getServerMessageId from '../appManagers/utils/messageId/getServerMessageId';\nimport generateMessageId from '../appManagers/utils/messageId/generateMessageId';\nimport {AppManager} from '../appManagers/manager';\nimport getDialogIndexKey from '../appManagers/utils/dialogs/getDialogIndexKey';\nimport isObject from '../../helpers/object/isObject';\nimport getDialogIndex from '../appManagers/utils/dialogs/getDialogIndex';\nimport getPeerIdsFromMessage from '../appManagers/utils/messages/getPeerIdsFromMessage';\nimport {AppStoragesManager} from '../appManagers/appStoragesManager';\nimport defineNotNumerableProperties from '../../helpers/object/defineNotNumerableProperties';\nimport setDialogIndex from '../appManagers/utils/dialogs/setDialogIndex';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport pause from '../../helpers/schedulers/pause';\nimport {BroadcastEvents} from '../rootScope';\nimport assumeType from '../../helpers/assumeType';\nimport makeError from '../../helpers/makeError';\nimport callbackify from '../../helpers/callbackify';\n\nexport type FolderDialog = {\n  dialog: Dialog,\n  index: number\n};\n\nexport type Folder = {\n  dialogs: (Dialog | ForumTopic)[],\n  id: number,\n  unreadMessagesCount: number,\n  unreadPeerIds: Set<PeerId>,\n  unreadUnmutedPeerIds: Set<PeerId>,\n  dispatchUnreadTimeout?: number\n};\n\nexport const GLOBAL_FOLDER_ID: REAL_FOLDER_ID = undefined;\n\n// let spentTime = 0;\nexport default class DialogsStorage extends AppManager {\n  private storage: AppStoragesManager['storages']['dialogs'];\n\n  private dialogs: {[peerId: PeerId]: Dialog};\n\n  private folders: {[folderId: number]: Folder};\n\n  private allDialogsLoaded: {[folder_id: number]: boolean};\n  private dialogsOffsetDate: {[folder_id: number]: number};\n  private pinnedOrders: {[folder_id: number]: PeerId[]};\n  private dialogsNum: number;\n\n  private dialogsIndex: SearchIndex<PeerId>;\n\n  private cachedResults: {\n    query: string,\n    count: number,\n    dialogs: Dialog[],\n    folderId: number\n  };\n\n  private forumTopics: Map<PeerId, {\n    topics: Map<number, ForumTopic>,\n    deletedTopics: Set<number>,\n    getTopicPromises: Map<number, CancellablePromise<ForumTopic>>,\n    getTopicsPromise?: Promise<any>\n  }>;\n\n  protected after() {\n    this.clear(true);\n\n    this.rootScope.addEventListener('language_change', () => {\n      const peerId = this.appUsersManager.getSelf().id.toPeerId(false);\n      const dialog = this.getDialogOnly(peerId);\n      if(dialog) {\n        const peerText = this.appPeersManager.getPeerSearchText(peerId);\n        this.dialogsIndex.indexObject(peerId, peerText);\n      }\n    });\n\n    const onFilterUpdate = (filter: MyDialogFilter) => {\n      const dialogs = this.getCachedDialogs(false);\n      for(let i = 0; i < dialogs.length; ++i) {\n        this.processDialogForFilter(dialogs[i], filter);\n      }\n    };\n\n    this.rootScope.addEventListener('filter_order', () => {\n      const dialogs = this.getCachedDialogs(false);\n      // const indexKeys: ReturnType<DialogsStorage['getDialogIndexKey']>[] = [];\n      for(const filterId in this.folders) {\n        if(+filterId > 1) {\n          delete this.folders[filterId];\n        }\n\n        // indexKeys.push(this.getDialogIndexKey(+filterId));\n      }\n\n      for(let i = 0; i < dialogs.length; ++i) {\n        const dialog = dialogs[i];\n        // for(const indexKey of indexKeys) {\n        //   delete dialog[indexKey];\n        // }\n\n        this.processDialogForFilters(dialog);\n      }\n    });\n\n    this.rootScope.addEventListener('filter_update', onFilterUpdate);\n    this.rootScope.addEventListener('filter_new', onFilterUpdate);\n\n    this.rootScope.addEventListener('filter_delete', (filter) => {\n      const dialogs = this.getCachedDialogs(false);\n\n      const indexKey = this.getDialogIndexKeyByFilterId(filter.id);\n      for(let i = 0; i < dialogs.length; ++i) {\n        const dialog = dialogs[i];\n        delete dialog[indexKey];\n      }\n\n      delete this.folders[filter.id];\n    });\n\n    this.rootScope.addEventListener('dialog_notify_settings', (dialog) => {\n      this.processChangedUnreadOrUnmuted(dialog.peerId);\n    });\n\n    this.rootScope.addEventListener('chat_update', (chatId) => {\n      const chat = this.appChatsManager.getChat(chatId);\n\n      const peerId = chatId.toPeerId(true);\n      if((chat as Chat.chat).pFlags.left && this.getDialogOnly(peerId)) {\n        this.dropDialogOnDeletion(peerId);\n      }\n    });\n\n    this.rootScope.addEventListener('chat_toggle_forum', ({chatId, enabled}) => {\n      const peerId = chatId.toPeerId(true);\n      if(!enabled) {\n        this.flushForumTopicsCache(peerId);\n      }\n\n      this.processChangedUnreadOrUnmuted(peerId);\n    });\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateFolderPeers: this.onUpdateFolderPeers,\n\n      updateDialogPinned: this.onUpdateDialogPinned,\n\n      updateChannelPinnedTopic: this.onUpdateChannelPinnedTopic,\n\n      updatePinnedDialogs: this.onUpdatePinnedDialogs,\n\n      updateChannelPinnedTopics: this.onUpdateChannelPinnedTopics\n    });\n\n    return Promise.all([\n      this.appStateManager.getState(),\n      this.appStoragesManager.loadStorage('dialogs')\n    ]).then(([state, {results: dialogs, storage}]) => {\n      this.storage = storage;\n      this.dialogs = this.storage.getCache();\n\n      for(const folderId of REAL_FOLDERS) {\n        const order = state.pinnedOrders[folderId];\n        if(!order) {\n          continue;\n        }\n\n        const _order = this.getPinnedOrders(folderId);\n        _order.splice(0, _order.length, ...order);\n      }\n\n      if(dialogs.length) {\n        AppStorage.freezeSaving<typeof DATABASE_STATE>(this.setDialogsFromState.bind(this, dialogs), ['chats', 'dialogs', 'messages', 'users']);\n      }\n\n      this.allDialogsLoaded = state.allDialogsLoaded || {};\n\n      if(dialogs.length) {\n        this.appDraftsManager.addMissedDialogs();\n      }\n    });\n  }\n\n  private setDialogsFromState(dialogs: Dialog[]) {\n    for(let i = 0, length = dialogs.length; i < length; ++i) {\n      const dialog = dialogs[i];\n      if(!dialog) {\n        continue;\n      }\n\n      // if(dialog.peerId !== SERVICE_PEER_ID) {\n      dialog.top_message = getServerMessageId(dialog.top_message); // * fix outgoing message to avoid copying dialog\n      // }\n\n      if(dialog.topMessage) {\n        this.appMessagesManager.saveMessages([dialog.topMessage]);\n      }\n\n      for(let i = 0; i <= 21; ++i) {\n        const indexKey: ReturnType<typeof getDialogIndexKey> = `index_${i}` as any;\n        delete dialog[indexKey];\n      }\n      // delete dialog.indexes;\n\n      this.saveDialog({\n        dialog,\n        ignoreOffsetDate: true\n      });\n\n      // ! WARNING, убрать это когда нужно будет делать чтобы pending сообщения сохранялись\n      const message = this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\n      if(!message) {\n        this.appMessagesManager.reloadConversation(dialog.peerId);\n      }\n    }\n  }\n\n  public isDialogsLoaded(folderId: number) {\n    return !!this.allDialogsLoaded[folderId];\n  }\n\n  public setDialogsLoaded(folderId: number, loaded: boolean) {\n    const isForum = this.isFilterIdForForum(folderId);\n\n    if(folderId === GLOBAL_FOLDER_ID && loaded) {\n      this.allDialogsLoaded[FOLDER_ID_ALL] = loaded;\n      this.allDialogsLoaded[FOLDER_ID_ARCHIVE] = loaded;\n    } else {\n      if(isForum) {\n        defineNotNumerableProperties(this.allDialogsLoaded, [folderId]);\n      }\n\n      this.allDialogsLoaded[folderId] = loaded;\n    }\n\n    if(isForum) {\n      return;\n    }\n\n    if(Array.from(REAL_FOLDERS).every((folderId) => this.allDialogsLoaded[folderId])) {\n      this.allDialogsLoaded[GLOBAL_FOLDER_ID] = true;\n    }\n\n    this.saveAllDialogsLoaded();\n  }\n\n  private saveAllDialogsLoaded() {\n    this.appStateManager.pushToState('allDialogsLoaded', this.allDialogsLoaded);\n  }\n\n  public clear = (init = false) => {\n    if(!init) {\n      this.storage.clear();\n\n      this.allDialogsLoaded = {};\n      this.saveAllDialogsLoaded();\n\n      // * clear not numerable properties\n      this.pinnedOrders = Object.assign({}, this.pinnedOrders);\n      for(const folderId of REAL_FOLDERS) {\n        this.resetPinnedOrder(folderId);\n      }\n      this.savePinnedOrders();\n    } else {\n      this.allDialogsLoaded = {};\n      this.pinnedOrders = {};\n      for(const folderId of REAL_FOLDERS) {\n        this.pinnedOrders[folderId] = [];\n      }\n    }\n\n    this.forumTopics = new Map();\n    this.folders = {};\n    this.dialogsOffsetDate = {};\n    this.dialogsNum = 0;\n    this.dialogsIndex = new SearchIndex({\n      clearBadChars: true,\n      ignoreCase: true,\n      latinize: true,\n      includeTag: true\n    });\n    this.cachedResults = {\n      query: '',\n      count: 0,\n      dialogs: [],\n      folderId: 0\n    };\n  };\n\n  public handleDialogUnpinning(dialog: Dialog | ForumTopic, folderId: number) {\n    delete dialog.pFlags.pinned;\n    indexOfAndSplice(this.getPinnedOrders(folderId), this.isFilterIdForForum(folderId) ? (dialog as ForumTopic).id : dialog.peerId);\n    this.savePinnedOrders();\n  }\n\n  public savePinnedOrders() {\n    this.appStateManager.pushToState('pinnedOrders', this.pinnedOrders);\n  }\n\n  public resetPinnedOrder(folderId: number) {\n    this.getPinnedOrders(folderId).length = 0;\n  }\n\n  public getPinnedOrders(folderId: number) {\n    let orders = this.pinnedOrders[folderId];\n    if(!orders && this.isFilterIdForForum(folderId)) {\n      defineNotNumerableProperties(this.pinnedOrders, [folderId]);\n      orders = this.pinnedOrders[folderId] = [];\n    }\n\n    return orders;\n  }\n\n  public isDialogPinned(peerId: PeerId, folderId: number) {\n    const filter = this.filtersStorage.getFilter(folderId);\n    let isPinned: boolean;\n    if(filter) {\n      isPinned = filter.pinnedPeerIds.indexOf(peerId) !== -1;\n    } else {\n      isPinned = !!this.getDialogOnly(peerId).pFlags.pinned;\n    }\n\n    return isPinned;\n  }\n\n  public getOffsetDate(folderId: number): number {\n    const offsetDate = this.dialogsOffsetDate[folderId] || 0;\n    if(folderId === GLOBAL_FOLDER_ID && !offsetDate) { // make request not from beginning if we have loaded some dialogs\n      return Math.min(...Array.from(REAL_FOLDERS).sort((a, b) => a - b));\n    }\n\n    return offsetDate;\n  }\n\n  private generateFolder(id: number) {\n    const folder: Folder = {\n      dialogs: [],\n      id,\n      unreadMessagesCount: 0,\n      unreadPeerIds: new Set(),\n      unreadUnmutedPeerIds: new Set()\n    };\n\n    defineNotNumerableProperties(folder, ['dispatchUnreadTimeout']);\n\n    return folder;\n  }\n\n  public getFolder(id: number) {\n    return this.folders[id] ??= this.generateFolder(id);\n  }\n\n  public isFilterIdForForum(filterId: number) {\n    return filterId && filterId < 0;\n  }\n\n  public getFilterIdForForum(forumTopic: ForumTopic) {\n    return forumTopic.peerId;\n  }\n\n  public getDialogKey(dialog: Dialog | ForumTopic) {\n    return this.isTopic(dialog) ? dialog.id : dialog.peerId;\n  }\n\n  public getFolderDialogs(id: number, skipMigrated = true): Folder['dialogs'] {\n    if(id === GLOBAL_FOLDER_ID) { // * it won't be sorted\n      return this.getCachedDialogs(skipMigrated);\n    }\n\n    const folder = this.getFolder(id);\n    if(this.isFilterIdForForum(id)) {\n      return skipMigrated ? folder.dialogs.filter((forumTopic) => !(forumTopic as ForumTopic).pFlags.hidden) : folder.dialogs;\n    }\n\n    return skipMigrated ? folder.dialogs.filter((dialog) => (dialog as Dialog).migratedTo === undefined) : folder.dialogs;\n  }\n\n  public getNextDialog(currentPeerId: PeerId, next: boolean, filterId: number) {\n    const folder = this.getFolderDialogs(filterId, true);\n    let dialog: Folder['dialogs'][0];\n    if(!currentPeerId) {\n      if(next) {\n        dialog = folder[0];\n      }\n    } else {\n      const idx = folder.findIndex((dialog) => dialog.peerId === currentPeerId);\n      if(idx !== -1) {\n        const nextIndex = next ? idx + 1 : idx - 1;\n        dialog = folder[nextIndex];\n      }\n    }\n\n    return dialog;\n  }\n\n  public getDialogIndexKeyByFilterId(filterId: number) {\n    if(this.isFilterIdForForum(filterId)) return getDialogIndexKey();\n    if(REAL_FOLDERS.has(filterId)) return getDialogIndexKey(filterId as REAL_FOLDER_ID);\n    const filter = this.filtersStorage.getFilter(filterId);\n    return getDialogIndexKey(filter.localId);\n  }\n\n  private isDialogUnmuted(dialog: Dialog | ForumTopic) {\n    return !this.appNotificationsManager.isPeerLocalMuted({\n      peerId: dialog.peerId,\n      respectType: true,\n      threadId: this.isTopic(dialog) ? (dialog as ForumTopic).id : undefined\n    });\n  }\n\n  public getFolderUnreadCount(filterId: number) {\n    const folder = this.getFolder(filterId);\n    return {unreadUnmutedCount: folder.unreadUnmutedPeerIds.size, unreadCount: folder.unreadPeerIds.size};\n  }\n\n  public getCachedDialogs(skipMigrated?: boolean) {\n    const arrays = Array.from(REAL_FOLDERS).map((folderId) => this.getFolderDialogs(folderId, skipMigrated));\n    return [].concat(...arrays) as Dialog[];\n  }\n\n  private setDialogIndexInFilter(\n    dialog: Dialog | ForumTopic,\n    indexKey: ReturnType<typeof getDialogIndexKey>,\n    filter?: MyDialogFilter\n  ) {\n    // if(this.isTopic(dialog)) {\n    //   return dialog['index_0'];\n    // }\n\n    let index: number;\n\n    const isTopic = this.isTopic(dialog);\n    const isRealFolder = isTopic || REAL_FOLDERS.has(filter.id);\n    /* if(isRealFolder) {\n      // index = getDialogIndex(dialog, indexKey);\n      index = this.generateIndexForDialog(dialog, true);\n    } else  */if(this.filtersStorage.testDialogForFilter(dialog, filter)) {\n      const pinnedIds = isTopic ?\n        this.getPinnedOrders(this.getFilterIdForForum(dialog)) :\n        filter.pinnedPeerIds;\n\n      const pinnedKey = this.getDialogKey(dialog);\n      const pinnedIndex = pinnedIds.indexOf(pinnedKey);\n\n      if(pinnedIndex !== -1) {\n        index = this.generateDialogIndex(this.generateDialogPinnedDateByIndex(pinnedIds.length - 1 - pinnedIndex), true);\n      } else if(dialog.pFlags?.pinned || isRealFolder) {\n        index = this.generateIndexForDialog(dialog, true, undefined, !isRealFolder);\n      } else {\n        index = getDialogIndex(dialog) ?? this.generateIndexForDialog(dialog, true);\n      }\n    }\n\n    // if(!dialog.hasOwnProperty(indexKey)) {\n    //   defineNotNumerableProperties(dialog, [indexKey]);\n    // }\n\n    return setDialogIndex(dialog, indexKey, index);\n  }\n\n  public getDialog(peerId: PeerId, folderId?: number, topicId?: number, skipMigrated = true): [Folder['dialogs'][0], number] | [] {\n    const folders: Folder['dialogs'][] = [];\n\n    if(topicId) {\n      folderId = peerId;\n      // skipMigrated = false;\n    }\n\n    if(folderId === undefined) {\n      folders.push(...Array.from(REAL_FOLDERS).map((folderId) => this.getFolder(folderId).dialogs as Dialog[]));\n    } else {\n      folders.push(this.getFolderDialogs(folderId, false) as Dialog[]);\n    }\n\n    const verify: (d: Folder['dialogs'][0]) => boolean = topicId ?\n      (d) => (d as ForumTopic).id === topicId :\n      (d) => (d as Dialog).peerId === peerId;\n    for(const folder of folders) {\n      let i = 0, skipped = 0;\n      for(let length = folder.length; i < length; ++i) {\n        const dialog = folder[i];\n        if(verify(dialog)) {\n          return [dialog, i - skipped];\n        } else if(skipMigrated && ((dialog as ForumTopic).pFlags.hidden || (dialog as Dialog).migratedTo !== undefined)) {\n          ++skipped;\n        }\n      }\n    }\n\n    return [];\n  }\n\n  public getDialogOnly(peerId: PeerId) {\n    return this.dialogs[peerId];\n  }\n\n  public getDialogOrTopic(peerId: PeerId, topicId?: number) {\n    return topicId ? this.getForumTopic(peerId, topicId) : this.dialogs[peerId];\n  }\n\n  public getDialogIndex(\n    peerId: PeerId | Parameters<typeof getDialogIndex>[0],\n    indexKey: ReturnType<typeof getDialogIndexKey>,\n    topicId?: number\n  ) {\n    const dialog = isObject(peerId) ? peerId : this.getDialogOrTopic(peerId, topicId);\n    return getDialogIndex(dialog, indexKey);\n  }\n\n  /*\n  var date = Date.now() / 1000 | 0;\n  var m = date * 0x10000;\n\n  var k = (date + 1) * 0x10000;\n  k - m;\n  65536\n  */\n  public generateDialogIndex(date?: number, isPinned?: boolean) {\n    date ??= tsNow(true) + this.timeManager.getServerTimeOffset();\n    return (date * 0x10000) + (isPinned ? 0 : (++this.dialogsNum & 0xFFFF));\n  }\n\n  // public makeFilterForTopics(id: number): MyDialogFilter {\n  //   return {\n  //     _: 'dialogFilter',\n  //     id,\n\n  //   };\n  // }\n\n  public isTopic(dialog: Dialog | ForumTopic): dialog is ForumTopic {\n    return 'id' in dialog;\n  }\n\n  public processDialogForFilters(dialog: Dialog | ForumTopic, noIndex?: boolean) {\n    // let perf = performance.now();\n    if(this.isTopic(dialog)) {\n      this.processDialogForFilter(dialog, undefined, noIndex);\n      return;\n    }\n\n    const filters = this.filtersStorage.getFilters();\n    for(const id in filters) {\n      const filter = filters[id];\n      this.processDialogForFilter(dialog, filter, noIndex);\n    }\n    // spentTime += (performance.now() - perf);\n    // console.log('generate index time:', spentTime);\n  }\n\n  public processDialogForFilter(\n    dialog: Dialog | ForumTopic,\n    filter?: MyDialogFilter,\n    noIndex?: boolean\n  ) {\n    const isTopic = this.isTopic(dialog);\n    const folderId = isTopic ? this.getFilterIdForForum(dialog) : filter.id;\n\n    const indexKey = isTopic ? 'index_0' : this.getDialogIndexKeyByFilterId(folderId);\n    const folder = this.getFolder(folderId);\n    const dialogs = folder.dialogs;\n\n    const cmp: (d: typeof dialog) => boolean = isTopic ?\n      ((d: ForumTopic) => d.id === dialog.id) as any :\n      ((d: Dialog) => d.peerId === dialog.peerId) as any;\n    const wasIndex = dialogs.findIndex(cmp);\n    const wasDialog = dialogs[wasIndex];\n    const wasDialogIndex = this.getDialogIndex(wasDialog, indexKey);\n\n    if(noIndex && folderId > FOLDER_ID_ARCHIVE) {\n      noIndex = undefined;\n    }\n\n    const newDialogIndex = noIndex ? undefined : this.setDialogIndexInFilter(dialog, indexKey, filter);\n\n    if(wasDialogIndex === newDialogIndex) {\n      return false;\n    }\n\n    if(!!wasDialogIndex !== !!newDialogIndex) {\n      this.prepareFolderUnreadCountModifyingByDialog(folderId, dialog, !!newDialogIndex);\n    }\n\n    if(wasIndex !== -1) {\n      dialogs.splice(wasIndex, 1);\n    }\n\n    if(newDialogIndex) {\n      insertInDescendSortedArray(dialogs, dialog, (dialog) => this.getDialogIndex(dialog, indexKey), -1);\n    }\n\n    return true;\n  }\n\n  public prepareDialogUnreadCountModifying(dialog: Dialog | ForumTopic, toggle?: boolean) {\n    const isTopic = this.isTopic(dialog);\n    const callbacks: NoneToVoidFunction[] = [];\n\n    const folderId = isTopic ? this.getFilterIdForForum(dialog) : dialog.folder_id;\n    callbacks.push(this.prepareFolderUnreadCountModifyingByDialog(folderId, dialog, toggle));\n\n    if(!isTopic) {\n      const filters = this.filtersStorage.getFilters();\n      for(const id in filters) {\n        const filter = filters[id];\n        if(this.filtersStorage.testDialogForFilter(dialog, filter)) {\n          callbacks.push(this.prepareFolderUnreadCountModifyingByDialog(filter.id, dialog, toggle));\n        }\n      }\n    }\n\n    return () => !toggle && callbacks.forEach((callback) => callback());\n  }\n\n  public prepareFolderUnreadCountModifyingByDialog(folderId: number, dialog: Dialog | ForumTopic, toggle?: boolean) {\n    const wasUnreadCount = this.appMessagesManager.getDialogUnreadCount(dialog);\n    const wasUnmuted = this.isDialogUnmuted(dialog);\n\n    if(toggle !== undefined) {\n      const addMessagesCount = toggle ? wasUnreadCount : -wasUnreadCount;\n      this.modifyFolderUnreadCount(folderId, addMessagesCount, !!wasUnreadCount, wasUnreadCount && wasUnmuted, dialog);\n      return;\n    }\n\n    return () => {\n      const newUnreadCount = this.appMessagesManager.getDialogUnreadCount(dialog);\n      const newUnmuted = this.isDialogUnmuted(dialog);\n\n      const addMessagesCount = newUnreadCount - wasUnreadCount;\n      this.modifyFolderUnreadCount(folderId, addMessagesCount, !!newUnreadCount, newUnreadCount && newUnmuted, dialog);\n    };\n  }\n\n  public modifyFolderUnreadCount(\n    folderId: number,\n    addMessagesCount: number,\n    toggleDialog: boolean,\n    toggleUnmuted: boolean,\n    dialog: Dialog | ForumTopic\n  ) {\n    const {peerId} = dialog;\n    const isForum = this.appPeersManager.isForum(peerId);\n    const isTopic = this.isTopic(dialog);\n    if(isForum && !isTopic) {\n      const forumUnreadCount = this.getForumUnreadCount(peerId);\n      if(forumUnreadCount instanceof Promise) {\n        forumUnreadCount.then(({count, hasUnmuted}) => {\n          dialog = this.getDialogOnly(peerId);\n          const folder = this.getFolder(folderId);\n          if(\n            !dialog ||\n            !this.appPeersManager.isForum(peerId) ||\n            !folder ||\n            !folder.dialogs.some((dialog) => dialog.peerId === peerId)\n          ) {\n            return;\n          }\n\n          this.modifyFolderUnreadCount(folderId, 0, false, false, dialog);\n        });\n\n        return;\n      } else {\n        addMessagesCount = 0;\n        toggleDialog = forumUnreadCount.count > 0;\n        toggleUnmuted = forumUnreadCount.hasUnmuted;\n      }\n    }\n\n    const folder = this.getFolder(folderId);\n    if(addMessagesCount) {\n      folder.unreadMessagesCount = Math.max(0, folder.unreadMessagesCount + addMessagesCount);\n    }\n\n    const key = this.getDialogKey(dialog);\n    if(toggleDialog) {\n      folder.unreadPeerIds.add(key);\n    } else {\n      folder.unreadPeerIds.delete(key);\n    }\n\n    if(toggleUnmuted) {\n      folder.unreadUnmutedPeerIds.add(key);\n    } else {\n      folder.unreadUnmutedPeerIds.delete(key);\n    }\n\n    folder.dispatchUnreadTimeout ??= ctx.setTimeout(() => {\n      folder.dispatchUnreadTimeout = undefined;\n      const _folder = {...folder};\n      delete _folder.dialogs;\n      this.rootScope.dispatchEvent('folder_unread', _folder);\n\n      if(isTopic) { // * refresh forum dialog unread count\n        this.processChangedUnreadOrUnmuted(peerId);\n      }\n    }, 0);\n  }\n\n  public processChangedUnreadOrUnmuted(peerId: PeerId) {\n    const dialog = this.getDialogOnly(peerId);\n    if(dialog) {\n      this.processDialogForFilters(dialog);\n      this.prepareDialogUnreadCountModifying(dialog)();\n      this.rootScope.dispatchEvent('dialog_unread', {\n        peerId,\n        dialog\n      });\n    }\n  }\n\n  public generateIndexForDialog(\n    dialog: Dialog | ForumTopic,\n    justReturn?: boolean,\n    message?: MyMessage,\n    noPinnedOrderUpdate?: boolean\n  ) {\n    if(!justReturn/*  && !isTopic */) {\n      return;\n    }\n\n    const isTopic = this.isTopic(dialog);\n    let topDate = 0, isPinned: boolean;\n    if((dialog as ForumTopic).pFlags.hidden) { // general topic must be first\n      topDate = this.generateDialogPinnedDateByIndex(0xFFF);\n      isPinned = true;\n    } else if(dialog.pFlags.pinned && !noPinnedOrderUpdate) {\n      topDate = this.generateDialogPinnedDate(dialog);\n      isPinned = true;\n    } else {\n      message ||= this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\n\n      topDate = (message as Message.message)?.date || topDate;\n\n      if(!isTopic) {\n        const channelId = this.appPeersManager.isChannel(dialog.peerId) && dialog.peerId.toChatId();\n        if(channelId) {\n          const channel = this.appChatsManager.getChat(channelId) as Chat.channel;\n          if(!topDate || (channel.date && channel.date > topDate)) {\n            topDate = channel.date;\n          }\n        }\n      }\n\n      if(dialog.draft?._ === 'draftMessage' && dialog.draft.date > topDate) {\n        topDate = dialog.draft.date;\n      }\n    }\n\n    topDate ||= tsNow(true);\n\n    const index = this.generateDialogIndex(topDate, isPinned);\n    if(justReturn) {\n      return index;\n    }\n\n    const indexKey = getDialogIndexKey((dialog as Dialog).folder_id);\n    setDialogIndex(dialog, indexKey, index);\n  }\n\n  public generateDialogPinnedDateByIndex(pinnedIndex: number) {\n    return 0x7fff0000 + (pinnedIndex & 0xFFFF); // 0xFFFF - потому что в папках может быть бесконечное число пиннедов\n  }\n\n  public generateDialogPinnedDate(dialog: Dialog | ForumTopic) {\n    const isTopic = this.isTopic(dialog);\n    const order = this.getPinnedOrders(isTopic ? this.getFilterIdForForum(dialog) : dialog.folder_id);\n\n    const dialogKey = this.getDialogKey(dialog);\n    let pinnedIndex = order.indexOf(dialogKey);\n    if(pinnedIndex === -1) {\n      order.unshift(dialogKey);\n      pinnedIndex = 0;\n\n      if(!isTopic) {\n        this.savePinnedOrders();\n      }\n    }\n\n    return this.generateDialogPinnedDateByIndex(order.length - 1 - pinnedIndex);\n  }\n\n  /* public generateDialog(peerId: PeerId) {\n    const dialog: Dialog = {\n      _: 'dialog',\n      pFlags: {},\n      peer: this.appPeersManager.getOutputPeer(peerId),\n      top_message: 0,\n      read_inbox_max_id: 0,\n      read_outbox_max_id: 0,\n      unread_count: 0,\n      unread_mentions_count: 0,\n      notify_settings: {\n        _: 'peerNotifySettings',\n      },\n    };\n\n    return dialog;\n  } */\n\n  public setDialogToState(dialog: Dialog | ForumTopic) {\n    if(this.isTopic(dialog)) {\n      return;\n    }\n\n    const {peerId, pts} = dialog;\n    const historyStorage = this.appMessagesManager.getHistoryStorage(peerId);\n    const messagesStorage = this.appMessagesManager.getHistoryMessagesStorage(peerId);\n    const history = historyStorage.history.slice;\n    let incomingMessage: MyMessage;\n    for(let i = 0, length = history.length; i < length; ++i) {\n      const mid = history[i];\n      const message: MyMessage = this.appMessagesManager.getMessageFromStorage(messagesStorage, mid);\n      if(message && !message.pFlags.is_outgoing/*  || peerId === SERVICE_PEER_ID */) {\n        incomingMessage = message;\n\n        const peerIds = getPeerIdsFromMessage(message);\n        this.peersStorage.requestPeersForKey(peerIds, `topMessage_${peerId}`);\n\n        break;\n      }\n    }\n\n    dialog.topMessage = incomingMessage;\n\n    // DO NOT TOUCH THESE LINES, SOME REAL MAGIC HERE.\n    // * Read service chat when refreshing page with outgoing & getting new service outgoing message\n    /* if(incomingMessage && dialog.read_inbox_max_id >= dialog.top_message) {\n      dialog.unread_count = 0;\n    }\n\n    dialog.read_inbox_max_id = this.appMessagesIdsManager.clearMessageId(dialog.read_inbox_max_id);\n    dialog.read_outbox_max_id = this.appMessagesIdsManager.clearMessageId(dialog.read_outbox_max_id); */\n    // CAN TOUCH NOW\n\n    if(peerId.isAnyChat() && pts) {\n      const newPts = this.apiUpdatesManager.getChannelState(peerId.toChatId(), pts).pts;\n      dialog.pts = newPts;\n    }\n\n    this.storage.set({\n      [peerId]: dialog\n    });\n\n    this.peersStorage.requestPeer(peerId, 'dialog');\n\n    /* for(let id in this.filtersStorage.filters) {\n      const filter = this.filtersStorage.filters[id];\n\n      if(this.filtersStorage.testDialogForFilter(dialog, filter)) {\n\n      }\n    } */\n  }\n\n  public pushDialog({dialog, offsetDate, ignoreOffsetDate, saveGlobalOffset}: {\n    dialog: Dialog | ForumTopic,\n    offsetDate?: number,\n    ignoreOffsetDate?: boolean,\n    saveGlobalOffset?: boolean\n  }) {\n    const isTopic = this.isTopic(dialog);\n    const {folder_id, peerId} = dialog as Dialog;\n\n    if(isTopic) {\n      const forumTopics = this.getForumTopicsCache(peerId);\n      forumTopics.topics.set(dialog.id, dialog);\n    } else {\n      this.dialogs[peerId] = dialog;\n    }\n\n    offsetDate ??= this.getDialogOffsetDate(dialog);\n\n    // if(!isTopic) {\n    this.processDialogForFilters(dialog);\n    // }\n\n    if(offsetDate && !dialog.pFlags.pinned) {\n      if(!isTopic && saveGlobalOffset) {\n        const savedGlobalOffsetDate = this.dialogsOffsetDate[GLOBAL_FOLDER_ID];\n        if(!savedGlobalOffsetDate || offsetDate < savedGlobalOffsetDate) {\n          this.dialogsOffsetDate[GLOBAL_FOLDER_ID] = offsetDate;\n        }\n      }\n\n      const folderId = isTopic ? this.getFilterIdForForum(dialog) : folder_id;\n      const savedOffsetDate = this.dialogsOffsetDate[folderId];\n      if(!savedOffsetDate || offsetDate < savedOffsetDate) {\n        // if(pos !== -1) {\n        if(!ignoreOffsetDate && !this.isDialogsLoaded(folderId)) {\n          this.dropDialog(peerId, isTopic ? this.getDialogKey(dialog) : undefined, true);\n          return;\n        }\n\n        this.dialogsOffsetDate[folderId] = offsetDate;\n      }\n    }\n\n    this.setDialogToState(dialog);\n\n    // if(pos === -1) {\n    // this.prepareFolderUnreadCountModifyingByDialog(folder_id, dialog, true);\n    // }\n\n    // const indexKey = getDialogIndexKey(folder_id);\n    // /* const newPos =  */insertInDescendSortedArray(dialogs, dialog, (dialog) => getDialogIndex(dialog, indexKey), -1);\n    /* if(pos !== -1 && pos !== newPos) {\n      rootScope.dispatchEvent('dialog_order', {dialog, pos: newPos});\n    } */\n  }\n\n  public dropDialogFromFolders(peerId: PeerId, topicId?: number) {\n    const foundDialog = this.getDialog(peerId, undefined, topicId, false);\n    const [dialog, index] = foundDialog;\n    if(dialog) {\n      const filterId = topicId ?\n        this.getFilterIdForForum(dialog as ForumTopic) :\n        (dialog as Dialog).folder_id;\n\n      // const folder = this.getFolder(filterId);\n      // folder.dialogs.splice(index, 1);\n      const wasPinned = indexOfAndSplice(this.getPinnedOrders(filterId), this.getDialogKey(dialog)) !== undefined;\n\n      this.processDialogForFilters(dialog, true);\n\n      this.dialogsIndex.indexObject(peerId, '');\n\n      if(wasPinned) {\n        this.savePinnedOrders();\n      }\n    }\n\n    return foundDialog;\n  }\n\n  public dropDialog(peerId: PeerId, topicId?: number, keepLocal?: boolean) {\n    const dialog = this.getDialogOrTopic(peerId, topicId);\n    const foundDialog = this.dropDialogFromFolders(peerId, topicId);\n    if(dialog) {\n      if(!keepLocal) {\n        if(topicId) {\n          this.getForumTopicsCache(peerId).topics.delete(topicId);\n        } else {\n          delete this.dialogs[peerId];\n        }\n      }\n\n      this.clearDialogFromState(dialog, keepLocal);\n    }\n\n    return foundDialog;\n  }\n\n  public clearDialogFromState(dialog: Dialog | ForumTopic, keepLocal: boolean) {\n    if(dialog._ === 'forumTopic') {\n      return;\n    }\n\n    const {peerId} = dialog;\n    this.peersStorage.requestPeersForKey([], `topMessage_${peerId}`);\n    this.peersStorage.releasePeer(peerId, 'dialog');\n    this.storage.delete(peerId, keepLocal);\n  }\n\n  public dropDialogWithEvent(peerId: PeerId, topicId?: number) {\n    const dropped = this.dropDialog(peerId, topicId);\n    if(dropped.length) {\n      this.rootScope.dispatchEvent('dialog_drop', dropped[0]);\n    }\n\n    return dropped;\n  }\n\n  /**\n   * leaving chat, leaving channel, deleting private dialog\n   */\n  public dropDialogOnDeletion(peerId: PeerId, topicId?: number) {\n    this.dropDialogWithEvent(peerId, topicId);\n    this.rootScope.dispatchEvent('peer_deleted', peerId);\n  }\n\n  public applyDialogs(result: MessagesPeerDialogs | MessagesForumTopics, peerId?: PeerId) {\n    // * В эту функцию попадут только те диалоги, в которых есть read_inbox_max_id и read_outbox_max_id, в отличие от тех, что будут в getTopMessages\n\n    const isForum = result._ === 'messages.forumTopics';\n    const items = (result as MessagesPeerDialogs).dialogs || (result as MessagesForumTopics).topics;\n    if(!isForum) {\n      // ! fix 'dialogFolder', maybe there is better way to do it, this only can happen by 'messages.getPinnedDialogs' by folder_id: 0\n      forEachReverse(result.dialogs, (dialog, idx) => {\n        if(dialog._ === 'dialogFolder') {\n          result.dialogs.splice(idx, 1);\n        }\n      });\n    } else {\n      this.processTopics(peerId, result);\n    }\n\n    assumeType<Folder['dialogs']>(items);\n\n    this.appUsersManager.saveApiUsers(result.users);\n    this.appChatsManager.saveApiChats(result.chats);\n    this.appMessagesManager.saveMessages(result.messages);\n\n    // this.appMessagesManager.log('applyConversation', dialogsResult);\n\n    const updatedDialogs: BroadcastEvents['dialogs_multiupdate'] = new Map();\n    const getUpdateCache = (peerId: PeerId) => {\n      let cache = updatedDialogs.get(peerId);\n      if(!cache) {\n        updatedDialogs.set(peerId, cache = {});\n      }\n\n      return cache;\n    };\n\n    items.forEach((dialog) => {\n      const peerId = this.appPeersManager.getPeerId(dialog.peer);\n      let topMid = dialog.top_message;\n\n      const topPendingMid = this.appMessagesManager.pendingTopMsgs[peerId];\n      if(topPendingMid) {\n        const topPendingMessage = this.appMessagesManager.getMessageByPeer(peerId, topPendingMid) as MyMessage;\n        const topMessage = this.appMessagesManager.getMessageByPeer(peerId, topMid) as MyMessage;\n        if(!topMid || (topPendingMessage && (!topMessage || topPendingMessage?.date > topMessage?.date))) {\n          dialog.top_message = topMid = topPendingMid;\n          this.appMessagesManager.getHistoryStorage(peerId).maxId = topPendingMid;\n        }\n      }\n\n      /* const d = Object.assign({}, dialog);\n      if(peerId === 239602833) {\n        this.log.error('applyConversation lun', dialog, d);\n      } */\n\n      if(topMid || dialog.draft?._ === 'draftMessage') {\n        if(this.saveDialog({dialog})) {\n          const cache = getUpdateCache(peerId);\n\n          if(isForum) {\n            (cache.topics ??= new Map()).set(\n              (dialog as ForumTopic).id,\n              dialog as ForumTopic\n            );\n          } else {\n            cache.dialog = dialog as Dialog;\n          }\n        }\n      } else {\n        this.dropDialogWithEvent(peerId, isForum ? this.getDialogKey(dialog) : undefined);\n      }\n\n      const key = this.appMessagesManager.getUpdateAfterReloadKey(peerId, isForum ? this.getDialogKey(dialog) : undefined);\n      const updates = this.appMessagesManager.newUpdatesAfterReloadToHandle[key];\n      if(updates !== undefined) {\n        for(const update of updates) {\n          updates.delete(update);\n          this.apiUpdatesManager.saveUpdate(update);\n        }\n\n        if(!updates.size) {\n          delete this.appMessagesManager.newUpdatesAfterReloadToHandle[key];\n        }\n      }\n    });\n\n    if(updatedDialogs.size) {\n      this.rootScope.dispatchEvent('dialogs_multiupdate', updatedDialogs);\n    }\n  }\n\n  private getDialogOffsetDate(dialog: Dialog | ForumTopic) {\n    const message = this.appMessagesManager.getMessageByPeer(dialog.peerId, dialog.top_message);\n    return message?.date || 0;\n  }\n\n  public canSaveDialogByPeerId(peerId: PeerId) {\n    if(peerId.isAnyChat()) {\n      const chat: Chat = this.appChatsManager.getChat(peerId.toChatId());\n      // ! chatForbidden stays for chat where you're kicked\n      if(\n        chat._ === 'channelForbidden' ||\n        // || chat._ === 'chatForbidden'\n        (chat as Chat.chat).pFlags.left\n        // || (chat as any).pFlags.kicked\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Won't save migrated from peer, forbidden peers, left and kicked\n   */\n  public saveDialog({\n    dialog,\n    folderId,\n    ignoreOffsetDate,\n    saveGlobalOffset\n  }: {\n    dialog: Dialog | ForumTopic,\n    folderId?: REAL_FOLDER_ID,\n    ignoreOffsetDate?: boolean,\n    saveGlobalOffset?: boolean\n  }) {\n    const isTopic = this.isTopic(dialog);\n    const isDialog = !isTopic;\n\n    const topicId = isTopic ? dialog.id = generateMessageId(dialog.id) : undefined;\n    if(!isTopic) {\n      folderId ??= dialog.folder_id ?? FOLDER_ID_ALL;\n    }\n\n    const peerId = this.appPeersManager.getPeerId(dialog.peer);\n    if(!peerId) {\n      console.error('saveConversation no peerId???', dialog, folderId);\n      return false;\n    }\n\n    if(!isTopic && dialog._ !== 'dialog'/*  || peerId === 239602833 */) {\n      console.error('saveConversation not regular dialog', dialog, Object.assign({}, dialog));\n    }\n\n    if(isDialog && !this.canSaveDialogByPeerId(peerId)) {\n      return false;\n    }\n\n    const channelId = this.appPeersManager.isChannel(peerId) ? peerId.toChatId() : NULL_PEER_ID;\n\n    if(isDialog) {\n      const peerText = this.appPeersManager.getPeerSearchText(peerId);\n      this.dialogsIndex.indexObject(peerId, peerText);\n    }\n\n    const wasDialogBefore = this.getDialogOrTopic(peerId, topicId);\n\n    let mid: number, message: MyMessage;\n    if(dialog.top_message) {\n      mid = generateMessageId(dialog.top_message);// dialog.top_message;\n\n      // preserve outgoing message\n      const wasTopMessage = wasDialogBefore?.top_message && this.appMessagesManager.getMessageByPeer(peerId, wasDialogBefore.top_message) as MyMessage;\n      if(wasTopMessage?.pFlags?.is_outgoing && wasDialogBefore.top_message >= mid) {\n        mid = wasDialogBefore.top_message;\n      }\n\n      message = this.appMessagesManager.getMessageByPeer(peerId, mid);\n    } else {\n      mid = this.appMessagesManager.generateTempMessageId(peerId);\n      message = {\n        _: 'message',\n        id: mid,\n        mid,\n        from_id: this.appPeersManager.getOutputPeer(this.appUsersManager.getSelf().id.toPeerId(false)),\n        peer_id: this.appPeersManager.getOutputPeer(peerId),\n        deleted: true,\n        pFlags: {out: true},\n        date: 0,\n        message: ''\n      };\n      this.appMessagesManager.saveMessages([message], {isOutgoing: true});\n    }\n\n    if(!message?.pFlags) {\n      this.appMessagesManager.log.error('saveConversation no message:', dialog, message);\n    }\n\n    if(isDialog && !channelId && peerId.isAnyChat()) {\n      const chat = this.appChatsManager.getChat(peerId.toChatId()) as Chat.chat;\n      if(chat && chat.migrated_to && chat.pFlags.deactivated) {\n        const migratedToPeer = this.appPeersManager.getPeerId(chat.migrated_to);\n        this.appMessagesManager.migratedFromTo[peerId] = migratedToPeer;\n        this.appMessagesManager.migratedToFrom[migratedToPeer] = peerId;\n        dialog.migratedTo = migratedToPeer;\n        // return;\n      }\n    }\n\n    dialog.top_message = mid;\n    // dialog.unread_count = wasDialogBefore && dialog.read_inbox_max_id === getServerMessageId(wasDialogBefore.read_inbox_max_id) ? wasDialogBefore.unread_count : dialog.unread_count;\n    dialog.read_inbox_max_id = generateMessageId(wasDialogBefore && !dialog.read_inbox_max_id ? wasDialogBefore.read_inbox_max_id : dialog.read_inbox_max_id);\n    dialog.read_outbox_max_id = generateMessageId(wasDialogBefore && !dialog.read_outbox_max_id ? wasDialogBefore.read_outbox_max_id : dialog.read_outbox_max_id);\n\n    if(isDialog && dialog.folder_id === undefined) {\n      if(dialog._ === 'dialog') {\n        // ! СЛОЖНО ! СМОТРИ В getTopMessages\n        dialog.folder_id = wasDialogBefore ? (wasDialogBefore as typeof dialog).folder_id : folderId;\n      }/*  else if(dialog._ === 'dialogFolder') {\n        dialog.folder_id = dialog.folder.id;\n      } */\n    }\n\n    dialog.draft = this.appDraftsManager.saveDraft({peerId, threadId: topicId, draft: dialog.draft});\n    dialog.peerId = peerId;\n    // dialog.indexes ??= {} as any;\n\n    // Because we saved message without dialog present\n    if(message && message.pFlags.is_outgoing) {\n      const isOut = message.pFlags.out;\n      if(mid > dialog[isOut ? 'read_outbox_max_id' : 'read_inbox_max_id']) {\n        message.pFlags.unread = true;\n\n        if(!dialog.unread_count && !isOut) {\n          ++dialog.unread_count;\n        }\n      } else {\n        delete message.pFlags.unread;\n      }\n    }\n\n    const historyStorage = this.appMessagesManager.getHistoryStorage(peerId, topicId);\n    const slice = historyStorage.history.slice;\n    /* if(historyStorage === undefined) { // warning\n      historyStorage.history.push(mid);\n    } else  */if(!slice.length) {\n      historyStorage.history.unshift(mid);\n      historyStorage.count ||= 1;\n      if(this.appMessagesManager.mergeReplyKeyboard(historyStorage, message)) {\n        this.rootScope.dispatchEvent('history_reply_markup', {peerId});\n      }\n    } else if(!slice.isEnd(SliceEnd.Bottom)) { // * this will probably never happen, however, if it does, then it will fix slice with top_message\n      const slice = historyStorage.history.insertSlice([mid]);\n      slice.setEnd(SliceEnd.Bottom);\n      historyStorage.count ||= 1;\n      if(this.appMessagesManager.mergeReplyKeyboard(historyStorage, message)) {\n        this.rootScope.dispatchEvent('history_reply_markup', {peerId});\n      }\n    }\n\n    historyStorage.maxId = mid;\n    historyStorage.readMaxId = dialog.read_inbox_max_id;\n    historyStorage.readOutboxMaxId = dialog.read_outbox_max_id;\n\n    this.appNotificationsManager.savePeerSettings({\n      peerId,\n      threadId: isTopic ? dialog.id : undefined,\n      settings: dialog.notify_settings\n    });\n\n    if(isDialog && channelId && dialog.pts) {\n      this.apiUpdatesManager.addChannelState(channelId, dialog.pts);\n    }\n\n    this.generateIndexForDialog(dialog);\n\n    if(wasDialogBefore) {\n      // fix unread count\n      const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(wasDialogBefore);\n      safeReplaceObject(wasDialogBefore, dialog);\n      releaseUnreadCount();\n    }\n\n    this.pushDialog({\n      dialog,\n      offsetDate: message?.date,\n      ignoreOffsetDate,\n      saveGlobalOffset\n    });\n\n    if(isTopic) {\n      this.processTopicUpdate(dialog, wasDialogBefore as ForumTopic);\n    }\n\n    return true;\n  }\n\n  public processTopicUpdate(topic: ForumTopic, oldTopic?: ForumTopic) {\n    if(!oldTopic) {\n      return;\n    }\n\n    const {peerId, id: threadId} = topic;\n    const isIconChanged = topic.icon_emoji_id !== (oldTopic as ForumTopic).icon_emoji_id;\n    const isTitleChanged = topic.title !== (oldTopic as ForumTopic).title;\n    const isChanged = isIconChanged || isTitleChanged;\n\n    if(isIconChanged) {\n      this.rootScope.dispatchEvent('avatar_update', {peerId, threadId});\n    }\n\n    if(isChanged) {\n      this.rootScope.dispatchEvent('peer_title_edit', {peerId, threadId});\n    }\n  }\n\n  public getDialogs(options: {\n    query?: string,\n    offsetIndex?: number,\n    limit?: number,\n    filterId?: number,\n    skipMigrated?: boolean\n  }): MaybePromise<{\n    dialogs: Folder['dialogs'],\n    count: number,\n    isTopEnd: boolean,\n    isEnd: boolean\n  }> {\n    const {\n      query = '',\n      offsetIndex,\n      limit = 20,\n      filterId = FOLDER_ID_ALL,\n      skipMigrated = false\n    } = options;\n\n    const isForum = this.isFilterIdForForum(filterId);\n    if(!isForum && !REAL_FOLDERS.has(filterId)) {\n      const promises: Promise<any>[] = [];\n\n      const fillContactsResult = this.appUsersManager.fillContacts();\n      if(!fillContactsResult.cached) {\n        promises.push(fillContactsResult.promise);\n      }\n\n      const reloadMissingDialogsPromise = this.filtersStorage.reloadMissingPeerIds(filterId);\n      if(reloadMissingDialogsPromise) {\n        promises.push(reloadMissingDialogsPromise);\n      }\n\n      if(promises.length) {\n        return Promise.all(promises).then(() => {\n          return this.getDialogs(options);\n        });\n      }\n    }\n\n    // let's load only first pages by certain folderId. next pages will load without folder filtering\n    const realFolderId/* : REAL_FOLDER_ID */ =\n      (!REAL_FOLDERS.has(filterId) || this.getOffsetDate(filterId)) && !isForum ?\n        GLOBAL_FOLDER_ID :\n        filterId/*  as REAL_FOLDER_ID */;\n    let curDialogStorage = this.getFolderDialogs(filterId, skipMigrated);\n\n    const indexKey = this.getDialogIndexKeyByFilterId(filterId);\n\n    if(query && !isForum) {\n      if(!limit || this.cachedResults.query !== query || this.cachedResults.folderId !== filterId) {\n        this.cachedResults.query = query;\n        this.cachedResults.folderId = filterId;\n\n        const results = this.dialogsIndex.search(query);\n\n        const dialogs: Dialog[] = [];\n        for(const peerId in this.dialogs) {\n          const dialog = this.dialogs[peerId];\n          if(results.has(dialog.peerId) && dialog.folder_id === filterId) {\n            dialogs.push(dialog);\n          }\n        }\n\n        dialogs.sort((d1, d2) => this.getDialogIndex(d2, indexKey) - this.getDialogIndex(d1, indexKey));\n        this.cachedResults.dialogs = dialogs;\n        this.cachedResults.count = dialogs.length;\n      }\n\n      curDialogStorage = this.cachedResults.dialogs;\n    } else {\n      this.cachedResults.query = '';\n    }\n\n    let offset = 0;\n    if(offsetIndex > 0) {\n      for(let length = curDialogStorage.length; offset < length; ++offset) {\n        if(offsetIndex > this.getDialogIndex(curDialogStorage[offset], indexKey)) {\n          break;\n        }\n      }\n    }\n\n    const loadedAll = this.isDialogsLoaded(realFolderId);\n    const isEnoughDialogs = curDialogStorage.length >= (offset + limit);\n    if(query || loadedAll || isEnoughDialogs) {\n      const dialogs = curDialogStorage.slice(offset, offset + limit);\n      return {\n        dialogs,\n        count: loadedAll ? curDialogStorage.length : null,\n        isTopEnd: curDialogStorage.length && ((dialogs[0] && dialogs[0] === curDialogStorage[0]) || this.getDialogIndex(curDialogStorage[0], indexKey) < offsetIndex),\n        isEnd: (query || loadedAll) && (offset + limit) >= curDialogStorage.length\n      };\n    }\n\n    return this.appMessagesManager.getTopMessages({limit, folderId: realFolderId}).then((result) => {\n      // const curDialogStorage = this[folderId];\n      if(skipMigrated) {\n        curDialogStorage = this.getFolderDialogs(filterId, skipMigrated);\n      }\n\n      offset = 0;\n      if(offsetIndex > 0) {\n        for(let length = curDialogStorage.length; offset < length; ++offset) {\n          if(offsetIndex > this.getDialogIndex(curDialogStorage[offset], indexKey)) {\n            break;\n          }\n        }\n      }\n\n      // this.log.warn(offset, offset + limit, curDialogStorage.dialogs.length, this.dialogs.length);\n\n      const dialogs = curDialogStorage.slice(offset, offset + limit);\n      return {\n        dialogs,\n        count: result.count === undefined ? curDialogStorage.length : result.count,\n        isTopEnd: curDialogStorage.length && ((dialogs[0] && dialogs[0] === curDialogStorage[0]) || this.getDialogIndex(curDialogStorage[0], indexKey) < offsetIndex),\n        // isEnd: this.isDialogsLoaded(realFolderId) && (offset + limit) >= curDialogStorage.length\n        isEnd: result.isEnd\n      };\n    });\n  }\n\n  // * FORUMS SECTION\n\n  public flushForumTopicsCache(peerId: PeerId) {\n    const cache = this.forumTopics.get(peerId);\n    if(!cache) {\n      return;\n    }\n\n    const folder = this.folders[peerId];\n    if(folder) {\n      if(folder.dispatchUnreadTimeout) {\n        clearTimeout(folder.dispatchUnreadTimeout);\n      }\n\n      delete this.allDialogsLoaded[peerId];\n      delete this.pinnedOrders[peerId];\n      delete this.dialogsOffsetDate[peerId];\n      delete this.folders[peerId];\n    }\n\n    cache.topics.clear();\n\n    // for permanent delete\n    // this.forumTopics.delete(peerId);\n  }\n\n  public getForumTopicsCache(peerId: PeerId) {\n    let forumTopics = this.forumTopics.get(peerId);\n    if(!forumTopics) {\n      forumTopics = {\n        topics: new Map(),\n        deletedTopics: new Set(),\n        getTopicPromises: new Map()\n      };\n\n      this.forumTopics.set(peerId, forumTopics);\n    }\n\n    return forumTopics;\n  }\n\n  public getForumTopicById(peerId: PeerId, topicId?: number): Promise<ForumTopic> {\n    if(!this.appPeersManager.isForum(peerId)) {\n      return Promise.reject(makeError('CHANNEL_FORUM_MISSING'));\n    }\n\n    const cache = this.getForumTopicsCache(peerId);\n    let promise: CancellablePromise<ForumTopic>;\n    if(topicId) {\n      promise = cache.getTopicPromises.get(topicId);\n      if(promise) {\n        return promise;\n      }\n\n      if(cache.deletedTopics.has(topicId)) {\n        return Promise.resolve(undefined);\n      }\n\n      cache.getTopicPromises.set(topicId, promise = deferredPromise());\n    }\n\n    cache.getTopicsPromise ??= pause(0).then(() => {\n      const promises: {[topicId: number]: typeof promise} = {};\n      const ids: number[] = [];\n      for(const [topicId, promise] of cache.getTopicPromises) {\n        promises[topicId] = promise;\n        ids.push(getServerMessageId(topicId));\n      }\n\n      cache.getTopicPromises.clear();\n\n      const fullfillLeft = () => {\n        for(const topicId in promises) {\n          promises[topicId].resolve(undefined);\n          cache.deletedTopics.add(+topicId);\n        }\n      };\n\n      if(this.getForumTopicsCache(peerId) !== cache) {\n        fullfillLeft();\n        return;\n      }\n\n      return this.apiManager.invokeApi('channels.getForumTopicsByID', {\n        channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\n        topics: ids\n      }).then((messagesForumTopics) => {\n        if(this.getForumTopicsCache(peerId) !== cache) {\n          return;\n        }\n\n        this.applyDialogs(messagesForumTopics, peerId);\n\n        messagesForumTopics.topics.forEach((forumTopic) => {\n          if(forumTopic._ === 'forumTopic') {\n            promises[forumTopic.id].resolve(forumTopic);\n            delete promises[peerId];\n          }\n        });\n\n        return messagesForumTopics;\n      }, () => {}).then(() => {\n        fullfillLeft();\n\n        cache.getTopicsPromise = undefined;\n        if(cache.getTopicPromises.size) {\n          this.getForumTopicById(peerId);\n        }\n      });\n    });\n\n    return promise || cache.getTopicsPromise;\n  }\n\n  // public getForumTopicById(peerId: PeerId, topicId: number) {\n  //   return this.getForumTopicsByID(peerId, topicId).then((result) => result.topics[0]);\n  // }\n\n  public getForumTopic(peerId: PeerId, topicId: number) {\n    const forumTopics = this.forumTopics.get(peerId);\n    return forumTopics?.topics?.get(topicId);\n  }\n\n  public getForumTopicOrReload(peerId: PeerId, topicId: number) {\n    const forumTopic = this.getForumTopic(peerId, topicId);\n    if(forumTopic) {\n      return forumTopic;\n    }\n\n    const cache = this.getForumTopicsCache(peerId);\n    return cache?.deletedTopics?.has(topicId) ? undefined : this.getForumTopicById(peerId, topicId);\n  }\n\n  public processTopics<T extends MaybePromise<{topics: MTForumTopic[], pts?: number}>>(peerId: PeerId, result: T) {\n    return callbackify(result, (result) => {\n      if('pts' in result) {\n        this.apiUpdatesManager.addChannelState(peerId.toChatId(), result.pts);\n      }\n\n      const peer = this.appPeersManager.getOutputPeer(peerId);\n      result.topics = result.topics.map((topic) => {\n        if(topic._ === 'forumTopicDeleted') {\n          return;\n        }\n\n        (topic as ForumTopic).peer = peer;\n        topic.id = generateMessageId(topic.id);\n        return topic;\n      }).filter(Boolean);\n\n      return result;\n    });\n  }\n\n  public processTopicsPromise<T extends Promise<Parameters<DialogsStorage['processTopics']>[1]>>(peerId: PeerId, promise: T): T {\n    return promise.then((result) => {\n      this.processTopics(peerId, result);\n      return result;\n    }) as any;\n  }\n\n  public getForumUnreadCount(peerId: PeerId) {\n    if(!this.appPeersManager.isForum(peerId)) {\n      return;\n    }\n\n    const folder = this.getFolder(peerId);\n\n    const f = folder.dialogs.length >= 20 || this.isDialogsLoaded(peerId) ?\n      folder.dialogs.slice(0, 20) :\n      callbackify(this.getDialogs({filterId: peerId, limit: 20}), (result) => {\n        return result.dialogs;\n      });\n\n    return callbackify(f, (dialogs) => {\n      return {\n        count: dialogs.reduce((acc, v) => acc + +!!v.unread_count, 0),\n        hasUnmuted: dialogs.some((dialog) => dialog.unread_count && this.isDialogUnmuted(dialog))\n      };\n    });\n  }\n\n  // * FORUMS SECTION END\n\n  private handleDialogTogglePinned(dialog: Dialog | ForumTopic, pinned: boolean, folderId: number) {\n    if(dialog) {\n      if(!pinned) {\n        this.handleDialogUnpinning(dialog, folderId);\n      } else { // means set\n        dialog.pFlags.pinned = true;\n      }\n\n      this.generateIndexForDialog(dialog);\n    }\n\n    this.appMessagesManager.scheduleHandleNewDialogs(dialog.peerId, dialog);\n  }\n\n  private handleDialogsPinned(folderId: number, order: (Dialog['peerId'] | ForumTopic['id'])[]) {\n    const isForum = this.isFilterIdForForum(folderId);\n    this.resetPinnedOrder(folderId);\n    this.getPinnedOrders(folderId).push(...order);\n    this.savePinnedOrders();\n    order.reverse(); // index must be higher\n    const newPinned: {[id: typeof order[0]]: true} = {};\n    order.forEach((id) => {\n      newPinned[id] = true;\n\n      const peerId = isForum ? folderId : id;\n      const topicId = isForum ? id : undefined;\n\n      const dialog = this.getDialogOrTopic(peerId, topicId);\n      this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\n      if(!dialog) {\n        return;\n      }\n\n      dialog.pFlags.pinned = true;\n      this.generateIndexForDialog(dialog);\n    });\n\n    const dialogs = this.getFolderDialogs(folderId, false);\n    for(const dialog of dialogs) {\n      if(!dialog.pFlags.pinned) {\n        break;\n      }\n\n      if(!newPinned[this.getDialogKey(dialog)]) {\n        delete dialog.pFlags.pinned;\n        this.generateIndexForDialog(dialog);\n        this.appMessagesManager.scheduleHandleNewDialogs(dialog.peerId, dialog);\n      }\n    }\n  }\n\n  // only 0 and 1 folders\n  private onUpdateFolderPeers = (update: Update.updateFolderPeers) => {\n    // this.log('updateFolderPeers', update);\n    const peers = update.folder_peers;\n\n    peers.forEach((folderPeer) => {\n      const {folder_id, peer} = folderPeer;\n\n      const peerId = this.appPeersManager.getPeerId(peer);\n      const dialog = this.dropDialog(peerId)[0];\n      if(dialog) {\n        if(dialog.pFlags?.pinned) {\n          this.handleDialogUnpinning(dialog, folder_id);\n        }\n\n        (dialog as Dialog).folder_id = folder_id as REAL_FOLDER_ID;\n        this.generateIndexForDialog(dialog);\n        this.pushDialog({dialog}); // need for simultaneously updatePinnedDialogs\n      }\n\n      this.appMessagesManager.scheduleHandleNewDialogs(peerId, dialog);\n    });\n  };\n\n  private onUpdateDialogPinned = (update: Update.updateDialogPinned) => {\n    const folderId = update.folder_id ?? FOLDER_ID_ALL;\n    // this.log('updateDialogPinned', update);\n    const peerId = this.appPeersManager.getPeerId((update.peer as DialogPeer.dialogPeer).peer);\n    const dialog = this.getDialogOnly(peerId);\n\n    // этот код внизу никогда не сработает, в папках за пиннед отвечает updateDialogFilter\n    /* if(update.folder_id > 1) {\n      const filter = this.filtersStorage.filters[update.folder_id];\n      if(update.pFlags.pinned) {\n        filter.pinned_peers.unshift(peerId);\n      } else {\n        filter.pinned_peers.findAndSplice((p) => p === peerId);\n      }\n    } */\n\n    this.handleDialogTogglePinned(dialog, update.pFlags.pinned, folderId);\n  };\n\n  private onUpdateChannelPinnedTopic = (update: Update.updateChannelPinnedTopic) => {\n    const peerId = update.channel_id.toPeerId(true);\n    const topicId = generateMessageId(update.topic_id);\n    const topic = this.getForumTopic(peerId, topicId);\n    if(!topic) {\n      return;\n    }\n\n    this.handleDialogTogglePinned(topic, update.pFlags.pinned, this.getFilterIdForForum(topic));\n  };\n\n  private onUpdatePinnedDialogs = (update: Update.updatePinnedDialogs) => {\n    const folderId = update.folder_id ?? FOLDER_ID_ALL;\n\n    if(update.order) {\n      this.handleDialogsPinned(folderId, update.order.map((peer) => this.appPeersManager.getPeerId((peer as DialogPeer.dialogPeer).peer)));\n    } else {\n      this.apiManager.invokeApi('messages.getPinnedDialogs', {\n        folder_id: folderId\n      }).then((dialogsResult) => {\n        // * for test reordering and rendering\n        // dialogsResult.dialogs.reverse();\n\n        this.applyDialogs(dialogsResult);\n\n        this.handleDialogsPinned(folderId, dialogsResult.dialogs.map((d) => d.peerId));\n      });\n    }\n  };\n\n  private onUpdateChannelPinnedTopics = async(update: Update.updateChannelPinnedTopics) => {\n    const peerId = update.channel_id.toPeerId(true);\n    const forumTopics = this.forumTopics.get(peerId);\n    if(!forumTopics) {\n      return;\n    }\n\n    const filterId = peerId;\n    if(update.order) {\n      const order = update.order.map((topicId) => generateMessageId(topicId));\n      this.handleDialogsPinned(filterId, order);\n    } else {\n      const limit = await this.apiManager.getLimit('topicPin', true);\n\n      const promise = this.apiManager.invokeApi('channels.getForumTopics', {\n        channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\n        limit,\n        offset_date: 0,\n        offset_id: 0,\n        offset_topic: 0\n      });\n\n      const result = await this.processTopics(peerId, promise);\n\n      const topics = result.topics as ForumTopic[];\n      const pinned = topics.filter((topic) => topic.pFlags.pinned);\n      this.handleDialogsPinned(filterId, pinned.map((topic) => topic.id));\n    }\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {DialogFilter, ForumTopic, Update} from '../../layer';\nimport type {Dialog} from '../appManagers/appMessagesManager';\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport copy from '../../helpers/object/copy';\nimport {AppManager} from '../appManagers/manager';\nimport findAndSplice from '../../helpers/array/findAndSplice';\nimport assumeType from '../../helpers/assumeType';\nimport {FOLDER_ID_ALL, FOLDER_ID_ARCHIVE, REAL_FOLDERS, REAL_FOLDER_ID, START_LOCAL_ID} from '../mtproto/mtproto_config';\nimport makeError from '../../helpers/makeError';\n\nexport type MyDialogFilter = DialogFilter.dialogFilter;\n\nconst convertment = [\n  ['pinned_peers', 'pinnedPeerIds'],\n  ['exclude_peers', 'excludePeerIds'],\n  ['include_peers', 'includePeerIds']\n] as ['pinned_peers' | 'exclude_peers' | 'include_peers', 'pinnedPeerIds' | 'excludePeerIds' | 'includePeerIds'][];\n\nconst PREPENDED_FILTERS = REAL_FOLDERS.size;\n\nconst LOCAL_FILTER: MyDialogFilter = {\n  _: 'dialogFilter',\n  pFlags: {},\n  flags: 0,\n  id: 0,\n  title: '',\n  exclude_peers: [],\n  include_peers: [],\n  pinned_peers: [],\n  excludePeerIds: [],\n  includePeerIds: [],\n  pinnedPeerIds: []\n};\n\nexport default class FiltersStorage extends AppManager {\n  private filters: {[filterId: string]: MyDialogFilter};\n  private filtersArr: Array<MyDialogFilter>;\n  private localFilters: {[filterId: string]: MyDialogFilter};\n  private localId: number;\n  private reloadedPeerIds: Set<PeerId>;\n\n  protected after() {\n    this.clear(true);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateDialogFilter: this.onUpdateDialogFilter,\n\n      updateDialogFilters: this.onUpdateDialogFilters,\n\n      updateDialogFilterOrder: this.onUpdateDialogFilterOrder\n    });\n\n    // delete peers when dialog is being dropped\n    /* rootScope.addEventListener('peer_deleted', (peerId) => {\n      for(const filterId in this.filters) {\n        const filter = this.filters[filterId];\n        let modified = false;\n        [filter.pinned_peers, filter.include_peers, filter.exclude_peers].forEach((arr) => {\n          forEachReverse(arr, (inputPeer, idx) => {\n            if(getPeerId(inputPeer) === peerId) {\n              arr.splice(idx, 1);\n              modified = true;\n            }\n          });\n        });\n\n        if(modified) {\n          this.saveDialogFilter(filter, true);\n        }\n      }\n    }); */\n\n    this.rootScope.addEventListener('premium_toggle', () => {\n      this.onUpdateDialogFilters({_: 'updateDialogFilters'});\n    });\n\n    return this.appStateManager.getState().then((state) => {\n      const filtersArr = this.prependFilters(state.filtersArr);\n      filtersArr.map((filter) => {\n        this.saveDialogFilter(filter, false, true);\n      });\n    });\n  }\n\n  /**\n   * ! use it only with saving\n   */\n  private prependFilters(filters: DialogFilter[]) {\n    filters = filters.slice();\n\n    const allChatsFilter = this.localFilters[FOLDER_ID_ALL];\n    const archiveFilter = this.localFilters[FOLDER_ID_ARCHIVE];\n\n    const allChatsFilterIndex = filters.findIndex((filter) => filter._ === 'dialogFilterDefault' || filter.id === FOLDER_ID_ALL);\n    if(allChatsFilterIndex !== -1) filters[allChatsFilterIndex] = allChatsFilter;\n    else filters.unshift(allChatsFilter);\n\n    findAndSplice(filters, (filter) => (filter as MyDialogFilter).id === FOLDER_ID_ARCHIVE);\n    filters.splice(/* 1 */filters[0] === allChatsFilter ? 1 : 0, 0, archiveFilter);\n\n    this.localId = START_LOCAL_ID;\n    filters.forEach((filter) => {\n      delete filter.localId;\n    });\n\n    return filters;\n  }\n\n  private generateLocalFilter(id: REAL_FOLDER_ID) {\n    const filter: MyDialogFilter = {...copy(LOCAL_FILTER), id};\n    if(id === FOLDER_ID_ALL) {\n      filter.pFlags.exclude_archived = true;\n    } else if(id === FOLDER_ID_ARCHIVE) {\n      filter.pFlags.exclude_unarchived = true;\n    }\n\n    if(REAL_FOLDERS.has(id)) {\n      filter.pinnedPeerIds = this.dialogsStorage.getPinnedOrders(id);\n    }\n\n    return filter;\n  }\n\n  // private getLocalFilter(id: number) {\n  //   return this.filters[id] ??= this.generateLocalFilter(id);\n  // }\n\n  public clear = (init?: boolean) => {\n    if(!init) {\n      // safeReplaceObject(this.filters, {});\n      this.reloadedPeerIds.clear();\n      this.clearFilters();\n    } else {\n      this.filters = {};\n      this.filtersArr = [];\n      this.reloadedPeerIds = new Set();\n\n      this.localFilters = {};\n      for(const filterId of REAL_FOLDERS) {\n        this.localFilters[filterId] = this.generateLocalFilter(filterId as REAL_FOLDER_ID);\n      }\n    }\n\n    this.localId = START_LOCAL_ID;\n  };\n\n  private onUpdateDialogFilter = (update: Update.updateDialogFilter) => {\n    if(update.filter) {\n      this.saveDialogFilter(update.filter as any);\n    } else if(this.filters[update.id]) { // Папка удалена\n      // this.getDialogFilters(true);\n      this.rootScope.dispatchEvent('filter_delete', this.filters[update.id]);\n      delete this.filters[update.id];\n      findAndSplice(this.filtersArr, (filter) => (filter as DialogFilter.dialogFilter).id === update.id);\n    }\n\n    this.pushToState();\n  };\n\n  private onUpdateDialogFilters = (update: Update.updateDialogFilters) => {\n    // console.warn('updateDialogFilters', update);\n\n    const oldFilters = copy(this.filters);\n\n    this.getDialogFilters(true).then((filters) => {\n      for(const _filterId in oldFilters) {\n        const filterId = +_filterId;\n        if(!filters.find((filter) => filter.id === filterId)) { // * deleted\n          this.onUpdateDialogFilter({_: 'updateDialogFilter', id: filterId});\n        }\n      }\n\n      this.onUpdateDialogFilterOrder({_: 'updateDialogFilterOrder', order: filters.map((filter) => filter.id)});\n    });\n  };\n\n  private onUpdateDialogFilterOrder = (update: Update.updateDialogFilterOrder) => {\n    // console.log('updateDialogFilterOrder', update);\n\n    const order = update.order.slice();\n    if(!order.includes(FOLDER_ID_ARCHIVE)) {\n      order.splice(order[0] === FOLDER_ID_ALL ? 1 : 0, 0, FOLDER_ID_ARCHIVE);\n    }\n\n    this.localId = START_LOCAL_ID;\n    order.forEach((filterId) => {\n      const filter = this.filters[filterId];\n      delete filter.localId;\n      this.setLocalId(filter);\n    });\n\n    this.rootScope.dispatchEvent('filter_order', order);\n\n    this.pushToState();\n  };\n\n  private pushToState() {\n    this.appStateManager.pushToState('filtersArr', this.filtersArr);\n  }\n\n  public testDialogForFilter(dialog: Dialog | ForumTopic.forumTopic, filter?: MyDialogFilter) {\n    if(!filter) {\n      return true;\n    }\n\n    if(REAL_FOLDERS.has(filter.id)) {\n      return (dialog as Dialog).folder_id === filter.id && this.dialogsStorage.canSaveDialogByPeerId(dialog.peerId);\n    }\n\n    const peerId = dialog.peerId;\n\n    // * check whether dialog exists\n    if(!this.appMessagesManager.getDialogOnly(peerId)) {\n      return false;\n    }\n\n    // exclude_peers\n    if(filter.excludePeerIds.includes(peerId)) {\n      return false;\n    }\n\n    // include_peers\n    if(filter.includePeerIds.includes(peerId)) {\n      return true;\n    }\n\n    const pFlags = filter.pFlags;\n\n    // exclude_archived\n    if(pFlags.exclude_archived && (dialog as Dialog).folder_id === FOLDER_ID_ARCHIVE) {\n      return false;\n    }\n\n    // exclude_read\n    if(pFlags.exclude_read && !this.appMessagesManager.isDialogUnread(dialog)) {\n      return false;\n    }\n\n    // exclude_muted\n    if(pFlags.exclude_muted && this.appNotificationsManager.isPeerLocalMuted({peerId}) && !(dialog.unread_mentions_count && dialog.unread_count)) {\n      return false;\n    }\n\n    if(this.appPeersManager.isAnyChat(peerId)) {\n      // broadcasts\n      if(pFlags.broadcasts && this.appPeersManager.isBroadcast(peerId)) {\n        return true;\n      }\n\n      // groups\n      if(pFlags.groups && this.appPeersManager.isAnyGroup(peerId)) {\n        return true;\n      }\n    } else {\n      const userId = peerId.toUserId();\n\n      // bots\n      if(this.appUsersManager.isBot(userId)) {\n        return !!pFlags.bots;\n      }\n\n      // non_contacts\n      if(pFlags.non_contacts && !this.appUsersManager.isContact(userId)) {\n        return true;\n      }\n\n      // contacts\n      if(pFlags.contacts && this.appUsersManager.isContact(userId)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public testDialogForFilterId(dialog: Dialog, filterId: number) {\n    return this.testDialogForFilter(dialog, this.filters[filterId]);\n  }\n\n  public getFilter(filterId: number) {\n    return this.filters[filterId];\n  }\n\n  public getFilters() {\n    return this.filters;\n  }\n\n  public clearFilters() {\n    const filters = this.getFilters();\n    for(const filterId in filters) { // delete filters\n      if(REAL_FOLDERS.has(+filterId)) {\n        continue;\n      }\n\n      this.onUpdateDialogFilter({\n        _: 'updateDialogFilter',\n        id: +filterId\n      });\n    }\n  }\n\n  public async toggleDialogPin(peerId: PeerId, filterId: number) {\n    const filter = this.filters[filterId];\n\n    const index = filter.pinnedPeerIds.indexOf(peerId);\n    const wasPinned = index !== -1;\n\n    if(wasPinned) {\n      filter.pinned_peers.splice(index, 1);\n      filter.pinnedPeerIds.splice(index, 1);\n    }\n\n    if(!wasPinned) {\n      if(filter.pinned_peers.length >= (await this.apiManager.getConfig()).pinned_infolder_count_max) {\n        return Promise.reject(makeError('PINNED_DIALOGS_TOO_MUCH'));\n      }\n\n      filter.pinned_peers.unshift(this.appPeersManager.getInputPeerById(peerId));\n      filter.pinnedPeerIds.unshift(peerId);\n    }\n\n    return this.updateDialogFilter(filter);\n  }\n\n  public createDialogFilter(filter: MyDialogFilter, prepend?: boolean) {\n    const maxId = Math.max(1, ...Object.keys(this.filters).map((i) => +i));\n    filter = copy(filter);\n    filter.id = maxId + 1;\n    return this.updateDialogFilter(filter, undefined, prepend);\n  }\n\n  public updateDialogFilter(filter: MyDialogFilter, remove = false, prepend = false) {\n    const flags = remove ? 0 : 1;\n\n    return this.apiManager.invokeApi('messages.updateDialogFilter', {\n      flags,\n      id: filter.id,\n      filter: remove ? undefined : this.getOutputDialogFilter(filter)\n    }).then((bool) => { // возможно нужна проверка и откат, если результат не ТРУ\n      // console.log('updateDialogFilter bool:', bool);\n\n      /* if(!this.filters[filter.id]) {\n        this.saveDialogFilter(filter);\n      }\n\n      rootScope.$broadcast('filter_update', filter); */\n\n      this.onUpdateDialogFilter({\n        _: 'updateDialogFilter',\n        id: filter.id,\n        filter: remove ? undefined : filter as any\n      });\n\n      if(prepend) {\n        const f: MyDialogFilter[] = [];\n        for(const filterId in this.filters) {\n          const filter = this.filters[filterId];\n          ++filter.localId;\n          f.push(filter);\n        }\n\n        filter.localId = START_LOCAL_ID;\n\n        const order = f.sort((a, b) => a.localId - b.localId).map((filter) => filter.id);\n        this.onUpdateDialogFilterOrder({\n          _: 'updateDialogFilterOrder',\n          order\n        });\n      }\n    });\n  }\n\n  public updateDialogFiltersOrder(order: number[]) {\n    return this.apiManager.invokeApi('messages.updateDialogFiltersOrder', {\n      order\n    }).then(() => {\n      this.onUpdateDialogFilterOrder({\n        _: 'updateDialogFilterOrder',\n        order\n      });\n    });\n  }\n\n  public getOutputDialogFilter(filter: MyDialogFilter) {\n    const c = copy(filter);\n    /* convertment.forEach(([from, to]) => {\n      c[from] = c[to].map((peerId) => this.appPeersManager.getInputPeerById(peerId));\n    }); */\n\n    this.filterIncludedPinnedPeers(filter);\n\n    return c;\n  }\n\n  private filterIncludedPinnedPeers(filter: MyDialogFilter) {\n    forEachReverse(filter.includePeerIds, (peerId, idx) => {\n      if(filter.pinnedPeerIds.includes(peerId)) {\n        filter.include_peers.splice(idx, 1);\n        filter.includePeerIds.splice(idx, 1);\n      }\n    });\n  }\n\n  // private spliceMissingPeerIds(filterId: number, type: ArgumentTypes<FiltersStorage['reloadMissingPeerIds']>[1], missingPeerIds: PeerId[]) {\n  //   const filter = this.getFilter(filterId);\n  //   const peers = filter && filter[type];\n  //   if(!peers?.length) {\n  //     return;\n  //   }\n\n  //   let spliced = false;\n  //   missingPeerIds.forEach((peerId) => {\n  //     const inputPeer = findAndSplice(peers, (inputPeer) => getPeerId(inputPeer) === peerId);\n  //     if(inputPeer) {\n  //       spliced = true;\n  //     }\n  //   });\n\n  //   if(spliced) {\n  //     this.onUpdateDialogFilter({\n  //       _: 'updateDialogFilter',\n  //       id: filterId,\n  //       filter\n  //     });\n  //   }\n  // }\n\n  public reloadMissingPeerIds(\n    filterId: number,\n    type: 'pinned_peers' | 'include_peers' | 'exclude_peers' = 'pinned_peers'\n  ) {\n    const filter = this.getFilter(filterId);\n    const peers = filter?.[type];\n    if(!peers?.length) {\n      return;\n    }\n\n    // const missingPeerIds: PeerId[] = [];\n    const reloadDialogs = peers.filter((inputPeer) => {\n      const peerId = this.appPeersManager.getPeerId(inputPeer);\n      const isAlreadyReloaded = this.reloadedPeerIds.has(peerId);\n      const dialog = this.appMessagesManager.getDialogOnly(peerId);\n      // if(isAlreadyReloaded && !dialog) {\n      //   missingPeerIds.push(peerId);\n      // }\n\n      const reload = !isAlreadyReloaded && !dialog;\n      return reload;\n    });\n\n    if(!reloadDialogs.length) {\n      // if(missingPeerIds.length) {\n      //   this.spliceMissingPeerIds(filterId, type, missingPeerIds);\n      // }\n\n      return;\n    }\n\n    const reloadPromises = reloadDialogs.map((inputPeer) => {\n      const peerId = this.appPeersManager.getPeerId(inputPeer);\n      const promise = this.appMessagesManager.reloadConversation(inputPeer)\n      .then((dialog) => {\n        this.reloadedPeerIds.add(peerId);\n\n        return dialog ? undefined : peerId;\n      });\n\n      return promise;\n    });\n\n    const reloadPromise = Promise.all(reloadPromises).then((missingPeerIds) => {\n      missingPeerIds = missingPeerIds.filter(Boolean);\n      if(!missingPeerIds.length) {\n        return;\n      }\n\n      // this.spliceMissingPeerIds(filterId, type, missingPeerIds);\n    });\n\n    return reloadPromise;\n  }\n\n  public async getDialogFilters(overwrite = false): Promise<MyDialogFilter[]> {\n    const keys = Object.keys(this.filters);\n    if(keys.length > PREPENDED_FILTERS && !overwrite) {\n      return keys.map((filterId) => this.filters[filterId]).sort((a, b) => a.localId - b.localId);\n    }\n\n    const filters = await this.apiManager.invokeApiSingle('messages.getDialogFilters');\n    const prepended = this.prependFilters(filters);\n    return prepended.map((filter) => this.saveDialogFilter(filter, overwrite)).filter(Boolean);\n  }\n\n  public getSuggestedDialogsFilters() {\n    return this.apiManager.invokeApi('messages.getSuggestedDialogFilters');\n  }\n\n  public saveDialogFilter(filter: DialogFilter, update = true, silent?: boolean) {\n    // defineNotNumerableProperties(filter, ['includePeerIds', 'excludePeerIds', 'pinnedPeerIds']);\n\n    if(filter._ === 'dialogFilterDefault') {\n      filter = this.localFilters[FOLDER_ID_ALL];\n    }\n\n    assumeType<MyDialogFilter>(filter);\n    if(!REAL_FOLDERS.has(filter.id)) {\n      convertment.forEach(([from, to]) => {\n        assumeType<MyDialogFilter>(filter);\n        filter[to] = filter[from].map((peer) => this.appPeersManager.getPeerId(peer));\n      });\n\n      this.filterIncludedPinnedPeers(filter);\n\n      filter.include_peers = filter.pinned_peers.concat(filter.include_peers);\n      filter.includePeerIds = filter.pinnedPeerIds.concat(filter.includePeerIds);\n    }\n\n    const oldFilter = this.filters[filter.id];\n    if(oldFilter) {\n      Object.assign(oldFilter, filter);\n    } else {\n      this.filters[filter.id] = filter;\n    }\n\n    this.setLocalId(filter);\n\n    if(!silent) {\n      if(update) {\n        this.rootScope.dispatchEvent('filter_update', filter);\n      } else if(!oldFilter) {\n        this.rootScope.dispatchEvent('filter_new', filter);\n      }\n    }\n\n    return filter;\n  }\n\n  private setLocalId(filter: MyDialogFilter) {\n    if(filter.localId !== undefined) {\n      if(filter.localId >= this.localId) {\n        this.localId = filter.localId + 1;\n      }\n    } else {\n      filter.localId = this.localId++ as MyDialogFilter['localId'];\n      findAndSplice(this.filtersArr, (_filter) => _filter.id === filter.id);\n      this.filtersArr.push(filter);\n      this.pushToState();\n    }\n  }\n\n  public async isFilterIdAvailable(filterId: number) {\n    if(REAL_FOLDERS.has(filterId)) {\n      return true;\n    }\n\n    const limit = await this.apiManager.getLimit('folders');\n    const isFolderAvailable = this.filtersArr.filter((filter) => !REAL_FOLDERS.has(filter.id)).slice(0, limit).some((filter) => filter.id === filterId);\n\n    return isFolderAvailable;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport default function applyMixins(derivedCtor: any, constructors: any[]) {\n  // const callbacks: Array<(...args: any[]) => any> = [];\n\n  constructors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      const value: PropertyDescriptor = Object.getOwnPropertyDescriptor(baseCtor.prototype, name) || Object.create(null);\n      /* if(name === '_constructor') {\n        callbacks.push(value.value);\n        return;\n      } else  */if(name === 'constructor') {\n        return;\n      }\n\n      Object.defineProperty(\n        derivedCtor.prototype,\n        name,\n        value\n      );\n    });\n  });\n\n  // if(callbacks.length) {\n  //   function c(...args: any[]): any {\n  //     callbacks.forEach((cb, idx) => {\n  //       // @ts-ignore\n  //       cb.apply(this, args[idx] || []);\n  //     });\n  //   };\n\n  //   Object.defineProperty(derivedCtor.prototype, 'superConstructor', {\n  //     configurable: true,\n  //     enumerable: true,\n  //     value: c,\n  //     writable: true\n  //   });\n  // }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport DEBUG from '../../config/debug';\nimport {ConstructorDeclMap, Message, MessageEntity, MessageFwdHeader, Peer, Update, Updates} from '../../layer';\nimport {logger, LogTypes} from '../logger';\nimport assumeType from '../../helpers/assumeType';\nimport App from '../../config/app';\nimport filterUnique from '../../helpers/array/filterUnique';\nimport {AppManager} from './manager';\nimport parseMarkdown from '../richTextProcessor/parseMarkdown';\nimport ctx from '../../environment/ctx';\nimport EventListenerBase from '../../helpers/eventListenerBase';\nimport applyMixins from '../../helpers/applyMixins';\n\ntype UpdatesState = {\n  pendingPtsUpdates: (Update & {pts: number, pts_count: number})[],\n  pendingSeqUpdates?: {[seq: number]: {seq: number, date: number, updates: any[]}},\n  syncPending: {\n    seqAwaiting?: number,\n    ptsAwaiting?: boolean,\n    timeout: number\n  },\n  syncLoading: Promise<void>,\n\n  seq?: number,\n  pts?: number,\n  date?: number,\n  lastPtsUpdateTime?: number,\n  lastDifferenceTime?: number\n};\n\nconst SYNC_DELAY = 6;\n\nclass ApiUpdatesManager {\n  public updatesState: UpdatesState = {\n    pendingPtsUpdates: [],\n    pendingSeqUpdates: {},\n    syncPending: null,\n    syncLoading: null\n  };\n\n  private channelStates: {[channelId: ChatId]: UpdatesState} = {};\n  private attached = false;\n\n  private log = logger('UPDATES', LogTypes.Error | LogTypes.Warn | LogTypes.Log/*  | LogTypes.Debug */);\n  private debug = DEBUG;\n\n  private subscriptions: {[channelId: ChatId]: {count: number, interval?: number}} = {};\n\n  constructor() {\n    this._constructor(false);\n  }\n\n  private setProxy() {\n    const self = this;\n    this.updatesState = new Proxy(this.updatesState, {\n      set: function(target: ApiUpdatesManager['updatesState'], key: keyof ApiUpdatesManager['updatesState'], value: ApiUpdatesManager['updatesState'][typeof key]) {\n        // @ts-ignore\n        target[key] = value;\n        self.saveUpdatesState();\n        return true;\n      }\n    });\n  }\n\n  public saveUpdatesState() {\n    const us = this.updatesState;\n    this.appStateManager.pushToState('updates', {\n      seq: us.seq,\n      pts: us.pts,\n      date: us.date\n    });\n  }\n\n  private popPendingSeqUpdate() {\n    const state = this.updatesState;\n    const nextSeq = state.seq + 1;\n    const pendingUpdatesData = state.pendingSeqUpdates[nextSeq];\n    if(!pendingUpdatesData) {\n      return false;\n    }\n\n    const updates = pendingUpdatesData.updates;\n    for(let i = 0, length = updates.length; i < length; ++i) {\n      this.saveUpdate(updates[i]);\n    }\n\n    state.seq = pendingUpdatesData.seq;\n    if(pendingUpdatesData.date && state.date < pendingUpdatesData.date) {\n      state.date = pendingUpdatesData.date;\n    }\n    delete state.pendingSeqUpdates[nextSeq];\n\n    if(!this.popPendingSeqUpdate() &&\n      state.syncPending?.seqAwaiting &&\n      state.seq >= state.syncPending.seqAwaiting) {\n      if(!state.syncPending.ptsAwaiting) {\n        this.clearStatePendingSync(state);\n      } else {\n        delete state.syncPending.seqAwaiting;\n      }\n    }\n\n    return true;\n  }\n\n  private popPendingPtsUpdate(channelId: ChatId) {\n    const curState = channelId ? this.getChannelState(channelId) : this.updatesState;\n    if(!curState.pendingPtsUpdates.length) {\n      return false;\n    }\n\n    curState.pendingPtsUpdates.sort((a, b) => {\n      return a.pts - b.pts;\n    });\n    // this.log('pop update', channelId, curState.pendingPtsUpdates)\n\n    let curPts = curState.pts;\n    let goodPts = 0;\n    let goodIndex = 0;\n    for(let i = 0, length = curState.pendingPtsUpdates.length; i < length; ++i) {\n      const update = curState.pendingPtsUpdates[i];\n      curPts += update.pts_count;\n      if(curPts >= update.pts) {\n        goodPts = update.pts;\n        goodIndex = i;\n      }\n    }\n\n    if(!goodPts) {\n      return false;\n    }\n\n    this.debug && this.log.debug('pop pending pts updates', goodPts, curState.pendingPtsUpdates.slice(0, goodIndex + 1));\n\n    curState.pts = goodPts;\n    for(let i = 0; i <= goodIndex; ++i) {\n      const update = curState.pendingPtsUpdates[i];\n\n      // @ts-ignore\n      this.saveUpdate(update);\n    }\n    curState.pendingPtsUpdates.splice(0, goodIndex + 1);\n\n    if(!curState.pendingPtsUpdates.length && curState.syncPending) {\n      if(!curState.syncPending.seqAwaiting) {\n        this.clearStatePendingSync(curState);\n      } else {\n        delete curState.syncPending.ptsAwaiting;\n      }\n    }\n\n    return true;\n  }\n\n  public forceGetDifference() {\n    if(!this.updatesState.syncLoading) {\n      this.getDifference();\n    }\n  }\n\n  public processLocalUpdate(update: Update) {\n    this.processUpdateMessage({\n      _: 'updateShort',\n      update\n    } as Updates);\n  }\n\n  public processUpdateMessage = (updateMessage: any, options: Partial<{\n    override: boolean\n  }> = {}) => {\n    // return forceGetDifference()\n    const processOpts = {\n      date: updateMessage.date,\n      seq: updateMessage.seq,\n      seqStart: updateMessage.seq_start\n      // ignoreSyncLoading: options.ignoreSyncLoading\n    };\n\n    this.debug && this.log.debug('processUpdateMessage', updateMessage);\n\n    switch(updateMessage._) {\n      case 'updatesTooLong':\n      case 'new_session_created':\n        this.forceGetDifference();\n        break;\n\n      case 'updateShort':\n        this.processUpdate(updateMessage.update, processOpts);\n        break;\n\n      case 'updateShortMessage':\n      case 'updateShortChatMessage': {\n        assumeType<Updates.updateShortChatMessage | Updates.updateShortMessage>(updateMessage);\n        this.debug && this.log.debug('updateShortMessage | updateShortChatMessage', {...updateMessage});\n        const isOut = updateMessage.pFlags.out;\n        const fromId = (updateMessage as Updates.updateShortChatMessage).from_id || (isOut ? this.appPeersManager.peerId : (updateMessage as Updates.updateShortMessage).user_id);\n        const toId = (updateMessage as Updates.updateShortChatMessage).chat_id ?\n          (updateMessage as Updates.updateShortChatMessage).chat_id.toPeerId(true) :\n          ((updateMessage as Updates.updateShortMessage).user_id.toPeerId(false) || this.appPeersManager.peerId);\n\n        this.processUpdate({\n          _: 'updateNewMessage',\n          message: {\n            _: 'message',\n            pFlags: updateMessage.pFlags,\n            id: updateMessage.id,\n            from_id: this.appPeersManager.getOutputPeer(fromId.toPeerId()),\n            peer_id: this.appPeersManager.getOutputPeer(toId),\n            date: updateMessage.date,\n            message: updateMessage.message,\n            fwd_from: updateMessage.fwd_from,\n            reply_to: updateMessage.reply_to,\n            entities: updateMessage.entities\n          },\n          pts: updateMessage.pts,\n          pts_count: updateMessage.pts_count\n        }, processOpts);\n        break;\n      }\n\n      case 'updatesCombined':\n      case 'updates':\n        this.appUsersManager.saveApiUsers(updateMessage.users, options.override);\n        this.appChatsManager.saveApiChats(updateMessage.chats, options.override);\n\n        updateMessage.updates.forEach((update: Update) => {\n          this.processUpdate(update, processOpts);\n        });\n        break;\n\n      default:\n        this.log.warn('Unknown update message', updateMessage);\n    }\n  };\n\n  private getDifference(first = false): Promise<void> {\n    // this.trace('Get full diff')\n    const updatesState = this.updatesState;\n    const wasSyncing = updatesState.syncLoading;\n    if(!wasSyncing) {\n      updatesState.pendingSeqUpdates = {};\n      updatesState.pendingPtsUpdates = [];\n    }\n\n    this.clearStatePendingSync(updatesState);\n\n    const promise = this.apiManager.invokeApi('updates.getDifference', {\n      pts: updatesState.pts,\n      pts_total_limit: first /* && false  */? /* 50 */1200 : undefined,\n      date: updatesState.date,\n      qts: -1\n    }, {\n      timeout: 0x7fffffff\n    }).then((differenceResult) => {\n      this.debug && this.log.debug('Get diff result', differenceResult);\n\n      if(differenceResult._ === 'updates.differenceEmpty') {\n        this.debug && this.log.debug('apply empty diff', differenceResult.seq);\n        updatesState.date = differenceResult.date;\n        updatesState.seq = differenceResult.seq;\n        return;\n      }\n\n      // ! SORRY I'M SORRY I'M SORRY\n      if(first) {\n        this.rootScope.dispatchEvent('state_synchronizing');\n      }\n\n      if(differenceResult._ !== 'updates.differenceTooLong') {\n        this.appUsersManager.saveApiUsers(differenceResult.users);\n        this.appChatsManager.saveApiChats(differenceResult.chats);\n\n        // Should be first because of updateMessageID\n        // this.log('applying', differenceResult.other_updates.length, 'other updates')\n\n        differenceResult.other_updates.forEach((update) => {\n          switch(update._) {\n            case 'updateChannelTooLong':\n            case 'updateNewChannelMessage':\n            case 'updateEditChannelMessage':\n              this.processUpdate(update);\n              return;\n          }\n\n          this.saveUpdate(update);\n        });\n\n        // this.log('applying', differenceResult.new_messages.length, 'new messages')\n        differenceResult.new_messages.forEach((apiMessage) => {\n          this.saveUpdate({\n            _: 'updateNewMessage',\n            message: apiMessage,\n            pts: updatesState.pts,\n            pts_count: 0\n          });\n        });\n\n        const nextState = differenceResult._ === 'updates.difference' ? differenceResult.state : differenceResult.intermediate_state;\n        updatesState.seq = nextState.seq;\n        updatesState.pts = nextState.pts;\n        updatesState.date = nextState.date;\n      } else {\n        updatesState.pts = differenceResult.pts;\n        updatesState.date = (Date.now() / 1000 | 0) + this.timeManager.getServerTimeOffset();\n        delete updatesState.seq;\n\n        this.channelStates = {};\n\n        this.log.warn('getDifference:', differenceResult._);\n        this.onDifferenceTooLong();\n      }\n\n      // this.log('apply diff', updatesState.seq, updatesState.pts)\n\n      if(differenceResult._ === 'updates.differenceSlice') {\n        return this.getDifference();\n      } else {\n        this.debug && this.log.debug('finished get diff');\n      }\n    });\n\n    if(!wasSyncing) {\n      this.justAName(updatesState, promise);\n    }\n\n    return promise;\n  }\n\n  private clearStatePendingSync(state: UpdatesState) {\n    if(state.syncPending) {\n      clearTimeout(state.syncPending.timeout);\n      state.syncPending = null;\n    }\n  }\n\n  private getChannelDifference(channelId: ChatId): Promise<void> {\n    const channelState = this.getChannelState(channelId);\n    const wasSyncing = channelState.syncLoading;\n    if(!wasSyncing) {\n      channelState.pendingPtsUpdates = [];\n    }\n\n    this.clearStatePendingSync(channelState);\n\n    const log = this.debug ? this.log.bindPrefix('getChannelDifference-' + channelId) : undefined;\n    // this.log.trace('Get channel diff', appChatsManager.getChat(channelId), channelState.pts);\n    const promise = this.apiManager.invokeApi('updates.getChannelDifference', {\n      channel: this.appChatsManager.getChannelInput(channelId),\n      filter: {_: 'channelMessagesFilterEmpty'},\n      pts: channelState.pts,\n      limit: 1000\n    }, {timeout: 0x7fffffff}).then((differenceResult) => {\n      log?.debug('diff result', differenceResult)\n      channelState.pts = 'pts' in differenceResult ? differenceResult.pts : undefined;\n      channelState.lastDifferenceTime = Date.now();\n\n      if(differenceResult._ === 'updates.channelDifferenceEmpty') {\n        // log?.debug('apply channel empty diff', differenceResult);\n        return;\n      }\n\n      if(differenceResult._ === 'updates.channelDifferenceTooLong') {\n        // log?.debug('channel diff too long', differenceResult);\n        delete this.channelStates[channelId];\n\n        this.saveUpdate({_: 'updateChannelReload', channel_id: channelId});\n        return;\n      }\n\n      this.appUsersManager.saveApiUsers(differenceResult.users);\n      this.appChatsManager.saveApiChats(differenceResult.chats);\n\n      // Should be first because of updateMessageID\n      log?.debug('applying', differenceResult.other_updates.length, 'channel other updates');\n      differenceResult.other_updates.forEach((update) => {\n        this.saveUpdate(update);\n      });\n\n      log?.debug('applying', differenceResult.new_messages.length, 'channel new messages');\n      differenceResult.new_messages.forEach((apiMessage) => {\n        this.saveUpdate({\n          _: 'updateNewChannelMessage',\n          message: apiMessage,\n          pts: channelState.pts,\n          pts_count: 0\n        });\n      });\n\n      log?.debug('apply channel diff', channelState.pts);\n\n      if(differenceResult._ === 'updates.channelDifference' &&\n        !differenceResult.pFlags.final) {\n        return this.getChannelDifference(channelId);\n      } else {\n        log?.debug('finished channel get diff');\n      }\n    });\n\n    if(!wasSyncing) {\n      this.justAName(channelState, promise, channelId);\n    }\n\n    return promise;\n  }\n\n  private onDifferenceTooLong() {\n    this.appUsersManager.clear();\n    this.appChatsManager.clear();\n    this.appMessagesManager.clear();\n\n    this.rootScope.dispatchEvent('state_cleared');\n  }\n\n  private justAName(state: UpdatesState, promise: UpdatesState['syncLoading'], channelId?: ChatId) {\n    state.syncLoading = promise;\n    this.rootScope.dispatchEvent('state_synchronizing', channelId);\n\n    promise.then(() => {\n      state.syncLoading = null;\n      this.rootScope.dispatchEvent('state_synchronized', channelId);\n    }, () => {\n      state.syncLoading = null;\n    });\n  }\n\n  public addChannelState(channelId: ChatId, pts: number) {\n    if(!pts) {\n      throw new Error('Add channel state without pts ' + channelId);\n    }\n\n    return this.channelStates[channelId] ??= {\n      pts,\n      pendingPtsUpdates: [],\n      syncPending: null,\n      syncLoading: null\n    };\n  }\n\n  public getChannelState(channelId: ChatId, pts?: number) {\n    if(this.channelStates[channelId] === undefined) {\n      this.addChannelState(channelId, pts);\n    }\n\n    return this.channelStates[channelId];\n  }\n\n  private processUpdate(update: Update, options: Partial<{\n    date: number,\n    seq: number,\n    seqStart: number/* ,\n    ignoreSyncLoading: boolean */\n  }> = {}) {\n    let channelId: ChatId;\n    switch(update._) {\n      case 'updateNewChannelMessage':\n      case 'updateEditChannelMessage':\n        channelId = this.appPeersManager.getPeerId(update.message.peer_id).toChatId();\n        break;\n      /* case 'updateDeleteChannelMessages':\n        channelId = update.channel_id;\n        break; */\n      case 'updateChannelTooLong':\n        channelId = update.channel_id;\n        if(!(channelId in this.channelStates)) {\n          return false;\n        }\n        break;\n      default:\n        if('channel_id' in update && 'pts' in update) {\n          channelId = update.channel_id;\n        }\n        break;\n    }\n\n    const {pts, pts_count} = update as Update.updateNewMessage;\n    const curState = channelId ? this.getChannelState(channelId, pts) : this.updatesState;\n\n    // this.log.log('process', channelId, curState.pts, update)\n\n    if(curState.syncLoading/*  && !options.ignoreSyncLoading */) {\n      return false;\n    }\n\n    if(update._ === 'updateChannelTooLong') {\n      if(!curState.lastPtsUpdateTime ||\n          curState.lastPtsUpdateTime < (Date.now() - SYNC_DELAY)) {\n        // this.log.trace('channel too long, get diff', channelId, update)\n        this.getChannelDifference(channelId);\n      }\n      return false;\n    }\n\n    if(update._ === 'updateNewMessage' ||\n        update._ === 'updateEditMessage' ||\n        update._ === 'updateNewChannelMessage' ||\n        update._ === 'updateEditChannelMessage') {\n      const message = update.message as Message.message;\n      const toPeerId = this.appPeersManager.getPeerId(message.peer_id);\n      const fwdHeader: MessageFwdHeader.messageFwdHeader = message.fwd_from || {} as any;\n      let reason: string;\n      if(message.from_id && !this.appUsersManager.hasUser(this.appPeersManager.getPeerId(message.from_id), message.pFlags.post/* || channelId*/) && (reason = 'author') ||\n          fwdHeader.from_id && !this.appUsersManager.hasUser(this.appPeersManager.getPeerId(fwdHeader.from_id), !!(fwdHeader.from_id as Peer.peerChannel).channel_id) && (reason = 'fwdAuthor') ||\n          (fwdHeader.from_id as Peer.peerChannel)?.channel_id && !this.appChatsManager.hasChat((fwdHeader.from_id as Peer.peerChannel).channel_id, true) && (reason = 'fwdChannel') ||\n          toPeerId.isUser() && !this.appUsersManager.hasUser(toPeerId) && (reason = 'toPeer User') ||\n          toPeerId.isAnyChat() && !this.appChatsManager.hasChat(toPeerId.toChatId()) && (reason = 'toPeer Chat')) {\n        this.log.warn('Not enough data for message update', toPeerId, reason, message);\n        if(channelId && this.appChatsManager.hasChat(channelId)) {\n          this.getChannelDifference(channelId);\n        } else {\n          this.forceGetDifference();\n        }\n        return false;\n      }\n    } else if(channelId && !this.appChatsManager.hasChat(channelId)) {\n      // this.log.log('skip update, missing channel', channelId, update)\n      return false;\n    }\n\n    let popPts: boolean;\n    let popSeq: boolean;\n\n    if(pts) {\n      const newPts = curState.pts + (pts_count || 0);\n      if(newPts < pts) {\n        this.debug && this.log.warn('Pts hole', curState, update, channelId && this.appChatsManager.getChat(channelId));\n        curState.pendingPtsUpdates.push(update as Update.updateNewMessage);\n        if(!curState.syncPending && !curState.syncLoading) {\n          curState.syncPending = {\n            timeout: ctx.setTimeout(() => {\n              curState.syncPending = null;\n\n              if(curState.syncLoading) {\n                return;\n              }\n\n              if(channelId) {\n                this.getChannelDifference(channelId);\n              } else {\n                this.getDifference();\n              }\n            }, SYNC_DELAY)\n          };\n        }\n\n        curState.syncPending.ptsAwaiting = true;\n        return false;\n      }\n\n      if(pts > curState.pts) {\n        curState.pts = pts;\n        popPts = true;\n\n        curState.lastPtsUpdateTime = Date.now();\n      } else if(pts_count) {\n        // this.log.warn('Duplicate update', update)\n        return false;\n      }\n\n      if(channelId && options.date && this.updatesState.date < options.date) {\n        this.updatesState.date = options.date;\n      }\n    } else if(!channelId && options.seq > 0) {\n      const seq = options.seq;\n      const seqStart = options.seqStart || seq;\n\n      if(seqStart !== curState.seq + 1) {\n        if(seqStart > curState.seq) {\n          this.debug && this.log.warn('Seq hole', curState, curState.syncPending?.seqAwaiting);\n\n          curState.pendingSeqUpdates[seqStart] ??= {seq, date: options.date, updates: []};\n          curState.pendingSeqUpdates[seqStart].updates.push(update);\n\n          if(!curState.syncPending) {\n            curState.syncPending = {\n              timeout: ctx.setTimeout(() => {\n                curState.syncPending = null;\n\n                if(curState.syncLoading) {\n                  return;\n                }\n\n                this.getDifference();\n              }, SYNC_DELAY)\n            };\n          }\n\n          if(!curState.syncPending.seqAwaiting ||\n            curState.syncPending.seqAwaiting < seqStart) {\n            curState.syncPending.seqAwaiting = seqStart;\n          }\n          return false;\n        }\n      }\n\n      if(curState.seq !== seq) {\n        curState.seq = seq;\n        if(options.date && curState.date < options.date) {\n          curState.date = options.date;\n        }\n\n        popSeq = true;\n      }\n    }\n\n    this.saveUpdate(update);\n\n    if(popPts) {\n      this.popPendingPtsUpdate(channelId);\n    } else if(popSeq) {\n      this.popPendingSeqUpdate();\n    }\n  }\n\n  public saveUpdate(update: Update) {\n    // this.debug && this.log('saveUpdate', update);\n    this.dispatchEvent(update._, update as any);\n  }\n\n  public subscribeToChannelUpdates(channelId: ChatId) {\n    const subscription = this.subscriptions[channelId] ??= {count: 0};\n    ++subscription.count;\n\n    const cb = () => {\n      const state = this.getChannelState(channelId);\n      if(!state.syncLoading && (!state.lastDifferenceTime || (Date.now() - state.lastDifferenceTime) > 2500)) {\n        this.getChannelDifference(channelId);\n      }\n    };\n\n    subscription.interval ??= ctx.setInterval(cb, 3000);\n    cb();\n  }\n\n  public unsubscribeFromChannelUpdates(channelId: ChatId, force?: boolean) {\n    const subscription = this.subscriptions[channelId];\n    if(!subscription?.interval || (--subscription.count && !force)) {\n      return;\n    }\n\n    clearInterval(subscription.interval);\n    subscription.interval = undefined;\n    delete this.subscriptions[channelId];\n  }\n\n  public attach(langCode?: string) {\n    if(this.attached) return;\n\n    // return;\n\n    this.log('attach');\n\n    this.attached = true;\n\n    this.appStateManager.getState().then(({updates: state}) => {\n      const newVersion = this.appStateManager.newVersion/*  || '1.6.0' */;\n\n      // rootScope.broadcast('state_synchronizing');\n      if(!state || !state.pts || !state.date/*  || !state.seq */) { // seq can be undefined because of updates.differenceTooLong\n        this.log('will get new state');\n\n        this.updatesState.syncLoading = new Promise((resolve) => {\n          this.apiManager.invokeApi('updates.getState', {}, {noErrorBox: true}).then((stateResult) => {\n            this.updatesState.seq = stateResult.seq;\n            this.updatesState.pts = stateResult.pts;\n            this.updatesState.date = stateResult.date;\n            this.saveUpdatesState();\n            // setTimeout(() => {\n            this.updatesState.syncLoading = null;\n            resolve();\n            // rootScope.broadcast('state_synchronized');\n            // }, 1000);\n\n          // ! for testing\n          // updatesState.seq = 1\n          // updatesState.pts = stateResult.pts - 5000\n          // updatesState.date = 1\n          // getDifference()\n          });\n        });\n      } else {\n        // ! for testing\n        /* state.seq = 1;\n        state.pts = state.pts - 15;\n        state.date = 1; */\n        // state.pts -= 100;\n\n        // state.date = 1628623682;\n        // state.pts = 2007500;\n        // state.seq = 503;\n\n        Object.assign(this.updatesState, state);\n\n        this.log('will get difference', Object.assign({}, state));\n\n        this.getDifference(true)/* .finally(() => {\n          if(this.updatesState.syncLoading) {\n            rootScope.broadcast('state_synchronizing');\n          }\n        }) */;\n      }\n\n      this.apiManager.setUpdatesProcessor(this.processUpdateMessage);\n\n      // this.updatesState.syncLoading.then(() => {\n      this.setProxy();\n      // });\n\n      if(newVersion) {\n        this.updatesState.syncLoading.then(async() => {\n          const strs: Record<string, string> = {\n            en: 'was updated to version',\n            ru: 'обновлён до версии'\n          };\n\n          const getChangelog = (lang: string) => {\n            fetch(`changelogs/${lang}_${newVersion.split(' ')[0]}.md`)\n            .then((res) => (res.status === 200 && res.ok && res.text()) || Promise.reject())\n            .then((text) => {\n              const langStr = strs[lang] || strs.en;\n              const pre = `**Telegram Web${App.suffix} ${langStr} ${newVersion}**\\n\\n`;\n\n              text = pre + text;\n\n              const entities: MessageEntity[] = [];\n              const message = parseMarkdown(text, entities);\n\n              const update: Update.updateServiceNotification = {\n                _: 'updateServiceNotification',\n                entities,\n                message,\n                type: 'local',\n                pFlags: {},\n                inbox_date: Date.now() / 1000 | 0,\n                media: undefined\n              };\n\n              this.processLocalUpdate(update);\n            });\n          };\n\n          const languages = filterUnique([langCode, 'en']);\n          for(const language of languages) {\n            try {\n              await getChangelog(language);\n              break;\n            } catch(err) {\n\n            }\n          }\n        });\n      }\n    });\n  }\n}\n\ninterface ApiUpdatesManager extends EventListenerBase<{\n  [name in Update['_']]: (update: ConstructorDeclMap[name]) => void\n}>, AppManager {}\napplyMixins(ApiUpdatesManager, [EventListenerBase, AppManager]);\n\nexport {ApiUpdatesManager};\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {UserProfilePhoto, ChatPhoto, InputFileLocation} from '../../layer';\nimport {DownloadOptions} from '../mtproto/apiFileManager';\nimport {AppManager} from './manager';\n\nexport type PeerPhotoSize = 'photo_small' | 'photo_big';\n\nexport class AppAvatarsManager extends AppManager {\n  private savedAvatarURLs: {\n    [peerId: PeerId]: {\n      [size in PeerPhotoSize]?: string | Promise<string>\n    }\n  } = {};\n\n  protected after() {\n    this.rootScope.addEventListener('avatar_update', ({peerId, threadId}) => {\n      if(threadId) {\n        return;\n      }\n\n      this.removeFromAvatarsCache(peerId);\n    });\n  }\n\n  public isAvatarCached(peerId: PeerId, size?: PeerPhotoSize) {\n    const saved = this.savedAvatarURLs[peerId];\n    if(size === undefined) {\n      return !!saved;\n    }\n\n    return !!(saved && saved[size] && !(saved[size] instanceof Promise));\n  }\n\n  public removeFromAvatarsCache(peerId: PeerId) {\n    if(this.savedAvatarURLs[peerId]) {\n      delete this.savedAvatarURLs[peerId];\n    }\n  }\n\n  public loadAvatar(peerId: PeerId, photo: UserProfilePhoto.userProfilePhoto | ChatPhoto.chatPhoto, size: PeerPhotoSize) {\n    const saved = this.savedAvatarURLs[peerId] ??= {};\n    if(!saved[size]) {\n      // console.warn('will invoke downloadSmallFile:', peerId);\n      const peerPhotoFileLocation: InputFileLocation.inputPeerPhotoFileLocation = {\n        _: 'inputPeerPhotoFileLocation',\n        pFlags: {},\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        photo_id: photo.photo_id\n      };\n\n      const downloadOptions: DownloadOptions = {dcId: photo.dc_id, location: peerPhotoFileLocation};\n      if(size === 'photo_big') {\n        peerPhotoFileLocation.pFlags.big = true;\n        downloadOptions.limitPart = 512 * 1024;\n      }\n\n      /* let str: string;\n      const time = Date.now();\n      if(peerId === 0) {\n        str = `download avatar ${peerId}`;\n      } */\n\n      const promise = this.apiFileManager.download(downloadOptions);\n      return saved[size] = promise.then((blob) => {\n        return saved[size] = URL.createObjectURL(blob);\n\n        /* if(str) {\n          console.log(str, Date.now() / 1000, Date.now() - time);\n        } */\n      });\n    } else {\n      return saved[size];\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {getEnvironment} from '../../environment/utils';\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\nimport {nextRandomUint} from '../../helpers/random';\nimport {InputPhoneCall, MessagesDhConfig, PhoneCall, PhoneCallDiscardReason, PhoneCallProtocol, PhonePhoneCall} from '../../layer';\nimport {AppManager} from './manager';\n\nexport type CallId = PhoneCall['id'];\n\nexport type MyPhoneCall = Exclude<PhoneCall, PhoneCall.phoneCallEmpty | PhoneCall.phoneCallDiscarded>;\n\nexport class AppCallsManager extends AppManager {\n  private calls: Map<CallId, MyPhoneCall>;\n\n  protected after() {\n    this.calls = new Map();\n\n    if(!getEnvironment().IS_CALL_SUPPORTED) {\n      return;\n    }\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updatePhoneCall: (update) => {\n        this.saveCall(update.phone_call);\n      },\n\n      updatePhoneCallSignalingData: (update) => {\n        this.rootScope.dispatchEvent('call_signaling', {callId: update.phone_call_id, data: update.data});\n      }\n    });\n  }\n\n  public computeKey(g_b: Uint8Array, a: Uint8Array, p: Uint8Array) {\n    return this.cryptoWorker.invokeCrypto('compute-dh-key', g_b, a, p);\n  }\n\n  public saveCall(call: PhoneCall) {\n    const isDiscarded = call._ === 'phoneCallDiscarded';\n    const oldCall = this.calls.get(call.id);\n    if(oldCall) {\n      // if(shouldUpdate) {\n      safeReplaceObject(oldCall, call);\n      // }\n\n      if(isDiscarded) {\n        this.calls.delete(call.id);\n      }\n\n      call = oldCall;\n    } else if(!isDiscarded) {\n      this.calls.set(call.id, call as any);\n    }\n\n    this.rootScope.dispatchEvent('call_update', call);\n\n    return call;\n  }\n\n  public getCall(callId: CallId) {\n    return this.calls.get(callId);\n  }\n\n  public getCallInput(id: CallId): InputPhoneCall {\n    const call = this.getCall(id);\n    return {\n      _: 'inputPhoneCall',\n      id: call.id,\n      access_hash: call.access_hash\n    };\n  }\n\n  public savePhonePhoneCall(phonePhoneCall: PhonePhoneCall) {\n    this.appUsersManager.saveApiUsers(phonePhoneCall.users);\n    return this.saveCall(phonePhoneCall.phone_call);\n  }\n\n  public generateDh() {\n    return this.apiManager.invokeApi('messages.getDhConfig', {\n      version: 0,\n      random_length: 256\n    }).then((dhConfig) => {\n      return this.cryptoWorker.invokeCrypto('generate-dh', dhConfig as MessagesDhConfig.messagesDhConfig);\n    });\n  }\n\n  // private verifyProtocolCompatibility(protocol: PhoneCallProtocol) {\n  //   const my = getCallProtocol();\n  //   const myVersion = my.library_versions[0];\n  //   return !protocol.library_versions.find((version) => {\n  //     return compareVersion(myVersion, version) > 0;\n  //   });\n  // }\n\n  public async requestCall(userId: UserId, protocol: PhoneCallProtocol, g_a_hash: Uint8Array, video?: boolean) {\n    const phonePhoneCall = await this.apiManager.invokeApi('phone.requestCall', {\n      user_id: this.appUsersManager.getUserInput(userId),\n      protocol: protocol,\n      video: video,\n      random_id: nextRandomUint(32),\n      g_a_hash: g_a_hash\n    });\n\n    return this.savePhonePhoneCall(phonePhoneCall);\n  }\n\n  public async discardCall(callId: CallId, duration: number, reason: PhoneCallDiscardReason['_'], video?: boolean) {\n    if(!this.getCall(callId)) {\n      return;\n    }\n\n    const updates = await this.apiManager.invokeApi('phone.discardCall', {\n      video,\n      peer: this.getCallInput(callId),\n      duration,\n      reason: {\n        _: reason\n      },\n      connection_id: '0'\n    });\n\n    this.apiUpdatesManager.processUpdateMessage(updates);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport deepEqual from '../../helpers/object/deepEqual';\nimport isObject from '../../helpers/object/isObject';\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\nimport {ChannelParticipant, ChannelsCreateChannel, Chat, ChatAdminRights, ChatBannedRights, ChatInvite, ChatPhoto, ChatReactions, InputChannel, InputChatPhoto, InputFile, InputPeer, MessagesSponsoredMessages, SponsoredMessage, Update, Updates} from '../../layer';\nimport {isRestricted} from '../../helpers/restrictions';\nimport {AppManager} from './manager';\nimport hasRights from './utils/chats/hasRights';\nimport getParticipantPeerId from './utils/chats/getParticipantPeerId';\nimport {AppStoragesManager} from './appStoragesManager';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\nimport {randomLong} from '../../helpers/random';\nimport generateMessageId from './utils/messageId/generateMessageId';\n\nexport type Channel = Chat.channel;\nexport type ChatRights = keyof ChatBannedRights['pFlags'] | keyof ChatAdminRights['pFlags'] | 'change_type' | 'change_permissions' | 'delete_chat' | 'view_participants';\n\nexport class AppChatsManager extends AppManager {\n  private storage: AppStoragesManager['storages']['chats'];\n\n  private chats: {[id: ChatId]: Exclude<Chat, Chat.chatEmpty>};\n  // private usernames: any;\n  // private channelAccess: any;\n  // private megagroups: {[id: number]: true};\n\n  protected after() {\n    this.clear(true);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      /* updateChannel: (update) => {\n        const channelId = update.channel_id;\n        //console.log('updateChannel:', update);\n        rootScope.broadcast('channel_settings', {channelId});\n      }, */\n\n      updateChannelParticipant: (update) => {\n        this.apiManager.clearCache('channels.getParticipants', (params) => {\n          return (params.channel as InputChannel.inputChannel).channel_id === update.channel_id;\n        });\n      },\n\n      updateChatDefaultBannedRights: (update) => {\n        const chatId = this.appPeersManager.getPeerId(update.peer).toChatId();\n        const chat = this.chats[chatId] as Chat.chat;\n        if(chat) {\n          chat.default_banned_rights = update.default_banned_rights;\n          this.rootScope.dispatchEvent('chat_update', chatId);\n        }\n      }\n    });\n\n    return Promise.all([\n      this.appStateManager.getState(),\n      this.appStoragesManager.loadStorage('chats')\n    ]).then(([state, {results: chats, storage}]) => {\n      this.storage = storage;\n\n      this.saveApiChats(chats);\n\n      this.peersStorage.addEventListener('peerNeeded', (peerId) => {\n        if(peerId.isUser() || this.storage.getFromCache(peerId.toChatId())) {\n          return;\n        }\n\n        this.storage.set({\n          [peerId.toChatId()]: this.getChat(peerId.toChatId())\n        });\n      });\n\n      this.peersStorage.addEventListener('peerUnneeded', (peerId) => {\n        if(peerId.isUser() || !this.storage.getFromCache(peerId.toChatId())) {\n          return;\n        }\n\n        this.storage.delete(peerId.toChatId());\n      });\n    });\n  }\n\n  public clear = (init = false) => {\n    if(!init) {\n      for(const chatId in this.chats) {\n        if(!chatId) continue;\n        if(!this.peersStorage.isPeerNeeded(chatId.toPeerId(true))) {\n          const chat = this.chats[chatId];\n          this.appUsersManager.modifyUsernamesCache(chat, false);\n\n          this.storage.delete(chatId);\n          delete this.chats[chatId];\n        }\n      }\n    } else {\n      this.chats = {};\n    }\n  };\n\n  public saveApiChats(apiChats: any[], override?: boolean) {\n    if((apiChats as any).saved) return;\n    (apiChats as any).saved = true;\n    apiChats.forEach((chat) => this.saveApiChat(chat, override));\n  }\n\n  public saveApiChat(chat: Chat, override?: boolean) {\n    if(!chat || chat._ === 'chatEmpty') return;\n    /* if(chat._ !== 'chat' && chat._ !== 'channel') {\n      return;\n    } */\n\n    // * exclude from state\n    // defineNotNumerableProperties(chat, ['rTitle', 'initials']);\n\n    const oldChat = this.chats[chat.id];\n\n    /* if(oldChat && !override) {\n      return;\n    } */\n\n    (chat as Chat.chat).pFlags ??= {};\n\n    if((chat as Chat.channel).pFlags.min && oldChat !== undefined) {\n      return;\n    }\n\n    if(chat._ === 'channel' &&\n        chat.participants_count === undefined &&\n        oldChat !== undefined &&\n        (oldChat as Chat.channel).participants_count) {\n      chat.participants_count = (oldChat as Chat.channel).participants_count;\n    }\n\n    if((chat as Chat.channel).photo?._ === 'chatPhotoEmpty') {\n      delete (chat as Chat.channel).photo;\n    }\n\n    const changedUsername = this.appUsersManager.setUsernameToCache(chat, oldChat);\n\n    /* if(chat.username) {\n      let searchUsername = searchIndexManager.cleanUsername(chat.username);\n      this.usernames[searchUsername] = chat.id;\n    } */\n\n    const peerId = chat.id.toPeerId(true);\n    if(oldChat === undefined) {\n      this.chats[chat.id] = chat;\n    } else {\n      const oldPhotoId = ((oldChat as Chat.chat).photo as ChatPhoto.chatPhoto)?.photo_id;\n      const newPhotoId = ((chat as Chat.chat).photo as ChatPhoto.chatPhoto)?.photo_id;\n      const toggledForum = (oldChat as Chat.channel).pFlags.forum !== (chat as Chat.channel).pFlags.forum;\n      const changedPhoto = oldPhotoId !== newPhotoId || toggledForum;\n\n      const changedTitle = oldChat.title !== chat.title || changedUsername;\n\n      const changedAnyBadge = (oldChat as Chat.channel).pFlags.verified !== (chat as Chat.channel).pFlags.verified ||\n        (oldChat as Chat.channel).pFlags.scam !== (chat as Chat.channel).pFlags.scam ||\n        (oldChat as Chat.channel).pFlags.fake !== (chat as Chat.channel).pFlags.fake;\n\n      safeReplaceObject(oldChat, chat);\n      this.rootScope.dispatchEvent('chat_update', chat.id);\n\n      if(changedPhoto) {\n        this.rootScope.dispatchEvent('avatar_update', {peerId});\n      }\n\n      if(changedTitle || changedAnyBadge) {\n        this.rootScope.dispatchEvent('peer_title_edit', {peerId});\n      }\n\n      if(toggledForum) {\n        this.rootScope.dispatchEvent('chat_toggle_forum', {chatId: chat.id, enabled: !!(chat as Chat.channel).pFlags.forum});\n      }\n    }\n\n    if(this.peersStorage.isPeerNeeded(peerId)) {\n      this.storage.set({\n        [chat.id]: chat\n      });\n    }\n  }\n\n  public getChat(id: ChatId) {\n    return this.chats[id];\n  }\n\n  /**\n   * Check the user's ability to do an action in chat\n   * @param id\n   * @param action creator can still send messages to left channel. so this function shows server rights. see canSendToPeer for local rights in messages manager.\n   * @param rights do not provide this parameter when checking rights for self\n   * @param isThread\n   * @returns\n   */\n  public hasRights(id: ChatId, action: ChatRights, rights?: ChatAdminRights | ChatBannedRights, isThread?: boolean) {\n    return hasRights(this.getChat(id), action, rights, isThread);\n  }\n\n  public editChatDefaultBannedRights(id: ChatId, banned_rights: ChatBannedRights) {\n    const chat = this.getChat(id) as Chat.chat;\n    if(chat.default_banned_rights) {\n      if(chat.default_banned_rights.until_date === banned_rights.until_date && deepEqual(chat.default_banned_rights.pFlags, banned_rights.pFlags)) {\n        return Promise.resolve();\n      }\n    }\n\n    return this.apiManager.invokeApi('messages.editChatDefaultBannedRights', {\n      peer: this.appPeersManager.getInputPeerById(id.toPeerId(true)),\n      banned_rights\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  /* public resolveUsername(username: string) {\n    return this.usernames[username] || 0;\n  } */\n\n  /* public saveChannelAccess(id: ChatId, accessHash: string) {\n    this.channelAccess[id] = accessHash;\n  } */\n\n  /* public saveIsMegagroup(id: ChatId) {\n    this.megagroups[id] = true;\n  } */\n\n  public isChannel(id: ChatId) {\n    const chat = this.chats[id];\n    return !!(chat && (chat._ === 'channel' || chat._ === 'channelForbidden')/*  || this.channelAccess[id] */);\n  }\n\n  public isMegagroup(id: ChatId) {\n    /* if(this.megagroups[id]) {\n      return true;\n    } */\n\n    const chat: Chat = this.chats[id];\n    return !!(chat as Chat.channel)?.pFlags?.megagroup;\n  }\n\n  public isForum(id: ChatId) {\n    const chat = this.chats[id];\n    return !!(chat as Chat.channel)?.pFlags?.forum;\n  }\n\n  public isBroadcast(id: ChatId) {\n    return this.isChannel(id) && !this.isMegagroup(id);\n  }\n\n  public isInChat(id: ChatId) {\n    let good = true;\n    const chat: Chat = this.getChat(id);\n    if(!chat ||\n      chat._ === 'channelForbidden' ||\n      chat._ === 'chatForbidden' ||\n      (chat as any as Chat.chatEmpty)._ === 'chatEmpty' ||\n      (chat as Chat.chat).pFlags.left ||\n      // || (chat as any).pFlags.kicked\n      (chat as Chat.chat).pFlags.deactivated) {\n      good = false;\n    }\n\n    return good;\n  }\n\n  public getChannelInput(id: ChatId): InputChannel {\n    const chat: Chat = this.getChat(id);\n    if(!chat || !(chat as Chat.channel).access_hash) {\n      return {\n        _: 'inputChannelEmpty'\n      };\n    } else {\n      return {\n        _: 'inputChannel',\n        channel_id: id,\n        access_hash: (chat as Chat.channel).access_hash/*  || this.channelAccess[id] */ || '0'\n      };\n    }\n  }\n\n  public getInputPeer(id: ChatId) {\n    return this.isChannel(id) ? this.getChannelInputPeer(id) : this.getChatInputPeer(id);\n  }\n\n  public getChatInputPeer(id: ChatId): InputPeer.inputPeerChat {\n    return {\n      _: 'inputPeerChat',\n      chat_id: id\n    };\n  }\n\n  public getChannelInputPeer(id: ChatId): InputPeer.inputPeerChannel {\n    return {\n      _: 'inputPeerChannel',\n      channel_id: id,\n      access_hash: (this.getChat(id) as Chat.channel).access_hash/*  || this.channelAccess[id] */ || 0\n    };\n  }\n\n  public hasChat(id: ChatId, allowMin?: true) {\n    const chat = this.chats[id];\n    return isObject(chat) && (allowMin || !(chat as Chat.channel).pFlags.min);\n  }\n\n  public getChatString(id: ChatId) {\n    const chat = this.getChat(id);\n    if(this.isChannel(id)) {\n      return (this.isMegagroup(id) ? 's' : 'c') + id + '_' + (chat as Chat.channel).access_hash;\n    }\n    return 'g' + id;\n  }\n\n  /* public wrapForFull(id: number, fullChat: any) {\n    const chatFull = copy(fullChat);\n    const chat = this.getChat(id);\n\n    if(!chatFull.participants_count) {\n      chatFull.participants_count = chat.participants_count;\n    }\n\n    if(chatFull.participants &&\n        chatFull.participants._ === 'chatParticipants') {\n      chatFull.participants.participants = this.wrapParticipants(id, chatFull.participants.participants);\n    }\n\n    if(chatFull.about) {\n      chatFull.rAbout = wrapRichText(chatFull.about, {noLinebreaks: true});\n    }\n\n    //chatFull.peerString = this.getChatString(id);\n    chatFull.chat = chat;\n\n    return chatFull;\n  }\n\n  public wrapParticipants(id: number, participants: any[]) {\n    const chat = this.getChat(id);\n    const myId = appUsersManager.getSelf().id;\n    if(this.isChannel(id)) {\n      const isAdmin = chat.pFlags.creator;\n      participants.forEach((participant) => {\n        participant.canLeave = myId === participant.user_id;\n        participant.canKick = isAdmin && participant._ === 'channelParticipant';\n\n        // just for order by last seen\n        participant.user = appUsersManager.getUser(participant.user_id);\n      });\n    } else {\n      const isAdmin = chat.pFlags.creator || chat.pFlags.admins_enabled && chat.pFlags.admin;\n      participants.forEach((participant) => {\n        participant.canLeave = myId === participant.user_id;\n        participant.canKick = !participant.canLeave && (\n          chat.pFlags.creator ||\n          participant._ === 'chatParticipant' && (isAdmin || myId === participant.inviter_id)\n        );\n\n        // just for order by last seen\n        participant.user = appUsersManager.getUser(participant.user_id);\n      });\n    }\n\n    return participants;\n  } */\n\n  public createChannel(options: ChannelsCreateChannel): Promise<ChatId> {\n    return this.apiManager.invokeApi('channels.createChannel', options).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n\n      const channelId = (updates as any).chats[0].id;\n      return channelId;\n    });\n  }\n\n  public inviteToChannel(id: ChatId, userIds: UserId[]) {\n    const input = this.getChannelInput(id);\n    const usersInputs = userIds.map((u) => this.appUsersManager.getUserInput(u));\n\n    return this.apiManager.invokeApi('channels.inviteToChannel', {\n      channel: input,\n      users: usersInputs\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public createChat(title: string, userIds: UserId[]): Promise<ChatId> {\n    return this.apiManager.invokeApi('messages.createChat', {\n      users: userIds.map((u) => this.appUsersManager.getUserInput(u)),\n      title\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n\n      const chatId = (updates as any as Updates.updates).chats[0].id;\n      return chatId;\n    });\n  }\n\n  private onChatUpdated = (chatId: ChatId, updates?: Updates) => {\n    // console.log('onChatUpdated', chatId, updates);\n\n    this.apiUpdatesManager.processUpdateMessage(updates);\n    if((updates as Updates.updates)?.updates?.length && this.isChannel(chatId)) {\n      this.rootScope.dispatchEvent('invalidate_participants', chatId);\n    }\n  };\n\n  public leaveChannel(id: ChatId) {\n    return this.apiManager.invokeApi('channels.leaveChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public joinChannel(id: ChatId) {\n    return this.apiManager.invokeApi('channels.joinChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public addChatUser(id: ChatId, userId: UserId, fwdLimit = 100) {\n    return this.apiManager.invokeApi('messages.addChatUser', {\n      chat_id: id,\n      user_id: this.appUsersManager.getUserInput(userId),\n      fwd_limit: fwdLimit\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public deleteChatUser(id: ChatId, userId: UserId) {\n    return this.apiManager.invokeApi('messages.deleteChatUser', {\n      chat_id: id,\n      user_id: this.appUsersManager.getUserInput(userId)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public leaveChat(id: ChatId) {\n    return this.deleteChatUser(id, this.appUsersManager.getSelf().id);\n  }\n\n  public leave(id: ChatId) {\n    return this.isChannel(id) ? this.leaveChannel(id) : this.leaveChat(id);\n  }\n\n  public delete(id: ChatId) {\n    return this.isChannel(id) ? this.deleteChannel(id) : this.deleteChat(id);\n  }\n\n  public deleteChannel(id: ChatId) {\n    return this.apiManager.invokeApi('channels.deleteChannel', {\n      channel: this.getChannelInput(id)\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public deleteChat(id: ChatId) {\n    // return this.leaveChat(id).then(() => {\n    return this.apiManager.invokeApi('messages.deleteChat', {\n      chat_id: id\n    });\n    // });\n  }\n\n  public migrateChat(id: ChatId): Promise<ChatId> {\n    const chat: Chat = this.getChat(id);\n    if(chat._ === 'channel') return Promise.resolve(chat.id);\n    return this.apiManager.invokeApi('messages.migrateChat', {\n      chat_id: id\n    }).then((updates) => {\n      this.onChatUpdated(id, updates);\n      const update: Update.updateChannel = (updates as Updates.updates).updates.find((u) => u._ === 'updateChannel') as any;\n      return update.channel_id;\n    });\n  }\n\n  public updateUsername(id: ChatId, username: string, doNotRefresh?: boolean) {\n    const promise = this.apiManager.invokeApi('channels.updateUsername', {\n      channel: this.getChannelInput(id),\n      username\n    });\n\n    return this.refreshChatAfterRequest(id, promise, doNotRefresh);\n  }\n\n  public editPhoto(id: ChatId, inputFile: InputFile) {\n    const inputChatPhoto: InputChatPhoto = {\n      _: 'inputChatUploadedPhoto',\n      file: inputFile\n    };\n\n    let promise: any;\n    if(this.isChannel(id)) {\n      promise = this.apiManager.invokeApi('channels.editPhoto', {\n        channel: this.getChannelInput(id),\n        photo: inputChatPhoto\n      });\n    } else {\n      promise = this.apiManager.invokeApi('messages.editChatPhoto', {\n        chat_id: id,\n        photo: inputChatPhoto\n      });\n    }\n\n    return promise.then(this.onChatUpdated.bind(this, id));\n  }\n\n  public editTitle(id: ChatId, title: string) {\n    let promise: any;\n\n    if(this.isChannel(id)) {\n      promise = this.apiManager.invokeApi('channels.editTitle', {\n        channel: this.getChannelInput(id),\n        title\n      });\n    } else {\n      promise = this.apiManager.invokeApi('messages.editChatTitle', {\n        chat_id: id,\n        title\n      });\n    }\n\n    return promise.then(this.onChatUpdated.bind(this, id));\n  }\n\n  public editAbout(id: ChatId, about: string) {\n    const peerId = id.toPeerId(true);\n    return this.apiManager.invokeApi('messages.editChatAbout', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      about\n    }).then((bool) => {\n      if(bool) {\n        this.rootScope.dispatchEvent('peer_bio_edit', peerId);\n      }\n\n      return bool;\n    });\n  }\n\n  public editBanned(id: ChatId, participant: PeerId | ChannelParticipant, banned_rights: ChatBannedRights) {\n    const peerId = typeof(participant) !== 'object' ? participant : getParticipantPeerId(participant);\n    return this.apiManager.invokeApi('channels.editBanned', {\n      channel: this.getChannelInput(id),\n      participant: this.appPeersManager.getInputPeerById(peerId),\n      banned_rights\n    }).then((updates) => {\n      this.onChatUpdated(id, updates);\n\n      if(typeof(participant) === 'object') {\n        const timestamp = Date.now() / 1000 | 0;\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateChannelParticipant',\n          channel_id: id,\n          date: timestamp,\n          actor_id: undefined,\n          qts: undefined,\n          user_id: peerId,\n          prev_participant: participant,\n          new_participant: Object.keys(banned_rights.pFlags).length ? {\n            _: 'channelParticipantBanned',\n            date: timestamp,\n            banned_rights,\n            kicked_by: this.appUsersManager.getSelf().id,\n            peer: this.appPeersManager.getOutputPeer(peerId),\n            pFlags: {}\n          } : undefined\n        });\n      }\n    });\n  }\n\n  public clearChannelParticipantBannedRights(id: ChatId, participant: PeerId | ChannelParticipant) {\n    return this.editBanned(id, participant, {\n      _: 'chatBannedRights',\n      until_date: 0,\n      pFlags: {}\n    });\n  }\n\n  public kickFromChannel(id: ChatId, participant: PeerId | ChannelParticipant) {\n    return this.editBanned(id, participant, {\n      _: 'chatBannedRights',\n      until_date: 0,\n      pFlags: {\n        view_messages: true\n      }\n    });\n  }\n\n  public kickFromChat(id: ChatId, participant: PeerId | ChannelParticipant) {\n    if(this.isChannel(id)) return this.kickFromChannel(id, participant);\n    else return this.deleteChatUser(id, (participant as PeerId).toUserId());\n  }\n\n  public resolveChannel(id: ChatId) {\n    return this.apiManager.invokeApiSingle('channels.getChannels', {\n      id: [{\n        _: 'inputChannel',\n        channel_id: id,\n        access_hash: '0'\n      }]\n    }).then((messagesChats) => {\n      this.saveApiChats(messagesChats.chats);\n    });\n  }\n\n  public togglePreHistoryHidden(id: ChatId, enabled: boolean) {\n    return this.migrateChat(id).then((channelId) => {\n      return this.apiManager.invokeApi('channels.togglePreHistoryHidden', {\n        channel: this.getChannelInput(channelId),\n        enabled\n      }).then(this.onChatUpdated.bind(this, channelId));\n    });\n  }\n\n  public toggleSignatures(id: ChatId, enabled: boolean) {\n    return this.apiManager.invokeApi('channels.toggleSignatures', {\n      channel: this.getChannelInput(id),\n      enabled\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public toggleNoForwards(id: ChatId, enabled: boolean) {\n    return this.apiManager.invokeApi('messages.toggleNoForwards', {\n      peer: this.getInputPeer(id),\n      enabled\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public setChatAvailableReactions(id: ChatId, reactions: ChatReactions) {\n    const chatFull = this.appProfileManager.getCachedFullChat(id);\n    if(chatFull) {\n      chatFull.available_reactions = reactions;\n      this.rootScope.dispatchEvent('chat_full_update', id);\n    }\n\n    return this.apiManager.invokeApi('messages.setChatAvailableReactions', {\n      peer: this.getInputPeer(id),\n      available_reactions: reactions\n    }).then(this.onChatUpdated.bind(this, id));\n  }\n\n  public getSendAs(channelId: ChatId) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'channels.getSendAs',\n      params: {\n        peer: this.getChannelInputPeer(channelId)\n      },\n      processResult: (sendAsPeers) => {\n        this.appUsersManager.saveApiUsers(sendAsPeers.users);\n        this.saveApiChats(sendAsPeers.chats);\n\n        return sendAsPeers.peers;\n      }\n    });\n  }\n\n  public importChatInvite(hash: string) {\n    return this.apiManager.invokeApi('messages.importChatInvite', {hash})\n    .then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n      const chat = (updates as Updates.updates).chats[0];\n      return chat.id;\n    });\n  }\n\n  public checkUsername(chatId: ChatId, username: string) {\n    return this.apiManager.invokeApi('channels.checkUsername', {\n      channel: this.getChannelInput(chatId),\n      username\n    });\n  }\n\n  public getSponsoredMessage(chatId: ChatId) {\n    // const s: MessagesSponsoredMessages.messagesSponsoredMessages = {\n    //   '_': 'messages.sponsoredMessages',\n    //   'messages': [\n    //     {\n    //       '_': 'sponsoredMessage',\n    //       'pFlags': {},\n    //       'flags': 9,\n    //       'random_id': new Uint8Array([\n    //         80,\n    //         5,\n    //         249,\n    //         174,\n    //         44,\n    //         73,\n    //         173,\n    //         14,\n    //         246,\n    //         81,\n    //         187,\n    //         182,\n    //         223,\n    //         5,\n    //         4,\n    //         128\n    //       ]),\n    //       'from_id': {\n    //         '_': 'peerUser',\n    //         'user_id': 983000232\n    //       },\n    //       'start_param': 'GreatMinds',\n    //       'message': 'This is a long sponsored message. In fact, it has the maximum length allowed on the platform – 160 characters 😬😬. It\\'s promoting a bot with a start parameter.' + chatId\n    //     }\n    //   ],\n    //   'chats': [],\n    //   'users': [\n    //     {\n    //       '_': 'user',\n    //       'pFlags': {\n    //         'bot': true,\n    //         'verified': true,\n    //         'apply_min_photo': true\n    //       },\n    //       'flags': 34226219,\n    //       'id': 983000232,\n    //       'access_hash': '-294959558742535650',\n    //       'first_name': 'Quiz Bot',\n    //       'username': 'QuizBot',\n    //       'photo': {\n    //         '_': 'userProfilePhoto',\n    //         'pFlags': {},\n    //         'flags': 2,\n    //         'photo_id': '4221953848856651689',\n    //         'stripped_thumb': new Uint8Array([\n    //           1,\n    //           8,\n    //           8,\n    //           155,\n    //           247,\n    //           95,\n    //           103,\n    //           255,\n    //           0,\n    //           110,\n    //           138,\n    //           40,\n    //           174,\n    //           132,\n    //           142,\n    //           6,\n    //           238,\n    //           127\n    //         ]),\n    //         'dc_id': 2\n    //       },\n    //       'bot_info_version': 11,\n    //       'bot_inline_placeholder': 'Search a quiz...',\n    //       'sortName': 'quiz bot'\n    //     }\n    //   ]\n    // };\n\n    // const promise = Promise.resolve(s);\n    const promise = this.apiManager.invokeApiCacheable('channels.getSponsoredMessages', {\n      channel: this.getChannelInput(chatId)\n    }, {cacheSeconds: 300});\n\n    return promise.then((sponsoredMessages) => {\n      if(sponsoredMessages._ === 'messages.sponsoredMessages') {\n        this.appUsersManager.saveApiUsers(sponsoredMessages.users);\n        this.appChatsManager.saveApiChats(sponsoredMessages.chats);\n\n        const sponsoredMessage = sponsoredMessages.messages.shift();\n        sponsoredMessages.messages.push(sponsoredMessage);\n      }\n\n      return sponsoredMessages;\n    });\n  }\n\n  public viewSponsoredMessage(chatId: ChatId, randomId: SponsoredMessage['random_id']) {\n    return this.apiManager.invokeApiSingle('channels.viewSponsoredMessage', {\n      channel: this.getChannelInput(chatId),\n      random_id: randomId\n    });\n  }\n\n  public checkChatInvite(hash: string) {\n    return this.apiManager.invokeApi('messages.checkChatInvite', {\n      hash: hash\n    }).then((chatInvite) => {\n      if((chatInvite as ChatInvite.chatInvitePeek).chat) {\n        this.saveApiChat((chatInvite as ChatInvite.chatInvitePeek).chat, true);\n      }\n\n      return chatInvite;\n    });\n  }\n\n  public toggleUsername(chatId: ChatId, username: string, active: boolean) {\n    const promise = this.apiManager.invokeApi('channels.toggleUsername', {\n      channel: this.getChannelInput(chatId),\n      username,\n      active\n    });\n\n    return this.refreshChatAfterRequest(chatId, promise);\n  }\n\n  public reorderUsernames(chatId: ChatId, order: string[]) {\n    const promise = this.apiManager.invokeApi('channels.reorderUsernames', {\n      channel: this.getChannelInput(chatId),\n      order\n    });\n\n    return this.refreshChatAfterRequest(chatId, promise);\n  }\n\n  public deactivateAllUsernames(chatId: ChatId, doNotRefresh?: boolean) {\n    const promise = this.apiManager.invokeApi('channels.deactivateAllUsernames', {\n      channel: this.getChannelInput(chatId)\n    });\n\n    return this.refreshChatAfterRequest(chatId, promise, doNotRefresh);\n  }\n\n  public makeChannelPrivate(chatId: ChatId) {\n    const promises: Promise<boolean>[] = [\n      this.updateUsername(chatId, '', true),\n      this.deactivateAllUsernames(chatId, true)\n    ];\n\n    const promise = Promise.all(promises).then(() => true);\n    return this.refreshChatAfterRequest(chatId, promise);\n  }\n\n  public refreshChatAfterRequest<T extends Promise<any>>(chatId: ChatId, promise: T, doNotRefresh?: boolean): T {\n    if(doNotRefresh) {\n      return promise;\n    }\n\n    return promise.then((value) => {\n      return this.getChannels([chatId]).then(() => value);\n    }) as T;\n  }\n\n  public getChannels(chatIds: ChatId[]) {\n    return this.apiManager.invokeApi('channels.getChannels', {\n      id: chatIds.map((chatId) => this.getChannelInput(chatId))\n    }).then((messagesChats) => {\n      this.saveApiChats(messagesChats.chats);\n    });\n  }\n\n  public toggleForum(chatId: ChatId, enabled: boolean) {\n    return this.migrateChat(chatId).then((channelId) => {\n      return this.apiManager.invokeApi('channels.toggleForum', {\n        channel: this.getChannelInput(channelId),\n        enabled\n      }).then(this.onChatUpdated.bind(this, channelId));\n    });\n  }\n\n  public editForumTopic(options: {\n    chatId: ChatId,\n    topicId: number,\n    title?: string,\n    iconEmojiId?: DocId,\n    closed?: boolean,\n    hidden?: boolean\n  }) {\n    const {chatId, topicId, title, iconEmojiId, closed, hidden} = options;\n    return this.apiManager.invokeApi('channels.editForumTopic', {\n      channel: this.getChannelInput(chatId),\n      topic_id: getServerMessageId(topicId),\n      title,\n      icon_emoji_id: iconEmojiId,\n      closed,\n      hidden\n    }).then(this.onChatUpdated.bind(this, chatId));\n  }\n\n  public async createForumTopic(options: {\n    chatId: ChatId,\n    title: string,\n    iconColor: number,\n    iconEmojiId: DocId\n  }) {\n    const {chatId, title, iconColor, iconEmojiId} = options;\n\n    const channelFull = await this.appProfileManager.getChannelFull(chatId);\n    const sendAsInputPeer = channelFull.default_send_as && this.appPeersManager.getInputPeerById(this.appPeersManager.getPeerId(channelFull.default_send_as));\n\n    return this.apiManager.invokeApi('channels.createForumTopic', {\n      channel: this.getChannelInput(chatId),\n      title,\n      icon_color: iconColor,\n      icon_emoji_id: iconEmojiId,\n      random_id: randomLong(),\n      send_as: sendAsInputPeer\n    }).then((updates) => {\n      this.onChatUpdated(chatId, updates);\n\n      const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateNewChannelMessage') as Update.updateNewChannelMessage;\n      return generateMessageId(update.message.id);\n    });\n  }\n\n  public updatePinnedForumTopic(chatId: ChatId, topicId: number, pinned: boolean) {\n    return this.apiManager.invokeApi('channels.updatePinnedForumTopic', {\n      channel: this.getChannelInput(chatId),\n      topic_id: getServerMessageId(topicId),\n      pinned\n    }).then(this.onChatUpdated.bind(this, chatId));\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type lang from '../lang';\nimport type langSign from '../langSign';\nimport type {State} from '../config/state';\nimport DEBUG, {MOUNT_CLASS_TO} from '../config/debug';\nimport {HelpCountriesList, HelpCountry, LangPackDifference, LangPackString} from '../layer';\nimport stateStorage from './stateStorage';\nimport App from '../config/app';\nimport rootScope from './rootScope';\nimport {IS_MOBILE} from '../environment/userAgent';\nimport deepEqual from '../helpers/object/deepEqual';\nimport safeAssign from '../helpers/object/safeAssign';\nimport capitalizeFirstLetter from '../helpers/string/capitalizeFirstLetter';\nimport matchUrlProtocol from './richTextProcessor/matchUrlProtocol';\nimport wrapUrl from './richTextProcessor/wrapUrl';\nimport {setDirection} from '../helpers/dom/setInnerHTML';\n\nexport const langPack: {[actionType: string]: LangPackKey} = {\n  'messageActionChatCreate': 'ActionCreateGroup',\n  'messageActionChatCreateYou': 'ActionYouCreateGroup',\n  'messageActionChatEditTitle': 'ActionChangedTitle',\n  'messageActionChatEditPhoto': 'ActionChangedPhoto',\n  'messageActionChatEditVideo': 'ActionChangedVideo',\n  'messageActionChatDeletePhoto': 'ActionRemovedPhoto',\n  'messageActionChatReturn': 'ActionAddUserSelf',\n  'messageActionChatReturnYou': 'ActionAddUserSelfYou',\n  'messageActionChatJoined': 'ActionAddUserSelfMega',\n  'messageActionChatJoinedYou': 'ChannelMegaJoined',\n  'messageActionChatAddUser': 'ActionAddUser',\n  'messageActionChatAddUsers': 'ActionAddUser',\n  'messageActionChatLeave': 'ActionLeftUser',\n  'messageActionChatLeaveYou': 'YouLeft',\n  'messageActionChatDeleteUser': 'ActionKickUser',\n  'messageActionChatJoinedByLink': 'ActionInviteUser',\n  'messageActionPinMessage': 'Chat.Service.Group.UpdatedPinnedMessage',\n  'messageActionContactSignUp': 'Chat.Service.PeerJoinedTelegram',\n  'messageActionChannelCreate': 'ActionCreateChannel',\n  'messageActionChannelEditTitle': 'Chat.Service.Channel.UpdatedTitle',\n  'messageActionChannelEditPhoto': 'Chat.Service.Channel.UpdatedPhoto',\n  'messageActionChannelEditVideo': 'Chat.Service.Channel.UpdatedVideo',\n  'messageActionChannelDeletePhoto': 'Chat.Service.Channel.RemovedPhoto',\n  'messageActionHistoryClear': 'HistoryCleared',\n  'messageActionDiscussionStarted': 'DiscussionStarted',\n\n  'messageActionChannelMigrateFrom': 'ActionMigrateFromGroup',\n\n  'messageActionPhoneCall.video_in_ok': 'ChatList.Service.VideoCall.incoming',\n  'messageActionPhoneCall.video_out_ok': 'ChatList.Service.VideoCall.outgoing',\n  'messageActionPhoneCall.video_missed': 'ChatList.Service.VideoCall.Missed',\n  'messageActionPhoneCall.video_cancelled': 'ChatList.Service.VideoCall.Cancelled',\n  'messageActionPhoneCall.in_ok': 'ChatList.Service.Call.incoming',\n  'messageActionPhoneCall.out_ok': 'ChatList.Service.Call.outgoing',\n  'messageActionPhoneCall.missed': 'ChatList.Service.Call.Missed',\n  'messageActionPhoneCall.cancelled': 'ChatList.Service.Call.Cancelled',\n\n  'messageActionGroupCall.started': 'Chat.Service.VoiceChatStarted.Channel',\n  'messageActionGroupCall.started_by': 'Chat.Service.VoiceChatStarted',\n  'messageActionGroupCall.started_byYou': 'Chat.Service.VoiceChatStartedYou',\n  'messageActionGroupCall.ended': 'Chat.Service.VoiceChatFinished.Channel',\n  'messageActionGroupCall.ended_by': 'Chat.Service.VoiceChatFinished',\n  'messageActionGroupCall.ended_byYou': 'Chat.Service.VoiceChatFinishedYou',\n\n  'messageActionBotAllowed': 'Chat.Service.BotPermissionAllowed'\n};\n\nexport type LangPackKey = /* string |  */keyof typeof lang | keyof typeof langSign;\n\nexport type FormatterArgument = string | number | Node | FormatterArgument[];\nexport type FormatterArguments = FormatterArgument[];\n\nexport const UNSUPPORTED_LANG_PACK_KEY: LangPackKey = IS_MOBILE ? 'Message.Unsupported.Mobile' : 'Message.Unsupported.Desktop';\n\nnamespace I18n {\n  export const strings: Map<LangPackKey, LangPackString> = new Map();\n  export const countriesList: HelpCountry[] = [];\n  let pluralRules: Intl.PluralRules;\n\n  let cacheLangPackPromise: Promise<LangPackDifference>;\n  export let lastRequestedLangCode: string;\n  export let lastRequestedNormalizedLangCode: string;\n  export let lastAppliedLangCode: string;\n  export let requestedServerLanguage = false;\n  export let timeFormat: State['settings']['timeFormat'];\n  export let isRTL = false;\n\n  export function setRTL(rtl: boolean) {\n    isRTL = rtl;\n  }\n\n  function setLangCode(langCode: string) {\n    lastRequestedLangCode = langCode;\n    lastRequestedNormalizedLangCode = langCode.split('-')[0];\n  }\n\n  export function getCacheLangPack(): Promise<LangPackDifference> {\n    if(cacheLangPackPromise) return cacheLangPackPromise;\n    return cacheLangPackPromise = Promise.all([\n      stateStorage.get('langPack') as Promise<LangPackDifference>,\n      polyfillPromise\n    ]).then(([langPack]) => {\n      if(!langPack/*  || true */) {\n        return loadLocalLangPack();\n      } else if(DEBUG && false) {\n        return getLangPack(langPack.lang_code);\n      }/*  else if(langPack.appVersion !== App.langPackVersion) {\n        return getLangPack(langPack.lang_code);\n      } */\n\n      if(!lastRequestedLangCode) {\n        setLangCode(langPack.lang_code);\n      }\n\n      applyLangPack(langPack);\n      return langPack;\n    }).finally(() => {\n      cacheLangPackPromise = undefined;\n    });\n  }\n\n  function updateAmPm() {\n    if(timeFormat === 'h12') {\n      try {\n        const dateTimeFormat = getDateTimeFormat({hour: 'numeric', minute: 'numeric', hour12: true});\n        const date = new Date();\n        date.setHours(0);\n        const amText = dateTimeFormat.format(date);\n        amPmCache.am = amText.split(' ')[1];\n        date.setHours(12);\n        const pmText = dateTimeFormat.format(date);\n        amPmCache.pm = pmText.split(' ')[1];\n      } catch(err) {\n        console.error('cannot get am/pm', err);\n        amPmCache = {am: 'AM', pm: 'PM'};\n      }\n    }\n  }\n\n  export function setTimeFormat(\n    format: State['settings']['timeFormat'],\n    haveToUpdate = !!timeFormat && timeFormat !== format\n  ) {\n    timeFormat = format;\n\n    updateAmPm();\n\n    if(haveToUpdate) {\n      cachedDateTimeFormats.clear();\n      const elements = Array.from(document.querySelectorAll(`.i18n`)) as HTMLElement[];\n      elements.forEach((element) => {\n        const instance = weakMap.get(element);\n\n        if(instance instanceof IntlDateElement) {\n          instance.update();\n        }\n      });\n    }\n  }\n\n  export function loadLocalLangPack() {\n    const defaultCode = App.langPackCode;\n    setLangCode(defaultCode);\n    return Promise.all([\n      import('../lang'),\n      import('../langSign'),\n      import('../countries')\n    ]).then(([lang, langSign, countries]) => {\n      const strings: LangPackString[] = [];\n      formatLocalStrings(lang.default, strings);\n      formatLocalStrings(langSign.default, strings);\n\n      const langPack: LangPackDifference = {\n        _: 'langPackDifference',\n        from_version: 0,\n        lang_code: defaultCode,\n        strings,\n        version: 0,\n        local: true,\n        countries: countries.default\n      };\n      return saveLangPack(langPack);\n    });\n  }\n\n  export function loadLangPack(langCode: string, web?: boolean) {\n    web = true;\n    requestedServerLanguage = true;\n    const managers = rootScope.managers;\n    return Promise.all([\n      managers.apiManager.invokeApiCacheable('langpack.getLangPack', {\n        lang_code: langCode,\n        lang_pack: web ? 'web' : App.langPack\n      }),\n      !web && managers.apiManager.invokeApiCacheable('langpack.getLangPack', {\n        lang_code: langCode,\n        lang_pack: 'android'\n      }),\n      import('../lang'),\n      import('../langSign'),\n      managers.apiManager.invokeApiCacheable('help.getCountriesList', {\n        lang_code: langCode,\n        hash: 0\n      }) as Promise<HelpCountriesList.helpCountriesList>,\n      polyfillPromise\n    ]);\n  }\n\n  export function getStrings(langCode: string, strings: string[]) {\n    return rootScope.managers.apiManager.invokeApi('langpack.getStrings', {\n      lang_pack: App.langPack,\n      lang_code: langCode,\n      keys: strings\n    });\n  }\n\n  export function formatLocalStrings(strings: any, pushTo: LangPackString[] = []) {\n    for(const i in strings) {\n      // @ts-ignore\n      const v = strings[i];\n      if(typeof(v) === 'string') {\n        pushTo.push({\n          _: 'langPackString',\n          key: i,\n          value: v\n        });\n      } else {\n        pushTo.push({\n          _: 'langPackStringPluralized',\n          key: i,\n          ...v\n        });\n      }\n    }\n\n    return pushTo;\n  }\n\n  export function getLangPack(langCode: string, web?: boolean) {\n    setLangCode(langCode);\n    return loadLangPack(langCode, web).then(([langPack1, langPack2, localLangPack1, localLangPack2, countries, _]) => {\n      let strings: LangPackString[] = [];\n\n      [localLangPack1, localLangPack2].forEach((l) => {\n        formatLocalStrings(l.default as any, strings);\n      });\n\n      strings = strings.concat(...[langPack1.strings, langPack2.strings].filter(Boolean));\n\n      langPack1.strings = strings;\n      langPack1.countries = countries;\n      return saveLangPack(langPack1);\n    });\n  }\n\n  export function saveLangPack(langPack: LangPackDifference) {\n    langPack.appVersion = App.langPackVersion;\n\n    return stateStorage.set({langPack}).then(() => {\n      applyLangPack(langPack);\n      return langPack;\n    });\n  }\n\n  export const polyfillPromise = (function checkIfPolyfillNeeded() {\n    if(typeof(Intl) !== 'undefined' && typeof(Intl.PluralRules) !== 'undefined'/*  && false */) {\n      return Promise.resolve();\n    } else {\n      return import('./pluralPolyfill').then((_Intl) => {\n        (window as any).Intl = Object.assign(typeof(Intl) !== 'undefined' ? Intl : {}, _Intl.default);\n      });\n    }\n  })();\n\n  export function applyLangPack(langPack: LangPackDifference) {\n    const currentLangCode = lastRequestedLangCode;\n    if(langPack.lang_code !== currentLangCode) {\n      return;\n    }\n\n    try {\n      pluralRules = new Intl.PluralRules(lastRequestedNormalizedLangCode);\n    } catch(err) {\n      console.error('pluralRules error', err);\n      pluralRules = new Intl.PluralRules(lastRequestedNormalizedLangCode.split('-', 1)[0]);\n    }\n\n    try {\n      pluralRules = new Intl.PluralRules(langPack.lang_code);\n    } catch(err) {\n      console.error('pluralRules error', err);\n      pluralRules = new Intl.PluralRules(langPack.lang_code.split('-', 1)[0]);\n    }\n\n    strings.clear();\n\n    for(const string of langPack.strings) {\n      strings.set(string.key as LangPackKey, string);\n    }\n\n    if(langPack.countries) {\n      countriesList.length = 0;\n      countriesList.push(...langPack.countries.countries);\n\n      langPack.countries.countries.forEach((country) => {\n        if(country.name) {\n          const langPackKey: any = country.default_name;\n          strings.set(langPackKey, {\n            _: 'langPackString',\n            key: langPackKey,\n            value: country.name\n          });\n        }\n      });\n    }\n\n    if(lastAppliedLangCode !== currentLangCode) {\n      rootScope.dispatchEvent('language_change', currentLangCode);\n      lastAppliedLangCode = currentLangCode;\n      cachedDateTimeFormats.clear();\n      updateAmPm();\n    }\n\n    const elements = Array.from(document.querySelectorAll(`.i18n`)) as HTMLElement[];\n    elements.forEach((element) => {\n      const instance = weakMap.get(element);\n\n      if(instance) {\n        instance.update();\n      }\n    });\n  }\n\n  function pushNextArgument(out: ReturnType<typeof superFormatter>, args: FormatterArguments, indexHolder: {i: number}) {\n    const arg = args[indexHolder.i++];\n    if(Array.isArray(arg)) {\n      out.push(...arg as any);\n    } else {\n      out.push(arg);\n    }\n  }\n\n  export function superFormatter(input: string, args?: FormatterArguments, indexHolder = {i: 0}): Exclude<FormatterArgument, FormatterArgument[]>[] {\n    const out: ReturnType<typeof superFormatter> = [];\n    const regExp = /(\\*\\*|__)(.+?)\\1|(\\n)|(\\[.+?\\]\\(.*?\\))|un\\d|%\\d\\$.|%./g;\n\n    let lastIndex = 0;\n    input.replace(regExp, (match, p1: any, p2: any, p3: any, p4: string, offset: number, string: string) => {\n      // console.table({match, p1, p2, offset, string});\n\n      out.push(string.slice(lastIndex, offset));\n\n      if(p1) {\n        // offset += p1.length;\n        let element: HTMLElement;\n        switch(p1) {\n          case '**': {\n            element = document.createElement('b');\n            break;\n          }\n\n          case '__': {\n            element = document.createElement('i');\n            break;\n          }\n        }\n\n        element.append(...superFormatter(p2, args, indexHolder) as any);\n        out.push(element);\n      } else if(p3) {\n        out.push(document.createElement('br'));\n      } else if(p4) {\n        const idx = p4.lastIndexOf(']');\n        const text = p4.slice(1, idx);\n\n        const url = p4.slice(idx + 2, p4.length - 1);\n        let a: HTMLAnchorElement;\n        if(url && matchUrlProtocol(url)) {\n          a = document.createElement('a');\n          const wrappedUrl = wrapUrl(url);\n          a.href = wrappedUrl.url;\n          if(wrappedUrl.onclick) a.setAttribute('onclick', wrappedUrl.onclick);\n          a.target = '_blank';\n        } else {\n          a = args[indexHolder.i++] as HTMLAnchorElement;\n\n          if(a instanceof DocumentFragment) { // right after wrapRichText\n            a = a.firstChild as any;\n          }\n\n          a.textContent = ''; // reset content\n        }\n\n        a.append(...superFormatter(text, args, indexHolder) as any);\n\n        out.push(a);\n      } else if(args) {\n        pushNextArgument(out, args, indexHolder);\n      }\n\n      lastIndex = offset + match.length;\n      return '';\n    });\n\n    if(lastIndex !== input.length) {\n      out.push(input.slice(lastIndex));\n    }\n\n    return out;\n  }\n\n  export function format(key: LangPackKey, plain: true, args?: FormatterArguments): string;\n  export function format(key: LangPackKey, plain?: false, args?: FormatterArguments): ReturnType<typeof superFormatter>;\n  export function format(key: LangPackKey, plain = false, args?: FormatterArguments): ReturnType<typeof superFormatter> | string {\n    const str = strings.get(key);\n    let input: string;\n    if(str) {\n      if(str._ === 'langPackStringPluralized' && args?.length) {\n        let v = args[0] as number | string;\n        if(typeof(v) === 'string') v = +v.replace(/\\D/g, '');\n        const s = pluralRules.select(v);\n        // @ts-ignore\n        input = str[s + '_value'] || str['other_value'];\n      } else if(str._ === 'langPackString') {\n        input = str.value;\n      } else {\n        // input = '[' + key + ']';\n        input = key;\n      }\n    } else {\n      // input = '[' + key + ']';\n      input = key;\n    }\n\n    const result = superFormatter(input, args);\n    if(plain) { // * let's try a hack now... (don't want to replace []() entity)\n      return result.map((item) => item instanceof Node ? item.textContent : item).join('');\n    } else {\n      return result;\n    }\n\n    /* if(plain) {\n      if(args?.length) {\n        const regExp = /un\\d|%\\d\\$.|%./g;\n        let i = 0;\n        input = input.replace(regExp, (match, offset, string) => {\n          return '' + args[i++];\n        });\n      }\n\n      return input;\n    } else {\n      return superFormatter(input, args);\n    } */\n  }\n\n  export const weakMap: WeakMap<HTMLElement, IntlElementBase<IntlElementBaseOptions>> = new WeakMap();\n\n  export type IntlElementBaseOptions = {\n    element?: HTMLElement,\n    property?: 'innerText' | 'innerHTML' | 'placeholder' | 'textContent',\n  };\n\n  abstract class IntlElementBase<Options extends IntlElementBaseOptions> {\n    public element: IntlElementBaseOptions['element'];\n    public property: IntlElementBaseOptions['property'];\n\n    constructor(options?: Options) {\n      this.element = options?.element || document.createElement('span');\n      this.element.classList.add('i18n');\n\n      this.property = options?.property;\n      if(options && ((options as any as IntlElementOptions).key || (options as any as IntlDateElementOptions).date)) {\n        this.update(options);\n      }\n\n      weakMap.set(this.element, this);\n    }\n\n    abstract update(options?: Options): void;\n  }\n\n  export type IntlElementOptions = IntlElementBaseOptions & {\n    key?: LangPackKey,\n    args?: FormatterArguments\n  };\n  export class IntlElement extends IntlElementBase<IntlElementOptions> {\n    public key: IntlElementOptions['key'];\n    public args: IntlElementOptions['args'];\n\n    constructor(options: IntlElementOptions = {}) {\n      super({...options, property: options.property ?? 'innerHTML'});\n    }\n\n    public update(options?: IntlElementOptions) {\n      safeAssign(this, options);\n\n      if(this.property === 'innerHTML') {\n        this.element.textContent = '';\n        this.element.append(...format(this.key, false, this.args) as any);\n      } else {\n        // @ts-ignore\n        const v = this.element[this.property];\n        const formatted = format(this.key, true, this.args);\n\n        // * hasOwnProperty won't work here\n        if(v === undefined) this.element.dataset[this.property] = formatted;\n        else (this.element as HTMLInputElement)[this.property] = formatted;\n      }\n    }\n\n    public compareAndUpdate(options?: IntlElementOptions) {\n      if(this.key === options.key && deepEqual(this.args, options.args)) {\n        return;\n      }\n\n      return this.update(options);\n    }\n  }\n\n  const cachedDateTimeFormats: Map<string, Intl.DateTimeFormat> = new Map();\n  function getDateTimeFormat(options: Intl.DateTimeFormatOptions = {}) {\n    const json = JSON.stringify(options);\n    let dateTimeFormat = cachedDateTimeFormats.get(json);\n    if(!dateTimeFormat) {\n      dateTimeFormat = new Intl.DateTimeFormat(lastRequestedNormalizedLangCode + '-u-hc-' + timeFormat, options);\n      cachedDateTimeFormats.set(json, dateTimeFormat);\n    }\n\n    return dateTimeFormat;\n  }\n\n  export let amPmCache = {am: 'AM', pm: 'PM'};\n  export type IntlDateElementOptions = IntlElementBaseOptions & {\n    date?: Date,\n    options: Intl.DateTimeFormatOptions\n  };\n  export class IntlDateElement extends IntlElementBase<IntlDateElementOptions> {\n    public date: IntlDateElementOptions['date'];\n    public options: IntlDateElementOptions['options'];\n\n    constructor(options: IntlDateElementOptions) {\n      super({...options, property: options.property ?? 'textContent'});\n      setDirection(this.element);\n    }\n\n    public update(options?: IntlDateElementOptions) {\n      safeAssign(this, options);\n\n      let text: string;\n      if(this.options.hour && this.options.minute && Object.keys(this.options).length === 2/*  && false */) {\n        const hours = this.date.getHours();\n        text = ('0' + (timeFormat === 'h12' ? (hours % 12) || 12 : hours)).slice(-2) + ':' + ('0' + this.date.getMinutes()).slice(-2);\n        // if(this.options.second) {\n        //   text += ':' + ('0' + this.date.getSeconds()).slice(-2);\n        // }\n\n        if(timeFormat === 'h12') {\n          text += ' ' + (hours < 12 ? amPmCache.am : amPmCache.pm);\n        }\n      } else {\n        // * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/hourCycle#adding_an_hour_cycle_via_the_locale_string\n        const dateTimeFormat = getDateTimeFormat(this.options);\n        text = capitalizeFirstLetter(dateTimeFormat.format(this.date));\n      }\n\n      (this.element as any)[this.property] = text;\n    }\n  }\n\n  export function i18n(key: LangPackKey, args?: FormatterArguments) {\n    return new IntlElement({key, args}).element;\n  }\n\n  export function i18n_(options: IntlElementOptions) {\n    return new IntlElement(options).element;\n  }\n\n  export function _i18n(element: HTMLElement, key: LangPackKey, args?: FormatterArguments, property?: IntlElementOptions['property']) {\n    return new IntlElement({element, key, args, property}).element;\n  }\n}\n\nexport {I18n};\nexport default I18n;\n\nconst i18n = I18n.i18n;\nexport {i18n};\n\nconst i18n_ = I18n.i18n_;\nexport {i18n_};\n\nconst _i18n = I18n._i18n;\nexport {_i18n};\n\nexport function joinElementsWith(elements: (Node | string)[], joiner: typeof elements[0] | ((isLast: boolean) => typeof elements[0])) {\n  const arr = elements.slice(0, 1);\n  for(let i = 1; i < elements.length; ++i) {\n    const isLast = (elements.length - 1) === i;\n    arr.push(typeof(joiner) === 'function' ? joiner(isLast) : joiner);\n    arr.push(elements[i]);\n  }\n\n  return arr;\n}\n\n\nexport function join(elements: (Node | string)[], useLast: boolean, plain: true): string;\nexport function join(elements: (Node | string)[], useLast?: boolean, plain?: false): (string | Node)[];\nexport function join(elements: (Node | string)[], useLast: boolean, plain: boolean): string | (string | Node)[];\nexport function join(elements: (Node | string)[], useLast = true, plain?: boolean): string | (string | Node)[] {\n  const joined = joinElementsWith(elements, (isLast) => {\n    const langPackKey: LangPackKey = isLast && useLast ? 'AutoDownloadSettings.LastDelimeter' : 'AutoDownloadSettings.Delimeter';\n    return plain ? I18n.format(langPackKey, true) : i18n(langPackKey);\n  });\n\n  return plain ? joined.join('') : joined;\n}\n\nMOUNT_CLASS_TO.I18n = I18n;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type addAnchorListener from '../../helpers/addAnchorListener';\nimport {PHONE_NUMBER_REG_EXP} from '.';\nimport {MOUNT_CLASS_TO} from '../../config/debug';\nimport matchUrlProtocol from './matchUrlProtocol';\nimport {T_ME_PREFIXES} from '../mtproto/mtproto_config';\n\nexport default function wrapUrl(url: string, unsafe?: number | boolean) {\n  if(!matchUrlProtocol(url)) {\n    url = 'https://' + url;\n  }\n\n  const out: {url: string, onclick?: Parameters<typeof addAnchorListener>[0]['name']} = {url};\n  let tgMeMatch, telescoPeMatch, tgMatch;\n  let onclick: typeof out['onclick'];\n  /* if(unsafe === 2) {\n    url = 'tg://unsafe_url?url=' + encodeURIComponent(url);\n  } else  */if((tgMeMatch = url.match(/^(?:https?:\\/\\/)?(?:(.+?)\\.)?(?:(?:web|k|z)\\.)?t(?:elegram)?\\.me(?:\\/(.+))?/))) {\n    const u = new URL(url);\n    let prefix = tgMeMatch[1];\n    if(prefix && T_ME_PREFIXES.has(tgMeMatch[1])) {\n      prefix = undefined;\n    }\n\n    if(prefix) {\n      u.pathname = prefix + (u.pathname === '/' ? '' : u.pathname);\n    }\n\n    const fullPath = u.pathname.slice(1);\n    const path = fullPath.split('/');\n\n    if(path[0] && path[0][0] === '$' && path[0].length > 1) {\n      onclick = 'invoice';\n    } else if(/^\\W/.test(fullPath) && !PHONE_NUMBER_REG_EXP.test(fullPath)) { // second regexp is for phone numbers (t.me/+38050...)\n      onclick = 'joinchat';\n    } else switch(path[0]) {\n      case 'joinchat':\n      case 'addstickers':\n      case 'addemoji':\n      case 'voicechat':\n      case 'invoice':\n        if(path.length !== 1 && !prefix) {\n          onclick = path[0];\n          break;\n        }\n\n      default:\n        if((path[1] && path[1].match(/^\\d+(?:\\?(?:comment|thread)=\\d+)?$/)) || path.length === 1) {\n          onclick = 'im';\n          break;\n        }\n\n        break;\n    }\n  } else if((telescoPeMatch = url.match(/^(?:https?:\\/\\/)?telesco\\.pe\\/([^/?]+)\\/(\\d+)/))) {\n    onclick = 'im';\n  } else if((tgMatch = url.match(/tg:(?:\\/\\/)?(.+?)(?:\\?|$)/))) {\n    onclick = 'tg_' + tgMatch[1] as any;\n  }/*  else if(unsafe) {\n    url = 'tg://unsafe_url?url=' + encodeURIComponent(url);\n  } */\n\n  if(!(window as any)[onclick]) {\n    onclick = undefined;\n  }\n\n  out.onclick = onclick;\n  return out;\n}\n\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.wrapUrl = wrapUrl);\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// import I18n from '../../lib/langPack';\n\nexport default function setInnerHTML(elem: Element, html: string | DocumentFragment | Element) {\n  setDirection(elem);\n  if(typeof(html) === 'string') {\n    if(!html) elem.replaceChildren();\n    else elem.innerHTML = html;\n  } else {\n    elem.replaceChildren(html);\n  }\n}\n\nexport function setDirection(elem: Element) {\n  // if(!I18n.isRTL) {\n  elem.setAttribute('dir', 'auto');\n  // }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {MOUNT_CLASS_TO} from '../config/debug';\nimport I18n, {i18n} from '../lib/langPack';\n\nexport const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nexport const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\nexport const ONE_DAY = 86400;\n\n// https://stackoverflow.com/a/6117889\nexport const getWeekNumber = (date: Date) => {\n  const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n  const dayNum = d.getUTCDay() || 7;\n  d.setUTCDate(d.getUTCDate() + 4 - dayNum);\n  const yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n  return Math.ceil((((d.getTime() - yearStart.getTime()) / ONE_DAY) + 1) / 7);\n};\n\nexport function formatDateAccordingToTodayNew(time: Date) {\n  const today = new Date();\n  const now = today.getTime() / 1000 | 0;\n  const timestamp = time.getTime() / 1000 | 0;\n\n  const options: Intl.DateTimeFormatOptions = {};\n  if((now - timestamp) < ONE_DAY && today.getDate() === time.getDate()) { // if the same day\n    options.hour = options.minute = '2-digit';\n  } else if(today.getFullYear() !== time.getFullYear()) { // different year\n    options.year = options.day = 'numeric';\n    options.month = '2-digit';\n  } else if((now - timestamp) < (ONE_DAY * 7) && getWeekNumber(today) === getWeekNumber(time)) { // current week\n    options.weekday = 'short';\n  } else { // same year\n    options.month = 'short';\n    options.day = 'numeric';\n  }\n\n  return new I18n.IntlDateElement({\n    date: time,\n    options\n  }).element;\n}\n\nexport function formatFullSentTimeRaw(timestamp: number, options: {\n  capitalize?: boolean\n} = {}) {\n  const date = new Date();\n  const time = new Date(timestamp * 1000);\n  const now = date.getTime() / 1000;\n\n  const timeEl = formatTime(time);\n\n  let dateEl: Node | string;\n  if((now - timestamp) < ONE_DAY && date.getDate() === time.getDate()) { // if the same day\n    dateEl = i18n(options.capitalize ? 'Date.Today' : 'Peer.Status.Today');\n  } else if((now - timestamp) < (ONE_DAY * 2) && (date.getDate() - 1) === time.getDate()) { // yesterday\n    dateEl = i18n(options.capitalize ? 'Yesterday' : 'Peer.Status.Yesterday');\n\n    if(options.capitalize) {\n      (dateEl as HTMLElement).style.textTransform = 'capitalize';\n    }\n  } else if(date.getFullYear() !== time.getFullYear()) { // different year\n    dateEl = new I18n.IntlDateElement({\n      date: time,\n      options: {\n        month: 'short',\n        day: 'numeric',\n        year: 'numeric'\n      }\n    }).element;\n    // dateStr = months[time.getMonth()].slice(0, 3) + ' ' + time.getDate() + ', ' + time.getFullYear();\n  } else {\n    dateEl = new I18n.IntlDateElement({\n      date: time,\n      options: {\n        month: 'short',\n        day: 'numeric'\n      }\n    }).element;\n    // dateStr = months[time.getMonth()].slice(0, 3) + ' ' + time.getDate();\n  }\n\n  return {dateEl, timeEl};\n}\n\nexport function formatFullSentTime(timestamp: number) {\n  const {dateEl, timeEl} = formatFullSentTimeRaw(timestamp, {\n    capitalize: true\n  });\n\n  const fragment = document.createDocumentFragment();\n  fragment.append(dateEl, ' ', i18n('ScheduleController.at'), ' ', timeEl);\n  return fragment;\n}\n\nexport function formatTime(date: Date) {\n  return new I18n.IntlDateElement({\n    date,\n    options: {\n      hour: '2-digit',\n      minute: '2-digit'\n    }\n  }).element;\n}\n\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.formatDateAccordingToTodayNew = formatDateAccordingToTodayNew);\n\nexport const getFullDate = (date: Date, options: Partial<{\n  noTime: true,\n  noSeconds: true,\n  monthAsNumber: true,\n  leadingZero: true\n}> = {}) => {\n  const joiner = options.monthAsNumber ? '.' : ' ';\n  const time = ('0' + date.getHours()).slice(-2) + ':' + ('0' + date.getMinutes()).slice(-2) + (options.noSeconds ? '' : ':' + ('0' + date.getSeconds()).slice(-2));\n\n  return (options.leadingZero ? ('0' + date.getDate()).slice(-2) : date.getDate()) +\n    joiner + (options.monthAsNumber ? ('0' + (date.getMonth() + 1)).slice(-2) : months[date.getMonth()]) +\n    joiner + date.getFullYear() +\n    (options.noTime ? '' : ', ' + time);\n};\n\n// https://github.com/DrKLO/Telegram/blob/d52b2c921abd3c1e8d6368858313ad0cb0468c07/TMessagesProj/src/main/java/org/telegram/ui/Adapters/FiltersView.java\nconst minYear = 2013;\nconst yearPattern = new RegExp('20[0-9]{1,2}');\nconst monthYearOrDayPattern = new RegExp('(\\\\w{3,}) ([0-9]{0,4})', 'i');\nconst yearOrDayAndMonthPattern = new RegExp('([0-9]{0,4}) (\\\\w{2,})', 'i');\nconst shortDate = new RegExp('^([0-9]{1,4})(\\\\.| |/|\\\\-)([0-9]{1,4})$', 'i');\nconst longDate = new RegExp('^([0-9]{1,2})(\\\\.| |/|\\\\-)([0-9]{1,2})(\\\\.| |/|\\\\-)([0-9]{1,4})$', 'i');\nconst numberOfDaysEachMonth = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nexport type DateData = {\n  title: string,\n  minDate: number,\n  maxDate: number,\n};\nexport function fillTipDates(query: string, dates: DateData[]) {\n  const q = query.trim().toLowerCase();\n\n  if(q.length < 3) {\n    return;\n  }\n\n  if('today'.indexOf(q) === 0) {\n    const date = new Date();\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const day = date.getDate();\n    date.setFullYear(year, month, day);\n    date.setHours(0, 0, 0);\n\n    const minDate = date.getTime();\n    date.setFullYear(year, month, day + 1);\n    date.setHours(0, 0, 0);\n\n    const maxDate = date.getTime() - 1;\n    dates.push({\n      title: 'Today',\n      minDate,\n      maxDate\n    });\n    return;\n  }\n\n  if('yesterday'.indexOf(q) === 0) {\n    const date = new Date();\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const day = date.getDate();\n    date.setFullYear(year, month, day);\n    date.setHours(0, 0, 0);\n\n    const minDate = date.getTime() - 86400000;\n    date.setFullYear(year, month, day + 1);\n    date.setHours(0, 0, 0);\n\n    const maxDate = date.getTime() - 86400001;\n    dates.push({\n      title: 'Yesterday',\n      minDate,\n      maxDate\n    });\n    return;\n  }\n\n  const dayOfWeek = getDayOfWeek(q);\n  if(dayOfWeek >= 0) {\n    const date = new Date();\n    const now = date.getTime();\n    const currentDay = date.getDay();\n    const distance = dayOfWeek - currentDay;\n    date.setDate(date.getDate() + distance);\n    if(date.getTime() > now) {\n      date.setTime(date.getTime() - 604800000);\n    }\n    const year = date.getFullYear()\n    const month = date.getMonth();\n    const day = date.getDate();\n    date.setFullYear(year, month, day);\n    date.setHours(0, 0, 0);\n\n    const minDate = date.getTime();\n    date.setFullYear(year, month, day + 1);\n    date.setHours(0, 0, 0);\n\n    const maxDate = date.getTime() - 1;\n    dates.push({\n      title: formatWeekLong(minDate),\n      minDate,\n      maxDate\n    });\n    return;\n  }\n\n  let matches: any[];\n  if((matches = shortDate.exec(q)) !== null) {\n    const g1 = matches[1];\n    const g2 = matches[3];\n    const k = parseInt(g1);\n    const k1 = parseInt(g2);\n    if(k > 0 && k <= 31) {\n      if(k1 >= minYear && k <= 12) {\n        const selectedYear = k1;\n        const month = k - 1;\n        createForMonthYear(dates, month, selectedYear);\n        return;\n      } else if(k1 <= 12) {\n        const day = k - 1;\n        const month = k1 - 1;\n        createForDayMonth(dates, day, month);\n      }\n    } else if(k >= minYear && k1 <= 12) {\n      const selectedYear = k;\n      const month = k1 - 1;\n      createForMonthYear(dates, month, selectedYear);\n    }\n\n    return;\n  }\n\n  if((matches = longDate.exec(q)) !== null) {\n    const g1 = matches[1];\n    const g2 = matches[3];\n    const g3 = matches[5];\n    if(!matches[2] === matches[4]) {\n      return;\n    }\n\n    const day = parseInt(g1);\n    const month = parseInt(g2) - 1;\n    let year = parseInt(g3);\n    if(year >= 10 && year <= 99) {\n      year += 2000;\n    }\n\n    const currentYear = new Date().getFullYear();\n    if(validDateForMonth(day - 1, month) && year >= minYear && year <= currentYear) {\n      const date = new Date();\n      date.setFullYear(year, month, day);\n      date.setHours(0, 0, 0);\n\n      const minDate = date.getTime();\n      date.setFullYear(year, month, day + 1);\n      date.setHours(0, 0, 0);\n\n      const maxDate = date.getTime() - 1;\n      dates.push({\n        title: formatterYearMax(minDate),\n        minDate,\n        maxDate\n      });\n      return;\n    }\n\n    return;\n  }\n\n  if((matches = yearPattern.exec(q)) !== null) {\n    let selectedYear = +q;\n    const currentYear = new Date().getFullYear();\n    if(selectedYear < minYear) {\n      selectedYear = minYear;\n      for(let i = currentYear; i >= selectedYear; i--) {\n        const date = new Date();\n        date.setFullYear(i, 0, 1);\n        date.setHours(0, 0, 0);\n\n        const minDate = date.getTime();\n        date.setFullYear(i + 1, 0, 1);\n        date.setHours(0, 0, 0);\n\n        const maxDate = date.getTime() - 1;\n        dates.push({\n          title: '' + i,\n          minDate,\n          maxDate\n        });\n      }\n    } else if(selectedYear <= currentYear) {\n      const date = new Date();\n      date.setFullYear(selectedYear, 0, 1);\n      date.setHours(0, 0, 0);\n\n      const minDate = date.getTime();\n      date.setFullYear(selectedYear + 1, 0, 1);\n      date.setHours(0, 0, 0);\n\n      const maxDate = date.getTime() - 1;\n      dates.push({\n        title: '' + selectedYear,\n        minDate,\n        maxDate\n      });\n    }\n\n    return;\n  }\n\n  if((matches = monthYearOrDayPattern.exec(q)) !== null) {\n    const g1 = matches[1];\n    const g2 = matches[2];\n    const month = getMonth(g1);\n    if(month >= 0) {\n      const k = +g2;\n      if(k > 0 && k <= 31) {\n        const day = k - 1;\n        createForDayMonth(dates, day, month);\n        return;\n      } else if(k >= minYear) {\n        const selectedYear = k;\n        createForMonthYear(dates, month, selectedYear);\n        return;\n      }\n    }\n  }\n\n  if((matches = yearOrDayAndMonthPattern.exec(q)) !== null) {\n    const g1 = matches[1];\n    const g2 = matches[2];\n    const month = getMonth(g2);\n    if(month >= 0) {\n      const k = +g1;\n      if(k > 0 && k <= 31) {\n        const day = k - 1;\n        createForDayMonth(dates, day, month);\n        return;\n      } else if(k >= minYear) {\n        const selectedYear = k;\n        createForMonthYear(dates, month, selectedYear);\n      }\n    }\n  }\n}\n\nfunction createForMonthYear(dates: DateData[], month: number, selectedYear: number) {\n  const currentYear = new Date().getFullYear();\n  const today = Date.now();\n  if(selectedYear >= minYear && selectedYear <= currentYear) {\n    const date = new Date();\n    date.setFullYear(selectedYear, month, 1);\n    date.setHours(0, 0, 0);\n    const minDate = date.getTime();\n    if(minDate > today) {\n      return;\n    }\n    date.setMonth(date.getMonth() + 1);\n    const maxDate = date.getTime() - 1;\n\n    dates.push({\n      title: formatterMonthYear(minDate),\n      minDate,\n      maxDate\n    });\n  }\n}\n\nfunction createForDayMonth(dates: DateData[], day: number, month: number) {\n  if(validDateForMonth(day, month)) {\n    const currentYear = new Date().getFullYear();\n    const today = Date.now();\n\n    for(let i = currentYear; i >= minYear; i--) {\n      if(month === 1 && day === 28 && !isLeapYear(i)) {\n        continue;\n      }\n\n      const date = new Date();\n      date.setFullYear(i, month, day + 1);\n      date.setHours(0, 0, 0);\n\n      const minDate = date.getTime();\n      if(minDate > today) {\n        continue;\n      }\n\n      date.setFullYear(i, month, day + 2);\n      date.setHours(0, 0, 0);\n      const maxDate = date.getTime() - 1;\n      if(i === currentYear) {\n        dates.push({\n          title: formatterDayMonth(minDate),\n          minDate,\n          maxDate\n        });\n      } else {\n        dates.push({\n          title: formatterYearMax(minDate),\n          minDate,\n          maxDate\n        });\n      }\n    }\n  }\n}\n\nfunction formatterMonthYear(timestamp: number) {\n  const date = new Date(timestamp);\n  return months[date.getMonth()].slice(0, 3) + ' ' + date.getFullYear();\n}\n\nfunction formatterDayMonth(timestamp: number) {\n  const date = new Date(timestamp);\n  return months[date.getMonth()].slice(0, 3) + ' ' + date.getDate();\n}\n\nfunction formatterYearMax(timestamp: number) {\n  const date = new Date(timestamp);\n  return ('0' + date.getDate()).slice(-2) + '.' + ('0' + (date.getMonth() + 1)).slice(-2) + '.' + date.getFullYear();\n}\n\nfunction formatWeekLong(timestamp: number) {\n  const date = new Date(timestamp);\n  return days[date.getDay()];\n}\n\nfunction validDateForMonth(day: number, month: number) {\n  if(month >= 0 && month < 12) {\n    if(day >= 0 && day < numberOfDaysEachMonth[month]) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isLeapYear(year: number) {\n  return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n}\n\nfunction getMonth(q: string) {\n  /* String[] months = new String[]{\n          LocaleController.getString(\"January\", R.string.January).toLowerCase(),\n          LocaleController.getString(\"February\", R.string.February).toLowerCase(),\n          LocaleController.getString(\"March\", R.string.March).toLowerCase(),\n          LocaleController.getString(\"April\", R.string.April).toLowerCase(),\n          LocaleController.getString(\"May\", R.string.May).toLowerCase(),\n          LocaleController.getString(\"June\", R.string.June).toLowerCase(),\n          LocaleController.getString(\"July\", R.string.July).toLowerCase(),\n          LocaleController.getString(\"August\", R.string.August).toLowerCase(),\n          LocaleController.getString(\"September\", R.string.September).toLowerCase(),\n          LocaleController.getString(\"October\", R.string.October).toLowerCase(),\n          LocaleController.getString(\"November\", R.string.November).toLowerCase(),\n          LocaleController.getString(\"December\", R.string.December).toLowerCase()\n  }; */\n\n  /* String[] monthsEng = new String[12];\n  Calendar c = Calendar.getInstance();\n  for (int i = 1; i <= 12; i++) {\n      c.set(0, 0, 0, 0, 0, 0);\n      c.set(Calendar.MONTH, i);\n      monthsEng[i - 1] = c.getDisplayName(Calendar.MONTH, Calendar.LONG, Locale.ENGLISH).toLowerCase();\n  } */\n\n  q = q.toLowerCase();\n  for(let i = 0; i < 12; i++) {\n    const month = months[i].toLowerCase();\n    if(month.indexOf(q) === 0) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction getDayOfWeek(q: string) {\n  const c = new Date();\n  if(q.length <= 3) {\n    return -1;\n  }\n\n  for(let i = 0; i < 7; i++) {\n    c.setDate(c.getDate() + 1);\n\n    if(formatWeekLong(c.getTime()).toLowerCase().indexOf(q) === 0) {\n      return c.getDay();\n    }\n  }\n  return -1;\n}\n\nMOUNT_CLASS_TO.fillTipDates = fillTipDates;\n","/**\n * Will be used for FILE_REFERENCE_EXPIRED\n * @param key\n * @param wasObject\n * @param newObject\n */\nexport default function safeReplaceArrayInObject<K>(key: K, wasObject: any, newObject: any) {\n  if('byteLength' in newObject[key]) { // Uint8Array\n    newObject[key] = [...newObject[key]];\n  }\n\n  if(wasObject && wasObject[key] !== newObject[key]) {\n    wasObject[key].length = newObject[key].length;\n    (newObject[key] as any[]).forEach((v, i) => {\n      wasObject[key][i] = v;\n    });\n\n    /* wasObject[key].set(newObject[key]); */\n    newObject[key] = wasObject[key];\n  }\n}\n","export const EXTENSION_MIME_TYPE_MAP: {[ext in MTFileExtension]: MTMimeType} = {\n  pdf: 'application/pdf',\n  tgv: 'application/x-tgwallpattern',\n  tgs: 'application/x-tgsticker',\n  json: 'application/json',\n  wav: 'audio/wav',\n  mp3: 'audio/mpeg',\n  ogg: 'audio/ogg',\n  jpeg: 'image/jpeg',\n  jpg: 'image/jpeg',\n  png: 'image/png',\n  gif: 'image/gif',\n  webp: 'image/webp',\n  mp4: 'video/mp4',\n  webm: 'video/webm',\n  mov: 'video/quicktime',\n  svg: 'image/svg+xml'\n};\n\nexport const MIME_TYPE_EXTENSION_MAP: {[mimeType in MTMimeType]?: MTFileExtension} = {};\n\nfor(const ext in EXTENSION_MIME_TYPE_MAP) {\n  MIME_TYPE_EXTENSION_MAP[EXTENSION_MIME_TYPE_MAP[ext as MTFileExtension]] = ext as MTFileExtension;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {ThumbCache} from '../storages/thumbs';\nimport {AccountWallPapers, Document, DocumentAttribute, MessagesSavedGifs, PhotoSize, WallPaper} from '../../layer';\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\nimport {getFullDate} from '../../helpers/date';\nimport isObject from '../../helpers/object/isObject';\nimport safeReplaceArrayInObject from '../../helpers/object/safeReplaceArrayInObject';\nimport {AppManager} from './manager';\nimport wrapPlainText from '../richTextProcessor/wrapPlainText';\nimport assumeType from '../../helpers/assumeType';\nimport {getEnvironment} from '../../environment/utils';\nimport {isServiceWorkerOnline} from '../mtproto/mtproto.worker';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\nimport getDocumentInputFileLocation from './utils/docs/getDocumentInputFileLocation';\nimport getDocumentURL from './utils/docs/getDocumentURL';\nimport makeError from '../../helpers/makeError';\nimport {EXTENSION_MIME_TYPE_MAP} from '../../environment/mimeTypeMap';\nimport {THUMB_TYPE_FULL} from '../mtproto/mtproto_config';\n\nexport type MyDocument = Document.document;\n\n// TODO: если залить картинку файлом, а потом перезайти в диалог - превьюшка заново скачается\n\ntype WallPaperId = WallPaper.wallPaper['id'];\n\nlet uploadWallPaperTempId = 0;\n\nexport class AppDocsManager extends AppManager {\n  private docs: {[docId: DocId]: MyDocument};\n\n  private stickerCachedThumbs: {[docId: DocId]: {[toneIndex: number]: {url: string, w: number, h: number}}};\n\n  private uploadingWallPapers: {[id: WallPaperId]: {cacheContext: ThumbCache, file: File}};\n\n  protected after() {\n    this.docs = {};\n    this.stickerCachedThumbs = {};\n    this.uploadingWallPapers = {};\n\n    MTProtoMessagePort.getInstance<false>().addEventListener('serviceWorkerOnline', (online) => {\n      if(!online) {\n        this.onServiceWorkerFail();\n      }\n    });\n  }\n\n  private onServiceWorkerFail = () => {\n    for(const id in this.docs) {\n      const doc = this.docs[id];\n\n      if(doc.supportsStreaming) {\n        delete doc.supportsStreaming;\n        this.thumbsStorage.deleteCacheContext(doc);\n      }\n    }\n  };\n\n  public saveDoc(doc: Document, context?: ReferenceContext): MyDocument {\n    if(!doc || doc._ === 'documentEmpty') {\n      return;\n    }\n\n    const oldDoc = this.docs[doc.id];\n\n    if(doc.file_reference) { // * because we can have a new object w/o the file_reference while sending\n      safeReplaceArrayInObject('file_reference', oldDoc, doc);\n      this.referenceDatabase.saveContext(doc.file_reference, context);\n    }\n\n    // console.log('saveDoc', apiDoc, this.docs[apiDoc.id]);\n    // if(oldDoc) {\n    //   //if(doc._ !== 'documentEmpty' && doc._ === d._) {\n    //     if(doc.thumbs) {\n    //       if(!oldDoc.thumbs) oldDoc.thumbs = doc.thumbs;\n    //       /* else if(apiDoc.thumbs[0].bytes && !d.thumbs[0].bytes) {\n    //         d.thumbs.unshift(apiDoc.thumbs[0]);\n    //       } else if(d.thumbs[0].url) { // fix for converted thumb in safari\n    //         apiDoc.thumbs[0] = d.thumbs[0];\n    //       } */\n    //     }\n\n    //   //}\n\n    //   return oldDoc;\n\n    //   //return Object.assign(d, apiDoc, context);\n    //   //return context ? Object.assign(d, context) : d;\n    // }\n\n    if(!oldDoc) {\n      this.docs[doc.id] = doc;\n    }\n\n    // * exclude from state\n    // defineNotNumerableProperties(doc, [/* 'thumbs',  */'type', 'h', 'w', 'file_name',\n    // 'file', 'duration', 'downloaded', 'url', 'audioTitle',\n    // 'audioPerformer', 'sticker', 'stickerEmoji', 'stickerEmojiRaw',\n    // 'stickerSetInput', 'stickerThumbConverted', 'animated', 'supportsStreaming']);\n\n    for(let i = 0, length = doc.attributes.length; i < length; ++i) {\n      const attribute = doc.attributes[i];\n      switch(attribute._) {\n        case 'documentAttributeFilename': {\n          doc.file_name = wrapPlainText(attribute.file_name);\n          break;\n        }\n\n        case 'documentAttributeAudio': {\n          if(doc.type === 'round') {\n            break;\n          }\n\n          doc.duration = attribute.duration;\n          doc.type = attribute.pFlags.voice && doc.mime_type === 'audio/ogg' ? 'voice' : 'audio';\n          break;\n        }\n\n        case 'documentAttributeVideo': {\n          doc.duration = attribute.duration;\n          doc.w = attribute.w;\n          doc.h = attribute.h;\n          // apiDoc.supportsStreaming = attribute.pFlags?.supports_streaming/*  && apiDoc.size > 524288 */;\n          if(/* apiDoc.thumbs &&  */attribute.pFlags.round_message) {\n            doc.type = 'round';\n          } else /* if(apiDoc.thumbs) */ {\n            doc.type = 'video';\n          }\n          break;\n        }\n\n        case 'documentAttributeCustomEmoji':\n        case 'documentAttributeSticker': {\n          if(attribute.alt !== undefined) {\n            doc.stickerEmojiRaw = attribute.alt;\n          }\n\n          if(attribute.stickerset) {\n            if(attribute.stickerset._ === 'inputStickerSetEmpty') {\n              delete attribute.stickerset;\n            } else if(attribute.stickerset._ === 'inputStickerSetID') {\n              doc.stickerSetInput = attribute.stickerset;\n            }\n          }\n\n          // * there can be no thumbs, then it is a document\n          if(/* apiDoc.thumbs &&  */doc.mime_type === 'image/webp' && (doc.thumbs || getEnvironment().IS_WEBP_SUPPORTED)) {\n            doc.type = 'sticker';\n            doc.sticker = 1;\n          } else if(doc.mime_type === 'video/webm') {\n            if(!getEnvironment().IS_WEBM_SUPPORTED) {\n              break;\n            }\n\n            doc.type = 'sticker';\n            doc.sticker = 3;\n            doc.animated = true;\n          }\n          break;\n        }\n\n        case 'documentAttributeImageSize': {\n          doc.type = 'photo';\n          doc.w = attribute.w;\n          doc.h = attribute.h;\n          break;\n        }\n\n        case 'documentAttributeAnimated': {\n          if((doc.mime_type === 'image/gif' || doc.mime_type === 'video/mp4')/*  && apiDoc.thumbs */) {\n            doc.type = 'gif';\n          }\n\n          doc.animated = true;\n          break;\n        }\n      }\n    }\n\n    if(!doc.mime_type) {\n      const ext = (doc.file_name || '').split('.').pop();\n      // @ts-ignore\n      const mappedMimeType = ext && EXTENSION_MIME_TYPE_MAP[ext.toLowerCase()];\n      if(mappedMimeType) {\n        doc.mime_type = mappedMimeType;\n      } else {\n        switch(doc.type) {\n          case 'gif':\n          case 'video':\n          case 'round':\n            doc.mime_type = 'video/mp4';\n            break;\n          case 'sticker':\n            doc.mime_type = 'image/webp';\n            break;\n          case 'audio':\n            doc.mime_type = 'audio/mpeg';\n            break;\n          case 'voice':\n            doc.mime_type = 'audio/ogg';\n            break;\n          default:\n            doc.mime_type = 'application/octet-stream';\n            break;\n        }\n      }\n    } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.pdf) {\n      doc.type = 'pdf';\n    } else if(doc.mime_type === EXTENSION_MIME_TYPE_MAP.gif) {\n      doc.type = 'gif';\n    } else if(doc.mime_type === 'application/x-tgsticker' && doc.file_name === 'AnimatedSticker.tgs') {\n      doc.type = 'sticker';\n      doc.animated = true;\n      doc.sticker = 2;\n    }\n\n    if(doc.type === 'voice' || doc.type === 'round') {\n      // browser will identify extension\n      const attribute = doc.attributes.find((attribute) => attribute._ === 'documentAttributeFilename') as DocumentAttribute.documentAttributeFilename;\n      const ext = attribute && attribute.file_name.split('.').pop();\n      const date = getFullDate(new Date(doc.date * 1000), {monthAsNumber: true, leadingZero: true}).replace(/[:\\.]/g, '-').replace(', ', '_');\n      doc.file_name = `${doc.type}_${date}${ext ? '.' + ext : ''}`;\n    }\n\n    if(isServiceWorkerOnline() && ((doc.type === 'gif' && doc.size > 8e6) || doc.type === 'audio' || doc.type === 'video')/*  || doc.mime_type.indexOf('video/') === 0 */) {\n      doc.supportsStreaming = true;\n\n      const cacheContext = this.thumbsStorage.getCacheContext(doc);\n      if(!cacheContext.url) {\n        this.thumbsStorage.setCacheContextURL(doc, undefined, getDocumentURL(doc), 0);\n      }\n    } else {\n      doc.supportsStreaming = false;\n    }\n\n    // for testing purposes\n    // doc.supportsStreaming = false;\n    // doc.url = ''; // * this will break upload urls\n\n    doc.file_name ||= '';\n\n    /* if(!doc.url) {\n      doc.url = this.getFileURL(doc);\n    } */\n\n    if(oldDoc) {\n      return Object.assign(oldDoc, doc);\n    }\n\n    return doc;\n  }\n\n  public getDoc(docId: DocId | MyDocument): MyDocument {\n    return isObject<MyDocument>(docId) ? docId : this.docs[docId];\n  }\n\n  public downloadDoc(doc: MyDocument, queueId?: number, onlyCache?: boolean) {\n    return this.apiFileManager.downloadMedia({\n      media: doc,\n      queueId,\n      onlyCache\n    });\n  }\n\n  public getLottieCachedThumb(docId: DocId, toneIndex: number) {\n    const cached = this.stickerCachedThumbs[docId];\n    return cached && cached[toneIndex];\n  }\n\n  public saveLottiePreview(docId: DocId, blob: Blob, width: number, height: number, toneIndex: number) {\n    const doc = this.getDoc(docId);\n    if(!doc) {\n      return;\n    }\n\n    const cached = this.stickerCachedThumbs[doc.id] ??= {};\n\n    const thumb = cached[toneIndex];\n    if(thumb && thumb.w >= width && thumb.h >= height) {\n      return;\n    }\n\n    cached[toneIndex] = {\n      url: URL.createObjectURL(blob),\n      w: width,\n      h: height\n    };\n  }\n\n  public saveWebPConvertedStrippedThumb(docId: DocId, bytes: Uint8Array) {\n    const doc = this.getDoc(docId);\n    if(!doc) {\n      return;\n    }\n\n    const thumb = doc.thumbs && doc.thumbs.find((thumb) => thumb._ === 'photoStrippedSize') as PhotoSize.photoStrippedSize;\n    if(!thumb) {\n      return;\n    }\n\n    doc.pFlags.stickerThumbConverted = true;\n    thumb.bytes = bytes;\n  }\n\n  public prepareWallPaperUpload(file: File) {\n    const id = 'wallpaper-upload-' + ++uploadWallPaperTempId;\n\n    const thumb = {\n      _: 'photoSize',\n      h: 0,\n      w: 0,\n      location: {} as any,\n      size: file.size,\n      type: THUMB_TYPE_FULL\n    } as PhotoSize.photoSize;\n    let document: MyDocument = {\n      _: 'document',\n      access_hash: '',\n      attributes: [],\n      dc_id: 0,\n      file_reference: [],\n      id,\n      mime_type: file.type as MTMimeType,\n      size: file.size,\n      date: Date.now() / 1000,\n      pFlags: {},\n      thumbs: [thumb],\n      file_name: file.name\n    };\n\n    document = this.saveDoc(document);\n\n    const cacheContext = this.thumbsStorage.setCacheContextURL(document, undefined, URL.createObjectURL(file), file.size);\n\n    const wallpaper: WallPaper.wallPaper = {\n      _: 'wallPaper',\n      access_hash: '',\n      document: document,\n      id,\n      slug: id,\n      pFlags: {}\n    };\n\n    this.uploadingWallPapers[id] = {\n      cacheContext,\n      file\n    };\n\n    return wallpaper;\n  }\n\n  public uploadWallPaper(id: WallPaperId) {\n    const {cacheContext, file} = this.uploadingWallPapers[id];\n    delete this.uploadingWallPapers[id];\n\n    const upload = this.apiFileManager.upload({file, fileName: file.name});\n    return upload.then((inputFile) => {\n      return this.apiManager.invokeApi('account.uploadWallPaper', {\n        file: inputFile,\n        mime_type: file.type,\n        settings: {\n          _: 'wallPaperSettings',\n          pFlags: {}\n        }\n      }).then((wallPaper) => {\n        assumeType<WallPaper.wallPaper>(wallPaper);\n        wallPaper.document = this.saveDoc(wallPaper.document);\n        this.thumbsStorage.setCacheContextURL(wallPaper.document, undefined, cacheContext.url, cacheContext.downloaded);\n\n        return wallPaper;\n      });\n    });\n  }\n\n  public getGifs() {\n    return this.apiManager.invokeApiHashable({\n      method: 'messages.getSavedGifs',\n      processResult: (res) => {\n        assumeType<MessagesSavedGifs.messagesSavedGifs>(res);\n        return res.gifs.map((doc) => this.saveDoc(doc));\n      }\n    });\n  }\n\n  public requestDocPart(docId: DocId, dcId: number, offset: number, limit: number) {\n    const doc = this.getDoc(docId);\n    if(!doc) return Promise.reject(makeError('NO_DOC'));\n    return this.apiFileManager.requestFilePart(dcId, getDocumentInputFileLocation(doc), offset, limit);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {FileURLType, getFileURL} from '../../../../helpers/fileName';\nimport {Document, PhotoSize} from '../../../../layer';\nimport getDocumentDownloadOptions from './getDocumentDownloadOptions';\n\nexport default function getDocumentURL(doc: Document.document, download = false, thumb?: PhotoSize.photoSize) {\n  let type: FileURLType;\n  if(download) {\n    type = 'download';\n  } else if(thumb) {\n    type = 'thumb';\n  } else if(doc.supportsStreaming) {\n    type = 'stream';\n  } else {\n    type = 'document';\n  }\n\n  return getFileURL(type, getDocumentDownloadOptions(doc, thumb));\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {MessageEntity, DraftMessage, MessagesSaveDraft} from '../../layer';\nimport tsNow from '../../helpers/tsNow';\nimport stateStorage from '../stateStorage';\nimport assumeType from '../../helpers/assumeType';\nimport {AppManager} from './manager';\nimport generateMessageId from './utils/messageId/generateMessageId';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\nimport draftsAreEqual from './utils/drafts/draftsAreEqual';\n\nexport type MyDraftMessage = DraftMessage.draftMessage;\n\nexport class AppDraftsManager extends AppManager {\n  private drafts: {[peerIdAndThreadId: string]: MyDraftMessage} = {};\n  private getAllDraftPromise: Promise<void>;\n\n  protected after() {\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateDraftMessage: (update) => {\n        const peerId = this.appPeersManager.getPeerId(update.peer);\n        this.saveDraft({\n          peerId,\n          threadId: update.threadId,\n          draft: update.draft,\n          notify: true\n        });\n      }\n    });\n\n    /* return  */stateStorage.get('drafts').then((drafts) => {\n      this.drafts = drafts || {};\n    });\n  }\n\n  private getKey(peerId: PeerId, threadId?: number) {\n    return '' + peerId + (threadId ? '_' + threadId : '');\n  }\n\n  public getDraft(peerId: PeerId, threadId?: number) {\n    return this.drafts[this.getKey(peerId, threadId)];\n  }\n\n  public addMissedDialogs() {\n    return this.getAllDrafts().then(() => {\n      for(const key in this.drafts) {\n        if(key.indexOf('_') !== -1) { // exclude threads\n          continue;\n        }\n\n        const peerId = key.toPeerId();\n        const dialog = this.appMessagesManager.getDialogOnly(peerId);\n        if(!dialog) {\n          this.appMessagesManager.reloadConversation(peerId);\n          /* const dialog = appMessagesManager.generateDialog(peerId);\n          dialog.draft = this.drafts[key];\n          appMessagesManager.saveConversation(dialog);\n          appMessagesManager.newDialogsToHandle[peerId] = dialog;\n          appMessagesManager.scheduleHandleNewDialogs(); */\n        }\n      }\n    });\n  }\n\n  private getAllDrafts() {\n    return this.getAllDraftPromise ??= this.apiManager.invokeApi('messages.getAllDrafts')\n    .then((updates) => {\n      const p = this.apiUpdatesManager.updatesState.syncLoading || Promise.resolve();\n      p.then(() => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n      });\n    });\n  }\n\n  public saveDraft({peerId, threadId, draft: apiDraft, notify, force}: {\n    peerId: PeerId,\n    threadId?: number,\n    draft: DraftMessage,\n    notify?: boolean,\n    force?: boolean\n  }) {\n    const draft = this.processApiDraft(apiDraft);\n\n    const key = this.getKey(peerId, threadId);\n    if(draft) {\n      this.drafts[key] = draft;\n    } else {\n      delete this.drafts[key];\n    }\n\n    stateStorage.set({\n      drafts: this.drafts\n    });\n\n    if(notify) {\n      // console.warn(dT(), 'save draft', peerId, apiDraft, options)\n      this.rootScope.dispatchEvent('draft_updated', {\n        peerId,\n        threadId,\n        draft,\n        force\n      });\n    }\n\n    return draft;\n  }\n\n  private isEmptyDraft(draft: DraftMessage) {\n    if(draft?._ !== 'draftMessage') {\n      return true;\n    }\n\n    if(draft.reply_to_msg_id !== undefined && draft.reply_to_msg_id > 0) {\n      return false;\n    }\n\n    if(!draft.message.length) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private processApiDraft(draft: DraftMessage): MyDraftMessage {\n    if(!draft || draft._ !== 'draftMessage') {\n      return undefined;\n    }\n\n    if(draft.reply_to_msg_id) {\n      draft.reply_to_msg_id = generateMessageId(draft.reply_to_msg_id);\n    }\n\n    return draft;\n  }\n\n  public syncDraft(peerId: PeerId, threadId: number, localDraft?: DraftMessage, saveOnServer = true, force = false) {\n    // console.warn(dT(), 'sync draft', peerID)\n    const serverDraft = this.getDraft(peerId, threadId);\n    if(draftsAreEqual(serverDraft, localDraft)) {\n      // console.warn(dT(), 'equal drafts', localDraft, serverDraft)\n      return true;\n    }\n\n    // console.warn(dT(), 'changed draft', localDraft, serverDraft)\n    const params: MessagesSaveDraft = {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      message: ''\n    };\n\n    let draftObj: DraftMessage;\n    if(this.isEmptyDraft(localDraft)) {\n      draftObj = {_: 'draftMessageEmpty'};\n    } else {\n      assumeType<DraftMessage.draftMessage>(localDraft);\n      const message = localDraft.message;\n      const entities: MessageEntity[] = localDraft.entities;\n\n      if(localDraft.reply_to_msg_id) {\n        params.reply_to_msg_id = getServerMessageId(localDraft.reply_to_msg_id);\n      }\n\n      if(entities?.length) {\n        params.entities = this.appMessagesManager.getInputEntities(entities);\n      }\n\n      if(localDraft.pFlags.no_webpage) {\n        params.no_webpage = localDraft.pFlags.no_webpage;\n      }\n\n      params.message = message;\n    }\n\n    if(threadId) {\n      params.top_msg_id = getServerMessageId(threadId);\n    }\n\n    const saveLocalDraft = draftObj || localDraft;\n    saveLocalDraft.date = tsNow(true) + this.timeManager.getServerTimeOffset();\n\n    this.saveDraft({\n      peerId,\n      threadId,\n      draft: saveLocalDraft,\n      notify: true,\n      force\n    });\n\n    if(saveOnServer) {\n      return this.apiManager.invokeApi('messages.saveDraft', params);\n    }\n\n    return true;\n  }\n\n  public clearAllDrafts() {\n    return this.apiManager.invokeApi('messages.clearAllDrafts').then((bool) => {\n      if(!bool) {\n        return;\n      }\n\n      for(const combined in this.drafts) {\n        const [peerId, threadId] = combined.split('_');\n        this.rootScope.dispatchEvent('draft_updated', {\n          peerId: peerId.toPeerId(),\n          threadId: threadId ? +threadId : undefined,\n          draft: undefined\n        });\n      }\n    });\n  }\n\n  public clearDraft(peerId: PeerId, threadId: number) {\n    const emptyDraft: DraftMessage.draftMessageEmpty = {\n      _: 'draftMessageEmpty'\n    };\n\n    if(threadId) {\n      this.syncDraft(peerId, threadId, emptyDraft as any, false, true);\n    } else {\n      this.saveDraft({\n        peerId,\n        threadId,\n        draft: emptyDraft,\n        notify: true,\n        force: true\n      });\n    }\n  }\n\n  public setDraft(peerId: PeerId, threadId: number, message: string, entities?: MessageEntity[]) {\n    const draft: DraftMessage.draftMessage = {\n      _: 'draftMessage',\n      date: Date.now() / 1000 | 0,\n      message,\n      pFlags: {},\n      entities\n    };\n\n    if(threadId) {\n      this.syncDraft(peerId, threadId, draft, false, true);\n    } else {\n      this.saveDraft({\n        peerId,\n        threadId,\n        draft,\n        notify: true,\n        force: true\n      });\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {MyDocument} from './appDocsManager';\nimport App from '../../config/app';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport isObject from '../../helpers/object/isObject';\nimport validateInitObject from '../../helpers/object/validateInitObject';\nimport fixEmoji from '../richTextProcessor/fixEmoji';\nimport SearchIndex from '../searchIndex';\nimport stateStorage from '../stateStorage';\nimport {AppManager} from './manager';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport pause from '../../helpers/schedulers/pause';\n\ntype EmojiLangPack = {\n  keywords: {\n    [keyword: string]: string[],\n  },\n  version: number,\n  langCode: string\n};\n\nconst EMOJI_LANG_PACK: EmojiLangPack = {\n  keywords: {},\n  version: 0,\n  langCode: App.langPackCode\n};\n\nconst RECENT_MAX_LENGTH = 32;\n\ntype EmojiType = 'native' | 'custom';\n\nexport class AppEmojiManager extends AppManager {\n  private static POPULAR_EMOJI = ['😂', '😘', '❤️', '😍', '😊', '😁', '👍', '☺️', '😔', '😄', '😭', '💋', '😒', '😳', '😜', '🙈', '😉', '😃', '😢', '😝', '😱', '😡', '😏', '😞', '😅', '😚', '🙊', '😌', '😀', '😋', '😆', '👌', '😐', '😕'];\n  private keywordLangPacks: {\n    [langCode: string]: EmojiLangPack\n  } = {};\n\n  private index: SearchIndex<EmojiLangPack['keywords'][keyof EmojiLangPack['keywords']]>;\n  private indexedLangPacks: {[langCode: string]: boolean} = {};\n\n  private getKeywordsPromises: {[langCode: string]: Promise<EmojiLangPack>} = {};\n\n  private recent: {native?: string[], custom?: DocId[]} = {};\n  private getRecentEmojisPromises: {native?: Promise<string[]>, custom?: Promise<DocId[]>} = {};\n\n  private getCustomEmojiDocumentsPromise: Promise<any>;\n  private getCustomEmojiDocumentPromises: Map<DocId, CancellablePromise<MyDocument>> = new Map();\n\n  /* public getPopularEmoji() {\n    return stateStorage.get('emojis_popular').then((popEmojis) => {\n      var result = []\n      if (popEmojis && popEmojis.length) {\n        for (var i = 0, len = popEmojis.length; i < len; i++) {\n          result.push({code: popEmojis[i][0], rate: popEmojis[i][1]})\n        }\n        callback(result)\n        return\n      }\n\n      return stateStorage.get('emojis_recent').then((recentEmojis) => {\n        recentEmojis = recentEmojis || popular || []\n        var shortcut\n        var code\n        for (var i = 0, len = recentEmojis.length; i < len; i++) {\n          shortcut = recentEmojis[i]\n          if (Array.isArray(shortcut)) {\n            shortcut = shortcut[0]\n          }\n          if (shortcut && typeof shortcut === 'string') {\n            if (shortcut.charAt(0) == ':') {\n              shortcut = shortcut.substr(1, shortcut.length - 2)\n            }\n            if (code = shortcuts[shortcut]) {\n              result.push({code: code, rate: 1})\n            }\n          }\n        }\n        callback(result)\n      });\n    });\n  }\n\n  function pushPopularEmoji (code) {\n    getPopularEmoji(function (popularEmoji) {\n      var exists = false\n      var count = popularEmoji.length\n      var result = []\n      for (var i = 0; i < count; i++) {\n        if (popularEmoji[i].code == code) {\n          exists = true\n          popularEmoji[i].rate++\n        }\n        result.push([popularEmoji[i].code, popularEmoji[i].rate])\n      }\n      if (exists) {\n        result.sort(function (a, b) {\n          return b[1] - a[1]\n        })\n      } else {\n        if (result.length > 41) {\n          result = result.slice(0, 41)\n        }\n        result.push([code, 1])\n      }\n      ConfigStorage.set({emojis_popular: result})\n    })\n  } */\n\n  public getEmojiKeywords(langCode: string = App.langPackCode) {\n    const promise = this.getKeywordsPromises[langCode];\n    if(promise) {\n      return promise;\n    }\n\n    const storageKey: any = 'emojiKeywords_' + langCode;\n    return this.getKeywordsPromises[langCode] = stateStorage.get(storageKey).then((pack: EmojiLangPack) => {\n      if(!isObject(pack)) {\n        pack = {} as any;\n      }\n\n      validateInitObject(EMOJI_LANG_PACK, pack);\n\n      // important\n      pack.langCode = langCode;\n      this.keywordLangPacks[langCode] = pack;\n\n      return this.apiManager.invokeApi('messages.getEmojiKeywordsDifference', {\n        lang_code: pack.langCode,\n        from_version: pack.version\n      }).then((keywordsDifference) => {\n        pack.version = keywordsDifference.version;\n\n        const packKeywords = pack.keywords;\n        const keywords = keywordsDifference.keywords;\n        for(let i = 0, length = keywords.length; i < length; ++i) {\n          const {keyword, emoticons} = keywords[i];\n          packKeywords[keyword] = emoticons;\n        }\n\n        stateStorage.set({\n          [storageKey]: pack\n        });\n\n        return pack;\n      }, () => {\n        return pack;\n      });\n    });\n  }\n\n  public getBothEmojiKeywords() {\n    const promises: Promise<any>[] = [\n      this.getEmojiKeywords()\n    ];\n\n    if(this.networkerFactory.language !== App.langPackCode) {\n      promises.push(this.getEmojiKeywords(this.networkerFactory.language));\n    }\n\n    if(!this.recent.native) {\n      promises.push(this.getRecentEmojis('native'));\n    }\n\n    return Promise.all(promises);\n  }\n\n  private indexEmojis() {\n    if(!this.index) {\n      this.index = new SearchIndex(undefined, 2);\n    }\n\n    for(const langCode in this.keywordLangPacks) {\n      if(this.indexedLangPacks[langCode]) {\n        continue;\n      }\n\n      const pack = this.keywordLangPacks[langCode];\n      const keywords = pack.keywords;\n\n      for(const keyword in keywords) {\n        const emoticons = keywords[keyword];\n        this.index.indexObject(emoticons, keyword);\n      }\n\n      this.indexedLangPacks[langCode] = true;\n    }\n  }\n\n  public searchEmojis(q: string) {\n    this.indexEmojis();\n\n    q = q.toLowerCase().replace(/_/g, ' ');\n\n    // const perf = performance.now();\n    let emojis: Array<string>;\n    if(q.trim()) {\n      const set = this.index.search(q);\n      emojis = Array.from(set).reduce((acc, v) => acc.concat(v), []);\n    } else {\n      emojis = this.recent.native.concat(AppEmojiManager.POPULAR_EMOJI).slice(0, RECENT_MAX_LENGTH);\n    }\n\n    emojis = Array.from(new Set(emojis));\n    // console.log('searchEmojis', q, 'time', performance.now() - perf);\n\n    /* for(let i = 0, length = emojis.length; i < length; ++i) {\n      if(emojis[i].includes(zeroWidthJoiner) && !emojis[i].includes('\\ufe0f')) {\n        emojis[i] += '\\ufe0f';\n      }\n    } */\n\n    return emojis;\n  }\n\n  public getRecentEmojis<T extends EmojiType>(type: 'custom'): Promise<DocId[]>;\n  public getRecentEmojis<T extends EmojiType>(type: 'native'): Promise<string[]>;\n  public getRecentEmojis<T extends EmojiType>(type: T): Promise<string[] | DocId[]> {\n    const promises = this.getRecentEmojisPromises;\n    return promises[type] ??= this.appStateManager.getState().then((state) => {\n      let recent: string[] | DocId[] = [];\n      if(type === 'native') {\n        const {recentEmoji} = state;\n        recent = Array.isArray(recentEmoji) && recentEmoji.length ? recentEmoji : AppEmojiManager.POPULAR_EMOJI;\n      } else {\n        const {recentCustomEmoji} = state;\n        recent = Array.isArray(recentCustomEmoji) && recentCustomEmoji.length ? recentCustomEmoji : [];\n      }\n\n      return this.recent[type] = recent as any;\n    }) as any;\n  }\n\n  public pushRecentEmoji(emoji: AppEmoji) {\n    const type: EmojiType = emoji.docId ? 'custom' : 'native';\n    emoji.emoji = fixEmoji(emoji.emoji);\n    // @ts-ignore\n    this.getRecentEmojis(type).then((recent) => {\n      const i = emoji.docId || emoji.emoji;\n      indexOfAndSplice(recent, i);\n      recent.unshift(i);\n      recent.splice(RECENT_MAX_LENGTH, recent.length - RECENT_MAX_LENGTH);\n\n      this.appStateManager.pushToState(type === 'custom' ? 'recentCustomEmoji' : 'recentEmoji', recent);\n      this.rootScope.dispatchEvent('emoji_recent', emoji);\n    });\n  }\n\n  public getCustomEmojiDocuments(docIds: DocId[]) {\n    if(!docIds.length) return Promise.resolve([] as MyDocument[]);\n    return this.apiManager.invokeApi('messages.getCustomEmojiDocuments', {document_id: docIds}).then((documents) => {\n      return documents.map((doc) => {\n        return this.appDocsManager.saveDoc(doc, {\n          type: 'customEmoji',\n          docId: doc.id\n        });\n      });\n    });\n  }\n\n  public getCachedCustomEmojiDocuments(docIds: DocId[]) {\n    return docIds.map((docId) => this.appDocsManager.getDoc(docId));\n  }\n\n  private setDebouncedGetCustomEmojiDocuments() {\n    if(this.getCustomEmojiDocumentsPromise || !this.getCustomEmojiDocumentPromises.size) {\n      return;\n    }\n\n    this.getCustomEmojiDocumentsPromise = pause(0).then(() => {\n      const allIds = [...this.getCustomEmojiDocumentPromises.keys()];\n      const promises: Promise<any>[] = [];\n      do {\n        const ids = allIds.splice(0, 100);\n        const promise = this.getCustomEmojiDocuments(ids).then((docs) => {\n          docs.forEach((doc, idx) => {\n            const docId = ids[idx];\n            const deferred = this.getCustomEmojiDocumentPromises.get(docId);\n            this.getCustomEmojiDocumentPromises.delete(docId);\n            deferred.resolve(doc);\n          });\n        });\n\n        promises.push(promise);\n      } while(allIds.length);\n\n      return Promise.all(promises);\n    }).finally(() => {\n      this.getCustomEmojiDocumentsPromise = undefined;\n      this.setDebouncedGetCustomEmojiDocuments();\n    });\n  }\n\n  public getCustomEmojiDocument(id: DocId) {\n    let promise = this.getCustomEmojiDocumentPromises.get(id);\n    if(promise) {\n      return promise;\n    }\n\n    const doc = this.appDocsManager.getDoc(id);\n    if(doc) {\n      return doc;\n    }\n\n    promise = deferredPromise();\n    this.getCustomEmojiDocumentPromises.set(id, promise);\n\n    this.setDebouncedGetCustomEmojiDocuments();\n\n    return promise;\n  }\n\n  public getCustomEmojis() {\n    return this.appStickersManager.getEmojiStickers();\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/evgeny-nadymov/telegram-react\n * Copyright (C) 2018 Evgeny Nadymov\n * https://github.com/evgeny-nadymov/telegram-react/blob/master/LICENSE\n */\n\nimport type GroupCallConnectionInstance from '../calls/groupCallConnectionInstance';\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\nimport {nextRandomUint} from '../../helpers/random';\nimport {DataJSON, GroupCall, GroupCallParticipant, GroupCallParticipantVideoSourceGroup, InputGroupCall, PhoneJoinGroupCall, PhoneJoinGroupCallPresentation, Update, Updates} from '../../layer';\nimport {logger} from '../logger';\nimport {NULL_PEER_ID} from '../mtproto/mtproto_config';\nimport {AppManager} from './manager';\nimport getPeerId from './utils/peers/getPeerId';\n\nexport type GroupCallId = GroupCall['id'];\nexport type MyGroupCall = GroupCall | InputGroupCall;\n\nexport type GroupCallConnectionType = 'main' | 'presentation';\n\nexport type JoinGroupCallJsonPayload = {\n  fingerprints: {\n    fingerprint: string;\n    setup: string;\n    hash: string;\n  }[];\n  pwd: string;\n  ssrc: number;\n  'ssrc-groups': GroupCallParticipantVideoSourceGroup.groupCallParticipantVideoSourceGroup[];\n  ufrag: string;\n};\n\nconst GET_PARTICIPANTS_LIMIT = 100;\n\nexport type GroupCallOutputSource = 'main' | 'presentation' | number;\n\nexport class AppGroupCallsManager extends AppManager {\n  private log: ReturnType<typeof logger>;\n\n  private groupCalls: Map<GroupCallId, MyGroupCall>;\n  private participants: Map<GroupCallId, Map<PeerId, GroupCallParticipant>>;\n  private nextOffsets: Map<GroupCallId, string>;\n\n  // private doNotDispatchParticipantUpdate: PeerId;\n\n  protected after() {\n    this.log = logger('GROUP-CALLS');\n\n    this.groupCalls = new Map();\n    this.participants = new Map();\n    this.nextOffsets = new Map();\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateGroupCall: (update) => {\n        this.saveGroupCall(update.call, update.chat_id);\n      },\n\n      updateGroupCallParticipants: (update) => {\n        this.saveGroupCall(update.call);\n\n        // this.getGroupCallFull(update.call.id, true); // ! WARNING TEMP\n\n        const groupCallId = update.call.id;\n        this.saveApiParticipants(groupCallId, update.participants);\n      }\n    });\n\n    this.rootScope.addEventListener('group_call_update', (groupCall) => {\n      if(groupCall._ === 'groupCallDiscarded') {\n        this.participants.delete(groupCall.id);\n      }\n    });\n  }\n\n  public getCachedParticipants(groupCallId: GroupCallId) {\n    let participants = this.participants.get(groupCallId);\n    if(!participants) {\n      this.participants.set(groupCallId, participants = new Map());\n    }\n\n    return participants;\n  }\n\n  private prepareToSavingNextOffset(groupCallId: GroupCallId) {\n    const nextOffsetsMap = this.nextOffsets;\n\n    const setNextOffset = (newNextOffset: string) => {\n      if(nextOffsetsMap.get(groupCallId) === nextOffset) {\n        nextOffsetsMap.set(groupCallId, newNextOffset);\n      }\n    };\n\n    const nextOffset = nextOffsetsMap.get(groupCallId);\n    return {\n      nextOffset,\n      setNextOffset\n    };\n  }\n\n  public saveApiParticipant(groupCallId: GroupCallId, participant: GroupCallParticipant, skipCounterUpdating?: boolean) {\n    const participants = this.getCachedParticipants(groupCallId);\n\n    const peerId = getPeerId(participant.peer);\n\n    const oldParticipant = participants.get(peerId);\n    const hasLeft = participant.pFlags.left;\n    if(!oldParticipant && hasLeft) {\n      return;\n    }\n\n    // * fix missing flag\n    if(!participant.pFlags.muted && !participant.pFlags.can_self_unmute) {\n      participant.pFlags.can_self_unmute = true;\n    }\n\n    if(oldParticipant) {\n      safeReplaceObject(oldParticipant, participant);\n      participant = oldParticipant;\n    } else {\n      participants.set(peerId, participant);\n    }\n\n    // if(!skipCounterUpdating) {\n    const groupCall = this.getGroupCall(groupCallId);\n    if(groupCall?._ === 'groupCall') {\n      let modified = false;\n      if(hasLeft) {\n        --groupCall.participants_count;\n        modified = true;\n      } else if(participant.pFlags.just_joined && !oldParticipant && !participant.pFlags.self) {\n        ++groupCall.participants_count;\n        modified = true;\n      }\n\n      if(modified) {\n        this.rootScope.dispatchEvent('group_call_update', groupCall);\n      }\n    }\n    // }\n\n    if(hasLeft) {\n      participants.delete(peerId);\n    }\n\n    if(oldParticipant || true/*  && this.doNotDispatchParticipantUpdate !== peerId */) {\n      this.rootScope.dispatchEvent('group_call_participant', {\n        groupCallId,\n        participant\n      });\n    }\n  }\n\n  public saveApiParticipants(groupCallId: GroupCallId, apiParticipants: GroupCallParticipant[], skipCounterUpdating?: boolean) {\n    if((apiParticipants as any).saved) return;\n    (apiParticipants as any).saved = true;\n    apiParticipants.forEach((p) => this.saveApiParticipant(groupCallId, p, skipCounterUpdating));\n  }\n\n  public async editParticipant(groupCallId: GroupCallId, participant: GroupCallParticipant, options: Partial<{\n    muted: boolean,\n    volume: number,\n    raiseHand: boolean,\n    videoStopped: boolean,\n    videoPaused: boolean,\n    presentationPaused: boolean\n  }>) {\n    this.saveApiParticipant(groupCallId, participant);\n\n    const peerId = participant.pFlags.self ? NULL_PEER_ID : getPeerId(participant.peer);\n    const updates = await this.apiManager.invokeApiSingle('phone.editGroupCallParticipant', {\n      call: this.getGroupCallInput(groupCallId),\n      participant: peerId === NULL_PEER_ID ? this.appPeersManager.getInputPeerSelf() : this.appPeersManager.getInputPeerById(peerId),\n      muted: options.muted,\n      volume: options.volume,\n      raise_hand: options.raiseHand,\n      video_paused: options.videoPaused,\n      video_stopped: options.videoStopped,\n      presentation_paused: options.presentationPaused\n    });\n\n    // do not replace with peerId because it can be null\n    // if(!processUpdate) this.doNotDispatchParticipantUpdate = getPeerId(participant.peer);\n    this.apiUpdatesManager.processUpdateMessage(updates);\n    // if(!processUpdate) this.doNotDispatchParticipantUpdate = undefined;\n  }\n\n  public getGroupCall(id: GroupCallId) {\n    return this.groupCalls.get(id);\n  }\n\n  public async getGroupCallFull(id: GroupCallId, override?: boolean): Promise<GroupCall> {\n    const call = this.getGroupCall(id);\n    if(call && call._ !== 'inputGroupCall' && !override) {\n      return call;\n    }\n\n    const limit = this.getCachedParticipants(id).size ? 0 : GET_PARTICIPANTS_LIMIT;\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'phone.getGroupCall',\n      params: {\n        call: this.getGroupCallInput(id),\n        limit\n      },\n      processResult: (groupCall) => {\n        // ? maybe I should save group call after participants so I can avoid passing the 'skipCounterUpdating' flag ?\n        this.appUsersManager.saveApiUsers(groupCall.users);\n        this.appChatsManager.saveApiChats(groupCall.chats);\n        this.saveApiParticipants(id, groupCall.participants, true);\n        const call = this.saveGroupCall(groupCall.call) as GroupCall;\n\n        if(limit && this.nextOffsets.get(id) === undefined) {\n          this.nextOffsets.set(id, groupCall.participants_next_offset);\n        }\n\n        return call;\n      }\n    });\n  }\n\n  public saveGroupCall(call: MyGroupCall, chatId?: ChatId) {\n    const oldCall = this.groupCalls.get(call.id);\n    const shouldUpdate = call._ !== 'inputGroupCall' && (!oldCall || oldCall._ !== 'groupCallDiscarded');\n    if(oldCall) {\n      if(shouldUpdate) {\n        safeReplaceObject(oldCall, call);\n      }\n\n      call = oldCall;\n    } else {\n      this.groupCalls.set(call.id, call);\n    }\n\n    if(shouldUpdate) {\n      this.rootScope.dispatchEvent('group_call_update', call as any);\n    }\n\n    return call;\n  }\n\n  public async createGroupCall(chatId: ChatId, scheduleDate?: number, title?: string) {\n    const updates = await this.apiManager.invokeApi('phone.createGroupCall', {\n      peer: this.appPeersManager.getInputPeerById(chatId.toPeerId(true)),\n      random_id: nextRandomUint(32),\n      schedule_date: scheduleDate,\n      title\n    });\n\n    this.apiUpdatesManager.processUpdateMessage(updates);\n\n    const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateGroupCall') as Update.updateGroupCall;\n    return update.call;\n  }\n\n  public getGroupCallInput(id: GroupCallId): InputGroupCall {\n    const groupCall = this.getGroupCall(id);\n    return {\n      _: 'inputGroupCall',\n      id: groupCall.id,\n      access_hash: groupCall.access_hash\n    };\n  }\n\n  // public generateSelfParticipant(): GroupCallParticipant {\n  //   const mainSources = this.currentGroupCall.connections.main.sources;\n  //   const presentationSources = this.currentGroupCall.connections.presentation?.sources;\n  //   return {\n  //     _: 'groupCallParticipant',\n  //     pFlags: {\n  //       can_self_unmute: true,\n  //       self: true\n  //     },\n  //     source: mainSources.audio.source,\n  //     video: this.generateSelfVideo(mainSources.video),\n  //     presentation: presentationSources && this.generateSelfVideo(presentationSources.video, presentationSources.audio?.source),\n  //     date: tsNow(true),\n  //     peer: this.appPeersManager.getOutputPeer(rootScope.myId)\n  //   };\n  // }\n\n  public async getGroupCallParticipants(id: GroupCallId) {\n    const {nextOffset, setNextOffset} = this.prepareToSavingNextOffset(id);\n\n    if(nextOffset !== '') {\n      await this.apiManager.invokeApiSingleProcess({\n        method: 'phone.getGroupParticipants',\n        params: {\n          call: this.getGroupCallInput(id),\n          ids: [],\n          sources: [],\n          offset: nextOffset || '',\n          limit: GET_PARTICIPANTS_LIMIT\n        },\n        processResult: (groupCallParticipants) => {\n          const newNextOffset = groupCallParticipants.count === groupCallParticipants.participants.length ? '' : groupCallParticipants.next_offset;\n\n          this.appChatsManager.saveApiChats(groupCallParticipants.chats);\n          this.appUsersManager.saveApiUsers(groupCallParticipants.users);\n          this.saveApiParticipants(id, groupCallParticipants.participants);\n\n          setNextOffset(newNextOffset);\n        }\n      });\n    }\n\n    return {\n      participants: this.getCachedParticipants(id),\n      isEnd: this.nextOffsets.get(id) === ''\n    };\n  }\n\n  public hangUp(id: GroupCallId, discard?: boolean | number) {\n    const groupCallInput = this.getGroupCallInput(id);\n    let promise: Promise<Updates>;\n    if(typeof(discard) === 'boolean' && discard) {\n      promise = this.apiManager.invokeApi('phone.discardGroupCall', {\n        call: groupCallInput\n      });\n    } else if(typeof(discard) === 'number') {\n      promise = this.apiManager.invokeApi('phone.leaveGroupCall', {\n        call: groupCallInput,\n        source: discard\n      });\n    } else {\n      promise = this.apiManager.invokeApi('phone.joinGroupCall', {\n        call: groupCallInput,\n        join_as: this.appPeersManager.getInputPeerSelf(),\n        muted: true,\n        video_stopped: true,\n        params: {\n          _: 'dataJSON',\n          data: ''\n        }\n      });\n    }\n\n    return promise.then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public async joinGroupCall(groupCallId: GroupCallId, params: DataJSON, options: GroupCallConnectionInstance['options']) {\n    const groupCallInput = this.getGroupCallInput(groupCallId);\n    let promise: Promise<Updates>;\n    if(options.type === 'main') {\n      const request: PhoneJoinGroupCall = {\n        call: groupCallInput,\n        join_as: this.appPeersManager.getInputPeerSelf(),\n        params,\n        muted: options.isMuted,\n        video_stopped: !options.joinVideo\n      };\n\n      promise = this.apiManager.invokeApi('phone.joinGroupCall', request);\n      this.log(`[api] joinGroupCall id=${groupCallId}`, request);\n    } else {\n      const request: PhoneJoinGroupCallPresentation = {\n        call: groupCallInput,\n        params\n      };\n\n      promise = this.apiManager.invokeApi('phone.joinGroupCallPresentation', request);\n      this.log(`[api] joinGroupCallPresentation id=${groupCallId}`, request);\n    }\n\n    const updates = await promise;\n    this.apiUpdatesManager.processUpdateMessage(updates);\n\n    const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateGroupCallConnection') as Update.updateGroupCallConnection;\n    return update;\n  }\n\n  public leaveGroupCallPresentation(groupCallId: GroupCallId) {\n    return this.apiManager.invokeApi('phone.leaveGroupCallPresentation', {\n      call: this.getGroupCallInput(groupCallId)\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {InputPhoto} from '../../../../layer';\nimport {MyPhoto} from '../../appPhotosManager';\n\nexport default function getPhotoInput(photo: MyPhoto): InputPhoto.inputPhoto {\n  return {\n    _: 'inputPhoto',\n    id: photo.id,\n    access_hash: photo.access_hash,\n    file_reference: photo.file_reference\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {InputMedia} from '../../../../layer';\nimport {MyPhoto} from '../../appPhotosManager';\nimport getPhotoInput from './getPhotoInput';\n\nexport default function getPhotoMediaInput(photo: MyPhoto): InputMedia.inputMediaPhoto {\n  return {\n    _: 'inputMediaPhoto',\n    id: getPhotoInput(photo),\n    ttl_seconds: 0,\n    pFlags: {}\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {Document, InputMedia} from '../../../../layer';\n\nexport default function getMediaInput(doc: Document.document): InputMedia.inputMediaDocument {\n  return {\n    _: 'inputMediaDocument',\n    id: {\n      _: 'inputDocument',\n      id: doc.id,\n      access_hash: doc.access_hash,\n      file_reference: doc.file_reference\n    },\n    ttl_seconds: 0,\n    pFlags: {}\n  };\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {MyDocument} from './appDocsManager';\nimport type {MyPhoto} from './appPhotosManager';\nimport type {MyTopPeer} from './appUsersManager';\nimport type {AppMessagesManager, MessageSendingParams} from './appMessagesManager';\nimport {BotInlineResult, GeoPoint, InputGeoPoint, InputMedia, MessageEntity, MessageMedia, MessagesBotResults, ReplyMarkup} from '../../layer';\nimport insertInDescendSortedArray from '../../helpers/array/insertInDescendSortedArray';\nimport {AppManager} from './manager';\nimport getPhotoMediaInput from './utils/photos/getPhotoMediaInput';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\nimport generateQId from './utils/inlineBots/generateQId';\nimport getDocumentMediaInput from './utils/docs/getDocumentMediaInput';\n\nexport class AppInlineBotsManager extends AppManager {\n  private inlineResults: {[queryAndResultIds: string]: BotInlineResult} = {};\n  private setHash: {\n    [botId: UserId]: {\n      peerId: PeerId,\n      time: number\n    }\n  } = {};\n\n  public getGeoInput(geo: GeoPoint): InputGeoPoint {\n    return geo._ === 'geoPoint' ? {\n      _: 'inputGeoPoint',\n      lat: geo.lat,\n      long: geo.long,\n      accuracy_radius: geo.accuracy_radius\n    } : {\n      _: 'inputGeoPointEmpty'\n    };\n  }\n\n  public getInlineResults(peerId: PeerId, botId: BotId, query = '', offset = '', geo?: GeoPoint) {\n    return this.apiManager.invokeApi('messages.getInlineBotResults', {\n      bot: this.appUsersManager.getUserInput(botId),\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      query,\n      geo_point: geo ? this.getGeoInput(geo) : undefined,\n      offset\n    }, {/* timeout: 1,  */stopTime: -1, noErrorBox: true}).then((botResults) => {\n      const queryId = botResults.query_id;\n\n      /* if(botResults.switch_pm) {\n        botResults.switch_pm.rText = wrapRichText(botResults.switch_pm.text, {noLinebreaks: true, noLinks: true});\n      } */\n\n      botResults.results.forEach((result) => {\n        if(result._ === 'botInlineMediaResult') {\n          if(result.document) {\n            result.document = this.appDocsManager.saveDoc(result.document);\n          }\n\n          if(result.photo) {\n            result.photo = this.appPhotosManager.savePhoto(result.photo);\n          }\n        }\n\n        this.inlineResults[generateQId(queryId, result.id)] = result;\n      });\n\n      return botResults;\n    });\n  }\n\n  private pushPopularBot(botId: BotId) {\n    this.appUsersManager.getTopPeers('bots_inline').then((topPeers) => {\n      const botPeerId = botId.toPeerId();\n      const index = topPeers.findIndex((topPeer) => topPeer.id === botPeerId);\n      let topPeer: MyTopPeer;\n      if(index !== -1) {\n        topPeer = topPeers[index];\n      } else {\n        topPeer = {\n          id: botPeerId,\n          rating: 0\n        };\n      }\n\n      ++topPeer.rating;\n      insertInDescendSortedArray(topPeers, topPeer, 'rating');\n\n      this.appStateManager.setKeyValueToStorage('topPeersCache');\n\n      // rootScope.$broadcast('inline_bots_popular')\n    });\n  }\n\n  public switchToPM(fromPeerId: PeerId, botId: BotId, startParam: string) {\n    this.setHash[botId] = {peerId: fromPeerId, time: Date.now()};\n    return this.appMessagesManager.startBot(botId, undefined, startParam);\n  }\n\n  /*\n  function resolveInlineMention (username) {\n    return AppPeersManager.resolveUsername(username).then(function (peerId) {\n      if (peerId.isUser()) {\n        var bot = AppUsersManager.getUser(peerId)\n        if (bot.pFlags.bot && bot.bot_inline_placeholder !== undefined) {\n          var resolvedBot = {\n            username: username,\n            id: peerId,\n            placeholder: bot.bot_inline_placeholder\n          }\n          if (bot.pFlags.bot_inline_geo &&\n            GeoLocationManager.isAvailable()) {\n              return checkGeoLocationAccess(peerId).then(function () {\n                return GeoLocationManager.getPosition().then(function (coords) {\n                  resolvedBot.geo = coords\n                  return qSync.when(resolvedBot)\n                })\n              })['catch'](function () {\n                return qSync.when(resolvedBot)\n              })\n            }\n            return qSync.when(resolvedBot)\n          }\n        }\n        return $q.reject()\n      }, function (error) {\n        error.handled = true\n        return $q.reject(error)\n      })\n    }\n\n    function regroupWrappedResults (results, rowW, rowH) {\n      if (!results ||\n        !results[0] ||\n        ['photo', 'gif', 'sticker'].indexOf(results[0].type) === -1) {\n          return\n        }\n        var ratios = []\n        angular.forEach(results, function (result) {\n          var w\n          var h, doc\n          var photo\n          if (result._ === 'botInlineMediaResult') {\n            if (doc = result.document) {\n              w = result.document.w\n              h = result.document.h\n            }\n            else if (photo = result.photo) {\n              var photoSize = (photo.sizes || [])[0]\n              w = photoSize && photoSize.w\n              h = photoSize && photoSize.h\n            }\n          }else {\n            w = result.w\n            h = result.h\n          }\n          if (!w || !h) {\n            w = h = 1\n          }\n          ratios.push(w / h)\n        })\n\n        var rows = []\n        var curCnt = 0\n        var curW = 0\n        angular.forEach(ratios, function (ratio) {\n          var w = ratio * rowH\n          curW += w\n          if (!curCnt || curCnt < 4 && curW < (rowW * 1.1)) {\n            curCnt++\n          } else {\n            rows.push(curCnt)\n            curCnt = 1\n            curW = w\n          }\n        })\n        if (curCnt) {\n          rows.push(curCnt)\n        }\n\n        var i = 0\n        var thumbs = []\n        var lastRowI = rows.length - 1\n        angular.forEach(rows, function (rowCnt, rowI) {\n          var lastRow = rowI === lastRowI\n          var curRatios = ratios.slice(i, i + rowCnt)\n          var sumRatios = 0\n          angular.forEach(curRatios, function (ratio) {\n            sumRatios += ratio\n          })\n          angular.forEach(curRatios, function (ratio, j) {\n            var thumbH = rowH\n            var thumbW = rowW * ratio / sumRatios\n            var realW = thumbH * ratio\n            if (lastRow && thumbW > realW) {\n              thumbW = realW\n            }\n            var result = results[i + j]\n            result.thumbW = Math.floor(thumbW) - 2\n            result.thumbH = Math.floor(thumbH) - 2\n          })\n\n          i += rowCnt\n        })\n      } */\n\n  public async checkSwitchReturn(botId: BotId) {\n    const bot = this.appUsersManager.getUser(botId);\n    if(!bot || !bot.pFlags.bot || !bot.bot_inline_placeholder) {\n      return;\n    }\n\n    const peerData = this.setHash[botId];\n    if(peerData) {\n      delete this.setHash[botId];\n      if((Date.now() - peerData.time) < 3600e3) {\n        return peerData.peerId;\n      }\n    }\n  }\n\n  public switchInlineQuery(peerId: PeerId, threadId: number, botId: BotId, query: string) {\n    this.appDraftsManager.setDraft(peerId, threadId, '@' + this.appPeersManager.getPeerUsername(botId.toPeerId()) + ' ' + query);\n  }\n\n  public callbackButtonClick(peerId: PeerId, mid: number, button: any) {\n    return this.apiManager.invokeApi('messages.getBotCallbackAnswer', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: getServerMessageId(mid),\n      data: button.data\n    }, {/* timeout: 1,  */stopTime: -1, noErrorBox: true});\n  }\n\n  /* function gameButtonClick (id) {\n    var message = AppMessagesManager.getMessage(id)\n    var peerId = AppMessagesManager.getMessagePeer(message)\n\n    return MtpApiManager.invokeApi('messages.getBotCallbackAnswer', {\n      peer: AppPeersManager.getInputPeerByID(peerId),\n      msg_id: AppMessagesIDsManager.getMessageLocalID(id)\n    }, {timeout: 1, stopTime: -1, noErrorBox: true}).then(function (callbackAnswer) {\n      if (typeof callbackAnswer.message === 'string' &&\n      callbackAnswer.message.length) {\n        showCallbackMessage(callbackAnswer.message, callbackAnswer.pFlags.alert)\n      }\n      else if (typeof callbackAnswer.url === 'string') {\n        AppGamesManager.openGame(message.media.game.id, id, callbackAnswer.url)\n      }\n    })\n  } */\n\n  public sendInlineResult(peerId: PeerId, botId: BotId, queryAndResultIds: string, options: MessageSendingParams & Partial<{\n    viaBotId: BotId,\n    queryId: string,\n    resultId: string,\n    replyMarkup: ReplyMarkup,\n    entities: MessageEntity[],\n    clearDraft: true,\n    geoPoint: GeoPoint\n  }> = {}) {\n    const inlineResult = this.inlineResults[queryAndResultIds];\n    if(!inlineResult) {\n      return;\n    }\n\n    this.pushPopularBot(botId);\n    const splitted = queryAndResultIds.split('_');\n    const queryID = splitted.shift();\n    const resultID = splitted.join('_');\n    options.viaBotId = botId;\n    options.queryId = queryID;\n    options.resultId = resultID;\n    if(inlineResult.send_message.reply_markup) {\n      options.replyMarkup = inlineResult.send_message.reply_markup;\n    }\n\n    if(inlineResult.send_message._ === 'botInlineMessageText') {\n      options.entities = inlineResult.send_message.entities;\n      this.appMessagesManager.sendText(peerId, inlineResult.send_message.message, options);\n    } else {\n      let caption = '';\n      let inputMedia: Parameters<AppMessagesManager['sendOther']>[1], messageMedia: MessageMedia;\n      const sendMessage = inlineResult.send_message;\n      switch(sendMessage._) {\n        case 'botInlineMessageMediaAuto': {\n          caption = sendMessage.message;\n\n          if(inlineResult._ === 'botInlineMediaResult') {\n            const {document, photo} = inlineResult;\n            if(document) {\n              inputMedia = getDocumentMediaInput(document as MyDocument);\n            } else {\n              inputMedia = getPhotoMediaInput(photo as MyPhoto);\n            }\n          }\n\n          break;\n        }\n\n        case 'botInlineMessageMediaGeo': {\n          inputMedia = {\n            _: 'inputMediaGeoPoint',\n            geo_point: this.getGeoInput(sendMessage.geo)\n          };\n\n          options.geoPoint = sendMessage.geo;\n\n          break;\n        }\n\n        case 'botInlineMessageMediaVenue': {\n          inputMedia = {\n            _: 'inputMediaVenue',\n            geo_point: this.getGeoInput(sendMessage.geo),\n            title: sendMessage.title,\n            address: sendMessage.address,\n            provider: sendMessage.provider,\n            venue_id: sendMessage.venue_id,\n            venue_type: sendMessage.venue_type\n          };\n\n          options.geoPoint = sendMessage.geo;\n\n          break;\n        }\n\n        case 'botInlineMessageMediaContact': {\n          inputMedia = {\n            _: 'inputMediaContact',\n            phone_number: sendMessage.phone_number,\n            first_name: sendMessage.first_name,\n            last_name: sendMessage.last_name,\n            vcard: sendMessage.vcard\n          };\n\n          break;\n        }\n\n        case 'botInlineMessageMediaInvoice': {\n          // const photo = sendMessage.photo;\n          // inputMedia = {\n          //   _: 'inputMediaInvoice',\n          //   description: sendMessage.description,\n          //   title: sendMessage.title,\n          //   photo: photo && {\n          //     _: 'inputWebDocument',\n          //     attributes: photo.attributes,\n          //     mime_type: photo.mime_type,\n          //     size: photo.size,\n          //     url: photo.url\n          //   },\n          //   invoice: undefined,\n          //   payload: undefined,\n          //   provider: undefined,\n          //   provider_data: undefined,\n          //   start_param: undefined\n          // };\n\n          messageMedia = {\n            _: 'messageMediaInvoice',\n            title: sendMessage.title,\n            description: sendMessage.description,\n            photo: sendMessage.photo,\n            currency: sendMessage.currency,\n            total_amount: sendMessage.total_amount,\n            pFlags: {\n              shipping_address_requested: sendMessage.pFlags.shipping_address_requested,\n              test: sendMessage.pFlags.test\n            },\n            start_param: undefined\n          };\n\n          break;\n        }\n      }\n\n      if(!inputMedia && messageMedia) {\n        inputMedia = {\n          _: 'messageMediaPending',\n          messageMedia\n        };\n      }\n\n      this.appMessagesManager.sendOther(peerId, inputMedia, options);\n    }\n  }\n\n  /* function checkGeoLocationAccess (botID) {\n    var key = 'bot_access_geo' + botID\n    return Storage.get(key).then(function (geoAccess) {\n      if (geoAccess && geoAccess.granted) {\n        return true\n      }\n      return ErrorService.confirm({\n        type: 'BOT_ACCESS_GEO_INLINE'\n      }).then(function () {\n        var setHash = {}\n        setHash[key] = {granted: true, time: tsNow()}\n        Storage.set(setHash)\n        return true\n      }, function () {\n        var setHash = {}\n        setHash[key] = {denied: true, time: tsNow()}\n        Storage.set(setHash)\n        return $q.reject()\n      })\n    })\n  } */\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {MESSAGE_ID_INCREMENT} from './utils/messageId';\nimport generateMessageId from './utils/messageId/generateMessageId';\n\nexport class AppMessagesIdsManager {\n  private tempNum = 0;\n\n  public generateTempMessageId(messageId: number) {\n    const num = ++this.tempNum;\n    return generateMessageId(messageId) + (num & (MESSAGE_ID_INCREMENT - 1));\n  }\n}\n","export default function splitStringByLength(str: string, maxLength: number) {\n  if(str.length < maxLength) return [str];\n  let length = 0, lastSliceStartIndex = 0, arrayIndex = 0;\n  const delimiter = ' ';// '\\n';\n  const out: string[] = [];\n\n  const cut = (end?: number) => {\n    let part = str.slice(lastSliceStartIndex, end);\n    const _arrayIndex = arrayIndex++;\n    if(part.length > maxLength) {\n      const overflowPart = part.slice(maxLength);\n      const splitted = splitStringByLength(overflowPart, maxLength);\n      splitted.forEach((part) => {\n        out[arrayIndex++] = part;\n      });\n\n      part = part.slice(0, maxLength);\n    }\n\n    lastSliceStartIndex = end;\n    length = 0;\n    out[_arrayIndex] = (out[_arrayIndex] || '') + part;\n  };\n\n  let lastIndex = 0;\n  do {\n    let index = str.indexOf(delimiter, lastIndex);\n    if(index === -1) {\n      if(lastIndex !== (str.length - 1)) {\n        cut();\n      }\n\n      break;\n    }\n\n    index += delimiter.length;\n\n    const partLength = index - lastIndex;\n    if((length + partLength) > maxLength) {\n      cut(length);\n    }\n\n    lastIndex = index;\n    length += partLength;\n  } while(true);\n\n  return out;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {TabState} from '../mtproto/mtprotoworker';\nimport {MOUNT_CLASS_TO} from '../../config/debug';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\n\ntype Tab = {\n  source: MessageEventSource,\n  state: TabState\n};\n\nexport class AppTabsManager {\n  private tabs: Map<Tab['source'], Tab>;\n\n  constructor() {\n    this.tabs = new Map();\n  }\n\n  public start() {\n    const port = MTProtoMessagePort.getInstance<false>();\n\n    port.addEventListener('tabState', (state, source) => {\n      const tab = this.tabs.get(source);\n      tab.state = state;\n    });\n  }\n\n  public getTabs() {\n    return [...this.tabs.values()].filter((tab) => !!tab.state);\n  }\n\n  public addTab(source: MessageEventSource) {\n    const tab: Tab = {\n      source,\n      state: undefined\n    };\n\n    this.tabs.set(source, tab);\n  }\n\n  public deleteTab(source: MessageEventSource) {\n    this.tabs.delete(source);\n  }\n}\n\nconst appTabsManager = new AppTabsManager();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appTabsManager = appTabsManager);\nexport default appTabsManager;\n","import {InputDocument} from '../../../../layer';\nimport type {MyDocument} from '../../appDocsManager';\n\nexport default function getDocumentInput(doc: MyDocument): InputDocument {\n  return {\n    _: 'inputDocument',\n    id: doc.id,\n    access_hash: doc.access_hash,\n    file_reference: doc.file_reference\n  };\n}\n","export default function setBooleanFlag<T extends any>(obj: T, key: keyof T, value: boolean) {\n  // @ts-ignore\n  if(value) obj[key] = true;\n  else delete obj[key];\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {ApiFileManager} from '../mtproto/apiFileManager';\nimport type {MediaSize} from '../../helpers/mediaSize';\nimport type {Progress} from './appDownloadManager';\nimport type {VIDEO_MIME_TYPE} from '../../environment/videoMimeTypesSupport';\nimport LazyLoadQueueBase from '../../components/lazyLoadQueueBase';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport tsNow from '../../helpers/tsNow';\nimport {randomLong} from '../../helpers/random';\nimport {Chat, ChatFull, Dialog as MTDialog, DialogPeer, DocumentAttribute, InputMedia, InputMessage, InputPeerNotifySettings, InputSingleMedia, Message, MessageAction, MessageEntity, MessageFwdHeader, MessageMedia, MessageReplies, MessageReplyHeader, MessagesDialogs, MessagesFilter, MessagesMessages, MethodDeclMap, NotifyPeer, PeerNotifySettings, PhotoSize, SendMessageAction, Update, Photo, Updates, ReplyMarkup, InputPeer, InputPhoto, InputDocument, InputGeoPoint, WebPage, GeoPoint, ReportReason, MessagesGetDialogs, InputChannel, InputDialogPeer, ReactionCount, MessagePeerReaction, MessagesSearchCounter, Peer, MessageReactions, Document, InputFile, Reaction, ForumTopic as MTForumTopic, MessagesForumTopics, MessagesGetReplies, MessagesGetHistory, MessagesAffectedHistory, UrlAuthResult} from '../../layer';\nimport {ArgumentTypes, InvokeApiOptions} from '../../types';\nimport {logger, LogTypes} from '../logger';\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\nimport DialogsStorage, {GLOBAL_FOLDER_ID} from '../storages/dialogs';\nimport {ChatRights} from './appChatsManager';\nimport {MyDocument} from './appDocsManager';\nimport {MyPhoto} from './appPhotosManager';\nimport {getFileNameByLocation} from '../../helpers/fileName';\nimport DEBUG from '../../config/debug';\nimport SlicedArray, {Slice, SliceEnd} from '../../helpers/slicedArray';\nimport {FOLDER_ID_ALL, GENERAL_TOPIC_ID, MUTE_UNTIL, NULL_PEER_ID, REAL_FOLDER_ID, REPLIES_HIDDEN_CHANNEL_ID, REPLIES_PEER_ID, SERVICE_PEER_ID, THUMB_TYPE_FULL} from '../mtproto/mtproto_config';\n// import telegramMeWebManager from '../mtproto/telegramMeWebManager';\nimport {getMiddleware} from '../../helpers/middleware';\nimport assumeType from '../../helpers/assumeType';\nimport copy from '../../helpers/object/copy';\nimport getObjectKeysAndSort from '../../helpers/object/getObjectKeysAndSort';\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport deepEqual from '../../helpers/object/deepEqual';\nimport splitStringByLength from '../../helpers/string/splitStringByLength';\nimport debounce from '../../helpers/schedulers/debounce';\nimport {AppManager} from './manager';\nimport getPhotoMediaInput from './utils/photos/getPhotoMediaInput';\nimport getPhotoDownloadOptions from './utils/photos/getPhotoDownloadOptions';\nimport fixEmoji from '../richTextProcessor/fixEmoji';\nimport mergeEntities from '../richTextProcessor/mergeEntities';\nimport parseEntities from '../richTextProcessor/parseEntities';\nimport parseMarkdown from '../richTextProcessor/parseMarkdown';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\nimport generateMessageId from './utils/messageId/generateMessageId';\nimport filterMessagesByInputFilter from './utils/messages/filterMessagesByInputFilter';\nimport ctx from '../../environment/ctx';\nimport {getEnvironment} from '../../environment/utils';\nimport getDialogIndex from './utils/dialogs/getDialogIndex';\nimport defineNotNumerableProperties from '../../helpers/object/defineNotNumerableProperties';\nimport getDocumentMediaInput from './utils/docs/getDocumentMediaInput';\nimport getDocumentInputFileName from './utils/docs/getDocumentInputFileName';\nimport getFileNameForUpload from '../../helpers/getFileNameForUpload';\nimport noop from '../../helpers/noop';\nimport appTabsManager from './appTabsManager';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\nimport getAlbumText from './utils/messages/getAlbumText';\nimport pause from '../../helpers/schedulers/pause';\nimport makeError from '../../helpers/makeError';\nimport getStickerEffectThumb from './utils/stickers/getStickerEffectThumb';\nimport getDocumentInput from './utils/docs/getDocumentInput';\nimport reactionsEqual from './utils/reactions/reactionsEqual';\nimport getPeerActiveUsernames from './utils/peers/getPeerActiveUsernames';\nimport {BroadcastEvents} from '../rootScope';\nimport setBooleanFlag from '../../helpers/object/setBooleanFlag';\nimport getMessageThreadId from './utils/messages/getMessageThreadId';\n\n// console.trace('include');\n// TODO: если удалить диалог находясь в папке, то он не удалится из папки и будет виден в настройках\n\nconst APITIMEOUT = 0;\nconst DO_NOT_READ_HISTORY = false;\n\nexport type SendFileDetails = {\n  file: File | Blob | MyDocument,\n} & Partial<{\n  duration: number,\n  width: number,\n  height: number,\n  objectURL: string,\n  thumb: {\n    blob: Blob,\n    url: string,\n    size: MediaSize\n  },\n  strippedBytes: PhotoSize.photoStrippedSize['bytes'],\n  spoiler: boolean\n}>;\n\nexport type HistoryStorage = {\n  count: number | null,\n  history: SlicedArray<number>,\n\n  maxId?: number,\n  readPromise?: Promise<void>,\n  readMaxId?: number,\n  readOutboxMaxId?: number,\n  triedToReadMaxId?: number,\n\n  maxOutId?: number,\n  replyMarkup?: Exclude<ReplyMarkup, ReplyMarkup.replyInlineMarkup>\n};\n\nexport type HistoryResult = {\n  count: number,\n  history: number[],\n  isEnd: ReturnType<Slice<number>['getEnds']>,\n  offsetIdOffset?: number,\n};\n\nexport type Dialog = MTDialog.dialog;\nexport type ForumTopic = MTForumTopic.forumTopic;\n\nexport type MyMessage = Message.message | Message.messageService;\nexport type MyInputMessagesFilter = 'inputMessagesFilterEmpty'\n  | 'inputMessagesFilterPhotos'\n  | 'inputMessagesFilterPhotoVideo'\n  | 'inputMessagesFilterVideo'\n  | 'inputMessagesFilterDocument'\n  | 'inputMessagesFilterVoice'\n  | 'inputMessagesFilterRoundVoice'\n  | 'inputMessagesFilterRoundVideo'\n  | 'inputMessagesFilterMusic'\n  | 'inputMessagesFilterUrl'\n  | 'inputMessagesFilterMyMentions'\n  | 'inputMessagesFilterChatPhotos'\n  | 'inputMessagesFilterPinned';\n\nexport type PinnedStorage = Partial<{\n  promise: Promise<PinnedStorage>,\n  count: number,\n  maxId: number\n}>;\nexport type MessagesStorage = Map<number, Message.message | Message.messageService> & {peerId: PeerId, type: MessagesStorageType, key: MessagesStorageKey};\nexport type MessagesStorageType = 'scheduled' | 'history' | 'grouped';\nexport type MessagesStorageKey = `${PeerId}_${MessagesStorageType}`;\n\nexport type MyMessageActionType = Message.messageService['action']['_'];\n\ntype PendingAfterMsg = Partial<InvokeApiOptions & {\n  afterMessageId: string,\n  messageId: string\n}>;\n\ntype MapValueType<A> = A extends Map<any, infer V> ? V : never;\n\nexport type BatchUpdates = {\n  'messages_reactions': AppMessagesManager['batchUpdateReactions'],\n  'messages_views': AppMessagesManager['batchUpdateViews']\n};\n\ntype PendingMessageDetails = {\n  peerId: PeerId,\n  tempId: number,\n  threadId: number,\n  storage: MessagesStorage,\n  sequential?: boolean\n};\n\nconst processAfter = (cb: () => void) => {\n  // setTimeout(cb, 0);\n  cb();\n};\n\nconst UPDATE_STICKERSET_ORDER = true;\n\nexport type MessageSendingParams = Partial<{\n  threadId: number,\n  replyToMsgId: number,\n  scheduleDate: number,\n  silent: boolean,\n  sendAsPeerId: number,\n}>;\n\nexport class AppMessagesManager extends AppManager {\n  private messagesStorageByPeerId: {[peerId: string]: MessagesStorage};\n  private groupedMessagesStorage: {[groupId: string]: MessagesStorage}; // will be used for albums\n  private scheduledMessagesStorage: {[peerId: PeerId]: MessagesStorage};\n  private historiesStorage: {\n    [peerId: PeerId]: HistoryStorage\n  };\n  private threadsStorage: {\n    [peerId: PeerId]: {\n      [threadId: string]: HistoryStorage\n    }\n  };\n  private searchesStorage: {\n    [peerId: PeerId]: Partial<{\n      [inputFilter in MyInputMessagesFilter]: {\n        count?: number,\n        history: number[]\n      }\n    }>\n  };\n  private pinnedMessages: {[key: string]: PinnedStorage};\n\n  private threadsServiceMessagesIdsStorage: {[peerId_threadId: string]: number};\n  private threadsToReplies: {\n    [peerId_threadId: string]: string;\n  };\n\n  private pendingByRandomId: {\n    [randomId: string]: PendingMessageDetails\n  } = {};\n  private pendingByMessageId: {[mid: string]: Long} = {};\n  private pendingAfterMsgs: {[peerId: PeerId]: PendingAfterMsg} = {};\n  public pendingTopMsgs: {[peerId: PeerId]: number} = {};\n  private tempFinalizeCallbacks: {\n    [tempId: string]: {\n      [callbackName: string]: Partial<{\n        deferred: CancellablePromise<void>,\n        callback: (message: MyMessage) => Promise<any>\n      }>\n    }\n  } = {};\n\n  private sendSmthLazyLoadQueue = new LazyLoadQueueBase(10);\n\n  private needSingleMessages: Map<PeerId, Map<number, CancellablePromise<Message.message | Message.messageService>>> = new Map();\n  private fetchSingleMessagesPromise: Promise<void>;\n  private extendedMedia: Map<PeerId, Map<number, CancellablePromise<void>>> = new Map();\n\n  private maxSeenId = 0;\n\n  public migratedFromTo: {[peerId: PeerId]: PeerId} = {};\n  public migratedToFrom: {[peerId: PeerId]: PeerId} = {};\n\n  private newDialogsHandlePromise: Promise<any>;\n  private newDialogsToHandle: Map<PeerId, {dialog?: Dialog, topics?: Map<number, ForumTopic>}> = new Map();\n  public newUpdatesAfterReloadToHandle: {[key: string]: Set<Update>} = {};\n\n  private notificationsHandlePromise: number;\n  private notificationsToHandle: {[key: string]: {\n    fwdCount: number,\n    fromId: PeerId,\n    topMessage?: MyMessage\n  }} = {};\n\n  private reloadConversationsPromise: Promise<void>;\n  private reloadConversationsPeers: Map<PeerId, {inputDialogPeer: InputDialogPeer, promise: CancellablePromise<Dialog>}> = new Map();\n\n  public log = logger('MESSAGES', LogTypes.Error | LogTypes.Debug | LogTypes.Log | LogTypes.Warn);\n\n  private groupedTempId = 0;\n\n  private typings: {[key: string]: {action: SendMessageAction, timeout?: number}} = {};\n\n  private middleware: ReturnType<typeof getMiddleware>;\n\n  private unreadMentions: {[key: string]: SlicedArray<number>} = {};\n  private goToNextMentionPromises: {[key: string]: Promise<number>} = {};\n\n  private batchUpdates: {\n    [k in keyof BatchUpdates]?: {\n      callback: BatchUpdates[k],\n      batch: ArgumentTypes<BatchUpdates[k]>[0]\n    }\n  } = {};\n  private batchUpdatesDebounced: () => Promise<void>;\n\n  private uploadFilePromises: {[fileName: string]: CancellablePromise<any>};\n\n  protected after() {\n    this.clear(true);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateMessageID: this.onUpdateMessageId,\n\n      updateNewDiscussionMessage: this.onUpdateNewMessage,\n      updateNewMessage: this.onUpdateNewMessage,\n      updateNewChannelMessage: this.onUpdateNewMessage,\n\n      updateDialogUnreadMark: this.onUpdateDialogUnreadMark,\n\n      updateEditMessage: this.onUpdateEditMessage,\n      updateEditChannelMessage: this.onUpdateEditMessage,\n\n      updateMessageReactions: this.onUpdateMessageReactions,\n\n      updateReadChannelDiscussionInbox: this.onUpdateReadHistory,\n      updateReadChannelDiscussionOutbox: this.onUpdateReadHistory,\n      updateReadHistoryInbox: this.onUpdateReadHistory,\n      updateReadHistoryOutbox: this.onUpdateReadHistory,\n      updateReadChannelInbox: this.onUpdateReadHistory,\n      updateReadChannelOutbox: this.onUpdateReadHistory,\n\n      updateChannelReadMessagesContents: this.onUpdateReadMessagesContents,\n      updateReadMessagesContents: this.onUpdateReadMessagesContents,\n\n      updateChannelAvailableMessages: this.onUpdateChannelAvailableMessages,\n\n      updateDeleteMessages: this.onUpdateDeleteMessages,\n      updateDeleteChannelMessages: this.onUpdateDeleteMessages,\n\n      updateChannel: this.onUpdateChannel,\n\n      updateChannelReload: this.onUpdateChannelReload,\n\n      updateChannelMessageViews: this.onUpdateChannelMessageViews,\n\n      updateServiceNotification: this.onUpdateServiceNotification,\n\n      updatePinnedMessages: this.onUpdatePinnedMessages,\n      updatePinnedChannelMessages: this.onUpdatePinnedMessages,\n\n      updateNotifySettings: this.onUpdateNotifySettings,\n\n      updateNewScheduledMessage: this.onUpdateNewScheduledMessage,\n\n      updateDeleteScheduledMessages: this.onUpdateDeleteScheduledMessages,\n\n      updateMessageExtendedMedia: this.onUpdateMessageExtendedMedia\n    });\n\n    // ! Invalidate notify settings, can optimize though\n    this.rootScope.addEventListener('notify_peer_type_settings', ({key, settings}) => {\n      const dialogs = this.dialogsStorage.getFolderDialogs(0).concat(this.dialogsStorage.getFolderDialogs(1));\n      let filterFunc: (dialog: typeof dialogs[0]) => boolean;\n      if(key === 'notifyUsers') filterFunc = (dialog) => dialog.peerId.isUser();\n      else if(key === 'notifyBroadcasts') filterFunc = (dialog) => this.appPeersManager.isBroadcast(dialog.peerId);\n      else filterFunc = (dialog) => this.appPeersManager.isAnyGroup(dialog.peerId);\n\n      dialogs\n      .filter(filterFunc)\n      .forEach((dialog) => {\n        this.rootScope.dispatchEvent('dialog_notify_settings', dialog);\n      });\n    });\n\n    this.rootScope.addEventListener('webpage_updated', ({id, msgs}) => {\n      msgs.forEach(({peerId, mid, isScheduled}) => {\n        const storage = isScheduled ? this.getScheduledMessagesStorage(peerId) : this.getHistoryMessagesStorage(peerId);\n        const message = this.getMessageFromStorage(storage, mid) as Message.message;\n        if(!message) return;\n        message.media = {\n          _: 'messageMediaWebPage',\n          webpage: this.appWebPagesManager.getCachedWebPage(id)\n        };\n\n        this.rootScope.dispatchEvent('message_edit', {\n          storageKey: storage.key,\n          peerId,\n          mid,\n          message\n        });\n      });\n    });\n\n    this.rootScope.addEventListener('draft_updated', ({peerId, threadId, draft}) => {\n      const dialog = this.dialogsStorage.getDialogOrTopic(peerId, threadId);\n      if(dialog) {\n        dialog.draft = draft;\n\n        let drop = false;\n        if(!draft && !getServerMessageId(dialog.top_message)) {\n          this.dialogsStorage.dropDialog(peerId);\n          drop = true;\n        } else {\n          this.dialogsStorage.generateIndexForDialog(dialog);\n          this.dialogsStorage.pushDialog({dialog});\n        }\n\n        this.rootScope.dispatchEvent('dialog_draft', {\n          peerId,\n          dialog,\n          drop,\n          draft\n        });\n      } else if(threadId) {\n        const chat = this.appChatsManager.getChat(peerId.toChatId());\n        if(!chat) {\n          this.reloadConversation(peerId);\n        } else if((chat as Chat.channel).pFlags.forum) {\n          this.dialogsStorage.getForumTopicById(peerId, threadId);\n        }\n      } else {\n        this.reloadConversation(peerId);\n      }\n    });\n\n    this.rootScope.addEventListener('poll_update', ({poll}) => {\n      const set = this.appPollsManager.pollToMessages[poll.id];\n      if(set) {\n        for(const key of set) {\n          const [peerId, mid] = key.split('_');\n\n          const message = this.getMessageByPeer(peerId.toPeerId(), +mid);\n          if(message) {\n            this.setDialogToStateIfMessageIsTop(message);\n          }\n        }\n      }\n    });\n\n    // * clear forum cache\n    this.rootScope.addEventListener('chat_toggle_forum', ({chatId, enabled}) => {\n      const peerId = chatId.toPeerId(true);\n      if(!enabled) {\n        delete this.threadsStorage[peerId];\n\n        for(const key in this.pinnedMessages) {\n          if(+key === peerId && key.startsWith(peerId + '_')) {\n            delete this.pinnedMessages[key];\n          }\n        }\n      }\n    });\n\n    this.batchUpdatesDebounced = debounce(() => {\n      for(const event in this.batchUpdates) {\n        const details = this.batchUpdates[event as keyof BatchUpdates];\n        delete this.batchUpdates[event as keyof BatchUpdates];\n\n        // @ts-ignore\n        const result = details.callback(details.batch);\n        if(result && (!(result instanceof Array) || result.length)) {\n          // @ts-ignore\n          rootScope.dispatchEvent(event as keyof BatchUpdates, result);\n        }\n      }\n    }, 33, false, true);\n\n    return this.appStateManager.getState().then((state) => {\n      if(state.maxSeenMsgId) {\n        this.maxSeenId = state.maxSeenMsgId;\n      }\n    });\n  }\n\n  public clear = (init?: boolean) => {\n    if(this.middleware) {\n      this.middleware.clean();\n    } else {\n      this.middleware = getMiddleware();\n      this.uploadFilePromises = {};\n    }\n\n    this.messagesStorageByPeerId = {};\n    this.groupedMessagesStorage = {};\n    this.scheduledMessagesStorage = {};\n    this.historiesStorage = {};\n    this.threadsStorage = {};\n    this.searchesStorage = {};\n    this.pinnedMessages = {};\n    this.threadsServiceMessagesIdsStorage = {};\n    this.threadsToReplies = {};\n\n    this.dialogsStorage && this.dialogsStorage.clear(init);\n    this.filtersStorage && this.filtersStorage.clear(init);\n  };\n\n  public getInputEntities(entities: MessageEntity[]) {\n    const sendEntites = copy(entities);\n    sendEntites.forEach((entity) => {\n      if(entity._ === 'messageEntityMentionName') {\n        (entity as any as MessageEntity.inputMessageEntityMentionName)._ = 'inputMessageEntityMentionName';\n        (entity as any as MessageEntity.inputMessageEntityMentionName).user_id = this.appUsersManager.getUserInput(entity.user_id);\n      }\n    });\n    return sendEntites;\n  }\n\n  public invokeAfterMessageIsSent(tempId: number, callbackName: string, callback: (message: MyMessage) => Promise<any>) {\n    const finalize = this.tempFinalizeCallbacks[tempId] ??= {};\n    const obj = finalize[callbackName] ??= {deferred: deferredPromise<void>()};\n\n    obj.callback = callback;\n\n    return obj.deferred;\n  }\n\n  public editMessage(message: any, text: string, options: Partial<{\n    noWebPage: true,\n    newMedia: any,\n    scheduleDate: number,\n    entities: MessageEntity[]\n  }> = {}): Promise<void> {\n    /* if(!this.canEditMessage(messageId)) {\n      return Promise.reject({type: 'MESSAGE_EDIT_FORBIDDEN'});\n    } */\n\n    const {mid, peerId} = message;\n\n    if(message.pFlags.is_outgoing) {\n      return this.invokeAfterMessageIsSent(mid, 'edit', (message) => {\n        // this.log('invoke editMessage callback', message);\n        return this.editMessage(message, text, options);\n      });\n    }\n\n    const entities = options.entities || [];\n    if(text) {\n      text = parseMarkdown(text, entities);\n    }\n\n    const schedule_date = options.scheduleDate || (message.pFlags.is_scheduled ? message.date : undefined);\n    return this.apiManager.invokeApi('messages.editMessage', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: message.id,\n      message: text,\n      media: options.newMedia,\n      entities: entities.length ? this.getInputEntities(entities) : undefined,\n      no_webpage: options.noWebPage,\n      schedule_date\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    }, (error) => {\n      this.log.error('editMessage error:', error);\n\n      if(error && error.type === 'MESSAGE_NOT_MODIFIED') {\n        error.handled = true;\n        return;\n      }\n      if(error && error.type === 'MESSAGE_EMPTY') {\n        error.handled = true;\n      }\n      return Promise.reject(error);\n    });\n  }\n\n  public async sendText(peerId: PeerId, text: string, options: MessageSendingParams & Partial<{\n    entities: MessageEntity[],\n    viaBotId: BotId,\n    queryId: string,\n    resultId: string,\n    noWebPage: true,\n    replyMarkup: ReplyMarkup,\n    clearDraft: true,\n    webPage: WebPage,\n  }> = {}): Promise<void> {\n    if(!text.trim()) {\n      return;\n    }\n\n    options.entities ??= [];\n\n    // this.checkSendOptions(options);\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n\n    const config = await this.apiManager.getConfig();\n    const MAX_LENGTH = config.message_length_max;\n    const splitted = splitStringByLength(text, MAX_LENGTH);\n    text = splitted[0];\n    if(splitted.length > 1) {\n      if(options.webPage?._ === 'webPage' && !text.includes(options.webPage.url)) {\n        delete options.webPage;\n      }\n    }\n\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    const entities = options.entities;\n    if(!options.viaBotId) {\n      text = parseMarkdown(text, entities);\n      // entities = mergeEntities(entities, parseEntities(text));\n    }\n\n    let sendEntites = this.getInputEntities(entities);\n    if(!sendEntites.length) {\n      sendEntites = undefined;\n    }\n\n    const message = this.generateOutgoingMessage(peerId, options);\n    message.entities = entities;\n    message.message = text;\n\n    const replyToMsgId = options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined;\n    const isChannel = this.appPeersManager.isChannel(peerId);\n\n    if(options.webPage) {\n      message.media = {\n        _: 'messageMediaWebPage',\n        webpage: options.webPage\n      };\n    }\n\n    const toggleError = (error?: ApiError) => {\n      this.onMessagesSendError([message], error);\n      this.rootScope.dispatchEvent('messages_pending');\n    };\n\n    message.send = () => {\n      toggleError();\n      const sentRequestOptions: PendingAfterMsg = {};\n      if(this.pendingAfterMsgs[peerId]) {\n        sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n      }\n\n      const sendAs = options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined\n      let apiPromise: any;\n      if(options.viaBotId) {\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendInlineBotResult', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          query_id: options.queryId,\n          id: options.resultId,\n          clear_draft: options.clearDraft,\n          send_as: sendAs\n        }, sentRequestOptions);\n      } else {\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendMessage', {\n          no_webpage: options.noWebPage,\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          message: text,\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          entities: sendEntites,\n          clear_draft: options.clearDraft,\n          schedule_date: options.scheduleDate || undefined,\n          silent: options.silent,\n          send_as: sendAs,\n          update_stickersets_order: UPDATE_STICKERSET_ORDER\n        }, sentRequestOptions);\n      }\n\n      /* function is<T>(value: any, condition: boolean): value is T {\n        return condition;\n      } */\n\n      // this.log('sendText', message.mid);\n      this.pendingAfterMsgs[peerId] = sentRequestOptions;\n\n      return apiPromise.then((updates: Updates) => {\n        // this.log('sendText sent', message.mid);\n        // if(is<Updates.updateShortSentMessage>(updates, updates._ === 'updateShortSentMessage')) {\n        if(updates._ === 'updateShortSentMessage') {\n          // assumeType<Updates.updateShortSentMessage>(updates);\n\n          // * fix copying object with promise\n          const promise = message.promise;\n          delete message.promise;\n          const newMessage = copy(message);\n          defineNotNumerableProperties(message, ['promise']);\n          message.promise = promise;\n\n          newMessage.date = updates.date;\n          newMessage.id = updates.id;\n          newMessage.media = updates.media;\n          newMessage.entities = updates.entities;\n          this.wrapMessageEntities(newMessage);\n          if(updates.pFlags.out) {\n            newMessage.pFlags.out = true;\n          }\n\n          // * override with new updates\n          updates = {\n            _: 'updates',\n            users: [],\n            chats: [],\n            seq: 0,\n            date: undefined,\n            updates: [{\n              _: 'updateMessageID',\n              random_id: message.random_id,\n              id: newMessage.id\n            }, {\n              _: options.scheduleDate ? 'updateNewScheduledMessage' : (isChannel ? 'updateNewChannelMessage' : 'updateNewMessage'),\n              message: newMessage,\n              pts: updates.pts,\n              pts_count: updates.pts_count\n            }]\n          };\n        } else if((updates as Updates.updates).updates) {\n          (updates as Updates.updates).updates.forEach((update) => {\n            if(update._ === 'updateDraftMessage') {\n              update.local = true;\n            }\n          });\n        }\n\n        // this.reloadConversation(peerId);\n\n        // setTimeout(() => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n        // }, 5000);\n        message.promise.resolve();\n      }, (error: ApiError) => {\n        toggleError(error);\n        message.promise.reject(error);\n        throw error;\n      }).finally(() => {\n        if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n          delete this.pendingAfterMsgs[peerId];\n        }\n      });\n    };\n\n    this.beforeMessageSending(message, {\n      isScheduled: !!options.scheduleDate || undefined,\n      threadId: options.threadId,\n      clearDraft: options.clearDraft,\n      sequential: true\n    });\n\n    const promises: ReturnType<AppMessagesManager['sendText']>[] = [message.promise];\n    for(let i = 1; i < splitted.length; ++i) {\n      promises.push(this.sendText(peerId, splitted[i], options));\n    }\n\n    return Promise.all(promises).then(noop);\n  }\n\n  public sendFile(peerId: PeerId, options: MessageSendingParams & SendFileDetails & Partial<{\n    isRoundMessage: boolean,\n    isVoiceMessage: boolean,\n    isGroupedItem: boolean,\n    isMedia: boolean,\n\n    groupId: string,\n    caption: string,\n    entities: MessageEntity[],\n    background: boolean,\n    clearDraft: boolean,\n    noSound: boolean,\n\n    waveform: Uint8Array,\n\n    // ! only for internal use\n    processAfter?: typeof processAfter\n  }>) {\n    const file = options.file;\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    // this.checkSendOptions(options);\n\n    const message = this.generateOutgoingMessage(peerId, options);\n    const replyToMsgId = options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined;\n\n    let attachType: 'document' | 'audio' | 'video' | 'voice' | 'photo', apiFileName: string;\n\n    const fileType = 'mime_type' in file ? file.mime_type : file.type;\n    const fileName = file instanceof File ? file.name : '';\n    const isDocument = !(file instanceof File) && !(file instanceof Blob);\n    let caption = options.caption || '';\n\n    this.log('sendFile', file, fileType);\n\n    const entities = options.entities || [];\n    if(caption) {\n      caption = parseMarkdown(caption, entities);\n    }\n\n    const attributes: DocumentAttribute[] = [];\n\n    const isPhoto = getEnvironment().IMAGE_MIME_TYPES_SUPPORTED.has(fileType);\n\n    const strippedPhotoSize: PhotoSize.photoStrippedSize = options.strippedBytes && {\n      _: 'photoStrippedSize',\n      bytes: options.strippedBytes,\n      type: 'i'\n    };\n\n    let photo: MyPhoto, document: MyDocument;\n\n    let actionName: Extract<SendMessageAction['_'], 'sendMessageUploadAudioAction' | 'sendMessageUploadDocumentAction' | 'sendMessageUploadPhotoAction' | 'sendMessageUploadVideoAction'>;\n    if(isDocument) { // maybe it's a sticker or gif\n      attachType = 'document';\n      apiFileName = '';\n    } else if(fileType.indexOf('audio/') === 0 || ['video/ogg'].indexOf(fileType) >= 0) {\n      attachType = 'audio';\n      apiFileName = 'audio.' + (fileType.split('/')[1] === 'ogg' ? 'ogg' : 'mp3');\n      actionName = 'sendMessageUploadAudioAction';\n\n      if(options.isVoiceMessage) {\n        attachType = 'voice';\n        message.pFlags.media_unread = true;\n      }\n\n      const attribute: DocumentAttribute.documentAttributeAudio = {\n        _: 'documentAttributeAudio',\n        pFlags: {\n          voice: options.isVoiceMessage || undefined\n        },\n        waveform: options.waveform,\n        duration: options.duration || 0\n      };\n\n      attributes.push(attribute);\n    } else if(!options.isMedia) {\n      attachType = 'document';\n      apiFileName = 'document.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadDocumentAction';\n    } else if(isPhoto) {\n      attachType = 'photo';\n      apiFileName = 'photo.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadPhotoAction';\n\n      const photoSize = {\n        _: 'photoSize',\n        w: options.width,\n        h: options.height,\n        type: THUMB_TYPE_FULL,\n        location: null,\n        size: file.size\n      } as PhotoSize.photoSize;\n\n      photo = {\n        _: 'photo',\n        id: '' + message.id,\n        sizes: [photoSize],\n        w: options.width,\n        h: options.height\n      } as any;\n\n      if(strippedPhotoSize) {\n        photo.sizes.unshift(strippedPhotoSize);\n      }\n\n      const cacheContext = this.thumbsStorage.getCacheContext(photo, photoSize.type);\n      cacheContext.downloaded = file.size;\n      cacheContext.url = options.objectURL || '';\n\n      photo = this.appPhotosManager.savePhoto(photo);\n    } else if(getEnvironment().VIDEO_MIME_TYPES_SUPPORTED.has(fileType as VIDEO_MIME_TYPE)) {\n      attachType = 'video';\n      apiFileName = 'video.mp4';\n      actionName = 'sendMessageUploadVideoAction';\n\n      const videoAttribute: DocumentAttribute.documentAttributeVideo = {\n        _: 'documentAttributeVideo',\n        pFlags: {\n          round_message: options.isRoundMessage || undefined,\n          supports_streaming: true\n        },\n        duration: options.duration,\n        w: options.width,\n        h: options.height\n      };\n\n      attributes.push(videoAttribute);\n\n      // * must follow after video attribute\n      if(options.noSound &&\n        file.size > (10 * 1024) &&\n        file.size < (10 * 1024 * 1024)) {\n        attributes.push({\n          _: 'documentAttributeAnimated'\n        });\n      }\n    } else {\n      attachType = 'document';\n      apiFileName = 'document.' + fileType.split('/')[1];\n      actionName = 'sendMessageUploadDocumentAction';\n    }\n\n    attributes.push({_: 'documentAttributeFilename', file_name: fileName || apiFileName});\n\n    if((['document', 'video', 'audio', 'voice'] as (typeof attachType)[]).indexOf(attachType) !== -1 && !isDocument) {\n      const thumbs: PhotoSize[] = [];\n      document = {\n        _: 'document',\n        id: '' + message.id,\n        duration: options.duration,\n        attributes,\n        w: options.width,\n        h: options.height,\n        thumbs,\n        mime_type: fileType,\n        size: file.size\n      } as any;\n\n      if(options.objectURL) {\n        const cacheContext = this.thumbsStorage.getCacheContext(document);\n        cacheContext.downloaded = file.size;\n        cacheContext.url = options.objectURL;\n      }\n\n      let thumb: PhotoSize.photoSize;\n      if(isPhoto) {\n        attributes.push({\n          _: 'documentAttributeImageSize',\n          w: options.width,\n          h: options.height\n        });\n\n        thumb = {\n          _: 'photoSize',\n          w: options.width,\n          h: options.height,\n          type: THUMB_TYPE_FULL,\n          size: file.size\n        };\n      } else if(attachType === 'video') {\n        if(options.thumb) {\n          thumb = {\n            _: 'photoSize',\n            w: options.thumb.size.width,\n            h: options.thumb.size.height,\n            type: 'local-thumb',\n            size: options.thumb.blob.size\n          };\n\n          const thumbCacheContext = this.thumbsStorage.getCacheContext(document, thumb.type);\n          thumbCacheContext.downloaded = thumb.size;\n          thumbCacheContext.url = options.thumb.url;\n        }\n      }\n\n      if(thumb) {\n        thumbs.push(thumb);\n      }\n\n      if(strippedPhotoSize) {\n        thumbs.unshift(strippedPhotoSize);\n      }\n\n      /* if(thumbs.length) {\n        const thumb = thumbs[0] as PhotoSize.photoSize;\n        const docThumb = appPhotosManager.getDocumentCachedThumb(document.id);\n        docThumb.downloaded = thumb.size;\n        docThumb.url = thumb.url;\n      } */\n\n      document = this.appDocsManager.saveDoc(document);\n    }\n\n    this.log('sendFile', attachType, apiFileName, file.type, options);\n\n    const sentDeferred = deferredPromise<InputMedia>();\n    // sentDeferred.cancel = () => {\n    //   const error = new Error('Download canceled');\n    //   error.name = 'AbortError';\n    //   sentDeferred.reject(error);\n\n    //   if(uploadPromise?.cancel) {\n    //     uploadPromise.cancel();\n    //   }\n    // };\n\n    const media: MessageMedia = isDocument ? undefined : {\n      _: photo ? 'messageMediaPhoto' : 'messageMediaDocument',\n      pFlags: {},\n      // preloader,\n      photo,\n      document\n    };\n\n    if(media) {\n      defineNotNumerableProperties(media as any, ['promise']);\n      (media as any).promise = sentDeferred;\n\n      if(options.spoiler) {\n        (media as MessageMedia.messageMediaPhoto).pFlags.spoiler = true;\n      }\n    }\n\n    message.entities = entities;\n    message.message = caption;\n    message.media = isDocument ? {\n      _: 'messageMediaDocument',\n      pFlags: {},\n      document: file\n    } as MessageMedia.messageMediaDocument : media;\n\n    const uploadingFileName = !isDocument ? getFileNameForUpload(file) : undefined;\n    message.uploadingFileName = uploadingFileName;\n\n    if(uploadingFileName) {\n      this.uploadFilePromises[uploadingFileName] = sentDeferred;\n    }\n\n    const toggleError = (error?: ApiError) => {\n      this.onMessagesSendError([message], error);\n      this.rootScope.dispatchEvent('messages_pending');\n    };\n\n    let uploaded = false,\n      uploadPromise: ReturnType<ApiFileManager['upload']> = null;\n\n    message.send = () => {\n      if(isDocument) {\n        const inputMedia: InputMedia = {\n          _: 'inputMediaDocument',\n          id: getDocumentInput(file),\n          pFlags: {}\n        };\n\n        sentDeferred.resolve(inputMedia);\n      } else if(file instanceof File || file instanceof Blob) {\n        const load = () => {\n          if(!uploaded || message.error) {\n            uploaded = false;\n\n            uploadPromise = this.apiFileManager.upload({file, fileName: uploadingFileName});\n            uploadPromise.catch((err) => {\n              if(!uploaded) {\n                this.log('cancelling upload', media);\n\n                this.cancelPendingMessage(message.random_id);\n                this.setTyping(peerId, {_: 'sendMessageCancelAction'}, undefined, options.threadId);\n                sentDeferred.reject(err);\n              }\n            });\n\n            uploadPromise.addNotifyListener((progress: Progress) => {\n              /* if(DEBUG) {\n                this.log('upload progress', progress);\n              } */\n\n              const percents = Math.max(1, Math.floor(100 * progress.done / progress.total));\n              if(actionName) {\n                this.setTyping(peerId, {_: actionName, progress: percents | 0}, undefined, options.threadId);\n              }\n              sentDeferred.notifyAll(progress);\n            });\n\n            sentDeferred.notifyAll({done: 0, total: file.size});\n          }\n\n          let thumbUploadPromise: typeof uploadPromise;\n          if(attachType === 'video' && options.objectURL && options.thumb?.blob) {\n            thumbUploadPromise = this.apiFileManager.upload({file: options.thumb.blob});\n          }\n\n          uploadPromise && uploadPromise.then(async(inputFile) => {\n            /* if(DEBUG) {\n              this.log('appMessagesManager: sendFile uploaded:', inputFile);\n            } */\n\n            inputFile.name = apiFileName;\n            uploaded = true;\n            let inputMedia: InputMedia;\n            switch(attachType) {\n              case 'photo':\n                inputMedia = {\n                  _: 'inputMediaUploadedPhoto',\n                  file: inputFile,\n                  pFlags: {\n                    spoiler: options.spoiler || undefined\n                  }\n                };\n                break;\n\n              default:\n                inputMedia = {\n                  _: 'inputMediaUploadedDocument',\n                  file: inputFile,\n                  mime_type: fileType,\n                  pFlags: {\n                    force_file: actionName === 'sendMessageUploadDocumentAction' || undefined,\n                    spoiler: options.spoiler || undefined\n                    // nosound_video: options.noSound ? true : undefined\n                  },\n                  attributes\n                };\n            }\n\n            if(thumbUploadPromise) {\n              try {\n                const inputFile = await thumbUploadPromise;\n                (inputMedia as InputMedia.inputMediaUploadedDocument).thumb = inputFile;\n              } catch(err) {\n                this.log.error('sendFile thumb upload error:', err);\n              }\n            }\n\n            sentDeferred.resolve(inputMedia);\n          }, (error: ApiError) => {\n            toggleError(error);\n            throw error;\n          });\n\n          return sentDeferred;\n        };\n\n        if(options.isGroupedItem) {\n          load();\n        } else {\n          this.sendSmthLazyLoadQueue.push({\n            load\n          });\n        }\n      }\n\n      return sentDeferred;\n    };\n\n    this.beforeMessageSending(message, {\n      isGroupedItem: options.isGroupedItem,\n      isScheduled: !!options.scheduleDate || undefined,\n      threadId: options.threadId,\n      clearDraft: options.clearDraft,\n      processAfter: options.processAfter\n    });\n\n    if(!options.isGroupedItem) {\n      sentDeferred.then((inputMedia) => {\n        this.setTyping(peerId, {_: 'sendMessageCancelAction'}, undefined, options.threadId);\n\n        return this.apiManager.invokeApi('messages.sendMedia', {\n          background: options.background,\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          media: inputMedia,\n          message: caption,\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId,\n          schedule_date: options.scheduleDate,\n          silent: options.silent,\n          entities,\n          clear_draft: options.clearDraft,\n          send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined\n        }).then((updates) => {\n          this.apiUpdatesManager.processUpdateMessage(updates);\n        }, (error: ApiError) => {\n          if(attachType === 'photo' &&\n            error.code === 400 &&\n            (error.type === 'PHOTO_INVALID_DIMENSIONS' ||\n            error.type === 'PHOTO_SAVE_FILE_INVALID')) {\n            error.handled = true;\n            attachType = 'document';\n            message.send();\n            return;\n          }\n\n          toggleError(error);\n          throw error;\n        });\n      });\n\n      sentDeferred.then(message.promise.resolve, message.promise.reject);\n    }\n\n    const ret: {\n      message: typeof message,\n      promise: typeof sentDeferred\n    } = {\n      message\n    } as any;\n\n    defineNotNumerableProperties(ret, ['promise']);\n    ret.promise = sentDeferred;\n\n    return ret;\n  }\n\n  public async sendAlbum(peerId: PeerId, options: MessageSendingParams & {\n    isMedia?: boolean,\n    entities?: MessageEntity[],\n    caption?: string,\n    sendFileDetails: SendFileDetails[],\n    clearDraft?: boolean\n  }) {\n    // this.checkSendOptions(options);\n\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n\n    if(options.sendFileDetails.length === 1) {\n      return this.sendFile(peerId, {...options, ...options.sendFileDetails[0]});\n    }\n\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n    const replyToMsgId = options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined;\n\n    let caption = options.caption || '';\n    let entities = options.entities || [];\n    if(caption) {\n      caption = parseMarkdown(caption, entities);\n    }\n\n    this.log('sendAlbum', options);\n\n    const groupId = '' + ++this.groupedTempId;\n\n    const callbacks: Array<() => void> = [];\n    const processAfter = (cb: () => void) => {\n      callbacks.push(cb);\n    };\n\n    const messages = options.sendFileDetails.map((details, idx) => {\n      const o: Parameters<AppMessagesManager['sendFile']>[1] = {\n        isGroupedItem: true,\n        isMedia: options.isMedia,\n        scheduleDate: options.scheduleDate,\n        silent: options.silent,\n        replyToMsgId,\n        threadId: options.threadId,\n        sendAsPeerId: options.sendAsPeerId,\n        groupId,\n        processAfter,\n        ...details\n      };\n\n      if(idx === 0) {\n        o.caption = caption;\n        o.entities = entities;\n        // o.replyToMsgId = replyToMsgId;\n      }\n\n      return this.sendFile(peerId, o).message;\n    });\n\n    if(options.clearDraft) {\n      callbacks.push(() => {\n        this.appDraftsManager.clearDraft(peerId, options.threadId);\n      });\n    }\n\n    callbacks.forEach((callback) => {\n      callback();\n    });\n\n    // * test pending\n    // return;\n\n    const toggleError = (message: Message.message, error?: ApiError) => {\n      this.onMessagesSendError([message], error);\n      this.rootScope.dispatchEvent('messages_pending');\n    };\n\n    const inputPeer = this.appPeersManager.getInputPeerById(peerId);\n    const invoke = (multiMedia: InputSingleMedia[]) => {\n      this.setTyping(peerId, {_: 'sendMessageCancelAction'}, undefined, options.threadId);\n\n      const deferred = deferredPromise<void>();\n      this.sendSmthLazyLoadQueue.push({\n        load: () => {\n          return this.apiManager.invokeApi('messages.sendMultiMedia', {\n            peer: inputPeer,\n            multi_media: multiMedia,\n            reply_to_msg_id: replyToMsgId,\n            schedule_date: options.scheduleDate,\n            silent: options.silent,\n            clear_draft: options.clearDraft,\n            send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined,\n            update_stickersets_order: UPDATE_STICKERSET_ORDER\n          }).then((updates) => {\n            this.apiUpdatesManager.processUpdateMessage(updates);\n            deferred.resolve();\n          }, (error: ApiError) => {\n            messages.forEach((message) => toggleError(message, error));\n            deferred.reject(error);\n          });\n        }\n      });\n\n      return deferred;\n    };\n\n    const promises: Promise<InputSingleMedia>[] = messages.map((message) => {\n      return (message.send() as Promise<InputMedia>).then((inputMedia) => {\n        return Promise.all([\n          inputMedia,\n          this.apiManager.invokeApi('messages.uploadMedia', {\n            peer: inputPeer,\n            media: inputMedia\n          })\n        ]);\n      })\n      .then(([originalInputMedia, messageMedia]) => {\n        let inputMedia: InputMedia;\n        if(messageMedia._ === 'messageMediaPhoto') {\n          const photo = this.appPhotosManager.savePhoto(messageMedia.photo);\n          inputMedia = getPhotoMediaInput(photo);\n        } else if(messageMedia._ === 'messageMediaDocument') {\n          const doc = this.appDocsManager.saveDoc(messageMedia.document);\n          inputMedia = getDocumentMediaInput(doc);\n        }\n\n        // copy original flags\n        const copyProperties: (keyof InputMedia.inputMediaPhoto)[] = [\n          'pFlags',\n          'ttl_seconds'\n        ];\n\n        copyProperties.forEach((property) => {\n          // @ts-ignore\n          inputMedia[property] = originalInputMedia[property] ?? inputMedia[property];\n        });\n\n        const inputSingleMedia: InputSingleMedia = {\n          _: 'inputSingleMedia',\n          media: inputMedia,\n          random_id: message.random_id,\n          message: caption,\n          entities\n        };\n\n        // * only 1 caption for all inputs\n        if(caption) {\n          caption = '';\n          entities = [];\n        }\n\n        return inputSingleMedia;\n      }).catch((err: ApiError) => {\n        this.log.error('sendAlbum upload item error:', err, message);\n        toggleError(message, err);\n        throw err;\n      });\n    });\n\n    return Promise.all(promises).then((inputs) => {\n      return invoke(inputs.filter(Boolean));\n    });\n  }\n\n  public sendContact(peerId: PeerId, contactPeerId: PeerId) {\n    return this.sendOther(peerId, this.appUsersManager.getContactMediaInput(contactPeerId));\n  }\n\n  public sendOther(\n    peerId: PeerId,\n    inputMedia: InputMedia | {_: 'messageMediaPending', messageMedia: MessageMedia},\n    options: MessageSendingParams & Partial<{\n      viaBotId: BotId,\n      replyMarkup: ReplyMarkup,\n      clearDraft: true,\n      queryId: string\n      resultId: string,\n      geoPoint: GeoPoint\n    }> = {}\n  ) {\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n\n    // this.checkSendOptions(options);\n    const message = this.generateOutgoingMessage(peerId, options);\n    const replyToMsgId = options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined;\n\n    let media: MessageMedia;\n    switch(inputMedia._) {\n      case 'inputMediaPoll': {\n        const pollId = '' + message.id;\n        inputMedia.poll.id = pollId;\n        this.appPollsManager.savePoll(inputMedia.poll, {\n          _: 'pollResults',\n          flags: 4,\n          total_voters: 0,\n          pFlags: {},\n          recent_voters: []\n        });\n\n        const {poll, results} = this.appPollsManager.getPoll(pollId);\n        media = {\n          _: 'messageMediaPoll',\n          poll,\n          results\n        };\n\n        break;\n      }\n\n      case 'inputMediaPhoto': {\n        media = {\n          _: 'messageMediaPhoto',\n          photo: this.appPhotosManager.getPhoto((inputMedia.id as InputPhoto.inputPhoto).id),\n          pFlags: {}\n        };\n        break;\n      }\n\n      case 'inputMediaDocument': {\n        const doc = this.appDocsManager.getDoc((inputMedia.id as InputDocument.inputDocument).id);\n        /* if(doc.sticker && doc.stickerSetInput) {\n          appStickersManager.pushPopularSticker(doc.id);\n        } */\n        media = {\n          _: 'messageMediaDocument',\n          document: doc,\n          pFlags: {}\n        };\n        break;\n      }\n\n      case 'inputMediaContact': {\n        media = {\n          _: 'messageMediaContact',\n          phone_number: inputMedia.phone_number,\n          first_name: inputMedia.first_name,\n          last_name: inputMedia.last_name,\n          user_id: inputMedia.user_id ?? '0',\n          vcard: inputMedia.vcard\n        };\n        break;\n      }\n\n      case 'inputMediaGeoPoint': {\n        media = {\n          _: 'messageMediaGeo',\n          geo: options.geoPoint\n        };\n        break;\n      }\n\n      case 'inputMediaVenue': {\n        media = {\n          _: 'messageMediaVenue',\n          geo: options.geoPoint,\n          title: inputMedia.title,\n          address: inputMedia.address,\n          provider: inputMedia.provider,\n          venue_id: inputMedia.venue_id,\n          venue_type: inputMedia.venue_type\n        };\n        break;\n      }\n\n      case 'messageMediaPending': {\n        media = (inputMedia as any).messageMedia;\n        break;\n      }\n    }\n\n    message.media = media;\n\n    const toggleError = (error?: ApiError) => {\n      this.onMessagesSendError([message], error);\n      this.rootScope.dispatchEvent('messages_pending');\n    };\n\n    message.send = () => {\n      const sentRequestOptions: PendingAfterMsg = {};\n      if(this.pendingAfterMsgs[peerId]) {\n        sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n      }\n\n      const sendAs = options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined;\n      let apiPromise: Promise<any>;\n      if(options.viaBotId) {\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendInlineBotResult', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          query_id: options.queryId,\n          id: options.resultId,\n          clear_draft: options.clearDraft,\n          schedule_date: options.scheduleDate,\n          silent: options.silent,\n          send_as: sendAs\n        }, sentRequestOptions);\n      } else {\n        apiPromise = this.apiManager.invokeApiAfter('messages.sendMedia', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          media: inputMedia as InputMedia,\n          random_id: message.random_id,\n          reply_to_msg_id: replyToMsgId || undefined,\n          message: '',\n          clear_draft: options.clearDraft,\n          schedule_date: options.scheduleDate,\n          silent: options.silent,\n          send_as: sendAs,\n          update_stickersets_order: UPDATE_STICKERSET_ORDER\n        }, sentRequestOptions);\n      }\n\n      this.pendingAfterMsgs[peerId] = sentRequestOptions;\n\n      return apiPromise.then((updates) => {\n        if(updates.updates) {\n          updates.updates.forEach((update: Update) => {\n            if(update._ === 'updateDraftMessage') {\n              update.local = true;\n            }\n          });\n        }\n\n        this.apiUpdatesManager.processUpdateMessage(updates);\n      }, (error: ApiError) => {\n        toggleError(error);\n        throw error;\n      }).finally(() => {\n        if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n          delete this.pendingAfterMsgs[peerId];\n        }\n      });\n    };\n\n    this.beforeMessageSending(message, {\n      isScheduled: !!options.scheduleDate || undefined,\n      threadId: options.threadId,\n      clearDraft: options.clearDraft,\n      sequential: true\n    });\n\n    return message.promise;\n  }\n\n  /* private checkSendOptions(options: Partial<{\n    scheduleDate: number\n  }>) {\n    if(options.scheduleDate) {\n      const minTimestamp = (Date.now() / 1000 | 0) + 10;\n      if(options.scheduleDate <= minTimestamp) {\n        delete options.scheduleDate;\n      }\n    }\n  } */\n\n  private beforeMessageSending(message: Message.message, options: Pick<MessageSendingParams, 'threadId'> & Partial<{\n    isGroupedItem: boolean,\n    isScheduled: boolean,\n    clearDraft: boolean,\n    sequential: boolean,\n    processAfter?: (cb: () => void) => void\n  }> = {}) {\n    const messageId = message.id;\n    const peerId = this.getMessagePeer(message);\n    const storage = options.isScheduled ? this.getScheduledMessagesStorage(peerId) : this.getHistoryMessagesStorage(peerId);\n    message.storageKey = storage.key;\n    const callbacks: Array<() => void> = [];\n    if(options.isScheduled) {\n      // if(!options.isGroupedItem) {\n      this.saveMessages([message], {storage, isScheduled: true, isOutgoing: true});\n      callbacks.push(() => {\n        this.rootScope.dispatchEvent('scheduled_new', message);\n      });\n    } else {\n      /* if(options.threadId && this.threadsStorage[peerId]) {\n        delete this.threadsStorage[peerId][options.threadId];\n      } */\n      const storages: HistoryStorage[] = [\n        this.getHistoryStorage(peerId),\n        options.threadId ? this.getHistoryStorage(peerId, options.threadId) : undefined\n      ];\n\n      for(const storage of storages) {\n        if(storage) {\n          storage.history.unshift(messageId);\n        }\n      }\n\n      this.saveMessages([message], {storage, isOutgoing: true});\n      this.setDialogTopMessage(message);\n\n      if(options.threadId) {\n        const forumTopic = this.dialogsStorage.getForumTopic(peerId, options.threadId);\n        if(forumTopic) {\n          this.setDialogTopMessage(message, forumTopic);\n        }\n      }\n\n      callbacks.push(() => {\n        this.rootScope.dispatchEvent('history_append', {storageKey: storage.key, message});\n      });\n    }\n\n    const pending: PendingMessageDetails = this.pendingByRandomId[message.random_id] = {\n      peerId,\n      tempId: messageId,\n      threadId: options.threadId,\n      storage,\n      sequential: options.sequential\n    };\n\n    this.pendingTopMsgs[peerId] = messageId;\n\n    if(!options.isGroupedItem && message.send) {\n      callbacks.push(() => {\n        if(options.clearDraft) {\n          this.appDraftsManager.clearDraft(peerId, options.threadId);\n        }\n\n        message.send();\n      });\n    }\n\n    if(callbacks.length) {\n      (options.processAfter || processAfter)(() => {\n        for(const callback of callbacks) {\n          callback();\n        }\n      });\n    }\n\n    return pending;\n  }\n\n  private generateOutgoingMessage(peerId: PeerId, options: MessageSendingParams & Partial<{\n    viaBotId: BotId,\n    groupId: string,\n    replyMarkup: ReplyMarkup,\n  }>) {\n    if(options.threadId && !options.replyToMsgId) {\n      options.replyToMsgId = options.threadId;\n    }\n\n    let postAuthor: string;\n    const isBroadcast = this.appPeersManager.isBroadcast(peerId);\n    if(isBroadcast) {\n      const chat = this.appPeersManager.getPeer(peerId) as Chat.channel;\n      if(chat.pFlags.signatures) {\n        const user = this.appUsersManager.getSelf();\n        const fullName = user.first_name + (user.last_name ? ' ' + user.last_name : '');\n        postAuthor = fullName;\n      }\n    }\n\n    const message: Message.message = {\n      _: 'message',\n      id: this.generateTempMessageId(peerId),\n      from_id: options.sendAsPeerId ? this.appPeersManager.getOutputPeer(options.sendAsPeerId) : this.generateFromId(peerId),\n      peer_id: this.appPeersManager.getOutputPeer(peerId),\n      post_author: postAuthor,\n      pFlags: this.generateFlags(peerId),\n      date: options.scheduleDate || (tsNow(true) + this.timeManager.getServerTimeOffset()),\n      message: '',\n      grouped_id: options.groupId,\n      random_id: randomLong(),\n      reply_to: this.generateReplyHeader(peerId, options.replyToMsgId, options.threadId),\n      via_bot_id: options.viaBotId,\n      reply_markup: options.replyMarkup,\n      replies: this.generateReplies(peerId),\n      views: isBroadcast && 1,\n      pending: true\n    };\n\n    defineNotNumerableProperties(message, ['send', 'promise']);\n    if(options.groupId === undefined) {\n      message.promise = deferredPromise();\n    }\n\n    return message;\n  }\n\n  private generateReplyHeader(peerId: PeerId, replyToMsgId: number, replyToTopId?: number) {\n    const isForum = this.appPeersManager.isForum(peerId);\n    if(isForum && !replyToTopId) {\n      const originalMessage = this.getMessageByPeer(peerId, replyToMsgId);\n      if(originalMessage) {\n        replyToTopId = getMessageThreadId(originalMessage, true);\n      }\n    }\n\n    const header: MessageReplyHeader = {\n      _: 'messageReplyHeader',\n      reply_to_msg_id: replyToMsgId || replyToTopId,\n      pFlags: {}\n    };\n\n    if(replyToTopId && isForum && GENERAL_TOPIC_ID !== replyToTopId) {\n      header.pFlags.forum_topic = true;\n    }\n\n    if(replyToTopId && header.reply_to_msg_id !== replyToTopId) {\n      header.reply_to_top_id = replyToTopId;\n    }\n\n    return header;\n  }\n\n  private generateReplies(peerId: PeerId) {\n    let replies: MessageReplies.messageReplies;\n    if(this.appPeersManager.isBroadcast(peerId)) {\n      const channelFull = this.appProfileManager.getCachedFullChat(peerId.toChatId()) as ChatFull.channelFull;\n      if(channelFull?.linked_chat_id) {\n        replies = {\n          _: 'messageReplies',\n          flags: 1,\n          pFlags: {\n            comments: true\n          },\n          channel_id: channelFull.linked_chat_id,\n          replies: 0,\n          replies_pts: 0\n        };\n      }\n    }\n\n    return replies;\n  }\n\n  /**\n   * Generate correct from_id according to anonymous or broadcast\n   */\n  private generateFromId(peerId: PeerId) {\n    if(this.appPeersManager.isAnyChat(peerId) && (this.appPeersManager.isBroadcast(peerId) || this.isAnonymousSending(peerId))) {\n      return undefined;\n    } else {\n      return this.appPeersManager.getOutputPeer(this.appUsersManager.getSelf().id.toPeerId());\n    }\n  }\n\n  private generateFlags(peerId: PeerId) {\n    const pFlags: Message.message['pFlags'] = {};\n    const fromId = this.appUsersManager.getSelf().id;\n    if(peerId !== fromId) {\n      pFlags.out = true;\n\n      if(!this.appPeersManager.isChannel(peerId) && !this.appUsersManager.isBot(peerId)) {\n        pFlags.unread = true;\n      }\n    }\n\n    if(this.appPeersManager.isBroadcast(peerId)) {\n      pFlags.post = true;\n    }\n\n    return pFlags;\n  }\n\n  private generateForwardHeader(peerId: PeerId, originalMessage: Message.message) {\n    const myId = this.appUsersManager.getSelf().id.toPeerId();\n    const fromId = originalMessage.fromId;\n    if(fromId === myId && originalMessage.peerId === myId && !originalMessage.fwd_from) {\n      return;\n    }\n\n    const fwdHeader: MessageFwdHeader.messageFwdHeader = {\n      _: 'messageFwdHeader',\n      flags: 0,\n      date: originalMessage.date,\n      pFlags: {}\n    };\n\n    let isUserHidden = false;\n    if(originalMessage.fwd_from) {\n      fwdHeader.from_id = originalMessage.fwd_from.from_id;\n      fwdHeader.from_name = originalMessage.fwd_from.from_name;\n      fwdHeader.post_author = originalMessage.fwd_from.post_author;\n    } else {\n      fwdHeader.post_author = originalMessage.post_author;\n\n      if(fromId.isUser()) {\n        const userFull = this.appProfileManager.getCachedFullUser(fromId.toUserId());\n        if(userFull?.private_forward_name) {\n          fwdHeader.from_name = userFull.private_forward_name;\n          isUserHidden = true;\n        }\n      }\n\n      if(!isUserHidden) {\n        fwdHeader.from_id = this.appPeersManager.getOutputPeer(fromId);\n      }\n    }\n\n    if(this.appPeersManager.isBroadcast(originalMessage.peerId)) {\n      if(originalMessage.post_author) {\n        fwdHeader.post_author = originalMessage.post_author;\n      }\n\n      fwdHeader.channel_post = originalMessage.id;\n    }\n\n    if(peerId === myId && !isUserHidden) {\n      fwdHeader.saved_from_msg_id = originalMessage.id;\n      fwdHeader.saved_from_peer = this.appPeersManager.getOutputPeer(originalMessage.peerId);\n    }\n\n    return fwdHeader;\n  }\n\n  public generateFakeAvatarMessage(peerId: PeerId, photo: Photo) {\n    const maxId = Number.MAX_SAFE_INTEGER;\n    const message: Message.messageService = {\n      _: 'messageService',\n      pFlags: {},\n      action: {\n        _: 'messageActionChannelEditPhoto',\n        photo\n      },\n      id: maxId,\n      peer_id: this.appPeersManager.getOutputPeer(peerId),\n      mid: maxId,\n      peerId,\n      date: (photo as Photo.photo).date,\n      fromId: peerId\n    };\n\n    this.getHistoryMessagesStorage(peerId).set(maxId, message);\n    return message;\n  }\n\n  public getUploadPromise(uploadFileName: string) {\n    return this.uploadFilePromises[uploadFileName];\n  }\n\n  public isAnonymousSending(peerId: PeerId): boolean {\n    if(!peerId.isAnyChat()) {\n      return false;\n    }\n\n    const chat = this.appPeersManager.getPeer(peerId);\n    return (chat as Chat.channel).admin_rights?.pFlags?.anonymous;\n  }\n\n  public setDialogTopMessage(\n    message: MyMessage,\n    dialog: MTDialog.dialog | ForumTopic = this.getDialogOnly(message.peerId)\n  ) {\n    if(!dialog) {\n      return;\n    }\n\n    dialog.top_message = message.mid;\n\n    const historyStorage = this.getHistoryStorage(message.peerId, dialog._ === 'forumTopic' ? dialog.id : undefined);\n    historyStorage.maxId = message.mid;\n\n    this.dialogsStorage.generateIndexForDialog(dialog, false, message);\n\n    this.scheduleHandleNewDialogs(message.peerId, dialog);\n  }\n\n  public cancelPendingMessage(randomId: string) {\n    const pendingData = this.pendingByRandomId[randomId];\n\n    /* if(DEBUG) {\n      this.log('cancelPendingMessage', randomId, pendingData);\n    } */\n\n    if(pendingData) {\n      const {peerId, tempId, storage} = pendingData;\n      const historyStorage = this.getHistoryStorage(peerId);\n\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateDeleteMessages',\n        messages: [tempId],\n        pts: undefined,\n        pts_count: undefined\n      });\n\n      historyStorage.history.delete(tempId);\n\n      delete this.pendingByRandomId[randomId];\n      storage.delete(tempId);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /* public async refreshConversations() {\n    const limit = 200, outDialogs: Dialog[] = [];\n    for(let folderId = 0; folderId < 2; ++folderId) {\n      let offsetDate = 0;\n      for(;;) {\n        const {dialogs, isEnd} = await this.getTopMessages(limit, folderId, offsetDate);\n\n        if(dialogs.length) {\n          outDialogs.push(...dialogs as Dialog[]);\n          const dialog = dialogs[dialogs.length - 1];\n\n          // * get peerId and mid manually, because dialog can be migrated peer and it won't be saved\n          const peerId = getPeerId(dialog.peer);\n          const mid = generateMessageId(dialog.top_message);\n          offsetDate = this.getMessageByPeer(peerId, mid).date;\n\n          if(!offsetDate) {\n            console.error('refreshConversations: got no offsetDate', dialog);\n            break;\n          }\n        }\n\n        if(isEnd) {\n          break;\n        }\n      }\n    }\n\n    let obj: {[peerId: string]: Dialog} = {};\n    outDialogs.forEach((dialog) => {\n      obj[dialog.peerId] = dialog;\n    });\n    rootScope.dispatchEvent('dialogs_multiupdate', obj);\n\n    return outDialogs;\n  } */\n\n  public async fillConversations(folderId = GLOBAL_FOLDER_ID): Promise<void> {\n    const middleware = this.middleware.get();\n    while(!this.dialogsStorage.isDialogsLoaded(folderId)) {\n      const result = await this.getTopMessages({limit: 100, folderId});\n      if(!middleware() || result.isEnd) {\n        break;\n      }\n    }\n  }\n\n  /* public async getConversationsAll(query = '', folderId = 0) {\n    const limit = 200, outDialogs: Dialog[] = [];\n    for(; folderId < 2; ++folderId) {\n      let offsetIndex = 0;\n      for(;;) {\n        const {dialogs} = await appMessagesManager.getConversations(query, offsetIndex, limit, folderId).promise;\n\n        if(dialogs.length) {\n          outDialogs.push(...dialogs);\n          offsetIndex = dialogs[dialogs.length - 1].index || 0;\n        } else {\n          break;\n        }\n      }\n    }\n\n    return outDialogs;\n  } */\n\n  public getReadMaxIdIfUnread(peerId: PeerId, threadId?: number) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    if(threadId && !this.appChatsManager.isForum(peerId.toChatId())) {\n      const chatHistoryStorage = this.getHistoryStorage(peerId);\n      const readMaxId = Math.max(chatHistoryStorage.readMaxId ?? 0, historyStorage.readMaxId);\n      const message = this.getMessageByPeer(peerId, historyStorage.maxId); // usually message is missing, so pFlags.out won't be there anyway\n      return !message?.pFlags?.out && readMaxId < historyStorage.maxId ? readMaxId : 0;\n    } else {\n      const message = this.getMessageByPeer(peerId, historyStorage.maxId);\n      const readMaxId = peerId.isUser() ? Math.max(historyStorage.readMaxId, historyStorage.readOutboxMaxId) : historyStorage.readMaxId;\n      // readMaxId can be 4294967295 (0)\n      return !message?.pFlags?.out && readMaxId < historyStorage.maxId && getServerMessageId(readMaxId) ? readMaxId : 0;\n    }\n  }\n\n  // public lolSet = new Set();\n  public getTopMessages({limit, folderId}: {\n    limit: number,\n    folderId: number\n  }) {\n    // const dialogs = this.dialogsStorage.getFolder(folderId);\n    const offsetId = 0;\n    let offsetPeerId: PeerId;\n    let offsetIndex = 0;\n\n    let offsetDate = this.dialogsStorage.getOffsetDate(folderId);\n    if(offsetDate) {\n      offsetIndex = offsetDate * 0x10000;\n      offsetDate += this.timeManager.getServerTimeOffset();\n    }\n\n    const useLimit = 100;\n    const middleware = this.middleware.get();\n    const peerId = this.dialogsStorage.isFilterIdForForum(folderId) ? folderId : undefined;\n\n    const processResult = (result: MessagesDialogs | MessagesForumTopics) => {\n      if(!middleware() || result._ === 'messages.dialogsNotModified') return null;\n\n      if(DEBUG) {\n        this.log('messages.getDialogs result:', result);\n      }\n\n      // can reset pinned order here\n      if(!peerId && !offsetId && !offsetDate && !offsetPeerId && folderId !== GLOBAL_FOLDER_ID) {\n        this.dialogsStorage.resetPinnedOrder(folderId);\n      }\n\n      if(!peerId && !offsetDate) {\n        // telegramMeWebManager.setAuthorized(true);\n        this.appDraftsManager.addMissedDialogs();\n      }\n\n      this.appUsersManager.saveApiUsers(result.users);\n      this.appChatsManager.saveApiChats(result.chats);\n      this.saveMessages(result.messages);\n\n      let maxSeenIdIncremented = offsetDate ? true : false;\n      let hasPrepend = false;\n      const noIdsDialogs: BroadcastEvents['dialogs_multiupdate'] = new Map();\n      const setFolderId: REAL_FOLDER_ID = folderId === GLOBAL_FOLDER_ID ? FOLDER_ID_ALL : folderId as REAL_FOLDER_ID;\n      const saveGlobalOffset = !!peerId || folderId === GLOBAL_FOLDER_ID;\n      const items: Array<Dialog | ForumTopic> =\n        (result as MessagesDialogs.messagesDialogsSlice).dialogs as Dialog[] ||\n        (result as MessagesForumTopics).topics as ForumTopic[];\n      forEachReverse(items, (dialog) => {\n        if(!dialog) {\n          return;\n        }\n\n        // const d = Object.assign({}, dialog);\n        // ! нужно передавать folderId, так как по папке !== 0 нет свойства folder_id\n        if(!peerId) {\n          (dialog as Dialog).folder_id ??= setFolderId;\n        }\n\n        this.dialogsStorage.saveDialog({\n          dialog,\n          ignoreOffsetDate: true,\n          saveGlobalOffset\n        });\n\n        if(dialog.peerId === undefined) {\n          this.log.error('bugged dialog?', dialog);\n          debugger;\n          return;\n        }\n\n        if(!maxSeenIdIncremented &&\n          !this.appPeersManager.isChannel(dialog.peerId || this.appPeersManager.getPeerId(dialog.peer))) {\n          this.incrementMaxSeenId(dialog.top_message);\n          maxSeenIdIncremented = true;\n        }\n\n        // if(!folderId && !dialog.folder_id) {\n        //   this.lolSet.add(dialog.peerId);\n        // }\n\n        if(offsetIndex && getDialogIndex(dialog) > offsetIndex) {\n          this.scheduleHandleNewDialogs(dialog.peerId, dialog);\n          hasPrepend = true;\n        }\n\n        // ! это может случиться, если запрос идёт не по папке 0, а по 1. почему-то read'ов нет\n        // ! в итоге, чтобы получить 1 диалог, делается первый запрос по папке 0, потом запрос для архивных по папке 1, и потом ещё перезагрузка архивного диалога\n        if(!peerId && !getServerMessageId(dialog.read_inbox_max_id) && !getServerMessageId(dialog.read_outbox_max_id)) {\n          noIdsDialogs.set(dialog.peerId, {dialog: dialog as Dialog});\n\n          this.log.error('noIdsDialogs', dialog, params);\n        } else if(dialog.top_message) { // * fix sending status\n          const topMessage = this.getMessageByPeer(dialog.peerId, dialog.top_message);\n          if(topMessage) {\n            this.setMessageUnreadByDialog(topMessage, dialog);\n            this.dialogsStorage.setDialogToState(dialog);\n          }\n        }\n      });\n\n      if(noIdsDialogs.size) {\n        // setTimeout(() => { // test bad situation\n        const peerIds = [...noIdsDialogs.keys()];\n        const promises = peerIds.map((peerId) => this.reloadConversation(peerId));\n        Promise.all(promises).then(() => {\n          this.rootScope.dispatchEvent('dialogs_multiupdate', noIdsDialogs);\n\n          for(let i = 0; i < peerIds.length; ++i) {\n            const peerId = peerIds[i];\n            this.rootScope.dispatchEvent('dialog_unread', {\n              peerId,\n              dialog: this.getDialogOnly(peerId)\n            });\n          }\n        });\n        // }, 10e3);\n      }\n\n      const count = (result as MessagesDialogs.messagesDialogsSlice).count;\n\n      // exclude empty draft dialogs\n      const folderDialogs = this.dialogsStorage.getFolderDialogs(folderId, false);\n      let dialogsLength = 0;\n      for(let i = 0, length = folderDialogs.length; i < length; ++i) {\n        const dialog = folderDialogs[i];\n        if(getServerMessageId(dialog.top_message)) {\n          ++dialogsLength;\n        } else {\n          this.log.error('something strange with dialog', dialog);\n        }\n      }\n\n      const isEnd = /* limit > dialogsResult.dialogs.length || */\n        !count ||\n        dialogsLength >= count ||\n        !items.length;\n      if(isEnd) {\n        this.dialogsStorage.setDialogsLoaded(folderId, true);\n      }\n\n      if(hasPrepend) {\n        this.scheduleHandleNewDialogs();\n      } else {\n        this.rootScope.dispatchEvent('dialogs_multiupdate', new Map());\n      }\n\n      const dialogs = items;\n      const slicedDialogs = limit === useLimit ? dialogs : dialogs.slice(0, limit);\n      return {\n        isEnd: isEnd && slicedDialogs[slicedDialogs.length - 1] === dialogs[dialogs.length - 1],\n        count,\n        dialogs: slicedDialogs\n      };\n    };\n\n    let promise: Promise<ReturnType<typeof processResult>>, params: any;\n    if(peerId) {\n      promise = this.apiManager.invokeApiSingleProcess({\n        method: 'channels.getForumTopics',\n        params: params = {\n          channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\n          limit: useLimit,\n          offset_date: offsetDate,\n          offset_id: offsetId,\n          offset_topic: 0\n        },\n        options: {\n          // timeout: APITIMEOUT,\n          noErrorBox: true\n        },\n        processResult: (result) => {\n          result = this.dialogsStorage.processTopics(peerId, result);\n          return processResult(result);\n        }\n      });\n    } else {\n      // ! ВНИМАНИЕ: ОЧЕНЬ СЛОЖНАЯ ЛОГИКА:\n      // ! если делать запрос сначала по папке 0, потом по папке 1, по индексу 0 в массиве будет один и тот же диалог, с dialog.pFlags.pinned, ЛОЛ???\n      // ! т.е., с запросом folder_id: 1, и exclude_pinned: 0, в результате будут ещё и закреплённые с папки 0\n      promise = this.apiManager.invokeApiSingleProcess({\n        method: 'messages.getDialogs',\n        params: params = {\n          folder_id: folderId,\n          offset_date: offsetDate,\n          offset_id: offsetId,\n          offset_peer: this.appPeersManager.getInputPeerById(offsetPeerId),\n          limit: useLimit,\n          hash: '0'\n        },\n        options: {\n          // timeout: APITIMEOUT,\n          noErrorBox: true\n        },\n        processResult\n      });\n    }\n\n    return promise;\n  }\n\n  public async forwardMessages(peerId: PeerId, fromPeerId: PeerId, mids: number[], options: MessageSendingParams & Partial<{\n    withMyScore: true,\n    dropAuthor: boolean,\n    dropCaptions: boolean\n  }> = {}) {\n    delete options.replyToMsgId;\n    delete options.threadId;\n\n    peerId = this.appPeersManager.getPeerMigratedTo(peerId) || peerId;\n    mids = mids.slice().sort((a, b) => a - b);\n\n    for(let i = 0, length = mids.length; i < length; ++i) {\n      const mid = mids[i];\n      const originalMessage = this.getMessageByPeer(fromPeerId, mid) as Message.message;\n      if(originalMessage.pFlags.is_outgoing) { // this can happen when forwarding a changelog\n        this.sendText(peerId, originalMessage.message, {\n          entities: originalMessage.entities,\n          scheduleDate: options.scheduleDate,\n          silent: options.silent\n        });\n\n        mids.splice(i--, 1);\n        --length;\n      }\n    }\n\n    if(!mids.length) {\n      return Promise.resolve();\n    }\n\n    const config = await this.apiManager.getConfig();\n    const overflowMids = mids.splice(config.forwarded_count_max, mids.length - config.forwarded_count_max);\n\n    if(options.dropCaptions) {\n      options.dropAuthor = true;\n    }\n\n    const groups: {\n      [groupId: string]: {\n        tempId: string,\n        messages: Message.message[]\n      }\n    } = {};\n\n    const newMids: number[] = [];\n    const newMessages = mids.map((mid) => {\n      const originalMessage = this.getMessageByPeer(fromPeerId, mid) as Message.message;\n      const message: Message.message = this.generateOutgoingMessage(peerId, options);\n      newMids.push(message.id);\n\n      const keys: Array<keyof Message.message> = [\n        'entities',\n        'media'\n        // 'reply_markup'\n      ];\n\n      if(!options.dropAuthor) {\n        message.fwd_from = this.generateForwardHeader(peerId, originalMessage);\n        keys.push('views', 'forwards');\n\n        if(message.fwd_from?.from_name && peerId === this.appPeersManager.peerId) {\n          delete message.from_id;\n        }\n      }\n\n      if(!options.dropCaptions || !originalMessage.media) {\n        keys.push('message');\n      }\n\n      const replyToMid = originalMessage.reply_to?.reply_to_msg_id;\n      const replyToMessageIdx = mids.indexOf(replyToMid);\n      if(replyToMid && replyToMessageIdx !== -1) {\n        const newReplyToMid = newMids[replyToMessageIdx];\n        message.reply_to = {\n          _: 'messageReplyHeader',\n          reply_to_msg_id: newReplyToMid,\n          pFlags: {}\n        };\n\n        /* this.invokeAfterMessageIsSent(newReplyToMid, 'reply', async(originalMessage) => {\n          message.reply_to.reply_to_msg_id = originalMessage.mid;\n        }); */\n      }\n\n      keys.forEach((key) => {\n        // @ts-ignore\n        message[key] = copy(originalMessage[key]);\n      });\n\n      const document = (message.media as MessageMedia.messageMediaDocument)?.document as MyDocument;\n      if(document) {\n        const types: MyDocument['type'][] = ['round', 'voice'];\n        if(types.includes(document.type)) {\n          (message as MyMessage).pFlags.media_unread = true;\n        }\n\n        if(document.sticker && !this.rootScope.premium) {\n          const effectThumb = getStickerEffectThumb(document);\n          if(effectThumb) {\n            (message.media as MessageMedia.messageMediaDocument).pFlags.nopremium = true;\n          }\n        }\n      }\n\n      if(originalMessage.grouped_id) {\n        const group = groups[originalMessage.grouped_id] ??= {tempId: '' + ++this.groupedTempId, messages: []};\n        group.messages.push(message);\n      }\n\n      return message;\n    });\n\n    for(const groupId in groups) {\n      const group = groups[groupId];\n      if(group.messages.length > 1) {\n        group.messages.forEach((message) => {\n          message.grouped_id = group.tempId;\n        });\n      }\n    }\n\n    newMessages.forEach((message) => {\n      this.beforeMessageSending(message, {\n        isScheduled: !!options.scheduleDate || undefined,\n        sequential: true\n      });\n    });\n\n    const sentRequestOptions: PendingAfterMsg = {};\n    if(this.pendingAfterMsgs[peerId]) {\n      sentRequestOptions.afterMessageId = this.pendingAfterMsgs[peerId].messageId;\n    }\n\n    const promise = /* true ? Promise.resolve() :  */this.apiManager.invokeApiAfter('messages.forwardMessages', {\n      from_peer: this.appPeersManager.getInputPeerById(fromPeerId),\n      id: mids.map((mid) => getServerMessageId(mid)),\n      random_id: newMessages.map((message) => message.random_id),\n      to_peer: this.appPeersManager.getInputPeerById(peerId),\n      with_my_score: options.withMyScore,\n      silent: options.silent,\n      schedule_date: options.scheduleDate,\n      drop_author: options.dropAuthor,\n      drop_media_captions: options.dropCaptions,\n      send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined\n    }, sentRequestOptions).then((updates) => {\n      this.log('forwardMessages updates:', updates);\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    }, (error: ApiError) => {\n      this.onMessagesSendError(newMessages, error);\n      throw error;\n    }).finally(() => {\n      if(this.pendingAfterMsgs[peerId] === sentRequestOptions) {\n        delete this.pendingAfterMsgs[peerId];\n      }\n    });\n\n    this.pendingAfterMsgs[peerId] = sentRequestOptions;\n\n    const promises: (typeof promise)[] = [promise];\n    if(overflowMids.length) {\n      promises.push(this.forwardMessages(peerId, fromPeerId, overflowMids, options));\n    }\n\n    return Promise.all(promises).then(noop);\n  }\n\n  public generateEmptyMessage(mid: number): Message.message | Message.messageService {\n    return undefined;\n    // return {\n    //   _: 'messageEmpty',\n    //   id: getServerMessageId(mid),\n    //   mid,\n    //   deleted: true,\n    //   pFlags: {}\n    // };\n  }\n\n  private onMessagesSendError(messages: Message.message[], error?: ApiError) {\n    messages.forEach((message) => {\n      if(message.error === error) {\n        return;\n      }\n\n      if(error) {\n        message.error = error;\n        this.rootScope.dispatchEvent('message_error', {storageKey: message.storageKey, tempId: message.mid, error});\n\n        const dialog = this.getDialogOnly(message.peerId);\n        if(dialog) {\n          this.rootScope.dispatchEvent('dialog_unread', {peerId: message.peerId, dialog});\n        }\n      } else {\n        delete message.error;\n      }\n    });\n  }\n\n  public getMessagesStorageByKey(key: MessagesStorageKey) {\n    const s = key.split('_');\n    const peerId: PeerId = +s[0];\n    const type: MessagesStorageType = s[1] as any;\n    return type === 'scheduled' ? this.getScheduledMessagesStorage(peerId) : this.getHistoryMessagesStorage(peerId);\n  }\n\n  public getMessageFromStorage(storage: MessagesStorage | MessagesStorageKey, mid: number) {\n    if(typeof(storage) === 'string') {\n      storage = this.getMessagesStorageByKey(storage);\n    }\n\n    return storage && storage.get(mid)/*  || this.generateEmptyMessage(mid) */;\n  }\n\n  private createMessageStorage(peerId: PeerId, type: MessagesStorageType) {\n    const storage: MessagesStorage = new Map() as any;\n    storage.peerId = peerId;\n    storage.type = type;\n    storage.key = `${peerId}_${type}`;\n\n    /* let num = 0;\n    Object.defineProperty(storage, 'num', {\n      get: () => ++num,\n      set: (_num: number) => num = _num,\n      enumerable: false\n    });\n\n    Object.defineProperty(storage, 'generateIndex', {\n      value: (message: any) => {\n        if(message.index === undefined) {\n          message.index = (message.date * 0x10000) + (storage.num & 0xFFFF);\n        }\n      },\n      enumerable: false\n    }); */\n\n    return storage;\n  }\n\n  public getHistoryMessagesStorage(peerId: PeerId) {\n    return this.messagesStorageByPeerId[peerId] ??= this.createMessageStorage(peerId, 'history');\n  }\n\n  public getMessagesStorage(key: MessagesStorageKey | MessagesStorage): MessagesStorage {\n    if(typeof(key) === 'object') {\n      return key;\n    } else {\n      return this.getMessagesStorageByKey(key);\n    }\n  }\n\n  public getMessageById(messageId: number) {\n    for(const peerId in this.messagesStorageByPeerId) {\n      if(this.appPeersManager.isChannel(peerId.toPeerId())) {\n        continue;\n      }\n\n      const message = this.messagesStorageByPeerId[peerId].get(messageId);\n      if(message) {\n        return message;\n      }\n    }\n\n    return this.getMessageFromStorage(null, messageId);\n  }\n\n  public getMessageByPeer(peerId: PeerId, messageId: number) {\n    if(!peerId) {\n      return this.getMessageById(messageId);\n    }\n\n    return this.getMessageFromStorage(this.getHistoryMessagesStorage(peerId), messageId);\n  }\n\n  public getMessagePeer(message: any): PeerId {\n    const toId = message.peer_id && this.appPeersManager.getPeerId(message.peer_id) || NULL_PEER_ID;\n\n    return toId;\n  }\n\n  public getDialogOnly(peerId: PeerId) {\n    return this.dialogsStorage.getDialogOnly(peerId);\n  }\n\n  public cantForwardDeleteMids(storageKey: MessagesStorageKey, mids: number[]) {\n    const storage = this.getMessagesStorage(storageKey);\n    let cantForward = !mids.length, cantDelete = !mids.length;\n    for(const mid of mids) {\n      const message = this.getMessageFromStorage(storage, mid);\n      if(!cantForward) {\n        cantForward = !this.canForward(message);\n      }\n\n      if(!cantDelete) {\n        cantDelete = !this.canDeleteMessage(message);\n      }\n\n      if(cantForward && cantDelete) break;\n    }\n\n    return {cantForward, cantDelete};\n  }\n\n  public reloadConversationOrTopic(peerId: PeerId, threadId?: number) {\n    if(threadId) {\n      this.dialogsStorage.getForumTopicById(peerId, threadId);\n    } else {\n      this.reloadConversation(peerId);\n    }\n  }\n\n  public reloadConversation(inputPeer?: PeerId | InputPeer): CancellablePromise<Dialog>;\n  public reloadConversation(inputPeer: PeerId | InputPeer) {\n    let promise: CancellablePromise<Dialog>;\n    if(inputPeer !== undefined) {\n      const peerId = this.appPeersManager.getPeerId(inputPeer);\n      this.log.warn('reloadConversation', peerId);\n\n      let obj = this.reloadConversationsPeers.get(peerId);\n      if(obj) {\n        promise = obj.promise;\n      }\n\n      if(promise) {\n        return promise;\n      }\n\n      promise = deferredPromise();\n      this.reloadConversationsPeers.set(peerId, obj = {\n        inputDialogPeer: this.appPeersManager.getInputDialogPeerById(inputPeer),\n        promise\n      });\n    }\n\n    if(this.reloadConversationsPromise) {\n      return promise || this.reloadConversationsPromise;\n    }\n\n    this.reloadConversationsPromise = pause(0).then(() => {\n      const inputDialogPeers: InputDialogPeer[] = [];\n      const promises: {[peerId: string]: typeof promise} = {};\n      for(const [peerId, {inputDialogPeer, promise}] of this.reloadConversationsPeers) {\n        inputDialogPeers.push(inputDialogPeer);\n        promises[peerId] = promise;\n      }\n\n      const fullfillLeft = () => {\n        for(const peerId in promises) {\n          this.reloadConversationsPeers.delete(+peerId);\n          promises[peerId].resolve(undefined);\n        }\n      };\n\n      const invoke = async() => {\n        for(;;) {\n          const result = await this.apiManager.invokeApi('messages.getPeerDialogs', {peers: inputDialogPeers});\n          const currentState = this.apiUpdatesManager.updatesState;\n          const {state} = result;\n          if(currentState.pts && currentState.pts !== state.pts) {\n            await pause(500);\n            continue;\n          }\n\n          return result;\n        }\n      };\n\n      return invoke().then((result) => {\n        for(const peerId in promises) {\n          this.reloadConversationsPeers.delete(+peerId);\n        }\n\n        this.dialogsStorage.applyDialogs(result);\n\n        result.dialogs.forEach((dialog) => {\n          const peerId = dialog.peerId;\n          if(peerId) {\n            promises[peerId].resolve(dialog as Dialog);\n            delete promises[peerId];\n          }\n        });\n      }, noop).then(() => {\n        fullfillLeft();\n\n        this.reloadConversationsPromise = null;\n        if(this.reloadConversationsPeers.size) {\n          this.reloadConversation();\n        }\n      });\n    });\n\n    return promise || this.reloadConversationsPromise;\n  }\n\n  private doFlushHistory(peerId: PeerId, just_clear?: boolean, revoke?: boolean, threadId?: number): Promise<true> {\n    let promise: Promise<true>;\n    const processResult = (affectedHistory: MessagesAffectedHistory) => {\n      this.apiUpdatesManager.processUpdateMessage({\n        _: 'updateShort',\n        update: {\n          _: 'updatePts',\n          pts: affectedHistory.pts,\n          pts_count: affectedHistory.pts_count\n        }\n      });\n\n      if(!affectedHistory.offset) {\n        return true;\n      }\n\n      return this.doFlushHistory(peerId, just_clear, revoke, threadId);\n    };\n\n    if(!threadId) {\n      promise = this.apiManager.invokeApiSingleProcess({\n        method: 'messages.deleteHistory',\n        params: {\n          just_clear,\n          revoke,\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          max_id: 0\n        },\n        processResult\n      });\n    } else {\n      promise = this.apiManager.invokeApiSingleProcess({\n        method: 'channels.deleteTopicHistory',\n        params: {\n          channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\n          top_msg_id: getServerMessageId(threadId)\n        },\n        processResult\n      });\n    }\n\n    return promise;\n  }\n\n  public async flushHistory(peerId: PeerId, justClear?: boolean, revoke?: boolean, threadId?: number) {\n    if(this.appPeersManager.isChannel(peerId) && !threadId) {\n      const promise = this.getHistory(peerId, 0, 1);\n\n      const historyResult = await promise;\n\n      const channelId = peerId.toChatId();\n      const maxId = historyResult.history[0] || 0;\n      return this.apiManager.invokeApiSingle('channels.deleteHistory', {\n        channel: this.appChatsManager.getChannelInput(channelId),\n        max_id: getServerMessageId(maxId)\n      }).then((bool) => {\n        if(bool) {\n          this.apiUpdatesManager.processLocalUpdate({\n            _: 'updateChannelAvailableMessages',\n            channel_id: channelId,\n            available_min_id: maxId\n          });\n        }\n\n        return bool;\n      });\n    }\n\n    return this.doFlushHistory(peerId, justClear, revoke, threadId).then(() => {\n      if(!threadId) {\n        this.flushStoragesByPeerId(peerId);\n      }\n\n      if(justClear) {\n        this.rootScope.dispatchEvent('dialog_flush', {peerId, dialog: this.getDialogOnly(peerId)});\n      } else {\n        const key = this.getTypingKey(peerId, threadId);\n        delete this.notificationsToHandle[key];\n        delete this.typings[key];\n\n        if(!threadId) {\n          const c = this.reloadConversationsPeers.get(peerId);\n          if(c) {\n            this.reloadConversationsPeers.delete(peerId);\n            c.promise.resolve(undefined);\n          }\n        }\n\n        this.dialogsStorage.dropDialogOnDeletion(peerId, threadId);\n      }\n    });\n  }\n\n  private flushStoragesByPeerId(peerId: PeerId) {\n    [\n      this.historiesStorage,\n      this.threadsStorage,\n      this.searchesStorage,\n      this.pendingAfterMsgs,\n      this.pendingTopMsgs\n    ].forEach((s) => {\n      delete s[peerId];\n    });\n\n    for(const key in this.pinnedMessages) {\n      if(+key === peerId || key.startsWith(peerId + '_')) {\n        delete this.pinnedMessages[key];\n      }\n    }\n\n    const needSingleMessages = this.needSingleMessages.get(peerId);\n    if(needSingleMessages) {\n      for(const [mid, promise] of needSingleMessages) {\n        promise.resolve(this.generateEmptyMessage(mid));\n      }\n\n      needSingleMessages.clear();\n    }\n\n    [\n      this.messagesStorageByPeerId,\n      this.scheduledMessagesStorage\n    ].forEach((s) => {\n      const ss = s[peerId];\n      if(ss) {\n        ss.clear();\n      }\n    });\n\n    this.dialogsStorage.flushForumTopicsCache(peerId);\n  }\n\n  public hidePinnedMessages(peerId: PeerId) {\n    return Promise.all([\n      this.appStateManager.getState(),\n      this.getPinnedMessage(peerId)\n    ])\n    .then(([state, pinned]) => {\n      state.hiddenPinnedMessages[peerId] = pinned.maxId;\n      this.rootScope.dispatchEvent('peer_pinned_hidden', {peerId, maxId: pinned.maxId});\n    });\n  }\n\n  public getPinnedMessagesKey(peerId: PeerId, threadId?: number) {\n    return peerId + (threadId ? '_' + threadId : '');\n  }\n\n  public getPinnedMessage(peerId: PeerId, threadId?: number) {\n    const p = this.pinnedMessages[this.getPinnedMessagesKey(peerId, threadId)] ??= {};\n    if(p.promise) return p.promise;\n    else if(p.maxId) return Promise.resolve(p);\n\n    return p.promise = this.getSearch({\n      peerId,\n      inputFilter: {_: 'inputMessagesFilterPinned'},\n      maxId: 0,\n      limit: 1,\n      threadId\n    }).then((result) => {\n      p.count = result.count;\n      p.maxId = result.history[0]?.mid;\n      return p;\n    }).finally(() => {\n      delete p.promise;\n    });\n  }\n\n  public getPinnedMessagesCount(peerId: PeerId, threadId?: number) {\n    return this.pinnedMessages[this.getPinnedMessagesKey(peerId, threadId)]?.count;\n  }\n\n  public getPinnedMessagesMaxId(peerId: PeerId, threadId?: number) {\n    return this.pinnedMessages[this.getPinnedMessagesKey(peerId, threadId)]?.maxId;\n  }\n\n  public updatePinnedMessage(peerId: PeerId, mid: number, unpin?: boolean, silent?: boolean, pm_oneside?: boolean) {\n    return this.apiManager.invokeApi('messages.updatePinnedMessage', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      unpin,\n      silent,\n      pm_oneside,\n      id: getServerMessageId(mid)\n    }).then((updates) => {\n      // this.log('pinned updates:', updates);\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public unpinAllMessages(peerId: PeerId): Promise<boolean> {\n    return this.apiManager.invokeApiSingle('messages.unpinAllMessages', {\n      peer: this.appPeersManager.getInputPeerById(peerId)\n    }).then((affectedHistory) => {\n      this.apiUpdatesManager.processUpdateMessage({\n        _: 'updateShort',\n        update: {\n          _: 'updatePts',\n          pts: affectedHistory.pts,\n          pts_count: affectedHistory.pts_count\n        }\n      });\n\n      if(!affectedHistory.offset) {\n        const storage = this.getHistoryMessagesStorage(peerId);\n        storage.forEach((message) => {\n          if((message as Message.message).pFlags.pinned) {\n            delete (message as Message.message).pFlags.pinned;\n          }\n        });\n\n        this.rootScope.dispatchEvent('peer_pinned_messages', {peerId, unpinAll: true});\n        delete this.pinnedMessages[this.getPinnedMessagesKey(peerId)];\n\n        return true;\n      }\n\n      return this.unpinAllMessages(peerId);\n    });\n  }\n\n  public getAlbumText(grouped_id: string) {\n    const group = this.groupedMessagesStorage[grouped_id];\n    return getAlbumText(Array.from(group.values()) as Message.message[]);\n  }\n\n  public getGroupsFirstMessage(message: Message.message) {\n    if(!message?.grouped_id) return message;\n\n    const storage = this.groupedMessagesStorage[message.grouped_id];\n    let minMid = Number.MAX_SAFE_INTEGER;\n    for(const [mid, message] of storage) {\n      if(message.mid < minMid) {\n        minMid = message.mid;\n      }\n    }\n\n    return this.getMessageFromStorage(storage, minMid) as Message.message;\n  }\n\n  public getMidsByAlbum(groupedId: string, sort: 'asc' | 'desc' = 'asc') {\n    return getObjectKeysAndSort(this.groupedMessagesStorage[groupedId], sort);\n  }\n\n  public getMessagesByAlbum(groupedId: string) {\n    const mids = this.getMidsByAlbum(groupedId, 'asc');\n    const storage = this.groupedMessagesStorage[groupedId];\n    return mids.map((mid) => this.getMessageFromStorage(storage, mid) as Message.message);\n  }\n\n  public getMidsByMessage(message: Message) {\n    if(!message) return [];\n    else if((message as Message.message).grouped_id) return this.getMidsByAlbum((message as Message.message).grouped_id);\n    else return [message.mid];\n  }\n\n  public filterMessages(message: MyMessage, verify: (message: MyMessage) => boolean) {\n    const out: MyMessage[] = [];\n    if((message as Message.message).grouped_id) {\n      const storage = this.groupedMessagesStorage[(message as Message.message).grouped_id];\n      for(const [mid, message] of storage) {\n        if(verify(message)) {\n          out.push(message);\n        }\n      }\n    } else {\n      if(verify(message)) {\n        out.push(message);\n      }\n    }\n\n    return out;\n  }\n\n  public generateTempMessageId(peerId: PeerId) {\n    const dialog = this.getDialogOnly(peerId);\n    return this.appMessagesIdsManager.generateTempMessageId(dialog?.top_message || 0);\n  }\n\n  public setMessageUnreadByDialog(message: MyMessage, dialog: Dialog | ForumTopic = this.getDialogOnly(message.peerId)) {\n    if(dialog && message.mid) {\n      if(message.mid > dialog[message.pFlags.out ?\n        'read_outbox_max_id' :\n        'read_inbox_max_id']) {\n        message.pFlags.unread = true;\n      }\n    }\n  }\n\n  public saveMessage(message: Message, options: Partial<{\n    storage: MessagesStorage,\n    isScheduled: true,\n    isOutgoing: true,\n    // isNew: boolean, // * new - from update\n  }> = {}) {\n    if(!message || message._ === 'messageEmpty') {\n      return;\n    }\n\n    message.pFlags ??= {};\n\n    // * exclude from state\n    // defineNotNumerableProperties(message, ['rReply', 'mid', 'savedFrom', 'fwdFromId', 'fromId', 'peerId', 'reply_to_mid', 'viaBotId']);\n\n    const peerId = this.getMessagePeer(message);\n    const storage = options.storage || this.getHistoryMessagesStorage(peerId);\n    const isChannel = message.peer_id._ === 'peerChannel';\n    const isBroadcast = isChannel && this.appChatsManager.isBroadcast(peerId.toChatId());\n    const isMessage = message._ === 'message';\n\n    if(options.isOutgoing) {\n      message.pFlags.is_outgoing = true;\n    }\n\n    const mid = generateMessageId(message.id);\n    message.mid = mid;\n\n    if(isMessage) {\n      if(options.isScheduled) {\n        message.pFlags.is_scheduled = true;\n      }\n\n      if(message.grouped_id) {\n        const storage = this.groupedMessagesStorage[message.grouped_id] ??= this.createMessageStorage(peerId, 'grouped');\n        storage.set(mid, message);\n      }\n\n      if(message.via_bot_id) {\n        // ! WARNING\n        message.viaBotId = message.via_bot_id as any;\n      }\n    }\n\n    // this.log(dT(), 'msg unread', mid, apiMessage.pFlags.out, dialog && dialog[apiMessage.pFlags.out ? 'read_outbox_max_id' : 'read_inbox_max_id'])\n\n    const replyTo = message.reply_to;\n    if(replyTo) {\n      if(replyTo.reply_to_msg_id) {\n        replyTo.reply_to_msg_id = message.reply_to_mid = generateMessageId(replyTo.reply_to_msg_id);\n      }\n\n      if(replyTo.reply_to_top_id) {\n        replyTo.reply_to_top_id = generateMessageId(replyTo.reply_to_top_id);\n      }\n    }\n\n    const replies = isMessage && message.replies;\n    if(replies) {\n      if(replies.max_id) replies.max_id = generateMessageId(replies.max_id);\n      if(replies.read_max_id) replies.read_max_id = generateMessageId(replies.read_max_id);\n    }\n\n    const overwriting = !!peerId;\n    if(!overwriting) {\n      message.date -= this.timeManager.getServerTimeOffset();\n    }\n\n    // storage.generateIndex(message);\n    const myId = this.appPeersManager.peerId;\n\n    const fwdHeader = isMessage && (message as Message.message).fwd_from;\n\n    message.peerId = peerId;\n    if(peerId === myId/*  && !message.from_id && !message.fwd_from */) {\n      message.fromId = fwdHeader ? (fwdHeader.from_id ? this.appPeersManager.getPeerId(fwdHeader.from_id) : NULL_PEER_ID) : myId;\n    } else {\n      // message.fromId = message.pFlags.post || (!message.pFlags.out && !message.from_id) ? peerId : appPeersManager.getPeerId(message.from_id);\n      message.fromId = message.pFlags.post || !message.from_id ? peerId : this.appPeersManager.getPeerId(message.from_id);\n    }\n\n    this.setMessageUnreadByDialog(message);\n\n    if(fwdHeader) {\n      // if(peerId === myID) {\n      if(fwdHeader.saved_from_msg_id) fwdHeader.saved_from_msg_id = generateMessageId(fwdHeader.saved_from_msg_id);\n      if(fwdHeader.channel_post) fwdHeader.channel_post = generateMessageId(fwdHeader.channel_post);\n\n      const peer = fwdHeader.saved_from_peer || fwdHeader.from_id;\n      const msgId = fwdHeader.saved_from_msg_id || fwdHeader.channel_post;\n      if(peer && msgId) {\n        const savedFromPeerId = this.appPeersManager.getPeerId(peer);\n        const savedFromMid = generateMessageId(msgId);\n        message.savedFrom = savedFromPeerId + '_' + savedFromMid;\n      }\n\n      /* if(peerId.isAnyChat() || peerId === myID) {\n          message.fromId = appPeersManager.getPeerID(!message.from_id || deepEqual(message.from_id, fwdHeader.from_id) ? fwdHeader.from_id : message.from_id);\n        } */\n      /* } else {\n        apiMessage.fwdPostID = fwdHeader.channel_post;\n      } */\n\n      message.fwdFromId = this.appPeersManager.getPeerId(fwdHeader.from_id);\n\n      if(!overwriting) {\n        fwdHeader.date -= this.timeManager.getServerTimeOffset();\n      }\n    }\n\n    const mediaContext: ReferenceContext = {\n      type: 'message',\n      peerId,\n      messageId: mid\n    };\n\n    /* if(isMessage) {\n      const entities = message.entities;\n      if(entities && entities.find((entity) => entity._ === 'messageEntitySpoiler')) {\n        message.media = {_: 'messageMediaUnsupported'};\n      }\n    } */\n\n    let unsupported = false;\n    const media = isMessage && message.media;\n    if(media) {\n      switch(media._) {\n        case 'messageMediaEmpty': {\n          delete message.media;\n          break;\n        }\n\n        case 'messageMediaPhoto': {\n          if(media.ttl_seconds) {\n            unsupported = true;\n          } else {\n            media.photo = this.appPhotosManager.savePhoto(media.photo, mediaContext);\n          }\n\n          if(!(media as MessageMedia.messageMediaPhoto).photo) { // * found this bug on test DC\n            delete message.media;\n          }\n\n          break;\n        }\n\n        case 'messageMediaPoll': {\n          const result = this.appPollsManager.savePoll(media.poll, media.results, message);\n          media.poll = result.poll;\n          media.results = result.results;\n          break;\n        }\n\n        case 'messageMediaDocument': {\n          if(media.ttl_seconds) {\n            unsupported = true;\n          } else {\n            const originalDoc = media.document;\n            media.document = this.appDocsManager.saveDoc(originalDoc, mediaContext); // 11.04.2020 warning\n\n            if(!media.document && originalDoc._ !== 'documentEmpty') {\n              unsupported = true;\n            }\n          }\n\n          break;\n        }\n\n        case 'messageMediaWebPage': {\n          const messageKey = this.appWebPagesManager.getMessageKeyForPendingWebPage(peerId, mid, options.isScheduled);\n          media.webpage = this.appWebPagesManager.saveWebPage(media.webpage, messageKey, mediaContext);\n\n          if(!media.webpage) {\n            delete message.media;\n          }\n\n          break;\n        }\n\n        /* case 'messageMediaGame':\n          AppGamesManager.saveGame(apiMessage.media.game, apiMessage.mid, mediaContext);\n          apiMessage.media.handleMessage = true;\n          break; */\n\n        case 'messageMediaInvoice': {\n          media.photo = this.appWebDocsManager.saveWebDocument(media.photo);\n          const extendedMedia = media.extended_media;\n          if(extendedMedia?._ === 'messageExtendedMedia') {\n            const extendedMediaMedia = extendedMedia.media;\n            (extendedMediaMedia as MessageMedia.messageMediaPhoto).photo = this.appPhotosManager.savePhoto((extendedMediaMedia as MessageMedia.messageMediaPhoto).photo, mediaContext);\n            (extendedMediaMedia as MessageMedia.messageMediaDocument).document = this.appDocsManager.saveDoc((extendedMediaMedia as MessageMedia.messageMediaDocument).document, mediaContext);\n          }\n          break;\n        }\n\n        case 'messageMediaUnsupported': {\n          unsupported = true;\n          break;\n        }\n      }\n    }\n\n    // if(isMessage && !unsupported && message.entities) {\n    //   unsupported = message.entities.some((entity) => entity._ === 'messageEntityCustomEmoji');\n    // }\n\n    if(isMessage && unsupported) {\n      message.media = {_: 'messageMediaUnsupported'};\n      message.message = '';\n      delete message.entities;\n      delete message.totalEntities;\n    }\n\n    if(!isMessage && message.action) {\n      const action = message.action as MessageAction;\n      const suffix = message.fromId === this.appUsersManager.getSelf().id ? 'You' : '';\n      let migrateFrom: PeerId, migrateTo: PeerId;\n\n      if((action as MessageAction.messageActionChatEditPhoto).photo) {\n        (action as MessageAction.messageActionChatEditPhoto).photo = this.appPhotosManager.savePhoto((action as MessageAction.messageActionChatEditPhoto).photo, mediaContext);\n      }\n\n      if((action as any).document) {\n        (action as any).document = this.appDocsManager.saveDoc((action as any).photo, mediaContext);\n      }\n\n      switch(action._) {\n        // case 'messageActionChannelEditPhoto':\n        case 'messageActionChatEditPhoto':\n          // action.photo = appPhotosManager.savePhoto(action.photo, mediaContext);\n          if((action.photo as Photo.photo)?.video_sizes) {\n            // @ts-ignore\n            action._ = isBroadcast ? 'messageActionChannelEditVideo' : 'messageActionChatEditVideo';\n          } else {\n            if(isBroadcast) { // ! messageActionChannelEditPhoto не существует в принципе, это используется для перевода.\n              // @ts-ignore\n              action._ = 'messageActionChannelEditPhoto';\n            }\n          }\n          break;\n\n        case 'messageActionGroupCall': {\n          // assumeType<MessageAction.messageActionGroupCall>(action);\n\n          this.appGroupCallsManager.saveGroupCall(action.call);\n\n          let type: string;\n          if(action.duration === undefined) {\n            type = 'started';\n          } else {\n            type = 'ended'\n          }\n\n          if(!isBroadcast) {\n            type += '_by' + suffix;\n          }\n\n          // @ts-ignore\n          action.type = type;\n\n          break;\n        }\n\n        case 'messageActionChatEditTitle':\n          /* if(options.isNew) {\n            const chat = appChatsManager.getChat(peerId.toChatId());\n            chat.title = action.title;\n            appChatsManager.saveApiChat(chat, true);\n          } */\n\n          if(isBroadcast) {\n            // @ts-ignore\n            action._ = 'messageActionChannelEditTitle';\n          }\n          break;\n\n        case 'messageActionChatDeletePhoto':\n          if(isBroadcast) {\n            // @ts-ignore\n            action._ = 'messageActionChannelDeletePhoto';\n          }\n          break;\n\n        case 'messageActionChatAddUser':\n          if(action.users.length === 1) {\n            // @ts-ignore\n            action.user_id = action.users[0];\n            // @ts-ignore\n            if(message.fromId === action.user_id) {\n              if(isChannel) {\n                // @ts-ignore\n                action._ = 'messageActionChatJoined' + suffix;\n              } else {\n                // @ts-ignore\n                action._ = 'messageActionChatReturn' + suffix;\n              }\n            }\n          } else if(action.users.length > 1) {\n            // @ts-ignore\n            action._ = 'messageActionChatAddUsers';\n          }\n          break;\n\n        case 'messageActionChatDeleteUser':\n          if(message.fromId === action.user_id) {\n            // @ts-ignore\n            action._ = 'messageActionChatLeave' + suffix;\n          }\n          break;\n\n        case 'messageActionChannelMigrateFrom':\n          migrateFrom = action.chat_id.toPeerId(true);\n          migrateTo = peerId;\n          break\n\n        case 'messageActionChatMigrateTo':\n          migrateFrom = peerId;\n          migrateTo = action.channel_id.toPeerId(true);\n          break;\n\n        case 'messageActionHistoryClear':\n          // apiMessage.deleted = true;\n          message.clear_history = true;\n          delete message.pFlags.out;\n          delete message.pFlags.unread;\n          break;\n\n        case 'messageActionPhoneCall':\n          // @ts-ignore\n          action.type =\n            (action.pFlags.video ? 'video_' : '') +\n            (action.duration !== undefined ? (message.pFlags.out ? 'out_' : 'in_') : '') +\n            (\n              action.duration !== undefined ? 'ok' : (\n                action.reason._ === 'phoneCallDiscardReasonMissed' ?\n                  'missed' :\n                  'cancelled'\n              )\n            );\n          break;\n      }\n\n      if(migrateFrom &&\n          migrateTo &&\n          !this.migratedFromTo[migrateFrom] &&\n          !this.migratedToFrom[migrateTo]) {\n        this.migrateChecks(migrateFrom, migrateTo);\n      }\n    }\n\n    /* if(message.grouped_id) {\n      if(!groups) {\n        groups = new Set();\n      }\n\n      groups.add(message.grouped_id);\n    } else {\n      message.rReply = this.getRichReplyText(message);\n    } */\n\n    if(isMessage && message.message.length && !message.totalEntities) {\n      this.wrapMessageEntities(message);\n    }\n\n    storage.set(mid, message);\n\n    return message;\n  }\n\n  public saveMessages(messages: any[], options: Partial<{\n    storage: MessagesStorage,\n    isScheduled: true,\n    isOutgoing: true,\n    // isNew: boolean, // * new - from update\n  }> = {}): (Message.message | Message.messageService)[] {\n    if((messages as any).saved) return messages;\n    (messages as any).saved = true;\n    messages.forEach((message, idx, arr) => {\n      arr[idx] = this.saveMessage(message, options);\n    });\n\n    return messages;\n  }\n\n  public async getFirstMessageToEdit(peerId: PeerId, threadId?: number) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    const slice = historyStorage.history.slice;\n    if(slice.isEnd(SliceEnd.Bottom) && slice.length) {\n      let goodMessage: Message.message | Message.messageService;\n      const myPeerId = this.appPeersManager.peerId;\n      for(const mid of slice) {\n        const message = this.getMessageByPeer(peerId, mid);\n        const good = myPeerId === peerId ? message.fromId === myPeerId : message.pFlags.out;\n\n        if(good) {\n          if(await this.canEditMessage(message, 'text')) {\n            goodMessage = message;\n            break;\n          }\n\n          // * this check will allow editing only last message\n          // break;\n        }\n      }\n\n      return goodMessage;\n    }\n  }\n\n  private wrapMessageEntities(message: Message.message) {\n    const apiEntities = message.entities ? message.entities.slice() : [];\n    message.message = fixEmoji(message.message, apiEntities);\n\n    const myEntities = parseEntities(message.message);\n    message.totalEntities = mergeEntities(apiEntities, myEntities); // ! only in this order, otherwise bold and emoji formatting won't work\n  }\n\n  public reportMessages(peerId: PeerId, mids: number[], reason: ReportReason['_'], message?: string) {\n    return this.apiManager.invokeApiSingle('messages.report', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: mids.map((mid) => getServerMessageId(mid)),\n      reason: {\n        _: reason\n      },\n      message\n    });\n  }\n\n  public startBot(botId: BotId, chatId?: ChatId, startParam?: string) {\n    const peerId = chatId ? chatId.toPeerId(true) : botId.toPeerId();\n    if(startParam) {\n      const randomId = randomLong();\n\n      return this.apiManager.invokeApi('messages.startBot', {\n        bot: this.appUsersManager.getUserInput(botId),\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        random_id: randomId,\n        start_param: startParam\n      }).then((updates) => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n      });\n    }\n\n    const str = '/start';\n    if(chatId) {\n      let promise: Promise<void>;\n      if(this.appChatsManager.isChannel(chatId)) {\n        promise = this.appChatsManager.inviteToChannel(chatId, [botId]);\n      } else {\n        promise = this.appChatsManager.addChatUser(chatId, botId, 0);\n      }\n\n      return promise.catch((error: ApiError) => {\n        if(error?.type == 'USER_ALREADY_PARTICIPANT') {\n          error.handled = true;\n          return;\n        }\n\n        throw error;\n      }).then(() => {\n        return this.sendText(peerId, str + '@' + this.appPeersManager.getPeerUsername(botId.toPeerId()));\n      });\n    }\n\n    return this.sendText(peerId, str);\n  }\n\n  public editPeerFolders(peerIds: PeerId[], folderId: number) {\n    this.apiManager.invokeApi('folders.editPeerFolders', {\n      folder_peers: peerIds.map((peerId) => {\n        return {\n          _: 'inputFolderPeer',\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          folder_id: folderId\n        };\n      })\n    }).then((updates) => {\n      // this.log('editPeerFolders updates:', updates);\n      this.apiUpdatesManager.processUpdateMessage(updates); // WARNING! возможно тут нужно добавлять channelId, и вызывать апдейт для каждого канала отдельно\n    });\n  }\n\n  public getFilter(filterId: number) {\n    return this.filtersStorage.getFilter(filterId);\n  }\n\n  public async toggleDialogPin(options: {\n    peerId: PeerId,\n    filterId?: number,\n    topicId?: number\n  }) {\n    const {peerId, topicId, filterId = topicId ? peerId : undefined} = options;\n    if(filterId === undefined) {\n      throw new Error('No filterId');\n    }\n\n    if(filterId > 1) {\n      return this.filtersStorage.toggleDialogPin(peerId, filterId);\n    }\n\n    const dialog = this.dialogsStorage.getDialogOrTopic(peerId, topicId);\n    if(!dialog) throw undefined;\n\n    const pinned = dialog.pFlags?.pinned ? undefined : true;\n\n    if(pinned) {\n      const max = await this.apiManager.getLimit(topicId ? 'topicPin' : (filterId === 1 ? 'folderPin' : 'pin'));\n      if(this.dialogsStorage.getPinnedOrders(filterId).length >= max) {\n        throw makeError(topicId ? 'PINNED_TOO_MUCH' : 'PINNED_DIALOGS_TOO_MUCH');\n      }\n    }\n\n    if(topicId) {\n      return this.appChatsManager.updatePinnedForumTopic(peerId.toChatId(), topicId, pinned);\n    }\n\n    return this.apiManager.invokeApi('messages.toggleDialogPin', {\n      peer: this.appPeersManager.getInputDialogPeerById(peerId),\n      pinned\n    }).then((bool) => {\n      const pFlags: Update.updateDialogPinned['pFlags'] = pinned ? {pinned} : {};\n      this.apiUpdatesManager.saveUpdate({\n        _: 'updateDialogPinned',\n        peer: this.appPeersManager.getDialogPeer(peerId),\n        folder_id: filterId,\n        pFlags\n      });\n    });\n  }\n\n  public markDialogUnread(peerId: PeerId, read?: true) {\n    const dialog = this.getDialogOnly(peerId);\n    if(!dialog) return Promise.reject();\n\n    const unread = read || dialog.pFlags?.unread_mark ? undefined : true;\n    return this.apiManager.invokeApi('messages.markDialogUnread', {\n      peer: this.appPeersManager.getInputDialogPeerById(peerId),\n      unread\n    }).then((bool) => {\n      if(bool) {\n        const pFlags: Update.updateDialogUnreadMark['pFlags'] = unread ? {unread} : {};\n        this.onUpdateDialogUnreadMark({\n          _: 'updateDialogUnreadMark',\n          peer: this.appPeersManager.getDialogPeer(peerId),\n          pFlags\n        });\n      }\n    });\n  }\n\n  public migrateChecks(migrateFrom: PeerId, migrateTo: PeerId) {\n    if(!this.migratedFromTo[migrateFrom] &&\n      !this.migratedToFrom[migrateTo] &&\n      this.appChatsManager.hasChat(migrateTo.toChatId())) {\n      const fromChat = this.appChatsManager.getChat(migrateFrom.toChatId()) as Chat.chat;\n      if(fromChat?.migrated_to && (fromChat.migrated_to as InputChannel.inputChannel).channel_id === migrateTo.toChatId()) {\n        this.migratedFromTo[migrateFrom] = migrateTo;\n        this.migratedToFrom[migrateTo] = migrateFrom;\n\n        this.rootScope.dispatchEvent('dialog_migrate', {migrateFrom, migrateTo});\n\n        this.dialogsStorage.dropDialogWithEvent(migrateFrom);\n      }\n    }\n  }\n\n  private canMessageBeEdited(message: Message, kind: 'text' | 'poll') {\n    if((message as Message.message)?.pFlags?.is_outgoing) {\n      return false;\n    }\n\n    const goodMedias = [\n      'messageMediaPhoto',\n      'messageMediaDocument',\n      'messageMediaWebPage'\n    ];\n\n    if(kind === 'poll') {\n      goodMedias.push('messageMediaPoll');\n    }\n\n    if(!message ||\n        message._ !== 'message' ||\n        message.deleted ||\n        message.fwd_from ||\n        message.via_bot_id ||\n        message.media && goodMedias.indexOf(message.media._) === -1 ||\n        message.fromId && this.appUsersManager.isBot(message.fromId)) {\n      return false;\n    }\n\n    if(message.media?._ === 'messageMediaDocument' &&\n        ((message.media.document as Document.document).sticker || (message.media.document as Document.document).type === 'round')) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public async canEditMessage(message: Message.message | Message.messageService, kind: 'text' | 'poll' = 'text') {\n    if(!message || !this.canMessageBeEdited(message, kind)) {\n      return false;\n    }\n\n    // * second rule for saved messages, because there is no 'out' flag\n    if(/* message.pFlags.out ||  */this.getMessagePeer(message) === this.appUsersManager.getSelf().id) {\n      return true;\n    }\n\n    const canEditMessageInPeer = this.appPeersManager.isBroadcast(message.peerId) ?\n      this.appChatsManager.hasRights(message.peerId.toChatId(), 'edit_messages') :\n      message.pFlags.out;\n\n    if(\n      !canEditMessageInPeer || (\n        message.peer_id._ !== 'peerChannel' &&\n        message.date < (tsNow(true) - (await this.apiManager.getConfig()).edit_time_limit) &&\n        (message as Message.message).media?._ !== 'messageMediaPoll'\n      )\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public canDeleteMessage(message: MyMessage) {\n    return message && (\n      message.peerId.isUser() ||\n      message.pFlags.out ||\n      this.appChatsManager.getChat(message.peerId.toChatId())._ === 'chat' ||\n      this.appChatsManager.hasRights(message.peerId.toChatId(), 'delete_messages')\n    ) && (!message.pFlags.is_outgoing || !!message.error);\n  }\n\n  public getReplyKeyboard(peerId: PeerId) {\n    return this.getHistoryStorage(peerId).replyMarkup;\n  }\n\n  public mergeReplyKeyboard(historyStorage: HistoryStorage, message: Message.messageService | Message.message) {\n    // this.log('merge', message.mid, message.reply_markup, historyStorage.reply_markup)\n    if(!message) {\n      return false;\n    }\n\n    const messageReplyMarkup = (message as Message.message).reply_markup;\n    if(!messageReplyMarkup &&\n      !message.pFlags?.out &&\n      !(message as Message.messageService).action) {\n      return false;\n    }\n\n    if(messageReplyMarkup?._ === 'replyInlineMarkup') {\n      return false;\n    }\n\n    const lastReplyMarkup = historyStorage.replyMarkup;\n    if(messageReplyMarkup) {\n      if(lastReplyMarkup && lastReplyMarkup.mid >= message.mid) {\n        return false;\n      }\n\n      if(messageReplyMarkup.pFlags.selective) {\n        return false;\n      }\n\n      if(historyStorage.maxOutId &&\n        message.mid < historyStorage.maxOutId &&\n        (messageReplyMarkup as ReplyMarkup.replyKeyboardMarkup | ReplyMarkup.replyKeyboardForceReply).pFlags.single_use) {\n        (messageReplyMarkup as ReplyMarkup.replyKeyboardMarkup | ReplyMarkup.replyKeyboardForceReply).pFlags.hidden = true;\n      }\n\n      messageReplyMarkup.mid = message.mid;\n      /* messageReplyMarkup = Object.assign({\n        mid: message.mid\n      }, messageReplyMarkup); */\n\n      if(messageReplyMarkup._ !== 'replyKeyboardHide') {\n        messageReplyMarkup.fromId = this.appPeersManager.getPeerId(message.from_id);\n      }\n\n      historyStorage.replyMarkup = messageReplyMarkup;\n      // this.log('set', historyStorage.reply_markup)\n      return true;\n    }\n\n    if(message.pFlags.out) {\n      if(lastReplyMarkup) {\n        assumeType<ReplyMarkup.replyKeyboardMarkup>(lastReplyMarkup);\n        if(lastReplyMarkup.pFlags.single_use &&\n          !lastReplyMarkup.pFlags.hidden &&\n          (message.mid > lastReplyMarkup.mid || message.pFlags.is_outgoing) &&\n          (message as Message.message).message) {\n          lastReplyMarkup.pFlags.hidden = true;\n          // this.log('set', historyStorage.reply_markup)\n          return true;\n        }\n      } else if(!historyStorage.maxOutId ||\n        message.mid > historyStorage.maxOutId) {\n        historyStorage.maxOutId = message.mid;\n      }\n    }\n\n    assumeType<Message.messageService>(message);\n    if(message.action?._ === 'messageActionChatDeleteUser' &&\n      (lastReplyMarkup ?\n        message.action.user_id === (lastReplyMarkup as ReplyMarkup.replyKeyboardMarkup).fromId :\n        this.appUsersManager.isBot(message.action.user_id)\n      )\n    ) {\n      historyStorage.replyMarkup = {\n        _: 'replyKeyboardHide',\n        mid: message.mid,\n        pFlags: {}\n      };\n      // this.log('set', historyStorage.reply_markup)\n      return true;\n    }\n\n    return false;\n  }\n\n  public getSearchStorage(peerId: PeerId, inputFilter: MyInputMessagesFilter) {\n    if(!this.searchesStorage[peerId]) this.searchesStorage[peerId] = {};\n    if(!this.searchesStorage[peerId][inputFilter]) this.searchesStorage[peerId][inputFilter] = {history: []};\n    return this.searchesStorage[peerId][inputFilter];\n  }\n\n  public getSearchCounters(\n    peerId: PeerId,\n    filters: MessagesFilter[],\n    canCache = true,\n    threadId?: number\n  ): Promise<MessagesSearchCounter[]> {\n    if(this.appPeersManager.isPeerRestricted(peerId)) {\n      return Promise.resolve(filters.map((filter) => {\n        return {\n          _: 'messages.searchCounter',\n          pFlags: {},\n          filter: filter,\n          count: 0\n        };\n      }));\n    }\n\n    const func = (canCache ? this.apiManager.invokeApiCacheable : this.apiManager.invokeApi).bind(this.apiManager);\n    return func('messages.getSearchCounters', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      filters,\n      top_msg_id: threadId ? getServerMessageId(threadId) : undefined\n    });\n  }\n\n  public filterMessagesByInputFilterFromStorage(inputFilter: MyInputMessagesFilter, history: number[], storage: MessagesStorage | MessagesStorageKey, limit: number) {\n    const _storage = this.getMessagesStorage(storage);\n    return filterMessagesByInputFilter(inputFilter, history.map((mid) => _storage.get(mid)), limit);\n  }\n\n  public getSearch({peerId, query, inputFilter, maxId, limit, nextRate, backLimit, threadId, folderId, minDate, maxDate}: {\n    peerId?: PeerId,\n    maxId?: number,\n    limit?: number,\n    nextRate?: number,\n    backLimit?: number,\n    threadId?: number,\n    folderId?: number,\n    query?: string,\n    inputFilter?: {\n      _: MyInputMessagesFilter\n    },\n    minDate?: number,\n    maxDate?: number\n  }): Promise<{\n    count: number,\n    next_rate: number,\n    offset_id_offset: number,\n    history: MyMessage[]\n  }> {\n    if(this.appPeersManager.isPeerRestricted(peerId)/*  || true */) {\n      return Promise.resolve({\n        count: 0,\n        offset_id_offset: 0,\n        next_rate: undefined,\n        history: []\n      });\n    }\n\n    if(!query) query = '';\n    if(!inputFilter) inputFilter = {_: 'inputMessagesFilterEmpty'};\n    if(limit === undefined) limit = 20;\n    if(!nextRate) nextRate = 0;\n    if(!backLimit) backLimit = 0;\n\n    minDate = minDate ? minDate / 1000 | 0 : 0;\n    maxDate = maxDate ? maxDate / 1000 | 0 : 0;\n\n    let foundMsgs: MyMessage[] = [];\n\n    // this.log('search', maxId);\n\n    if(backLimit) {\n      limit += backLimit;\n    }\n\n    // const beta = inputFilter._ === 'inputMessagesFilterPinned' && !backLimit;\n    const beta = false;\n\n    let storage: {\n      count?: number;\n      history: SlicedArray<number>;\n    };\n\n    // * костыль для limit 1, если нужно и получить сообщение, и узнать количество сообщений\n    if(peerId && !backLimit && !maxId && !query && limit !== 1 && !threadId/*  && inputFilter._ !== 'inputMessagesFilterPinned' */) {\n      storage = beta ?\n        this.getSearchStorage(peerId, inputFilter._) as any :\n        this.getHistoryStorage(peerId);\n      foundMsgs = this.filterMessagesByInputFilterFromStorage(inputFilter._, storage.history.slice, this.getHistoryMessagesStorage(peerId), limit);\n    }\n\n    if(foundMsgs.length) {\n      if(foundMsgs.length < limit && (beta ? storage.count !== storage.history.length : true)) {\n        maxId = foundMsgs[foundMsgs.length - 1].mid;\n        limit = limit - foundMsgs.length;\n      } else {\n        return Promise.resolve({\n          count: beta ? storage.count : 0,\n          next_rate: 0,\n          offset_id_offset: 0,\n          history: foundMsgs\n        });\n      }\n    } else if(beta && storage?.count) {\n      return Promise.resolve({\n        count: storage.count,\n        next_rate: 0,\n        offset_id_offset: 0,\n        history: []\n      });\n    }\n\n    const canCache = false && (['inputMessagesFilterChatPhotos', 'inputMessagesFilterPinned'] as MyInputMessagesFilter[]).includes(inputFilter._);\n    const method = (canCache ? this.apiManager.invokeApiCacheable : this.apiManager.invokeApi).bind(this.apiManager);\n\n    let apiPromise: Promise<any>;\n    if(peerId && !nextRate && folderId === undefined/*  || !query */) {\n      apiPromise = method('messages.search', {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        q: query || '',\n        filter: inputFilter as any as MessagesFilter,\n        min_date: minDate,\n        max_date: maxDate,\n        limit,\n        offset_id: getServerMessageId(maxId) || 0,\n        add_offset: backLimit ? -backLimit : 0,\n        max_id: 0,\n        min_id: 0,\n        hash: '',\n        top_msg_id: getServerMessageId(threadId) || 0\n      }, {\n        // timeout: APITIMEOUT,\n        noErrorBox: true\n      });\n    } else {\n      // var offsetDate = 0;\n      let offsetPeerId: PeerId;\n      let offsetId = 0;\n      const offsetMessage = maxId && this.getMessageByPeer(peerId, maxId);\n\n      if(offsetMessage && offsetMessage.date) {\n        // offsetDate = offsetMessage.date + timeManager.getServerTimeOffset();\n        offsetId = offsetMessage.id;\n        offsetPeerId = this.getMessagePeer(offsetMessage);\n      }\n\n      apiPromise = method('messages.searchGlobal', {\n        q: query,\n        filter: inputFilter as any as MessagesFilter,\n        min_date: minDate,\n        max_date: maxDate,\n        offset_rate: nextRate,\n        offset_peer: this.appPeersManager.getInputPeerById(offsetPeerId),\n        offset_id: offsetId,\n        limit,\n        folder_id: folderId\n      }, {\n        // timeout: APITIMEOUT,\n        noErrorBox: true\n      });\n    }\n\n    return apiPromise.then((searchResult: any) => {\n      this.appUsersManager.saveApiUsers(searchResult.users);\n      this.appChatsManager.saveApiChats(searchResult.chats);\n      this.saveMessages(searchResult.messages);\n\n      /* if(beta && storage && (!maxId || storage.history[storage.history.length - 1] === maxId)) {\n        const storage = this.getSearchStorage(peerId, inputFilter._);\n        const add = (searchResult.messages.map((m: any) => m.mid) as number[]).filter((mid) => storage.history.indexOf(mid) === -1);\n        storage.history.push(...add);\n        storage.history.sort((a, b) => b - a);\n        storage.count = searchResult.count;\n      } */\n\n      if(DEBUG) {\n        this.log('getSearch result:', inputFilter, searchResult);\n      }\n\n      const foundCount: number = searchResult.count || (foundMsgs.length + searchResult.messages.length);\n\n      searchResult.messages.forEach((message: MyMessage) => {\n        const peerId = this.getMessagePeer(message);\n        if(peerId.isAnyChat()) {\n          const chat = this.appChatsManager.getChat(peerId.toChatId()) as Chat.chat;\n          if(chat.migrated_to) {\n            this.migrateChecks(peerId, (chat.migrated_to as InputChannel.inputChannel).channel_id.toPeerId(true));\n          }\n        }\n\n        foundMsgs.push(message);\n      });\n\n      return {\n        count: foundCount,\n        offset_id_offset: searchResult.offset_id_offset || 0,\n        next_rate: searchResult.next_rate,\n        history: foundMsgs\n      };\n    });\n  }\n\n  public subscribeRepliesThread(peerId: PeerId, mid: number) {\n    const repliesKey = peerId + '_' + mid;\n    for(const threadKey in this.threadsToReplies) {\n      if(this.threadsToReplies[threadKey] === repliesKey) return;\n    }\n\n    this.getDiscussionMessage(peerId, mid);\n  }\n\n  public generateThreadServiceStartMessage(message: Message.message | Message.messageService) {\n    const threadKey = message.peerId + '_' + message.mid;\n    if(this.threadsServiceMessagesIdsStorage[threadKey]) return;\n\n    const maxMessageId = getServerMessageId(Math.max(...this.getMidsByMessage(message)));\n    const serviceStartMessage: Message.messageService = {\n      _: 'messageService',\n      pFlags: {\n        is_single: true\n      },\n      id: this.appMessagesIdsManager.generateTempMessageId(maxMessageId),\n      date: message.date,\n      from_id: {_: 'peerUser', user_id: NULL_PEER_ID}/* message.from_id */,\n      peer_id: message.peer_id,\n      action: {\n        _: 'messageActionDiscussionStarted'\n      },\n      reply_to: this.generateReplyHeader(message.peerId, message.id)\n    };\n\n    this.saveMessages([serviceStartMessage], {isOutgoing: true});\n    this.threadsServiceMessagesIdsStorage[threadKey] = serviceStartMessage.mid;\n  }\n\n  public getThreadServiceMessageId(peerId: PeerId, threadId: number) {\n    return this.threadsServiceMessagesIdsStorage[peerId + '_' + threadId];\n  }\n\n  public getDiscussionMessage(peerId: PeerId, mid: number) {\n    return this.apiManager.invokeApiSingle('messages.getDiscussionMessage', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: getServerMessageId(mid)\n    }).then((result) => {\n      this.appChatsManager.saveApiChats(result.chats);\n      this.appUsersManager.saveApiUsers(result.users);\n      this.saveMessages(result.messages);\n\n      const message = this.getMessageWithReplies(result.messages[0] as Message.message);\n      const threadKey = message.peerId + '_' + message.mid;\n\n      this.generateThreadServiceStartMessage(message);\n\n      const historyStorage = this.getHistoryStorage(message.peerId, message.mid);\n      const newMaxId = result.max_id = generateMessageId(result.max_id) || 0;\n      result.read_inbox_max_id = historyStorage.readMaxId = generateMessageId(result.read_inbox_max_id ?? message.mid);\n      result.read_outbox_max_id = historyStorage.readOutboxMaxId = generateMessageId(result.read_outbox_max_id) || 0;\n\n      const first = historyStorage.history.first;\n      if(historyStorage.maxId && historyStorage.maxId < newMaxId && first.isEnd(SliceEnd.Bottom)) {\n        first.unsetEnd(SliceEnd.Bottom);\n      }\n      historyStorage.maxId = newMaxId;\n\n      this.threadsToReplies[threadKey] = peerId + '_' + mid;\n\n      return message;\n    });\n  }\n\n  private handleNewMessage(message: MyMessage) {\n    this.rootScope.dispatchEvent('history_multiappend', message);\n  }\n\n  private handleNewDialogs = () => {\n    let newMaxSeenId = 0;\n    const updateMap: BroadcastEvents['dialogs_multiupdate']= new Map();\n\n    const processDialog = (dialog: MTDialog.dialog | ForumTopic) => {\n      const {peerId} = dialog;\n      this.dialogsStorage.pushDialog({dialog});\n      if(!this.appPeersManager.isChannel(peerId)) {\n        newMaxSeenId = Math.max(newMaxSeenId, dialog.top_message || 0);\n      }\n\n      let cache = updateMap.get(peerId);\n      if(!cache) {\n        updateMap.set(peerId, cache = {});\n      }\n\n      if(dialog._ === 'forumTopic') {\n        (cache.topics ??= new Map()).set(dialog.id, dialog);\n      } else {\n        cache.dialog = dialog;\n      }\n    };\n\n    for(const [peerId, obj] of this.newDialogsToHandle) {\n      const isDialogDefined = 'dialog' in obj;\n      const {dialog, topics} = obj;\n\n      if(isDialogDefined) {\n        if(!dialog) {\n          this.reloadConversation(peerId.toPeerId());\n        } else if(this.dialogsStorage.getDialogOnly(peerId)) { // * can be already dropped\n          processDialog(dialog);\n        }\n      }\n\n      if(topics) {\n        topics?.forEach((topic, id) => {\n          if(!topic) {\n            this.dialogsStorage.getForumTopicById(peerId, id);\n          } else if(this.dialogsStorage.getForumTopic(peerId, id)) { // * can be already dropped\n            processDialog(topic);\n          }\n        });\n      }\n    }\n\n    // this.log('after order:', this.dialogsStorage[0].map((d) => d.peerId));\n\n    if(newMaxSeenId !== 0) {\n      this.incrementMaxSeenId(newMaxSeenId);\n    }\n\n    this.rootScope.dispatchEvent('dialogs_multiupdate', updateMap);\n    this.newDialogsToHandle.clear();\n  };\n\n  public scheduleHandleNewDialogs(peerId?: PeerId, dialog?: Dialog | ForumTopic | ForumTopic['id']) {\n    if(peerId !== undefined) {\n      let obj = this.newDialogsToHandle.get(peerId);\n      if(!obj) {\n        this.newDialogsToHandle.set(peerId, obj = {});\n      }\n\n      const isObject = typeof(dialog) === 'object';\n      if(!dialog || (isObject && dialog._ === 'dialog')) {\n        obj.dialog = dialog as Dialog;\n      } else {\n        obj.topics ??= new Map();\n        if(isObject) {\n          obj.topics.set((dialog as ForumTopic).id, dialog as ForumTopic);\n        } else {\n          obj.topics.set(dialog as number, undefined);\n        }\n      }\n    }\n\n    return this.newDialogsHandlePromise ??= pause(0).then(() => {\n      this.newDialogsHandlePromise = undefined;\n      this.handleNewDialogs();\n    });\n  }\n\n  public async deleteMessages(peerId: PeerId, mids: number[], revoke?: boolean) {\n    let promise: Promise<any>;\n\n    const config = await this.apiManager.getConfig();\n    const overflowMids = mids.splice(config.forwarded_count_max, mids.length - config.forwarded_count_max);\n\n    const localMessageIds = mids.map((mid) => getServerMessageId(mid));\n\n    if(peerId.isAnyChat() && this.appPeersManager.isChannel(peerId)) {\n      const channelId = peerId.toChatId();\n      const channel = this.appChatsManager.getChat(channelId) as Chat.channel;\n      if(!channel.pFlags.creator && !channel.admin_rights?.pFlags?.delete_messages) {\n        mids = mids.filter((mid) => {\n          const message = this.getMessageByPeer(peerId, mid);\n          return !!message.pFlags.out;\n        });\n\n        if(!mids.length) {\n          return;\n        }\n      }\n\n      promise = this.apiManager.invokeApi('channels.deleteMessages', {\n        channel: this.appChatsManager.getChannelInput(channelId),\n        id: localMessageIds\n      }).then((affectedMessages) => {\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateDeleteChannelMessages',\n          channel_id: channelId,\n          messages: mids,\n          pts: affectedMessages.pts,\n          pts_count: affectedMessages.pts_count\n        });\n      });\n    } else {\n      promise = this.apiManager.invokeApi('messages.deleteMessages', {\n        revoke,\n        id: localMessageIds\n      }).then((affectedMessages) => {\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateDeleteMessages',\n          messages: mids,\n          pts: affectedMessages.pts,\n          pts_count: affectedMessages.pts_count\n        });\n      });\n    }\n\n    const promises: (typeof promise)[] = [promise];\n    if(overflowMids.length) {\n      promises.push(this.deleteMessages(peerId, overflowMids, revoke));\n    }\n\n    return Promise.all(promises).then(noop);\n  }\n\n  public readHistory(peerId: PeerId, maxId = 0, threadId?: number, force = false) {\n    if(DO_NOT_READ_HISTORY) {\n      return Promise.resolve();\n    }\n\n    // console.trace('start read')\n    this.log('readHistory:', peerId, maxId, threadId);\n    const readMaxId = this.getReadMaxIdIfUnread(peerId, threadId);\n    if(!readMaxId) {\n      if(threadId && !force) {\n        const forumTopic = this.dialogsStorage.getForumTopic(peerId, threadId);\n        if(!getServerMessageId(forumTopic.read_inbox_max_id)) {\n          force = true;\n        }\n      }\n\n      if(!force) {\n        const dialog = this.appChatsManager.isForum(peerId.toChatId()) && threadId ?\n          this.dialogsStorage.getForumTopic(peerId, threadId) :\n          this.getDialogOnly(peerId);\n        if(dialog && this.isDialogUnread(dialog)) {\n          force = true;\n        }\n      }\n\n      if(!force) {\n        this.log('readHistory: isn\\'t unread');\n        return Promise.resolve();\n      }\n    }\n\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n\n    if(historyStorage.triedToReadMaxId >= maxId) {\n      return Promise.resolve();\n    }\n\n    let apiPromise: Promise<any>;\n    if(threadId) {\n      if(!historyStorage.readPromise) {\n        apiPromise = this.apiManager.invokeApi('messages.readDiscussion', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          msg_id: getServerMessageId(threadId),\n          read_max_id: getServerMessageId(maxId)\n        });\n        // apiPromise = new Promise<void>((resolve) => resolve());\n      }\n\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateReadChannelDiscussionInbox',\n        channel_id: peerId.toChatId(),\n        top_msg_id: threadId,\n        read_max_id: maxId\n      });\n    } else if(this.appPeersManager.isChannel(peerId)) {\n      if(!historyStorage.readPromise) {\n        apiPromise = this.apiManager.invokeApi('channels.readHistory', {\n          channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\n          max_id: getServerMessageId(maxId)\n        });\n      }\n\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateReadChannelInbox',\n        max_id: maxId,\n        channel_id: peerId.toChatId(),\n        still_unread_count: undefined,\n        pts: undefined\n      });\n    } else {\n      if(!historyStorage.readPromise) {\n        apiPromise = this.apiManager.invokeApi('messages.readHistory', {\n          peer: this.appPeersManager.getInputPeerById(peerId),\n          max_id: getServerMessageId(maxId)\n        }).then((affectedMessages) => {\n          this.apiUpdatesManager.processUpdateMessage({\n            _: 'updateShort',\n            update: {\n              _: 'updatePts',\n              pts: affectedMessages.pts,\n              pts_count: affectedMessages.pts_count\n            }\n          });\n        });\n      }\n\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateReadHistoryInbox',\n        max_id: maxId,\n        peer: this.appPeersManager.getOutputPeer(peerId),\n        still_unread_count: undefined,\n        pts: undefined,\n        pts_count: undefined\n      });\n    }\n\n    this.rootScope.dispatchEvent('notification_reset', this.appPeersManager.getPeerString(peerId));\n\n    if(historyStorage.readPromise) {\n      return historyStorage.readPromise;\n    }\n\n    historyStorage.triedToReadMaxId = maxId;\n\n    apiPromise.finally(() => {\n      delete historyStorage.readPromise;\n\n      const {readMaxId} = historyStorage;\n      this.log('readHistory: promise finally', maxId, readMaxId);\n\n      if(readMaxId > maxId) {\n        this.readHistory(peerId, readMaxId, threadId, true);\n      }\n    });\n\n    return historyStorage.readPromise = apiPromise;\n  }\n\n  public readAllHistory(peerId: PeerId, threadId?: number, force = false) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    if(historyStorage.maxId) {\n      this.readHistory(peerId, historyStorage.maxId, threadId, force); // lol\n    }\n  }\n\n  private getUnreadMentionsKey(peerId: PeerId, threadId?: number) {\n    return peerId + (threadId ? `_${threadId}` : '');\n  }\n\n  private fixDialogUnreadMentionsIfNoMessage(peerId: PeerId, threadId?: number) {\n    const dialog = this.dialogsStorage.getDialogOrTopic(peerId, threadId);\n    if(dialog?.unread_mentions_count) {\n      this.reloadConversationOrTopic(peerId);\n    }\n  }\n\n  private modifyCachedMentions(peerId: PeerId, mid: number, add: boolean, threadId?: number) {\n    const slicedArray = this.unreadMentions[this.getUnreadMentionsKey(peerId, threadId)];\n    if(!slicedArray) return;\n\n    if(add) {\n      if(slicedArray.first.isEnd(SliceEnd.Top)) {\n        slicedArray.insertSlice([mid]);\n      }\n    } else {\n      slicedArray.delete(mid);\n    }\n  }\n\n  private fixUnreadMentionsCountIfNeeded(peerId: PeerId, slicedArray: SlicedArray<number>, threadId?: number) {\n    const dialog = this.dialogsStorage.getDialogOrTopic(peerId, threadId);\n    if(!slicedArray.length && dialog?.unread_mentions_count) {\n      this.reloadConversationOrTopic(peerId);\n    }\n  }\n\n  public goToNextMention(peerId: PeerId, threadId?: number) {\n    /* this.getUnreadMentions(peerId, 1, 2, 0).then((messages) => {\n      console.log(messages);\n    }); */\n\n    const key = this.getUnreadMentionsKey(peerId, threadId);\n    const promise = this.goToNextMentionPromises[key];\n    if(promise) {\n      return promise;\n    }\n\n    const slicedArray = this.unreadMentions[peerId] ??= new SlicedArray();\n    const length = slicedArray.length;\n    const isTopEnd = slicedArray.first.isEnd(SliceEnd.Top);\n    if(!length && isTopEnd) {\n      this.fixUnreadMentionsCountIfNeeded(peerId, slicedArray, threadId);\n      return Promise.resolve();\n    }\n\n    let loadNextPromise = Promise.resolve();\n    if(!isTopEnd && length < 25) {\n      loadNextPromise = this.loadNextMentions(peerId, threadId);\n    }\n\n    return this.goToNextMentionPromises[key] = loadNextPromise.then(() => {\n      const last = slicedArray.last;\n      const mid = last && last[last.length - 1];\n      if(mid) {\n        slicedArray.delete(mid);\n        return mid;\n      } else {\n        this.fixUnreadMentionsCountIfNeeded(peerId, slicedArray, threadId);\n      }\n    }).finally(() => {\n      delete this.goToNextMentionPromises[key];\n    });\n  }\n\n  private loadNextMentions(peerId: PeerId, threadId?: number) {\n    const slicedArray = this.unreadMentions[peerId];\n    const maxId = slicedArray.first[0] || 1;\n\n    const backLimit = 50;\n    const add_offset = -backLimit;\n    const limit = backLimit;\n    return this.getUnreadMentions(peerId, maxId, add_offset, limit, undefined, undefined, threadId)\n    .then((messages) => {\n      this.mergeHistoryResult(slicedArray, messages, maxId === 1 ? 0 : maxId, limit, add_offset);\n    });\n  }\n\n  private getUnreadMentions(\n    peerId: PeerId,\n    offsetId: number,\n    add_offset: number,\n    limit: number,\n    maxId = 0,\n    minId = 0,\n    threadId?: number\n  ) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getUnreadMentions',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        offset_id: getServerMessageId(offsetId),\n        add_offset,\n        limit,\n        max_id: getServerMessageId(maxId),\n        min_id: getServerMessageId(minId),\n        top_msg_id: threadId ? getServerMessageId(threadId) : undefined\n      },\n      processResult: (messagesMessages) => {\n        assumeType<Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>>(messagesMessages);\n        this.appUsersManager.saveApiUsers(messagesMessages.users);\n        this.appChatsManager.saveApiChats(messagesMessages.chats);\n        this.saveMessages(messagesMessages.messages);\n\n        return messagesMessages;\n      }\n    });\n  }\n\n  public readMessages(peerId: PeerId, msgIds: number[]) {\n    if(DO_NOT_READ_HISTORY) {\n      return Promise.resolve();\n    }\n\n    if(!msgIds.length) {\n      return Promise.resolve();\n    }\n\n    msgIds = msgIds.map((mid) => getServerMessageId(mid));\n    let promise: Promise<any>, update: Update.updateChannelReadMessagesContents | Update.updateReadMessagesContents;\n    if(peerId.isAnyChat() && this.appPeersManager.isChannel(peerId)) {\n      const channelId = peerId.toChatId();\n\n      update = {\n        _: 'updateChannelReadMessagesContents',\n        channel_id: channelId,\n        messages: msgIds\n      };\n\n      promise = this.apiManager.invokeApi('channels.readMessageContents', {\n        channel: this.appChatsManager.getChannelInput(channelId),\n        id: msgIds\n      });\n    } else {\n      update = {\n        _: 'updateReadMessagesContents',\n        messages: msgIds,\n        pts: undefined,\n        pts_count: undefined\n      };\n\n      promise = this.apiManager.invokeApi('messages.readMessageContents', {\n        id: msgIds\n      }).then((affectedMessages) => {\n        (update as Update.updateReadMessagesContents).pts = affectedMessages.pts;\n        (update as Update.updateReadMessagesContents).pts_count = affectedMessages.pts_count;\n        this.apiUpdatesManager.processLocalUpdate(update);\n      });\n    }\n\n    this.apiUpdatesManager.processLocalUpdate(update);\n\n    return promise;\n  }\n\n  public getHistoryStorage(peerId: PeerId, threadId?: number) {\n    if(threadId) {\n      // threadId = this.getLocalMessageId(threadId);\n      return (this.threadsStorage[peerId] ??= {})[threadId] ??= {count: null, history: new SlicedArray()};\n    }\n\n    return this.historiesStorage[peerId] ??= {count: null, history: new SlicedArray()};\n  }\n\n  public getHistoryStorageTransferable(peerId: PeerId, threadId?: number) {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    const {\n      count,\n      history,\n      maxId,\n      readMaxId,\n      readOutboxMaxId,\n      maxOutId,\n      replyMarkup\n    } = historyStorage;\n\n    return {\n      count,\n      history: undefined as HistoryStorage,\n      historySerialized: history.toJSON(),\n      maxId,\n      readMaxId,\n      readOutboxMaxId,\n      maxOutId,\n      replyMarkup\n    };\n  }\n\n  private getNotifyPeerSettings(peerId: PeerId, threadId?: number) {\n    const inputNotifyPeer = this.appPeersManager.getInputNotifyPeerById({peerId, ignorePeerId: true, threadId});\n    return Promise.all([\n      this.appNotificationsManager.getNotifyPeerTypeSettings(),\n      this.appNotificationsManager.getNotifySettings(inputNotifyPeer)\n    ]).then(([_, peerTypeNotifySettings]) => {\n      return {\n        muted: this.appNotificationsManager.isPeerLocalMuted({peerId, respectType: true, threadId}),\n        peerTypeNotifySettings\n      };\n    });\n  }\n\n  private handleNotifications = () => {\n    ctx.clearTimeout(this.notificationsHandlePromise);\n    this.notificationsHandlePromise = undefined;\n\n    // var timeout = $rootScope.idle.isIDLE && StatusManager.isOtherDeviceActive() ? 30000 : 1000;\n    // const timeout = 1000;\n\n    for(const key in this.notificationsToHandle) {\n      const [peerId, threadId] = key.split('_');\n      // if(rootScope.peerId === peerId && !rootScope.idle.isIDLE) {\n      // continue;\n      // }\n\n      const notifyPeerToHandle = this.notificationsToHandle[key];\n      this.getNotifyPeerSettings(peerId.toPeerId(), threadId ? +threadId : undefined)\n      .then(({muted, peerTypeNotifySettings}) => {\n        const topMessage = notifyPeerToHandle.topMessage;\n        if((muted && !topMessage.pFlags.mentioned) || !topMessage.pFlags.unread) {\n          return;\n        }\n\n        // setTimeout(() => {\n        if(topMessage.pFlags.unread) {\n          this.notifyAboutMessage(topMessage, {\n            fwdCount: notifyPeerToHandle.fwdCount,\n            peerTypeNotifySettings\n          });\n        }\n        // }, timeout);\n      });\n    }\n\n    this.notificationsToHandle = {};\n  };\n\n  public getUpdateAfterReloadKey(peerId: PeerId, threadId?: number) {\n    return peerId + (threadId ? '_' + threadId : '');\n  }\n\n  private handleNewUpdateAfterReload(peerId: PeerId, update: Update, threadId?: number) {\n    const set = this.newUpdatesAfterReloadToHandle[this.getUpdateAfterReloadKey(peerId, threadId)] ??= new Set();\n    if(set.has(update)) {\n      this.log.error('here we go again', peerId);\n      return;\n    }\n\n    (update as any).ignoreExisting = true;\n    set.add(update);\n    this.scheduleHandleNewDialogs(peerId, threadId);\n  }\n\n  private onUpdateMessageId = (update: Update.updateMessageID) => {\n    const randomId = update.random_id;\n    const pendingData = this.pendingByRandomId[randomId];\n    if(!pendingData) {\n      return;\n    }\n\n    const mid = generateMessageId(update.id);\n    this.pendingByMessageId[mid] = randomId;\n    // const {storage} = pendingData;\n    // const message = this.getMessageFromStorage(storage, mid);\n    // if(message) { // if message somehow already exists\n    //   this.checkPendingMessage(message);\n    // }\n  };\n\n  private onUpdateNewMessage = (update: Update.updateNewDiscussionMessage | Update.updateNewMessage | Update.updateNewChannelMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n    const storage = this.getHistoryMessagesStorage(peerId);\n\n    // * local update\n    const isLocalThreadUpdate = update._ === 'updateNewDiscussionMessage';\n\n    // * temporary save the message for info (peerId, reply mids...)\n    this.saveMessages([message], {storage: this.createMessageStorage(peerId, 'history')});\n\n    // * check if sent message is already in storage\n    // const oldMessage = this.getMessageFromStorage(storage, message.mid);\n    // if(\n    //   (message as Message.message).pFlags.is_outgoing &&\n    //   oldMessage &&\n    //   !(oldMessage as Message.message).pFlags.is_outgoing\n    // ) {\n    //   this.checkPendingMessage(message);\n    //   return;\n    // }\n\n    const isForum = this.appPeersManager.isForum(peerId);\n    const threadKey = this.getThreadKey(message);\n    const threadId = threadKey ? +threadKey.split('_')[1] : undefined;\n    const dialog = this.dialogsStorage.getDialogOrTopic(peerId, isLocalThreadUpdate ? threadId : undefined);\n\n    if((!dialog || this.reloadConversationsPeers.has(peerId)) && !isLocalThreadUpdate) {\n      let good = true;\n      if(peerId.isAnyChat()) {\n        good = this.appChatsManager.isInChat(peerId.toChatId());\n      }\n\n      if(good) {\n        this.handleNewUpdateAfterReload(peerId, update);\n        return;\n      }\n\n      // return;\n    }\n\n    if(threadId && !isLocalThreadUpdate) {\n      const threadStorage = this.threadsStorage[peerId]?.[threadId];\n      const update = {\n        _: 'updateNewDiscussionMessage',\n        message\n      } as Update.updateNewDiscussionMessage;\n\n      if(this.appChatsManager.isForum(peerId.toChatId()) && !this.dialogsStorage.getForumTopic(peerId, threadId)) {\n        // this.dialogsStorage.getForumTopicById(peerId, threadId);\n        this.handleNewUpdateAfterReload(peerId, update, threadId);\n      } else if(threadStorage) {\n        this.onUpdateNewMessage(update);\n      }\n    }\n\n    if(message._ === 'messageService') {\n      const {action} = message;\n      if(action._ === 'messageActionPaymentSent' && message.reply_to) {\n        this.rootScope.dispatchEvent('payment_sent', {\n          peerId: message.reply_to.reply_to_peer_id ?\n            this.appPeersManager.getPeerId(message.reply_to.reply_to_peer_id) :\n            message.peerId,\n          mid: message.reply_to_mid,\n          receiptMessage: message\n        });\n      }\n\n      if(action._ === 'messageActionTopicEdit' && !isLocalThreadUpdate) {\n        const topic = this.dialogsStorage.getForumTopic(peerId, threadId);\n        if(!topic) {\n          this.dialogsStorage.getForumTopicById(peerId, threadId);\n        } else {\n          const oldTopic = copy(topic);\n\n          if(action.title !== undefined) {\n            topic.title = action.title;\n          }\n\n          if(action.closed !== undefined) {\n            setBooleanFlag(topic.pFlags, 'closed', action.closed);\n          }\n\n          if(action.hidden !== undefined) {\n            setBooleanFlag(topic.pFlags, 'hidden', action.hidden);\n          }\n\n          if(action.icon_emoji_id !== undefined) {\n            topic.icon_emoji_id = action.icon_emoji_id;\n          }\n\n          this.scheduleHandleNewDialogs(peerId, topic);\n\n          this.dialogsStorage.processTopicUpdate(topic, oldTopic);\n        }\n      }\n    }\n\n    /* if(update._ === 'updateNewChannelMessage') {\n      const chat = appChatsManager.getChat(peerId.toChatId());\n      if(chat.pFlags && (chat.pFlags.left || chat.pFlags.kicked)) {\n        return;\n      }\n    } */\n\n    this.saveMessages([message], {storage});\n    // this.log.warn(dT(), 'message unread', message.mid, message.pFlags.unread)\n\n    /* if((message as Message.message).grouped_id) {\n      this.log('updateNewMessage', message);\n    } */\n\n    this.checkPendingMessage(message);\n    const historyStorage = this.getHistoryStorage(peerId, isLocalThreadUpdate ? threadId : undefined);\n\n    if(!isLocalThreadUpdate) {\n      this.updateMessageRepliesIfNeeded(message);\n    }\n\n    // * so message can exist if reloadConversation came back earlier with mid\n    const ignoreExisting: boolean = (update as any).ignoreExisting;\n    const isExisting = !!historyStorage.history.findSlice(message.mid);\n    if(isExisting) {\n      if(!ignoreExisting) {\n        return false;\n      }\n    } else {\n      // * catch situation with disconnect. if message's id is lower than we already have (in bottom end slice), will sort it\n      const firstSlice = historyStorage.history.first;\n      if(firstSlice.isEnd(SliceEnd.Bottom)) {\n        let i = 0;\n        for(const length = firstSlice.length; i < length; ++i) {\n          if(message.mid > firstSlice[i]) {\n            break;\n          }\n        }\n\n        firstSlice.splice(i, 0, message.mid);\n      } else {\n        historyStorage.history.unshift(message.mid);\n      }\n\n      if(historyStorage.count !== null) {\n        ++historyStorage.count;\n      }\n    }\n\n    if(!historyStorage.maxId || message.mid > historyStorage.maxId) {\n      historyStorage.maxId = message.mid;\n    }\n\n    if(this.mergeReplyKeyboard(historyStorage, message)) {\n      this.rootScope.dispatchEvent('history_reply_markup', {peerId});\n    }\n\n    const fromId = message.fromId;\n    if(fromId.isUser() && !message.pFlags.out && message.from_id) {\n      this.appUsersManager.forceUserOnline(fromId, message.date);\n\n      const action: SendMessageAction = {\n        _: 'sendMessageCancelAction'\n      };\n\n      let update: Update.updateUserTyping | Update.updateChatUserTyping | Update.updateChannelUserTyping;\n      if(peerId.isUser()) {\n        update = {\n          _: 'updateUserTyping',\n          action,\n          user_id: fromId\n        };\n      } else if(this.appPeersManager.isChannel(peerId)) {\n        update = {\n          _: 'updateChannelUserTyping',\n          action,\n          channel_id: peerId.toChatId(),\n          from_id: this.appPeersManager.getOutputPeer(fromId),\n          top_msg_id: threadId ? getServerMessageId(threadId) : undefined\n        };\n      } else {\n        update = {\n          _: 'updateChatUserTyping',\n          action,\n          chat_id: peerId.toChatId(),\n          from_id: this.appPeersManager.getOutputPeer(fromId)\n        };\n      }\n\n      this.apiUpdatesManager.processLocalUpdate(update);\n    }\n\n    // commented to render the message if it's been sent faster than history_append came to main thread\n    // if(!pendingMessage) {\n    this.handleNewMessage(message);\n    // }\n\n    const isTopic = dialog?._ === 'forumTopic';\n    if((isLocalThreadUpdate && !isTopic) || !dialog) {\n      return;\n    }\n\n    const inboxUnread = !message.pFlags.out && message.pFlags.unread;\n\n    {\n      if(inboxUnread && message.mid > dialog.top_message) {\n        const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(dialog);\n\n        ++dialog.unread_count;\n        if(message.pFlags.mentioned) {\n          ++dialog.unread_mentions_count;\n          this.modifyCachedMentions(peerId, message.mid, true, isTopic ? threadId : undefined);\n        }\n\n        releaseUnreadCount();\n      }\n\n      if(message.mid >= dialog.top_message) {\n        this.setDialogTopMessage(message, dialog);\n      }\n    }\n\n    if(((!isLocalThreadUpdate && !isForum) || isTopic) && inboxUnread) {\n      const notifyPeer = threadKey || peerId;\n      const notifyPeerToHandle = this.notificationsToHandle[notifyPeer] ??= {\n        fwdCount: 0,\n        fromId: NULL_PEER_ID\n      };\n\n      if(notifyPeerToHandle.fromId !== fromId) {\n        notifyPeerToHandle.fromId = fromId;\n        notifyPeerToHandle.fwdCount = 0;\n      }\n\n      if((message as Message.message).fwd_from) {\n        ++notifyPeerToHandle.fwdCount;\n      }\n\n      notifyPeerToHandle.topMessage = message;\n\n      this.notificationsHandlePromise ??= ctx.setTimeout(this.handleNotifications, 0);\n    }\n  };\n\n  private onUpdateMessageReactions = (update: Update.updateMessageReactions) => {\n    const {peer, msg_id, reactions} = update;\n    const mid = generateMessageId(msg_id);\n    const peerId = this.appPeersManager.getPeerId(peer);\n    const message: MyMessage = this.getMessageByPeer(peerId, mid);\n\n    if(message?._ !== 'message') {\n      return;\n    }\n\n    const recentReactions = reactions?.recent_reactions;\n    if(recentReactions?.length && message.pFlags.out) {\n      const recentReaction = recentReactions[recentReactions.length - 1];\n      const previousReactions = message.reactions;\n      const previousRecentReactions = previousReactions?.recent_reactions;\n      if(\n        this.appPeersManager.getPeerId(recentReaction.peer_id) !== this.appPeersManager.peerId && (\n          !previousRecentReactions ||\n          previousRecentReactions.length <= recentReactions.length\n        ) && (\n          !previousRecentReactions ||\n          !deepEqual(recentReaction, previousRecentReactions[previousRecentReactions.length - 1])\n        )\n      ) {\n        this.getNotifyPeerSettings(peerId).then(({muted, peerTypeNotifySettings}) => {\n          if(/* muted ||  */!peerTypeNotifySettings.show_previews) return;\n          this.notifyAboutMessage(message, {\n            peerReaction: recentReaction,\n            peerTypeNotifySettings\n          });\n        });\n      }\n    }\n\n    const key = message.peerId + '_' + message.mid;\n    this.pushBatchUpdate('messages_reactions', this.batchUpdateReactions, key, () => copy(message.reactions));\n\n    message.reactions = reactions;\n\n    if(!update.local) {\n      this.setDialogToStateIfMessageIsTop(message);\n    }\n  };\n\n  private onUpdateDialogUnreadMark = (update: Update.updateDialogUnreadMark) => {\n    // this.log('updateDialogUnreadMark', update);\n    const peerId = this.appPeersManager.getPeerId((update.peer as DialogPeer.dialogPeer).peer);\n    const dialog = this.getDialogOnly(peerId);\n\n    if(!dialog) {\n      this.scheduleHandleNewDialogs(peerId);\n    } else {\n      const releaseUnreadCount = this.dialogsStorage.prepareDialogUnreadCountModifying(dialog);\n\n      if(!update.pFlags.unread) {\n        delete dialog.pFlags.unread_mark;\n      } else {\n        dialog.pFlags.unread_mark = true;\n      }\n\n      releaseUnreadCount();\n      this.dialogsStorage.setDialogToState(dialog);\n      this.rootScope.dispatchEvent('dialogs_multiupdate', new Map([[peerId, {dialog}]]));\n    }\n  };\n\n  private onUpdateEditMessage = (update: Update.updateEditMessage | Update.updateEditChannelMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n    const mid = generateMessageId(message.id);\n    const storage = this.getHistoryMessagesStorage(peerId);\n    if(!storage.has(mid)) {\n      // this.fixDialogUnreadMentionsIfNoMessage(peerId);\n      return;\n    }\n\n    // console.trace(dT(), 'edit message', message)\n\n    const oldMessage: Message = this.getMessageFromStorage(storage, mid);\n    this.saveMessages([message], {storage});\n    const newMessage: Message = this.getMessageFromStorage(storage, mid);\n\n    this.handleEditedMessage(oldMessage, newMessage, storage);\n\n    const dialog = this.getDialogOnly(peerId);\n\n    // if sender erased mention\n    /* if(dialog.unread_mentions_count && (oldMessage as Message.message)?.pFlags?.mentioned && !message.pFlags.mentioned) {\n      --dialog.unread_mentions_count;\n      this.modifyCachedMentions(peerId, mid, false);\n    } */\n\n    const isTopMessage = dialog?.top_message === mid;\n    if((message as Message.messageService).clear_history) {\n      if(isTopMessage) {\n        this.rootScope.dispatchEvent('dialog_flush', {peerId, dialog});\n      }\n    } else {\n      let dispatchEditEvent = true;\n      // no sense in dispatching message_edit since only reactions have changed\n      if(oldMessage?._ === 'message' && !deepEqual(oldMessage.reactions, (newMessage as Message.message).reactions)) {\n        const newReactions = (newMessage as Message.message).reactions;\n        (newMessage as Message.message).reactions = oldMessage.reactions;\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateMessageReactions',\n          peer: this.appPeersManager.getOutputPeer(peerId),\n          msg_id: message.id,\n          reactions: newReactions\n        });\n\n        dispatchEditEvent = false;\n      }\n\n      dispatchEditEvent && this.rootScope.dispatchEvent('message_edit', {\n        storageKey: storage.key,\n        peerId,\n        mid,\n        message\n      });\n\n      if(isTopMessage) {\n        this.dialogsStorage.setDialogToState(dialog);\n      }\n\n      const map: BroadcastEvents['dialogs_multiupdate'] = new Map();\n      const getUpdateCache = () => {\n        let cache = map.get(peerId);\n        if(!cache) {\n          map.set(peerId, cache = {});\n        }\n\n        return cache;\n      };\n\n      if((isTopMessage || (message as Message.message).grouped_id) && dialog) {\n        getUpdateCache().dialog = dialog;\n      }\n\n      const threadKey = this.getThreadKey(message);\n      if(threadKey) {\n        const topicId = +threadKey.split('_')[1];\n        const topic = this.dialogsStorage.getForumTopic(peerId, topicId);\n        if(topic) {\n          (getUpdateCache().topics ??= new Map()).set(topicId, topic);\n        }\n      }\n\n      if(map.size) {\n        this.rootScope.dispatchEvent('dialogs_multiupdate', map);\n      }\n    }\n  };\n\n  private onUpdateReadHistory = (update: Update.updateReadChannelDiscussionInbox | Update.updateReadChannelDiscussionOutbox\n    | Update.updateReadHistoryInbox | Update.updateReadHistoryOutbox\n    | Update.updateReadChannelInbox | Update.updateReadChannelOutbox) => {\n    const channelId = (update as Update.updateReadChannelInbox).channel_id;\n    const maxId = generateMessageId((update as Update.updateReadChannelInbox).max_id || (update as Update.updateReadChannelDiscussionInbox).read_max_id);\n    const threadId = generateMessageId((update as Update.updateReadChannelDiscussionInbox).top_msg_id);\n    const peerId = channelId ? channelId.toPeerId(true) : this.appPeersManager.getPeerId((update as Update.updateReadHistoryInbox).peer);\n\n    const isOut = update._ === 'updateReadHistoryOutbox' ||\n      update._ === 'updateReadChannelOutbox' ||\n      update._ === 'updateReadChannelDiscussionOutbox' ? true : undefined;\n\n    const isForum = channelId ? this.appChatsManager.isForum(channelId) : false;\n    const storage = this.getHistoryMessagesStorage(peerId);\n    const history = getObjectKeysAndSort(storage, 'desc');\n    const foundDialog = threadId && isForum ?\n      this.dialogsStorage.getForumTopic(peerId, threadId) :\n      this.getDialogOnly(peerId);\n    const stillUnreadCount = (update as Update.updateReadChannelInbox).still_unread_count;\n    let newUnreadCount = 0;\n    let newUnreadMentionsCount = 0;\n    let foundAffected = false;\n\n    // this.log.warn(dT(), 'read', peerId, isOut ? 'out' : 'in', maxId)\n\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n\n    if(peerId.isUser() && isOut) {\n      this.appUsersManager.forceUserOnline(peerId.toUserId());\n    }\n\n    if(threadId) {\n      const repliesKey = this.threadsToReplies[peerId + '_' + threadId];\n      if(repliesKey) {\n        const [peerId, mid] = repliesKey.split('_');\n        this.updateMessage(peerId.toPeerId(), +mid, 'replies_updated');\n      }\n    }\n\n    const releaseUnreadCount = foundDialog && this.dialogsStorage.prepareDialogUnreadCountModifying(foundDialog);\n    const readMaxId = this.getReadMaxIdIfUnread(peerId, threadId);\n\n    for(let i = 0, length = history.length; i < length; i++) {\n      const mid = history[i];\n      if(mid > maxId) {\n        continue;\n      }\n\n      const message: MyMessage = storage.get(mid);\n\n      if(message.pFlags.out !== isOut) {\n        continue;\n      }\n\n      const messageThreadId = getMessageThreadId(message, isForum);\n      if(threadId && messageThreadId !== threadId) {\n        continue;\n      }\n\n      const isUnread = message.pFlags.unread || (readMaxId && readMaxId < mid);\n\n      if(!isUnread) {\n        break;\n      }\n\n      // this.log.warn('read', messageId, isUnread, message)\n      delete message.pFlags.unread;\n      foundAffected ||= true;\n\n      if(!message.pFlags.out && foundDialog) {\n        if(stillUnreadCount === undefined) {\n          newUnreadCount = --foundDialog.unread_count;\n        }\n\n        if(message.pFlags.mentioned) {\n          newUnreadMentionsCount = --foundDialog.unread_mentions_count;\n          this.modifyCachedMentions(peerId, message.mid, false);\n        }\n      }\n\n      this.rootScope.dispatchEvent('notification_cancel', 'msg' + mid);\n    }\n\n    if(isOut) historyStorage.readOutboxMaxId = maxId;\n    else historyStorage.readMaxId = maxId;\n\n    if(foundDialog) {\n      if(isOut) foundDialog.read_outbox_max_id = maxId;\n      else foundDialog.read_inbox_max_id = maxId;\n\n      if(!isOut) {\n        let setCount: number;\n        if(stillUnreadCount !== undefined) {\n          setCount = stillUnreadCount;\n        } else if(\n          newUnreadCount < 0 ||\n          maxId >= foundDialog.top_message ||\n          !readMaxId\n        ) {\n          setCount = 0;\n        } else if(newUnreadCount && foundDialog.top_message > maxId) {\n          setCount = newUnreadCount;\n        }\n\n        if(setCount !== undefined) {\n          foundDialog.unread_count = setCount;\n        }\n\n        if(newUnreadMentionsCount < 0 || !foundDialog.unread_count) {\n          foundDialog.unread_mentions_count = 0;\n        }\n      }\n\n      releaseUnreadCount?.();\n\n      this.dialogsStorage.processDialogForFilters(foundDialog);\n\n      this.rootScope.dispatchEvent('dialog_unread', {peerId, dialog: foundDialog});\n      this.dialogsStorage.setDialogToState(foundDialog);\n\n      if(!foundAffected && stillUnreadCount === undefined && !isOut && foundDialog.unread_count) {\n        if(foundDialog._ === 'forumTopic') {\n          this.dialogsStorage.getForumTopicById(peerId, threadId);\n        } else  {\n          this.reloadConversation(peerId);\n        }\n      }\n    }\n\n    if(foundAffected) {\n      this.rootScope.dispatchEvent('messages_read');\n    }\n\n    if(!threadId && channelId) {\n      const threadKeyPart = peerId + '_';\n      for(const threadKey in this.threadsToReplies) {\n        if(threadKey.indexOf(threadKeyPart) === 0) {\n          const [peerId, mid] = this.threadsToReplies[threadKey].split('_');\n          this.rootScope.dispatchEvent('replies_updated', this.getMessageByPeer(peerId.toPeerId(), +mid) as Message.message);\n        }\n      }\n    }\n  };\n\n  private onUpdateReadMessagesContents = (update: Update.updateChannelReadMessagesContents | Update.updateReadMessagesContents) => {\n    const channelId = (update as Update.updateChannelReadMessagesContents).channel_id;\n    const topMsgId = (update as Update.updateChannelReadMessagesContents).top_msg_id;\n    const threadId = topMsgId ? generateMessageId(topMsgId) : undefined;\n    const mids = (update as Update.updateReadMessagesContents).messages.map((id) => generateMessageId(id));\n    const peerId = channelId ? channelId.toPeerId(true) : this.findPeerIdByMids(mids);\n    for(let i = 0, length = mids.length; i < length; ++i) {\n      const mid = mids[i];\n      const message: MyMessage = this.getMessageByPeer(peerId, mid);\n      if(message) {\n        if(message.pFlags.media_unread) {\n          delete message.pFlags.media_unread;\n          this.setDialogToStateIfMessageIsTop(message);\n\n          if(!message.pFlags.out && message.pFlags.mentioned) {\n            this.modifyCachedMentions(peerId, mid, false, threadId);\n          }\n        }\n      } else {\n        this.fixDialogUnreadMentionsIfNoMessage(peerId, threadId);\n      }\n    }\n\n    this.rootScope.dispatchEvent('messages_media_read', {peerId, mids});\n  };\n\n  private onUpdateChannelAvailableMessages = (update: Update.updateChannelAvailableMessages) => {\n    const peerId = update.channel_id.toPeerId(true);\n    const history = this.getHistoryStorage(peerId).history.slice;\n    const availableMinId = generateMessageId(update.available_min_id);\n    const messages = history.filter((mid) => mid <= availableMinId);\n\n    (update as any as Update.updateDeleteChannelMessages).messages = messages;\n    this.onUpdateDeleteMessages(update as any as Update.updateDeleteChannelMessages);\n  };\n\n  private onUpdateDeleteMessages = (update: Update.updateDeleteMessages | Update.updateDeleteChannelMessages) => {\n    const channelId = (update as Update.updateDeleteChannelMessages).channel_id;\n    // const messages = (update as any as Update.updateDeleteChannelMessages).messages;\n    const messages = (update as any as Update.updateDeleteChannelMessages).messages.map((id) => generateMessageId(id));\n    const peerId: PeerId = channelId ? channelId.toPeerId(true) : this.findPeerIdByMids(messages);\n\n    if(!peerId) {\n      return;\n    }\n\n    this.apiManager.clearCache('messages.getSearchCounters', (params) => {\n      return this.appPeersManager.getPeerId(params.peer) === peerId;\n    });\n\n    const threadKeys: Set<string> = new Set(), topics: Map<number, ForumTopic> = new Map();\n    for(const mid of messages) {\n      const message = this.getMessageByPeer(peerId, mid);\n      const threadKey = this.getThreadKey(message);\n      if(!threadKey) {\n        continue;\n      }\n\n      const threadId = +threadKey.split('_')[1];\n      if(this.threadsStorage[peerId]?.[threadId]) {\n        threadKeys.add(threadKey);\n\n        if(!topics.has(threadId)) {\n          const topic = this.dialogsStorage.getForumTopic(peerId, threadId);\n          if(topic) {\n            topics.set(threadId, topic);\n          }\n        }\n      }\n    }\n\n    const historyUpdated = this.handleDeletedMessages(\n      peerId,\n      this.getHistoryMessagesStorage(peerId),\n      messages\n    );\n\n    const threadsStorages = Array.from(threadKeys).map((threadKey) => {\n      const [peerId, mid] = threadKey.split('_');\n      return this.getHistoryStorage(peerId.toPeerId(), +mid);\n    });\n\n    const historyStorages = [\n      this.getHistoryStorage(peerId),\n      ...threadsStorages\n    ];\n    historyStorages.forEach((historyStorage) => {\n      for(const mid of historyUpdated.msgs) {\n        historyStorage.history.delete(mid);\n      }\n\n      if(historyUpdated.count && historyStorage.count) {\n        historyStorage.count = Math.max(0, historyStorage.count - historyUpdated.count);\n      }\n    });\n\n    this.rootScope.dispatchEvent('history_delete', {peerId, msgs: historyUpdated.msgs});\n\n    const dialogs: (MTDialog.dialog | ForumTopic)[] = [\n      ...topics.values()\n    ];\n\n    const dialog = this.getDialogOnly(peerId);\n    if(dialog) {\n      dialogs.unshift(dialog);\n    }\n\n    dialogs.forEach((dialog) => {\n      const isTopic = dialog._ === 'forumTopic';\n      const affected = historyUpdated.unreadMentions || historyUpdated.unread;\n      const releaseUnreadCount = affected && this.dialogsStorage.prepareDialogUnreadCountModifying(dialog);\n\n      if(historyUpdated.unread) {\n        dialog.unread_count = Math.max(0, dialog.unread_count - historyUpdated.unread);\n      }\n\n      if(historyUpdated.unreadMentions) {\n        dialog.unread_mentions_count = !dialog.unread_count ? 0 : Math.max(0, dialog.unread_mentions_count - historyUpdated.unreadMentions);\n      }\n\n      if(affected) {\n        releaseUnreadCount();\n\n        if(!isTopic) {\n          this.rootScope.dispatchEvent('dialog_unread', {peerId, dialog});\n        }\n      }\n\n      if(historyUpdated.msgs.has(dialog.top_message)) {\n        const historyStorage = this.getHistoryStorage(dialog.peerId, isTopic ? dialog.id : undefined);\n        const slice = historyStorage.history.first;\n        if(slice.isEnd(SliceEnd.Bottom) && slice.length) {\n          const mid = slice[0];\n          const message = this.getMessageByPeer(peerId, mid);\n          this.setDialogTopMessage(message, dialog);\n        } else if(isTopic) {\n          this.dialogsStorage.getForumTopicById(peerId, dialog.id);\n        } else {\n          this.reloadConversation(peerId);\n        }\n      }\n    });\n  };\n\n  private onUpdateChannel = (update: Update.updateChannel) => {\n    const channelId = update.channel_id;\n    const peerId = channelId.toPeerId(true);\n    const channel = this.appChatsManager.getChat(channelId) as Chat.channel;\n\n    const needDialog = this.appChatsManager.isInChat(channelId);\n\n    const canViewHistory = !!getPeerActiveUsernames(channel)[0] || !channel.pFlags.left;\n    const hasHistory = this.historiesStorage[peerId] !== undefined;\n\n    if(canViewHistory !== hasHistory) {\n      delete this.historiesStorage[peerId];\n      this.rootScope.dispatchEvent('history_forbidden', peerId);\n    }\n\n    const dialog = this.getDialogOnly(peerId);\n    if(!!dialog !== needDialog) {\n      if(needDialog) {\n        this.reloadConversation(peerId);\n      } else {\n        this.dialogsStorage.dropDialogOnDeletion(peerId);\n      }\n    }\n\n    this.rootScope.dispatchEvent('channel_update', channelId);\n  };\n\n  private onUpdateChannelReload = (update: Update.updateChannelReload) => {\n    const peerId = update.channel_id.toPeerId(true);\n\n    // if(this.appPeersManager.isForum(peerId)) {\n    //   const cache = this.dialogsStorage.getForumTopicsCache(peerId);\n    //   if(cache.topics.size) {\n\n    //   }\n    // }\n\n    this.flushStoragesByPeerId(peerId);\n    Promise.all([\n      this.reloadConversation(peerId)\n    ]).then(() => {\n      this.rootScope.dispatchEvent('history_reload', peerId);\n    });\n  };\n\n  private onUpdateChannelMessageViews = (update: Update.updateChannelMessageViews) => {\n    const views = update.views;\n    const peerId = update.peerId ?? update.channel_id.toPeerId(true);\n    const mid = generateMessageId(update.id);\n    const message = this.getMessageByPeer(peerId, mid) as Message.message;\n    if(message?.views !== undefined && message.views < views) {\n      message.views = views;\n      this.pushBatchUpdate('messages_views', this.batchUpdateViews, message.peerId + '_' + message.mid);\n      this.setDialogToStateIfMessageIsTop(message);\n    }\n  };\n\n  private onUpdateServiceNotification = (update: Update.updateServiceNotification) => {\n    // this.log('updateServiceNotification', update);\n    if(update.pFlags?.popup) {\n      this.rootScope.dispatchEvent('service_notification', update);\n      return;\n    }\n\n    const fromId = SERVICE_PEER_ID;\n    const peerId = fromId;\n    const messageId = this.generateTempMessageId(peerId);\n    const message: Message.message = {\n      _: 'message',\n      id: messageId,\n      from_id: this.appPeersManager.getOutputPeer(fromId),\n      peer_id: this.appPeersManager.getOutputPeer(peerId),\n      pFlags: {unread: true},\n      date: (update.inbox_date || tsNow(true)) + this.timeManager.getServerTimeOffset(),\n      message: update.message,\n      media: update.media,\n      entities: update.entities\n    };\n    if(!this.appUsersManager.hasUser(fromId)) {\n      this.appUsersManager.saveApiUsers([{\n        _: 'user',\n        id: fromId,\n        pFlags: {verified: true},\n        access_hash: '0',\n        first_name: 'Telegram',\n        phone: '42777'\n      }]);\n    }\n    this.saveMessages([message], {isOutgoing: true});\n\n    if(update.inbox_date) {\n      this.pendingTopMsgs[peerId] = messageId;\n      this.onUpdateNewMessage({\n        _: 'updateNewMessage',\n        message,\n        pts: undefined,\n        pts_count: undefined\n      });\n    }\n  };\n\n  private onUpdatePinnedMessages = (update: Update.updatePinnedMessages | Update.updatePinnedChannelMessages) => {\n    const channelId = update._ === 'updatePinnedChannelMessages' ? update.channel_id : undefined;\n    const peerId = channelId ? channelId.toPeerId(true) : this.appPeersManager.getPeerId((update as Update.updatePinnedMessages).peer);\n\n    /* const storage = this.getSearchStorage(peerId, 'inputMessagesFilterPinned');\n    if(storage.count !== storage.history.length) {\n      if(storage.count !== undefined) {\n        delete this.searchesStorage[peerId]['inputMessagesFilterPinned'];\n      }\n\n      rootScope.broadcast('peer_pinned_messages', peerId);\n      break;\n    } */\n\n    const messages = update.messages.map((id) => generateMessageId(id));\n\n    const storage = this.getHistoryMessagesStorage(peerId);\n    const missingMessages = messages.filter((mid) => !storage.has(mid));\n    const getMissingPromise = missingMessages.length ? Promise.all(missingMessages.map((mid) => this.reloadMessages(peerId, mid))) : Promise.resolve();\n    getMissingPromise.finally(() => {\n      const werePinned = update.pFlags?.pinned;\n      if(werePinned) {\n        for(const mid of messages) {\n          // storage.history.push(mid);\n          const message = storage.get(mid) as Message.message;\n          message.pFlags.pinned = true;\n        }\n\n        /* if(this.pinnedMessages[peerId]?.maxId) {\n          const maxMid = Math.max(...messages);\n          this.pinnedMessages\n        } */\n\n        // storage.history.sort((a, b) => b - a);\n      } else {\n        for(const mid of messages) {\n          // storage.history.findAndSplice((_mid) => _mid === mid);\n          const message = storage.get(mid) as Message.message;\n          delete message.pFlags.pinned;\n        }\n      }\n\n      /* const info = this.pinnedMessages[peerId];\n      if(info) {\n        info.count += messages.length * (werePinned ? 1 : -1);\n      } */\n\n      delete this.pinnedMessages[this.getPinnedMessagesKey(peerId)];\n      this.appStateManager.getState().then((state) => {\n        delete state.hiddenPinnedMessages[peerId];\n        this.rootScope.dispatchEvent('peer_pinned_messages', {peerId, mids: messages, pinned: werePinned});\n      });\n    });\n  };\n\n  private onUpdateNotifySettings = (update: Update.updateNotifySettings) => {\n    const {peer, notify_settings} = update;\n    const isTopic = peer._ === 'notifyForumTopic';\n    const isPeerType = peer._ === 'notifyPeer' || isTopic;\n    if(!isPeerType) {\n      return;\n    }\n\n    const peerId = this.appPeersManager.getPeerId(peer.peer);\n    const dialog = this.dialogsStorage.getDialogOrTopic(peerId, isTopic ? generateMessageId(peer.top_msg_id) : undefined);\n    if(!dialog) {\n      return;\n    }\n\n    dialog.notify_settings = notify_settings;\n    this.rootScope.dispatchEvent('dialog_notify_settings', dialog);\n    this.dialogsStorage.setDialogToState(dialog);\n  };\n\n  private onUpdateNewScheduledMessage = (update: Update.updateNewScheduledMessage) => {\n    const message = update.message as MyMessage;\n    const peerId = this.getMessagePeer(message);\n\n    const storage = this.scheduledMessagesStorage[peerId];\n    if(!storage) {\n      return;\n    }\n\n    const mid = generateMessageId(message.id);\n\n    const oldMessage = this.getMessageFromStorage(storage, mid);\n    this.saveMessages([message], {storage, isScheduled: true});\n    const newMessage = this.getMessageFromStorage(storage, mid);\n\n    if(oldMessage) {\n      this.handleEditedMessage(oldMessage, newMessage, storage);\n      this.rootScope.dispatchEvent('message_edit', {storageKey: storage.key, peerId, mid: message.mid, message});\n    } else {\n      const pendingMessage = this.checkPendingMessage(message);\n      if(!pendingMessage) {\n        this.rootScope.dispatchEvent('scheduled_new', message as Message.message);\n      }\n    }\n  };\n\n  private onUpdateDeleteScheduledMessages = (update: Update.updateDeleteScheduledMessages) => {\n    const peerId = this.appPeersManager.getPeerId(update.peer);\n\n    const storage = this.scheduledMessagesStorage[peerId];\n    if(storage) {\n      const mids = update.messages.map((id) => generateMessageId(id));\n      this.handleDeletedMessages(peerId, storage, mids);\n\n      this.rootScope.dispatchEvent('scheduled_delete', {peerId, mids});\n    }\n  };\n\n  private onUpdateMessageExtendedMedia = (update: Update.updateMessageExtendedMedia) => {\n    const peerId = this.appPeersManager.getPeerId(update.peer);\n    const mid = generateMessageId(update.msg_id);\n    const storage = this.getHistoryMessagesStorage(peerId);\n    if(!storage.has(mid)) {\n      // this.fixDialogUnreadMentionsIfNoMessage(peerId);\n      return;\n    }\n\n    const message = this.getMessageFromStorage(storage, mid) as Message.message;\n    const messageMedia = message.media as MessageMedia.messageMediaInvoice;\n    if(messageMedia.extended_media?._ === 'messageExtendedMedia') {\n      return;\n    }\n\n    messageMedia.extended_media = update.extended_media;\n    this.onUpdateEditMessage({\n      _: 'updateEditMessage',\n      message,\n      pts: 0,\n      pts_count: 0\n    });\n  };\n\n  public setDialogToStateIfMessageIsTop(message: MyMessage) {\n    if(this.isMessageIsTopMessage(message)) {\n      this.dialogsStorage.setDialogToState(this.getDialogOnly(message.peerId));\n    }\n  }\n\n  public isMessageIsTopMessage(message: MyMessage) {\n    const dialog = this.getDialogOnly(message.peerId);\n    return dialog && dialog.top_message === message.mid;\n  }\n\n  private updateMessageRepliesIfNeeded(threadMessage: MyMessage) {\n    try { // * на всякий случай, скорее всего это не понадобится\n      const threadKey = this.getThreadKey(threadMessage);\n      if(threadKey) {\n        const repliesKey = this.threadsToReplies[threadKey];\n        if(repliesKey) {\n          const [peerId, mid] = repliesKey.split('_');\n\n          this.updateMessage(peerId.toPeerId(), +mid, 'replies_updated');\n        }\n      }\n    } catch(err) {\n      this.log.error('incrementMessageReplies err', err, threadMessage);\n    }\n  }\n\n  private getThreadKey(threadMessage: MyMessage) {\n    let threadKey = '';\n    if(threadMessage?.peerId?.isAnyChat()) {\n      const threadId = getMessageThreadId(threadMessage, this.appChatsManager.isForum(threadMessage.peerId.toChatId()));\n      if(threadId) {\n        threadKey = threadMessage.peerId + '_' + threadId;\n      }\n    }\n\n    return threadKey;\n  }\n\n  public updateMessage(peerId: PeerId, mid: number, broadcastEventName?: 'replies_updated'): Promise<Message.message> {\n    const promise: Promise<Message.message> = this.reloadMessages(peerId, mid, true).then(() => {\n      const message = this.getMessageByPeer(peerId, mid) as Message.message;\n      if(!message) {\n        return;\n      }\n\n      if(broadcastEventName) {\n        this.rootScope.dispatchEvent(broadcastEventName, message);\n      }\n\n      return message;\n    });\n\n    return promise;\n  }\n\n  private checkPendingMessage(message: MyMessage) {\n    const randomId = this.pendingByMessageId[message.mid];\n    let pendingMessage: ReturnType<AppMessagesManager['finalizePendingMessage']>;\n    if(randomId) {\n      const pendingData = this.pendingByRandomId[randomId];\n      if(pendingMessage = this.finalizePendingMessage(randomId, message)) {\n        this.rootScope.dispatchEvent('history_update', {\n          storageKey: pendingData.storage.key,\n          message,\n          sequential: pendingData.sequential\n        });\n      }\n\n      delete this.pendingByMessageId[message.mid];\n    }\n\n    return pendingMessage;\n  }\n\n  public mutePeer(options: {peerId: PeerId, muteUntil: number, threadId?: number}) {\n    if(!(options = this.appNotificationsManager.validatePeerSettings(options))) {\n      return;\n    }\n\n    const {peerId, muteUntil, threadId} = options;\n    const settings: InputPeerNotifySettings = {\n      _: 'inputPeerNotifySettings'\n    };\n\n    settings.mute_until = muteUntil;\n\n    const peer = this.appPeersManager.getInputPeerById(peerId);\n    return this.appNotificationsManager.updateNotifySettings(threadId ? {\n      _: 'inputNotifyForumTopic',\n      peer,\n      top_msg_id: getServerMessageId(threadId)\n    } : {\n      _: 'inputNotifyPeer',\n      peer\n    }, settings);\n  }\n\n  public togglePeerMute({peerId, mute, threadId}: {peerId: PeerId, mute?: boolean, threadId?: number}) {\n    if(mute === undefined) {\n      mute = !this.appNotificationsManager.isPeerLocalMuted({peerId, respectType: false, threadId});\n    }\n\n    return this.mutePeer({peerId, muteUntil: mute ? MUTE_UNTIL : 0, threadId});\n  }\n\n  private findPeerIdByMids(mids: number[]) {\n    for(let length = mids.length, i = length - 1; i >= 0; --i) {\n      const mid = mids[i];\n      const message = this.getMessageById(mid);\n      if(message) {\n        return message.peerId;\n      }\n    }\n  }\n\n  public canSendToPeer(peerId: PeerId, threadId?: number, action: ChatRights = 'send_messages') {\n    if(this.appPeersManager.isPeerRestricted(peerId)) {\n      return false;\n    }\n\n    if(peerId.isAnyChat()) {\n      const chatId = peerId.toChatId();\n      if(threadId) {\n        const topic = this.dialogsStorage.getForumTopic(peerId, threadId);\n        if(topic?.pFlags?.closed && !this.appChatsManager.hasRights(chatId, 'manage_topics')) {\n          return false;\n        }\n      }\n\n      // const isChannel = appPeersManager.isChannel(peerId);\n      const chat = this.appChatsManager.getChat(chatId) as Chat.chat;\n      const hasRights = /* isChannel &&  */this.appChatsManager.hasRights(chatId, action, undefined, !!threadId);\n      return /* !isChannel ||  */hasRights && (!chat.pFlags.left || !!threadId);\n    } else {\n      return this.appUsersManager.canSendToUser(peerId);\n    }\n  }\n\n  public finalizePendingMessage(randomId: Long, finalMessage: MyMessage) {\n    const pendingData = this.pendingByRandomId[randomId];\n    if(!pendingData) {\n      return;\n    }\n\n    const {peerId, tempId, threadId, storage} = pendingData;\n\n    [\n      this.getHistoryStorage(peerId),\n      threadId ? this.getHistoryStorage(peerId, threadId) : undefined\n    ]\n    .filter(Boolean)\n    .forEach((storage) => {\n      storage.history.delete(tempId);\n    });\n\n    // this.log('pending', randomID, historyStorage.pending)\n\n    const tempMessage: MyMessage = this.getMessageFromStorage(storage, tempId);\n    if(tempMessage) {\n      delete finalMessage.pFlags.is_outgoing;\n      delete finalMessage.pending;\n      delete finalMessage.error;\n      delete finalMessage.random_id;\n      delete finalMessage.send;\n    }\n\n    this.rootScope.dispatchEvent('messages_pending');\n\n    delete this.pendingByRandomId[randomId];\n\n    this.finalizePendingMessageCallbacks(storage, tempId, finalMessage);\n\n    return tempMessage;\n  }\n\n  public finalizePendingMessageCallbacks(storage: MessagesStorage, tempId: number, message: MyMessage) {\n    const callbacks = this.tempFinalizeCallbacks[tempId];\n    // this.log.warn(callbacks, tempId);\n    if(callbacks !== undefined) {\n      for(const name in callbacks) {\n        const {deferred, callback} = callbacks[name];\n        // this.log(`finalizePendingMessageCallbacks: will invoke ${name} callback`);\n        callback(message).then(deferred.resolve, deferred.reject);\n      }\n\n      delete this.tempFinalizeCallbacks[tempId];\n    }\n\n    // set cached url to media\n    if((message as Message.message).media) {\n      assumeType<Message.message>(message);\n      const {photo: newPhoto, document: newDoc} = message.media as any;\n      if(newPhoto) {\n        const photo = this.appPhotosManager.getPhoto('' + tempId);\n        if(/* photo._ !== 'photoEmpty' */photo) {\n          const newPhotoSize = newPhoto.sizes[newPhoto.sizes.length - 1];\n          const cacheContext = this.thumbsStorage.getCacheContext(newPhoto, newPhotoSize.type);\n          const oldCacheContext = this.thumbsStorage.getCacheContext(photo, THUMB_TYPE_FULL);\n          Object.assign(cacheContext, oldCacheContext);\n\n          const photoSize = newPhoto.sizes[newPhoto.sizes.length - 1] as PhotoSize.photoSize;\n\n          const downloadOptions = getPhotoDownloadOptions(newPhoto, photoSize);\n          const fileName = getFileNameByLocation(downloadOptions.location);\n          // this.appDownloadManager.fakeDownload(fileName, oldCacheContext.url);\n        }\n      } else if(newDoc) {\n        const oldDoc = this.appDocsManager.getDoc('' + tempId);\n        if(oldDoc) {\n          const oldCacheContext = this.thumbsStorage.getCacheContext(oldDoc);\n          if(\n            /* doc._ !== 'documentEmpty' &&  */\n            oldDoc.type &&\n            oldDoc.type !== 'sticker' &&\n            oldDoc.mime_type !== 'image/gif' &&\n            oldCacheContext.url\n          ) {\n            const cacheContext = this.thumbsStorage.getCacheContext(newDoc);\n            Object.assign(cacheContext, oldCacheContext);\n\n            const fileName = getDocumentInputFileName(newDoc);\n            // this.appDownloadManager.fakeDownload(fileName, oldCacheContext.url);\n          }\n        }\n      } else if((message.media as MessageMedia.messageMediaPoll).poll) {\n        delete this.appPollsManager.polls[tempId];\n        delete this.appPollsManager.results[tempId];\n      }\n    }\n\n    const tempMessage = this.getMessageFromStorage(storage, tempId);\n    storage.delete(tempId);\n\n    if(!(tempMessage as Message.message).reply_markup && (message as Message.message).reply_markup) {\n      setTimeout(() => { // TODO: refactor it to normal buttons adding\n        if(!this.getMessageFromStorage(storage, message.mid)) {\n          return;\n        }\n\n        this.rootScope.dispatchEvent('message_edit', {storageKey: storage.key, peerId: message.peerId, mid: message.mid, message});\n      }, 0);\n    }\n\n    this.handleReleasingMessage(tempMessage, storage);\n\n    this.rootScope.dispatchEvent('message_sent', {storageKey: storage.key, tempId, tempMessage, mid: message.mid, message});\n  }\n\n  public incrementMaxSeenId(maxId: number) {\n    if(!maxId || !(!this.maxSeenId || maxId > this.maxSeenId)) {\n      return false;\n    }\n\n    this.maxSeenId = maxId;\n    this.appStateManager.pushToState('maxSeenMsgId', maxId);\n\n    this.apiManager.invokeApi('messages.receivedMessages', {\n      max_id: getServerMessageId(maxId)\n    });\n  }\n\n  public async getMessageReactionsListAndReadParticipants(\n    message: Message.message,\n    limit?: number,\n    reaction?: Reaction,\n    offset?: string,\n    skipReadParticipants?: boolean,\n    skipReactionsList?: boolean\n  ) {\n    const emptyMessageReactionsList = {\n      reactions: [] as MessagePeerReaction[],\n      count: 0,\n      next_offset: undefined as string\n    };\n\n    const canViewMessageReadParticipants = await this.canViewMessageReadParticipants(message);\n    if(canViewMessageReadParticipants && limit === undefined) {\n      limit = 100;\n    } else if(limit === undefined) {\n      limit = 50;\n    }\n\n    return Promise.all([\n      canViewMessageReadParticipants && !reaction && !skipReadParticipants ? this.getMessageReadParticipants(message.peerId, message.mid).catch(() => [] as UserId[]) : [] as UserId[],\n\n      message.reactions?.recent_reactions?.length && !skipReactionsList ? this.appReactionsManager.getMessageReactionsList(message.peerId, message.mid, limit, reaction, offset).catch((err) => emptyMessageReactionsList) : emptyMessageReactionsList\n    ]).then(([userIds, messageReactionsList]) => {\n      const readParticipantsPeerIds = userIds.map((userId) => userId.toPeerId());\n\n      const filteredReadParticipants = readParticipantsPeerIds.slice();\n      forEachReverse(filteredReadParticipants, (peerId, idx, arr) => {\n        if(messageReactionsList.reactions.some((reaction) => this.appPeersManager.getPeerId(reaction.peer_id) === peerId)) {\n          arr.splice(idx, 1);\n        }\n      });\n\n      let combined: {peerId: PeerId, reaction?: Reaction}[] = messageReactionsList.reactions.map((reaction) => ({peerId: this.appPeersManager.getPeerId(reaction.peer_id), reaction: reaction.reaction}));\n      combined = combined.concat(filteredReadParticipants.map((readPeerId) => ({peerId: readPeerId})));\n\n      return {\n        reactions: messageReactionsList.reactions,\n        reactionsCount: messageReactionsList.count,\n        readParticipants: readParticipantsPeerIds,\n        combined: combined,\n        nextOffset: messageReactionsList.next_offset\n      };\n    });\n  }\n\n  public getMessageReadParticipants(peerId: PeerId, mid: number): Promise<UserId[]> {\n    return this.apiManager.invokeApiSingle('messages.getMessageReadParticipants', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: getServerMessageId(mid)\n    }).then((userIds) => { // ! convert long to number\n      return userIds.map((userId) => userId.toUserId());\n    });\n  }\n\n  public async canViewMessageReadParticipants(message: Message) {\n    if(\n      message?._ !== 'message' ||\n      message.pFlags.is_outgoing ||\n      !message.pFlags.out ||\n      !this.appPeersManager.isAnyGroup(message.peerId)\n    ) {\n      return false;\n    }\n\n    const chat = this.appChatsManager.getChat(message.peerId.toChatId()) as Chat.chat | Chat.channel;\n    const appConfig = await this.apiManager.getAppConfig();\n    return chat.participants_count <= appConfig.chat_read_mark_size_threshold &&\n      (tsNow(true) - message.date) < appConfig.chat_read_mark_expire_period;\n  }\n\n  public incrementMessageViews(peerId: PeerId, mids: number[]) {\n    if(!mids.length) {\n      return;\n    }\n\n    return this.apiManager.invokeApiSingle('messages.getMessagesViews', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: mids.map((mid) => getServerMessageId(mid)),\n      increment: true\n    }).then((views) => {\n      const updates: Update[] = new Array(mids.length);\n      for(let i = 0, length = mids.length; i < length; ++i) {\n        updates[i] = {\n          _: 'updateChannelMessageViews',\n          channel_id: NULL_PEER_ID,\n          peerId,\n          id: mids[i],\n          views: views.views[i].views\n        };\n      }\n\n      this.apiUpdatesManager.processUpdateMessage({\n        _: 'updates',\n        updates,\n        chats: views.chats,\n        users: views.users\n      });\n    });\n  }\n\n  private notifyAboutMessage(message: MyMessage, options: Partial<{\n    fwdCount: number,\n    peerReaction: MessagePeerReaction,\n    peerTypeNotifySettings: PeerNotifySettings\n  }> = {}) {\n    const peerId = this.getMessagePeer(message);\n\n    if(this.appPeersManager.isPeerRestricted(peerId)) {\n      return;\n    }\n\n    const tabs = appTabsManager.getTabs();\n    let tab = tabs.find((tab) => {\n      const {chatPeerIds} = tab.state;\n      return chatPeerIds[chatPeerIds.length - 1] === peerId;\n    });\n\n    if(!tab && tabs.length) {\n      tabs.sort((a, b) => a.state.idleStartTime - b.state.idleStartTime);\n      tab = !tabs[0].state.idleStartTime ? tabs[0] : tabs[tabs.length - 1];\n    }\n\n    const port = MTProtoMessagePort.getInstance<false>();\n    port.invokeVoid('notificationBuild', {\n      message,\n      ...options\n    }, tab?.source);\n  }\n\n  public getScheduledMessagesStorage(peerId: PeerId) {\n    return this.scheduledMessagesStorage[peerId] ??= this.createMessageStorage(peerId, 'scheduled');\n  }\n\n  public getScheduledMessageByPeer(peerId: PeerId, mid: number) {\n    return this.getMessageFromStorage(this.getScheduledMessagesStorage(peerId), mid);\n  }\n\n  public getScheduledMessages(peerId: PeerId) {\n    if(!this.canSendToPeer(peerId)) return;\n\n    const storage = this.getScheduledMessagesStorage(peerId);\n    if(storage.size) {\n      return [...storage.keys()];\n    }\n\n    return this.apiManager.invokeApiSingle('messages.getScheduledHistory', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      hash: ''\n    }).then((historyResult) => {\n      if(historyResult._ !== 'messages.messagesNotModified') {\n        this.appUsersManager.saveApiUsers(historyResult.users);\n        this.appChatsManager.saveApiChats(historyResult.chats);\n\n        const storage = this.getScheduledMessagesStorage(peerId);\n        this.saveMessages(historyResult.messages, {storage, isScheduled: true});\n        return [...storage.keys()];\n      }\n\n      return [];\n    });\n  }\n\n  public sendScheduledMessages(peerId: PeerId, mids: number[]) {\n    return this.apiManager.invokeApi('messages.sendScheduledMessages', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: mids.map((mid) => getServerMessageId(mid))\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public deleteScheduledMessages(peerId: PeerId, mids: number[]) {\n    return this.apiManager.invokeApi('messages.deleteScheduledMessages', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      id: mids.map((mid) => getServerMessageId(mid))\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public getMessageWithReplies(message: Message.message) {\n    return this.filterMessages(message, (message) => !!(message as Message.message).replies)[0] as any;\n  }\n\n  public getMessageWithCommentReplies(message: Message.message) {\n    if(message.peerId !== REPLIES_PEER_ID) {\n      message = this.getMessageWithReplies(message);\n      const replies = message?.replies;\n      if(!(replies && replies.pFlags.comments && replies.channel_id.toChatId() !== REPLIES_HIDDEN_CHANNEL_ID)) {\n        return;\n      }\n    }\n\n    return message;\n  }\n\n  public isFetchIntervalNeeded(peerId: PeerId) {\n    return peerId.isAnyChat() && (\n      !this.appChatsManager.isInChat(peerId.toChatId()) ||\n      this.appChatsManager.isForum(peerId.toChatId())\n    );\n  }\n\n  public async getNewHistory(peerId: PeerId, threadId?: number) {\n    if(!this.isFetchIntervalNeeded(peerId)) {\n      return;\n    }\n\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n    const slice = historyStorage.history.slice;\n    if(!slice.isEnd(SliceEnd.Bottom)) {\n      return;\n    }\n\n    delete historyStorage.maxId;\n    slice.unsetEnd(SliceEnd.Bottom);\n\n    // if there is no id - then request by first id because cannot request by id 0 with backLimit\n    const historyResult = await this.getHistory(peerId, slice[0] ?? 1, 0, 50, threadId);\n    for(let i = 0, length = historyResult.history.length; i < length; ++i) {\n      this.handleNewMessage(this.getMessageByPeer(peerId, historyResult.history[i]));\n    }\n\n    return {isBottomEnd: historyStorage.history.slice.isEnd(SliceEnd.Bottom)};\n  }\n\n  /**\n   * * https://core.telegram.org/api/offsets, offset_id is inclusive\n   */\n  // public getHistory(peerId: PeerId, maxId?: number, limit?: number, backLimit?: number, threadId?: number, onlyCache?: false): Promise<HistoryResult> | HistoryResult;\n  // public getHistory(peerId: PeerId, maxId?: number, limit?: number, backLimit?: number, threadId?: number, onlyCache?: true): HistoryResult;\n  public getHistory(peerId: PeerId, maxId: number = 0, limit?: number, backLimit?: number, threadId?: number/* , onlyCache?: boolean */): Promise<HistoryResult> | HistoryResult {\n    const historyStorage = this.getHistoryStorage(peerId, threadId);\n\n    if(this.appPeersManager.isPeerRestricted(peerId)) {\n      const first = historyStorage.history.first;\n      first.setEnd(SliceEnd.Both);\n\n      const slice = first.slice(0, 0);\n      slice.setEnd(SliceEnd.Both);\n\n      return {\n        count: 0,\n        history: Array.from(slice),\n        isEnd: slice.getEnds(),\n        offsetIdOffset: 0\n      };\n    }\n\n    let offset = 0;\n    /*\n    let offsetFound = true;\n\n    if(maxId) {\n      offsetFound = false;\n      for(; offset < historyStorage.history.length; offset++) {\n        if(maxId > historyStorage.history.slice[offset]) {\n          offsetFound = true;\n          break;\n        }\n      }\n    }\n\n    if(offsetFound && (\n      historyStorage.count !== null && historyStorage.history.length === historyStorage.count ||\n      historyStorage.history.length >= offset + limit\n      )) {\n      if(backLimit) {\n        backLimit = Math.min(offset, backLimit);\n        offset = Math.max(0, offset - backLimit);\n        limit += backLimit;\n      } else {\n        limit = limit;\n      }\n\n      const history = historyStorage.history.slice.slice(offset, offset + limit);\n      return {\n        count: historyStorage.count,\n        history: history,\n        offsetIdOffset: offset\n      };\n    }\n\n    if(offsetFound) {\n      offset = 0;\n    } */\n\n    if(backLimit) {\n      offset = -backLimit;\n      limit += backLimit;\n\n      /* return this.requestHistory(reqPeerId, maxId, limit, offset, undefined, threadId).then((historyResult) => {\n        historyStorage.count = (historyResult as MessagesMessages.messagesMessagesSlice).count || historyResult.messages.length;\n\n        const history = (historyResult.messages as MyMessage[]).map((message) => message.mid);\n        return {\n          count: historyStorage.count,\n          history,\n          offsetIdOffset: (historyResult as MessagesMessages.messagesMessagesSlice).offset_id_offset || 0\n        };\n      }); */\n    }\n\n    const haveSlice = historyStorage.history.sliceMe(maxId, offset, limit);\n    if(haveSlice && (haveSlice.slice.length === limit || (haveSlice.fulfilled & SliceEnd.Both) === SliceEnd.Both)) {\n      return {\n        count: historyStorage.count,\n        history: Array.from(haveSlice.slice),\n        isEnd: haveSlice.slice.getEnds(),\n        offsetIdOffset: haveSlice.offsetIdOffset\n      };\n    }\n\n    // if(onlyCache) {\n    //   return;\n    // }\n\n    return this.fillHistoryStorage(peerId, maxId, limit, offset, historyStorage, threadId).then(() => {\n      const slice = historyStorage.history.sliceMe(maxId, offset, limit);\n      const f = slice?.slice || historyStorage.history.constructSlice();\n      return {\n        count: historyStorage.count,\n        history: Array.from(f),\n        isEnd: f.getEnds(),\n        offsetIdOffset: slice?.offsetIdOffset || historyStorage.count\n      };\n    });\n  }\n\n  public isHistoryResultEnd(historyResult: Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>, limit: number, add_offset: number) {\n    const {offset_id_offset, messages} = historyResult as MessagesMessages.messagesMessagesSlice;\n\n    const count = (historyResult as MessagesMessages.messagesMessagesSlice).count || messages.length;\n    const offsetIdOffset = offset_id_offset || 0;\n\n    const topWasMeantToLoad = add_offset < 0 ? limit + add_offset : limit;\n\n    const isTopEnd = offsetIdOffset >= (count - topWasMeantToLoad) || count < topWasMeantToLoad;\n    const isBottomEnd = !offsetIdOffset || (add_offset < 0 && (offsetIdOffset + add_offset) <= 0);\n\n    return {count, offsetIdOffset, isTopEnd, isBottomEnd};\n  }\n\n  public mergeHistoryResult(\n    slicedArray: SlicedArray<number>,\n    historyResult: Parameters<AppMessagesManager['isHistoryResultEnd']>[0],\n    offset_id: number,\n    limit: number,\n    add_offset: number\n  ) {\n    const {messages} = historyResult as MessagesMessages.messagesMessagesSlice;\n    const isEnd = this.isHistoryResultEnd(historyResult, limit, add_offset);\n    const {count, offsetIdOffset, isTopEnd, isBottomEnd} = isEnd;\n    const mids = messages.map((message) => {\n      return (message as MyMessage).mid;\n    });\n\n    // * add bound manually.\n    // * offset_id will be inclusive only if there is 'add_offset' <= -1 (-1 - will only include the 'offset_id')\n    // * check that offset_id is not 0\n    if(offset_id && getServerMessageId(offset_id) && !mids.includes(offset_id) && offsetIdOffset < count) {\n      let i = 0;\n      for(const length = mids.length; i < length; ++i) {\n        if(offset_id > mids[i]) {\n          break;\n        }\n      }\n\n      mids.splice(i, 0, offset_id);\n    }\n\n    const slice = slicedArray.insertSlice(mids) || slicedArray.slice;\n    if(isTopEnd) {\n      slice.setEnd(SliceEnd.Top);\n    }\n\n    if(isBottomEnd) {\n      slice.setEnd(SliceEnd.Bottom);\n    }\n\n    return {slice, mids, messages, ...isEnd};\n  }\n\n  public fillHistoryStorage(peerId: PeerId, offset_id: number, limit: number, add_offset: number, historyStorage: HistoryStorage, threadId?: number): Promise<void> {\n    const wasMaxId = historyStorage.maxId;\n    return this.requestHistory(peerId, offset_id, limit, add_offset, undefined, threadId).then((historyResult) => {\n      const {count, isBottomEnd, slice, messages} = this.mergeHistoryResult(historyStorage.history, historyResult, offset_id, limit, add_offset);\n\n      historyStorage.count = count;\n\n      /* if(!maxId && historyResult.messages.length) {\n        maxId = this.incrementMessageId((historyResult.messages[0] as MyMessage).mid, 1);\n      }\n\n      const wasTotalCount = historyStorage.history.length; */\n\n      for(let i = 0, length = messages.length; i < length; ++i) {\n        const message = messages[i] as MyMessage;\n        if(this.mergeReplyKeyboard(historyStorage, message)) {\n          this.rootScope.dispatchEvent('history_reply_markup', {peerId});\n        }\n      }\n\n      if(isBottomEnd) {\n        const newMaxId = slice[0];\n\n        if(historyStorage.maxId === wasMaxId) {\n          const first = historyStorage.history.first;\n          if(first !== slice) {\n            historyStorage.history.deleteSlice(first);\n          }\n\n          if(historyStorage.maxId !== newMaxId) {\n            historyStorage.maxId = slice[0]; // ! WARNING\n\n            this.reloadConversation(peerId); // when top_message is deleted but cached\n          }\n        }\n      }\n\n      /* const isBackLimit = offset < 0 && -offset !== fullLimit;\n      if(isBackLimit) {\n        return;\n      }\n\n      const totalCount = historyStorage.history.length;\n      fullLimit -= (totalCount - wasTotalCount);\n\n      const migratedNextPeer = this.migratedFromTo[peerId];\n      const migratedPrevPeer = this.migratedToFrom[peerId]\n      const isMigrated = migratedNextPeer !== undefined || migratedPrevPeer !== undefined;\n\n      if(isMigrated) {\n        historyStorage.count = Math.max(historyStorage.count, totalCount) + 1;\n      }\n\n      if(fullLimit > 0) {\n        maxId = historyStorage.history.slice[totalCount - 1];\n        if(isMigrated) {\n          if(!historyResult.messages.length) {\n            if(migratedPrevPeer) {\n              maxId = 0;\n              peerId = migratedPrevPeer;\n            } else {\n              historyStorage.count = totalCount;\n              return true;\n            }\n          }\n\n          return this.fillHistoryStorage(peerId, maxId, fullLimit, historyStorage, threadId);\n        } else if(totalCount < historyStorage.count) {\n          return this.fillHistoryStorage(peerId, maxId, fullLimit, offset, historyStorage, threadId);\n        }\n      } */\n    });\n  }\n\n  public requestHistory(peerId: PeerId, maxId: number, limit = 0, offset = 0, offsetDate = 0, threadId = 0): Promise<Exclude<MessagesMessages, MessagesMessages.messagesMessagesNotModified>> {\n    // console.trace('requestHistory', peerId, maxId, limit, offset);\n\n    // rootScope.broadcast('history_request');\n\n    const options: MessagesGetReplies | MessagesGetHistory = {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      offset_id: getServerMessageId(maxId) || 0,\n      offset_date: offsetDate,\n      add_offset: offset,\n      limit,\n      max_id: 0,\n      min_id: 0,\n      hash: 0\n    };\n\n    if(threadId) {\n      (options as MessagesGetReplies).msg_id = getServerMessageId(threadId) || 0;\n    }\n\n    const promise: ReturnType<AppMessagesManager['requestHistory']> = this.apiManager.invokeApiSingle(threadId ? 'messages.getReplies' : 'messages.getHistory', options, {\n      // timeout: APITIMEOUT,\n      noErrorBox: true\n    }) as any;\n\n    return promise.then((historyResult) => {\n      if(DEBUG) {\n        this.log('requestHistory result:', peerId, historyResult, maxId, limit, offset);\n      }\n\n      this.appUsersManager.saveApiUsers(historyResult.users);\n      this.appChatsManager.saveApiChats(historyResult.chats);\n      this.saveMessages(historyResult.messages);\n\n      if('pts' in historyResult) {\n        this.apiUpdatesManager.addChannelState(peerId.toChatId(), historyResult.pts);\n      }\n\n      let length = historyResult.messages.length, count = (historyResult as MessagesMessages.messagesMessagesSlice).count;\n      if(length && !historyResult.messages[length - 1]) {\n        historyResult.messages.splice(length - 1, 1);\n        length--;\n        count--;\n      }\n\n      // will load more history if last message is album grouped (because it can be not last item)\n      // historyResult.messages: desc sorted\n      const historyStorage = this.getHistoryStorage(peerId, threadId);\n      const oldestMessage: Message.message = historyResult.messages[length - 1] as any;\n      if(length && oldestMessage.grouped_id) {\n        const foundSlice = historyStorage.history.findSlice(oldestMessage.mid);\n        if(foundSlice && (foundSlice.slice.length + historyResult.messages.length) < count) {\n          return this.requestHistory(peerId, oldestMessage.mid, 10, 0, offsetDate, threadId).then((_historyResult) => {\n            return historyResult;\n          });\n        }\n      }\n\n      return historyResult;\n    }, (error) => {\n      switch(error.type) {\n        case 'CHANNEL_PRIVATE':\n          let channel = this.appChatsManager.getChat(peerId.toChatId());\n          if(channel._ === 'channel') {\n            channel = {\n              _: 'channelForbidden',\n              id: peerId.toChatId(),\n              access_hash: channel.access_hash,\n              title: channel.title,\n              pFlags: channel.pFlags\n            };\n          }\n\n          this.apiUpdatesManager.processUpdateMessage({\n            _: 'updates',\n            updates: [{\n              _: 'updateChannel',\n              channel_id: peerId.toChatId()\n            }],\n            chats: [channel],\n            users: []\n          });\n          break;\n      }\n\n      throw error;\n    });\n  }\n\n  public fetchSingleMessages() {\n    if(this.fetchSingleMessagesPromise) {\n      return this.fetchSingleMessagesPromise;\n    }\n\n    return this.fetchSingleMessagesPromise = pause(0).then(() => {\n      const requestPromises: Promise<void>[] = [];\n\n      for(const [peerId, map] of this.needSingleMessages) {\n        const mids = [...map.keys()];\n        const msgIds: InputMessage[] = mids.map((mid) => {\n          return {\n            _: 'inputMessageID',\n            id: getServerMessageId(mid)\n          };\n        });\n\n        let promise: Promise<MethodDeclMap['channels.getMessages']['res'] | MethodDeclMap['messages.getMessages']['res']>;\n        if(peerId.isAnyChat() && this.appPeersManager.isChannel(peerId)) {\n          promise = this.apiManager.invokeApiSingle('channels.getMessages', {\n            channel: this.appChatsManager.getChannelInput(peerId.toChatId()),\n            id: msgIds\n          });\n        } else {\n          promise = this.apiManager.invokeApiSingle('messages.getMessages', {\n            id: msgIds\n          });\n        }\n\n        const after = promise.then((getMessagesResult) => {\n          assumeType<Exclude<MessagesMessages.messagesMessages, MessagesMessages.messagesMessagesNotModified>>(getMessagesResult);\n\n          this.appUsersManager.saveApiUsers(getMessagesResult.users);\n          this.appChatsManager.saveApiChats(getMessagesResult.chats);\n          const messages = this.saveMessages(getMessagesResult.messages);\n\n          for(let i = 0; i < messages.length; ++i) {\n            const message = messages[i];\n            if(!message) {\n              continue;\n            }\n\n            const mid = generateMessageId(message.id);\n            const promise = map.get(mid);\n            promise.resolve(message);\n            map.delete(mid);\n          }\n\n          if(map.size) {\n            for(const [mid, promise] of map) {\n              promise.resolve(this.generateEmptyMessage(mid));\n            }\n          }\n        }).finally(() => {\n          this.rootScope.dispatchEvent('messages_downloaded', {peerId, mids});\n        });\n\n        requestPromises.push(after);\n      }\n\n      this.needSingleMessages.clear();\n\n      return Promise.all(requestPromises).then(noop, noop).then(() => {\n        this.fetchSingleMessagesPromise = undefined;\n        if(this.needSingleMessages.size) this.fetchSingleMessages();\n      });\n    });\n  }\n\n  public reloadMessages(peerId: PeerId, mid: number, overwrite?: boolean): Promise<MyMessage>;\n  public reloadMessages(peerId: PeerId, mid: number[], overwrite?: boolean): Promise<MyMessage[]>;\n  public reloadMessages(peerId: PeerId, mid: number | number[], overwrite?: boolean): Promise<MyMessage | MyMessage[]> {\n    if(Array.isArray(mid)) {\n      return Promise.all(mid.map((mid) => {\n        return this.reloadMessages(peerId, mid, overwrite);\n      }));\n    }\n\n    const message = this.getMessageByPeer(peerId, mid);\n    if(message && !overwrite) {\n      this.rootScope.dispatchEvent('messages_downloaded', {peerId, mids: [mid]});\n      return Promise.resolve(message);\n    } else {\n      let map = this.needSingleMessages.get(peerId);\n      if(!map) {\n        this.needSingleMessages.set(peerId, map = new Map());\n      }\n\n      let promise = map.get(mid);\n      if(promise) {\n        return promise;\n      }\n\n      promise = deferredPromise();\n      map.set(mid, promise);\n      this.fetchSingleMessages();\n      return promise;\n    }\n  }\n\n  public getExtendedMedia(peerId: PeerId, mids: number[]) {\n    let map = this.extendedMedia.get(peerId);\n    if(!map) {\n      this.extendedMedia.set(peerId, map = new Map());\n    }\n\n    const deferred = deferredPromise<void>();\n    const toRequest: number[] = [];\n    const promises = mids.map((mid) => {\n      let promise = map.get(mid);\n      if(!promise) {\n        map.set(mid, promise = deferred);\n        toRequest.push(mid);\n\n        promise.then(() => {\n          map.delete(mid);\n          if(!map.size && this.extendedMedia.get(peerId) === map) {\n            this.extendedMedia.delete(peerId);\n          }\n        });\n      }\n\n      return promise;\n    });\n\n    if(!toRequest.length) {\n      deferred.resolve();\n    } else {\n      this.apiManager.invokeApi('messages.getExtendedMedia', {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        id: toRequest.map((mid) => getServerMessageId(mid))\n      }).then((updates) => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n        deferred.resolve();\n      });\n    }\n\n    return Promise.all(promises);\n  }\n\n  public fetchMessageReplyTo(message: MyMessage) {\n    if(!message.reply_to_mid) return Promise.resolve(this.generateEmptyMessage(0));\n    const replyToPeerId = message.reply_to.reply_to_peer_id ? this.appPeersManager.getPeerId(message.reply_to.reply_to_peer_id) : message.peerId;\n    return this.reloadMessages(replyToPeerId, message.reply_to_mid).then((originalMessage) => {\n      if(!originalMessage) { // ! break the infinite loop\n        message = this.getMessageByPeer(message.peerId, message.mid); // message can come from other thread\n        delete message.reply_to_mid; // ! WARNING!\n      }\n\n      if(message._ === 'messageService') {\n        const peerId = message.peerId;\n        this.rootScope.dispatchEvent('message_edit', {\n          storageKey: `${peerId}_history`,\n          peerId: peerId,\n          mid: message.mid,\n          message\n        });\n\n        if(this.isMessageIsTopMessage(message)) {\n          this.rootScope.dispatchEvent('dialogs_multiupdate', new Map([[peerId, {dialog: this.getDialogOnly(peerId)}]]));\n        }\n      }\n\n      return originalMessage;\n    });\n  }\n\n  private getTypingKey(peerId: PeerId, threadId?: number) {\n    return threadId ? `${peerId}_${threadId}` : peerId;\n  }\n\n  public setTyping(\n    peerId: PeerId,\n    action: SendMessageAction,\n    force?: boolean,\n    threadId?: number\n  ): Promise<boolean> {\n    if(threadId && !this.appPeersManager.isForum(peerId)) {\n      threadId = undefined;\n    }\n\n    const key = this.getTypingKey(peerId, threadId);\n    let typing = this.typings[key];\n    if(\n      !peerId ||\n      !this.canSendToPeer(peerId) ||\n      peerId === this.appPeersManager.peerId ||\n      // (!force && deepEqual(typing?.action, action))\n      (!force && typing?.action?._ === action._)\n    ) {\n      return Promise.resolve(false);\n    }\n\n    if(typing?.timeout) {\n      clearTimeout(typing.timeout);\n    }\n\n    typing = this.typings[key] = {\n      action\n    };\n\n    return this.apiManager.invokeApi('messages.setTyping', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      action,\n      top_msg_id: threadId ? getServerMessageId(threadId) : undefined\n    }).finally(() => {\n      if(typing === this.typings[key]) {\n        typing.timeout = ctx.setTimeout(() => {\n          delete this.typings[key];\n        }, 6000);\n      }\n    });\n  }\n\n  private handleReleasingMessage(message: MyMessage, storage: MessagesStorage) {\n    const media = (message as Message.message).media;\n    if(media) {\n      const c = (media as MessageMedia.messageMediaWebPage).webpage as WebPage.webPage || media as MessageMedia.messageMediaPhoto | MessageMedia.messageMediaDocument;\n      const smth: Photo.photo | MyDocument = (c as MessageMedia.messageMediaPhoto).photo as any || (c as MessageMedia.messageMediaDocument).document as any;\n\n      if(smth?.file_reference) {\n        this.referenceDatabase.deleteContext(smth.file_reference, {type: 'message', peerId: message.peerId, messageId: message.mid});\n      }\n\n      if('webpage' in media && media.webpage) {\n        const isScheduled = this.getScheduledMessagesStorage(message.peerId) === storage;\n        const messageKey = this.appWebPagesManager.getMessageKeyForPendingWebPage(message.peerId, message.mid, isScheduled);\n        this.appWebPagesManager.deleteWebPageFromPending(media.webpage, messageKey);\n      }\n\n      if((media as MessageMedia.messageMediaPoll).poll) {\n        this.appPollsManager.updatePollToMessage(message as Message.message, false);\n      }\n    }\n  }\n\n  private handleDeletedMessages(peerId: PeerId, storage: MessagesStorage, messages: number[]) {\n    const history: {\n      count: number,\n      unread: number,\n      unreadMentions: number,\n      msgs: Set<number>,\n      albums?: {[groupId: string]: Set<number>},\n    } = {\n      count: 0,\n      unread: 0,\n      unreadMentions: 0,\n      msgs: new Set()\n    };\n\n    for(const mid of messages) {\n      const message: MyMessage = this.getMessageFromStorage(storage, mid);\n      if(!message) {\n        this.fixDialogUnreadMentionsIfNoMessage(peerId);\n        continue;\n      }\n\n      this.handleReleasingMessage(message, storage);\n\n      this.updateMessageRepliesIfNeeded(message);\n\n      if(!message.pFlags.out && !message.pFlags.is_outgoing && message.pFlags.unread) {\n        ++history.unread;\n        this.rootScope.dispatchEvent('notification_cancel', 'msg' + mid);\n\n        if(message.pFlags.mentioned) {\n          ++history.unreadMentions;\n          this.modifyCachedMentions(peerId, mid, false);\n        }\n      }\n\n      ++history.count;\n      history.msgs.add(mid);\n\n      message.deleted = true;\n\n      const groupedId = (message as Message.message).grouped_id;\n      if(groupedId) {\n        const groupedStorage = this.groupedMessagesStorage[groupedId];\n        if(groupedStorage) {\n          groupedStorage.delete(mid);\n\n          if(!history.albums) history.albums = {};\n          (history.albums[groupedId] || (history.albums[groupedId] = new Set())).add(mid);\n\n          if(!groupedStorage.size) {\n            delete history.albums;\n            delete this.groupedMessagesStorage[groupedId];\n          }\n        }\n      }\n\n      storage.delete(mid);\n    }\n\n    if(history.albums) {\n      for(const groupedId in history.albums) {\n        this.dispatchAlbumEdit(groupedId, storage, [...history.albums[groupedId]]);\n        /* const mids = this.getMidsByAlbum(groupId);\n        if(mids.length) {\n          const mid = Math.max(...mids);\n          rootScope.$broadcast('message_edit', {peerId, mid, justMedia: false});\n        } */\n      }\n    }\n\n    return history;\n  }\n\n  private handleEditedMessage(oldMessage: Message, newMessage: Message, storage: MessagesStorage) {\n    if(oldMessage._ === 'message') {\n      if((oldMessage.media as MessageMedia.messageMediaWebPage)?.webpage) {\n        const messageKey = this.appWebPagesManager.getMessageKeyForPendingWebPage(oldMessage.peerId, oldMessage.mid, !!oldMessage.pFlags.is_scheduled);\n        this.appWebPagesManager.deleteWebPageFromPending((oldMessage.media as MessageMedia.messageMediaWebPage).webpage, messageKey);\n      }\n\n      const groupedId = oldMessage.grouped_id;\n      if(groupedId) {\n        this.dispatchAlbumEdit(groupedId, storage, []);\n      }\n    }\n  }\n\n  private dispatchAlbumEdit(groupedId: string, storage: MessagesStorage, deletedMids?: number[]) {\n    const mids = this.getMidsByAlbum(groupedId);\n    const messages = mids.map((mid) => this.getMessageFromStorage(storage, mid)) as Message.message[];\n    this.rootScope.dispatchEvent('album_edit', {peerId: messages[0].peerId, groupId: groupedId, deletedMids: deletedMids || [], messages});\n  }\n\n  public getDialogUnreadCount(dialog: Dialog | ForumTopic) {\n    let unreadCount = dialog.unread_count;\n    if(!this.dialogsStorage.isTopic(dialog) && this.appPeersManager.isForum(dialog.peerId)) {\n      const forumUnreadCount = this.dialogsStorage.getForumUnreadCount(dialog.peerId);\n      if(forumUnreadCount instanceof Promise) {\n        unreadCount = 0;\n      } else {\n        unreadCount = forumUnreadCount.count;\n      }\n    }\n\n    return unreadCount || +!!(dialog as Dialog).pFlags?.unread_mark;\n  }\n\n  public isDialogUnread(dialog: Dialog | ForumTopic) {\n    return !!this.getDialogUnreadCount(dialog);\n  }\n\n  public canForward(message: Message.message | Message.messageService) {\n    return message?._ === 'message' && !(message as Message.message).pFlags.noforwards && !this.appPeersManager.noForwards(message.peerId);\n  }\n\n  private pushBatchUpdate<E extends keyof BatchUpdates, C extends BatchUpdates[E]>(\n    event: E,\n    callback: C,\n    key: string,\n    getElementCallback?: () => MapValueType<ArgumentTypes<C>[0]>\n  ) {\n    let details = this.batchUpdates[event];\n    if(!details) {\n      // @ts-ignore\n      details = this.batchUpdates[event] = {\n        callback,\n        batch: new Map()\n      };\n    }\n\n    if(!details.batch.has(key)) {\n      // @ts-ignore\n      details.batch.set(key, getElementCallback ? getElementCallback() : undefined);\n      this.batchUpdatesDebounced();\n    }\n  }\n\n  private getMessagesFromMap<T extends Map<any, any>>(map: T) {\n    const newMap: Map<Message.message, MapValueType<T>> = new Map();\n    for(const [key, value] of map) {\n      const [peerIdStr, mid] = key.split('_');\n      const message = this.getMessageByPeer(peerIdStr.toPeerId(), +mid) as Message.message;\n      if(!message) {\n        continue;\n      }\n\n      newMap.set(message, value);\n    }\n\n    return newMap;\n  }\n\n  private batchUpdateViews = (batch: Map<string, undefined>) => {\n    const toDispatch: {peerId: PeerId, mid: number, views: number}[] = [];\n\n    const map = this.getMessagesFromMap(batch);\n    for(const [message] of map) {\n      toDispatch.push({\n        peerId: message.peerId,\n        mid: message.mid,\n        views: message.views\n      })\n    }\n\n    return toDispatch;\n  };\n\n  private batchUpdateReactions = (batch: Map<string, MessageReactions>) => {\n    const toDispatch: {message: Message.message, changedResults: ReactionCount.reactionCount[]}[] = [];\n\n    const map = this.getMessagesFromMap(batch);\n    for(const [message, previousReactions] of map) {\n      const results = message.reactions?.results ?? [];\n      const previousResults = previousReactions?.results ?? [];\n      const changedResults = results.filter((reactionCount) => {\n        const previousReactionCount = previousResults.find((_reactionCount) => reactionsEqual(_reactionCount.reaction, reactionCount.reaction));\n        return (\n          message.pFlags.out && (\n            !previousReactionCount ||\n            reactionCount.count > previousReactionCount.count\n          )\n        ) || (\n          reactionCount.chosen_order !== undefined && (\n            !previousReactionCount ||\n            previousReactionCount.chosen_order === undefined\n          )\n        );\n      });\n\n      toDispatch.push({message, changedResults});\n    }\n\n    return toDispatch;\n  };\n\n  public saveDefaultSendAs(peerId: PeerId, sendAsPeerId: PeerId) {\n    const channelFull = this.appProfileManager.getCachedFullChat(peerId.toChatId()) as ChatFull.channelFull;\n    channelFull.default_send_as = this.appPeersManager.getOutputPeer(sendAsPeerId);\n    return this.apiManager.invokeApi('messages.saveDefaultSendAs', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      send_as: this.appPeersManager.getInputPeerById(sendAsPeerId)\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {getFileNameByLocation} from '../../../../helpers/fileName';\nimport {Document} from '../../../../layer';\nimport getDocumentInputFileLocation from './getDocumentInputFileLocation';\n\nexport default function getDocumentInputFileName(doc: Document.document, thumbSize?: string) {\n  return getFileNameByLocation(getDocumentInputFileLocation(doc, thumbSize), {fileName: doc.file_name});\n}\n","export default function convertInputKeyToKey<T extends string>(inputKey: string) {\n  const str = inputKey.replace('input', '');\n  return (str[0].toLowerCase() + str.slice(1)) as T;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport tsNow from '../../helpers/tsNow';\nimport {InputNotifyPeer, InputPeerNotifySettings, NotifyPeer, PeerNotifySettings, Update} from '../../layer';\nimport {MUTE_UNTIL} from '../mtproto/mtproto_config';\nimport throttle from '../../helpers/schedulers/throttle';\nimport convertInputKeyToKey from '../../helpers/string/convertInputKeyToKey';\nimport {AppManager} from './manager';\nimport ctx from '../../environment/ctx';\nimport assumeType from '../../helpers/assumeType';\nimport generateMessageId from './utils/messageId/generateMessageId';\n\ntype ImSadAboutIt = Promise<PeerNotifySettings> | PeerNotifySettings;\ntype MyNotifyPeer = Exclude<NotifyPeer['_'], 'notifyPeer' | 'notifyForumTopic'>;\ntype MyInputNotifyPeer = Exclude<InputNotifyPeer['_'], 'inputNotifyPeer' | 'inputNotifyForumTopic'>;\nexport class AppNotificationsManager extends AppManager {\n  private peerSettings = {\n    notifyPeer: {} as {[peerId: string]: ImSadAboutIt},\n    notifyUsers: null as ImSadAboutIt,\n    notifyChats: null as ImSadAboutIt,\n    notifyBroadcasts: null as ImSadAboutIt,\n    notifyForumTopic: {} as {[peerId_threadId: string]: ImSadAboutIt}\n  };\n  // private exceptions: {[peerId: string]: PeerNotifySettings} = {};\n\n  private getNotifyPeerTypePromise: Promise<any>;\n\n  private checkMuteUntilTimeout: number;\n  private checkMuteUntilThrottled: () => void;\n\n  private notifyContactsSignUp: Promise<boolean>;\n\n  protected after() {\n    this.checkMuteUntilThrottled = throttle(this.checkMuteUntil, 1000, false);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateNotifySettings: (update) => {\n        const {peer} = update;\n        const isTopic = peer._ === 'notifyForumTopic';\n        const isPeerType = peer._ === 'notifyPeer' || isTopic;\n        const peerId = isPeerType && this.appPeersManager.getPeerId(peer.peer);\n        const key = !isPeerType ? peer._ : undefined;\n        this.savePeerSettings({\n          key,\n          peerId,\n          threadId: isTopic ? generateMessageId(peer.top_msg_id) : undefined,\n          settings: update.notify_settings\n        });\n        this.rootScope.dispatchEvent('notify_settings', update);\n      }\n    });\n\n    return this.appStateManager.getState().then((state) => {\n      if(state.notifySettings) {\n        for(const key in state.notifySettings) {\n          assumeType<MyNotifyPeer>(key);\n          this.savePeerSettings({\n            key,\n            settings: state.notifySettings[key]\n          });\n        }\n      }\n    });\n  }\n\n  public getNotifySettings(peer: InputNotifyPeer): ImSadAboutIt {\n    let key: any = convertInputKeyToKey(peer._);\n    let obj: any = this.peerSettings[key as MyNotifyPeer];\n\n    let peerId: PeerId;\n    if(peer._ === 'inputNotifyPeer') {\n      peerId = key = this.appPeersManager.getPeerId(peer.peer);\n      obj = obj[key];\n    }\n\n    if(obj) {\n      return obj;\n    }\n\n    return (obj || this.peerSettings)[key] = this.apiManager.invokeApi('account.getNotifySettings', {peer})\n    .then((settings) => {\n      this.savePeerSettings({\n        key,\n        peerId,\n        settings\n      });\n\n      return settings;\n    });\n  }\n\n  public getNotifyPeerTypeSettings() {\n    if(this.getNotifyPeerTypePromise) return this.getNotifyPeerTypePromise;\n\n    const promises = (['inputNotifyBroadcasts', 'inputNotifyUsers', 'inputNotifyChats'] as MyInputNotifyPeer[])\n    .map((inputKey) => {\n      return this.getNotifySettings({_: inputKey});\n    });\n\n    return this.getNotifyPeerTypePromise = Promise.all(promises);\n  }\n\n  public updateNotifySettings(peer: InputNotifyPeer, settings: InputPeerNotifySettings) {\n    // this.savePeerSettings(peerId, settings);\n\n    /* const inputSettings: InputPeerNotifySettings = copy(settings) as any;\n    inputSettings._ = 'inputPeerNotifySettings'; */\n\n    return this.apiManager.invokeApi('account.updateNotifySettings', {\n      peer,\n      settings\n    }).then((value) => {\n      if(value) {\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updateNotifySettings',\n          peer: {\n            ...peer as any,\n            _: convertInputKeyToKey(peer._)\n          },\n          notify_settings: { // ! WOW, IT WORKS !\n            ...settings,\n            _: 'peerNotifySettings'\n          }\n        });\n      }\n    });\n  }\n\n  // public getNotifyExceptions() {\n  //   apiManager.invokeApi('account.getNotifyExceptions', {compare_sound: true})\n  //   .then((updates) => {\n  //     apiUpdatesManager.processUpdateMessage(updates);\n  //   });\n  // }\n\n  public getContactSignUpNotification() {\n    if(this.notifyContactsSignUp) return this.notifyContactsSignUp;\n    return this.notifyContactsSignUp = this.apiManager.invokeApi('account.getContactSignUpNotification');\n  }\n\n  public setContactSignUpNotification(silent: boolean) {\n    this.apiManager.invokeApi('account.setContactSignUpNotification', {silent})\n    .then((value) => {\n      this.notifyContactsSignUp = Promise.resolve(!silent);\n    });\n  }\n\n  private checkMuteUntil = () => {\n    if(this.checkMuteUntilTimeout !== undefined) {\n      clearTimeout(this.checkMuteUntilTimeout);\n      this.checkMuteUntilTimeout = undefined;\n    }\n\n    const timestamp = tsNow(true);\n    let closestMuteUntil = MUTE_UNTIL;\n\n    const p = (peerNotifySettings: ImSadAboutIt): peerNotifySettings is PeerNotifySettings => {\n      if(peerNotifySettings instanceof Promise) {\n        return false;\n      }\n\n      const muteUntil = peerNotifySettings.mute_until;\n      if(!muteUntil) {\n        return false;\n      }\n\n      if(muteUntil <= timestamp) {\n        // ! do not delete it because peer's unique settings will be overwritten in getPeerLocalSettings with type's settings\n        peerNotifySettings.mute_until = 0;\n        return true;\n      } else if(muteUntil < closestMuteUntil) {\n        closestMuteUntil = muteUntil;\n      }\n\n      return false;\n    };\n\n    [\n      'notifyPeer' as const,\n      'notifyForumTopic' as const\n    ].forEach((typeKey) => {\n      for(const key in this.peerSettings[typeKey]) {\n        const peerNotifySettings = this.peerSettings[typeKey][key];\n        if(p(peerNotifySettings)) {\n          const [peerId, topicId] = key.split('_');\n          const peer = this.appPeersManager.getOutputPeer(peerId.toPeerId());\n          this.apiUpdatesManager.saveUpdate({\n            _: 'updateNotifySettings',\n            peer: topicId ? {\n              _: 'notifyForumTopic',\n              peer,\n              top_msg_id: +topicId\n            } : {\n              _: 'notifyPeer',\n              peer\n            },\n            notify_settings: peerNotifySettings\n          });\n        }\n      }\n    });\n\n    const timeout = Math.min(1800e3, (closestMuteUntil - timestamp) * 1000);\n    this.checkMuteUntilTimeout = ctx.setTimeout(this.checkMuteUntil, timeout);\n  };\n\n  public getPeerKey(peerId: PeerId, threadId?: number) {\n    return peerId + (threadId ? '_' + threadId : '');\n  }\n\n  public savePeerSettings({key, peerId, threadId, settings}: {\n    key?: Exclude<NotifyPeer['_'], 'notifyPeer'>,\n    peerId?: PeerId,\n    threadId?: number,\n    settings: PeerNotifySettings\n  }) {\n    let obj: any;\n    if(peerId) {\n      key = this.getPeerKey(peerId, threadId) as any;\n      obj = this.peerSettings[threadId ? 'notifyForumTopic' : 'notifyPeer'];\n    }\n\n    (obj || this.peerSettings)[key] = settings;\n\n    if(!peerId) {\n      this.rootScope.dispatchEvent('notify_peer_type_settings', {key, settings});\n      this.appStateManager.getState().then((state) => {\n        const notifySettings = state.notifySettings;\n        notifySettings[key] = settings;\n        this.appStateManager.pushToState('notifySettings', notifySettings);\n      });\n    } else {\n      this.checkMuteUntilThrottled();\n    }\n\n    // rootScope.broadcast('notify_settings', {peerId: peerId});\n  }\n\n  public isMuted(peerNotifySettings: PeerNotifySettings) {\n    return peerNotifySettings._ === 'peerNotifySettings' &&\n      (peerNotifySettings.silent || (peerNotifySettings.mute_until !== undefined && (peerNotifySettings.mute_until * 1000) > tsNow()));\n  }\n\n  private getPeerMuted(peerId: PeerId) {\n    const ret = this.getNotifySettings({_: 'inputNotifyPeer', peer: this.appPeersManager.getInputPeerById(peerId)});\n    return (ret instanceof Promise ? ret : Promise.resolve(ret))\n    .then((peerNotifySettings) => this.isMuted(peerNotifySettings));\n  }\n\n  private getPeerLocalSettings({\n    peerId,\n    respectType = true,\n    threadId\n  }: {\n    peerId: PeerId,\n    respectType?: boolean,\n    threadId?: number\n  }): PeerNotifySettings {\n    const n: PeerNotifySettings = {\n      _: 'peerNotifySettings'\n    };\n\n    const peerKey = this.getPeerKey(peerId, threadId);\n    const notifySettings = this.peerSettings[threadId ? 'notifyForumTopic' : 'notifyPeer'][peerKey];\n    // if(!notifySettings || (notifySettings instanceof Promise)) return false;\n    if(notifySettings && !(notifySettings instanceof Promise)) {\n      Object.assign(n, notifySettings);\n    }\n\n    if(respectType) {\n      const inputNotify = this.appPeersManager.getInputNotifyPeerById({peerId, ignorePeerId: true, threadId});\n      const key = convertInputKeyToKey(inputNotify._);\n      const typeNotifySettings = this.peerSettings[key as MyNotifyPeer];\n      if(typeNotifySettings && !(typeNotifySettings instanceof Promise)) {\n        for(const i in typeNotifySettings) {\n          // @ts-ignore\n          if(n[i] === undefined) {\n            // @ts-ignore\n            n[i] = typeNotifySettings[i];\n          }\n        }\n      }\n    }\n\n    return n;\n  }\n\n  public validatePeerSettings<T extends Parameters<AppNotificationsManager['getPeerLocalSettings']>[0]>(options: T): T {\n    if(options.peerId === this.appPeersManager.peerId) return;\n    if(options.threadId && !this.appPeersManager.isForum(options.peerId)) options.threadId = undefined;\n    return options;\n  }\n\n  public isPeerLocalMuted(options: Parameters<AppNotificationsManager['getPeerLocalSettings']>[0]): boolean {\n    if(!(options = this.validatePeerSettings(options))) return false;\n\n    if(options.threadId) {\n      const notifySettings = this.getPeerLocalSettings({...options, respectType: false});\n      if(notifySettings.silent !== undefined || notifySettings.mute_until !== undefined) {\n        return this.isMuted(notifySettings);\n      } else {\n        return this.isPeerLocalMuted({...options, threadId: undefined});\n      }\n    }\n\n    const notifySettings = this.getPeerLocalSettings(options);\n    const isMuted = this.isMuted(notifySettings);\n    return isMuted;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {Chat, ChatPhoto, DialogPeer, InputChannel, InputDialogPeer, InputNotifyPeer, InputPeer, Peer, Update, User, UserProfilePhoto} from '../../layer';\nimport type {LangPackKey} from '../langPack';\nimport {getRestrictionReason} from '../../helpers/restrictions';\nimport isObject from '../../helpers/object/isObject';\nimport {AppManager} from './manager';\nimport getPeerId from './utils/peers/getPeerId';\nimport isUser from './utils/peers/isUser';\nimport isAnyChat from './utils/peers/isAnyChat';\nimport {NULL_PEER_ID} from '../mtproto/mtproto_config';\nimport getPeerActiveUsernames from './utils/peers/getPeerActiveUsernames';\nimport isPeerRestricted from './utils/peers/isPeerRestricted';\nimport getPeerPhoto from './utils/peers/getPeerPhoto';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\n\nexport type PeerType = 'channel' | 'chat' | 'megagroup' | 'group' | 'saved';\nexport class AppPeersManager extends AppManager {\n  public get peerId() {\n    return this.appUsersManager.userId.toPeerId();\n  }\n  /* public savePeerInstance(peerId: PeerId, instance: any) {\n    if(peerId < 0) appChatsManager.saveApiChat(instance);\n    else appUsersManager.saveApiUser(instance);\n  } */\n\n  public canPinMessage(peerId: PeerId) {\n    return peerId.isUser() || this.appChatsManager.hasRights(peerId.toChatId(), 'pin_messages');\n  }\n\n  public getPeerPhoto(peerId: PeerId) {\n    const peer = this.getPeer(peerId) as User.user | Chat.channel;\n    return getPeerPhoto(peer);\n  }\n\n  public getPeerMigratedTo(peerId: PeerId) {\n    if(peerId.isUser()) {\n      return false;\n    }\n\n    const chat = this.appChatsManager.getChat(peerId.toChatId()) as Chat.chat;\n    const migratedTo = chat?.migrated_to;\n    if(migratedTo && chat.pFlags.deactivated) {\n      return getPeerId(migratedTo);\n    }\n\n    return false;\n  }\n\n  public getOutputPeer(peerId: PeerId): Peer {\n    if(peerId.isUser()) {\n      return {_: 'peerUser', user_id: peerId.toUserId()};\n    }\n\n    const chatId = peerId.toChatId();\n    if(this.appChatsManager.isChannel(chatId)) {\n      return {_: 'peerChannel', channel_id: chatId};\n    }\n\n    return {_: 'peerChat', chat_id: chatId};\n  }\n\n  public getPeerString(peerId: PeerId) {\n    if(peerId.isUser()) {\n      return this.appUsersManager.getUserString(peerId.toUserId());\n    }\n    return this.appChatsManager.getChatString(peerId.toChatId());\n  }\n\n  public getPeerUsername(peerId: PeerId) {\n    return this.getPeerActiveUsernames(peerId)[0] || '';\n  }\n\n  public getPeerActiveUsernames(peerId: PeerId) {\n    const peer = this.getPeer(peerId);\n    return getPeerActiveUsernames(peer);\n  }\n\n  public getPeer(peerId: PeerId) {\n    return peerId.isUser() ?\n      this.appUsersManager.getUser(peerId.toUserId()) :\n      this.appChatsManager.getChat(peerId.toChatId());\n  }\n\n  public getPeerId(peerId: Parameters<typeof getPeerId>[0]) {\n    return getPeerId(peerId) || (isObject<InputPeer>(peerId) && peerId._ === 'inputPeerSelf' && this.peerId) || NULL_PEER_ID;\n  }\n\n  public getDialogPeer(peerId: PeerId): DialogPeer {\n    return {\n      _: 'dialogPeer',\n      peer: this.getOutputPeer(peerId)\n    };\n  }\n\n  public isChannel(peerId: PeerId): boolean {\n    return !peerId.isUser() && this.appChatsManager.isChannel(peerId.toChatId());\n  }\n\n  public isMegagroup(peerId: PeerId) {\n    return !peerId.isUser() && this.appChatsManager.isMegagroup(peerId.toChatId());\n  }\n\n  public isForum(peerId: PeerId) {\n    return !peerId.isUser() && this.appChatsManager.isForum(peerId.toChatId());\n  }\n\n  public isAnyGroup(peerId: PeerId): boolean {\n    return !peerId.isUser() && !this.appChatsManager.isBroadcast(peerId.toChatId());\n  }\n\n  public isBroadcast(peerId: PeerId): boolean {\n    return this.isChannel(peerId) && !this.isMegagroup(peerId);\n  }\n\n  public isBot(peerId: PeerId): boolean {\n    return peerId.isUser() && this.appUsersManager.isBot(peerId.toUserId());\n  }\n\n  public isContact(peerId: PeerId): boolean {\n    return peerId.isUser() && this.appUsersManager.isContact(peerId.toUserId());\n  }\n\n  public isUser(peerId: PeerId)/* : peerId is UserId */ {\n    return isUser(peerId);\n  }\n\n  public isAnyChat(peerId: PeerId) {\n    return isAnyChat(peerId);\n  }\n\n  public isPeerRestricted(peerId: PeerId) {\n    return isPeerRestricted(this.getPeer(peerId));\n  }\n\n  public getRestrictionReasonText(peerId: PeerId) {\n    const peer = this.getPeer(peerId) as Chat.channel | User.user;\n    const reason = peer.restriction_reason ? getRestrictionReason(peer.restriction_reason) : undefined;\n    if(reason) {\n      return reason.text;\n    } else {\n      return peerId.isUser() ? 'This user is restricted' : 'This chat is restricted';\n    }\n  }\n\n  /* public getInputPeer(peerString: string): InputPeer {\n    var firstChar = peerString.charAt(0);\n    var peerParams = peerString.substr(1).split('_');\n    let id = +peerParams[0];\n\n    if(firstChar === 'u') {\n      //appUsersManager.saveUserAccess(id, peerParams[1]);\n\n      return {\n        _: 'inputPeerUser',\n        user_id: id,\n        access_hash: peerParams[1]\n      };\n    } else if(firstChar === 'c' || firstChar === 's') {\n      //appChatsManager.saveChannelAccess(id, peerParams[1]);\n      if(firstChar === 's') {\n        appChatsManager.saveIsMegagroup(id);\n      }\n\n      return {\n        _: 'inputPeerChannel',\n        channel_id: id,\n        access_hash: peerParams[1] || '0'\n      };\n    } else {\n      return {\n        _: 'inputPeerChat',\n        chat_id: id\n      };\n    }\n  } */\n\n  // public getInputNotifyPeerById(peerId: PeerId, ignorePeerId: true): Exclude<InputNotifyPeer, InputNotifyPeer.inputNotifyPeer>;\n  // public getInputNotifyPeerById(peerId: PeerId, ignorePeerId?: false): InputNotifyPeer.inputNotifyPeer;\n  // public getInputNotifyPeerById(peerId: PeerId, ignorePeerId?: boolean): InputNotifyPeer {\n  public getInputNotifyPeerById<T extends {\n    peerId: PeerId,\n    ignorePeerId?: boolean,\n    threadId?: number\n  }>({\n    peerId,\n    ignorePeerId,\n    threadId\n  }: T): T['ignorePeerId'] extends true ? Exclude<InputNotifyPeer, InputNotifyPeer.inputNotifyPeer | InputNotifyPeer.inputNotifyForumTopic> : (T['threadId'] extends number ? InputNotifyPeer.inputNotifyForumTopic : InputNotifyPeer.inputNotifyPeer) {\n    if(ignorePeerId) {\n      if(peerId.isUser()) {\n        return {_: 'inputNotifyUsers'} as any;\n      } else {\n        if(this.isBroadcast(peerId)) {\n          return {_: 'inputNotifyBroadcasts'} as any;\n        } else {\n          return {_: 'inputNotifyChats'} as any;\n        }\n      }\n    } else if(threadId) {\n      return {\n        _: 'inputNotifyForumTopic',\n        peer: this.getInputPeerById(peerId),\n        top_msg_id: getServerMessageId(threadId)\n      } as any;\n    } else {\n      return {\n        _: 'inputNotifyPeer',\n        peer: this.getInputPeerById(peerId)\n      } as any;\n    }\n  }\n\n  public getInputPeerById(peerId: PeerId): InputPeer {\n    if(!peerId) {\n      return {_: 'inputPeerEmpty'};\n    }\n\n    if(!peerId.isUser()) {\n      const chatId = peerId.toChatId();\n      return this.appChatsManager.getInputPeer(chatId);\n    }\n\n    const userId = peerId.toUserId();\n    return this.appUsersManager.getUserInputPeer(userId);\n  }\n\n  /**\n   * ! use it only in safe places like requests\n   */\n  public getInputPeerSelf(): InputPeer.inputPeerSelf {\n    return {_: 'inputPeerSelf'};\n  }\n\n  public getInputDialogPeerById(peerId: PeerId | InputPeer): InputDialogPeer {\n    return {\n      _: 'inputDialogPeer',\n      peer: isObject<InputPeer>(peerId) ? peerId : this.getInputPeerById(peerId)\n    };\n  }\n\n  public getPeerSearchText(peerId: PeerId) {\n    let text: string;\n    if(this.isUser(peerId)) {\n      text = '%pu ' + this.appUsersManager.getUserSearchText(peerId.toUserId());\n    } else {\n      const chat = this.appChatsManager.getChat(peerId.toChatId());\n      text = '%pg ' + (chat.title || '');\n    }\n\n    return text;\n  }\n\n  public getDialogType(peerId: PeerId): PeerType {\n    if(this.isMegagroup(peerId)) {\n      return 'megagroup';\n    } else if(this.isChannel(peerId)) {\n      return 'channel';\n    } else if(!this.isUser(peerId)) {\n      return 'group';\n    } else {\n      return peerId === this.peerId ? 'saved' : 'chat';\n    }\n  }\n\n  public getDeleteButtonText(peerId: PeerId): Extract<LangPackKey, 'ChannelDelete' | 'ChatList.Context.LeaveChannel' | 'DeleteMega' | 'ChatList.Context.LeaveGroup' | 'ChatList.Context.DeleteChat'> {\n    switch(this.getDialogType(peerId)) {\n      case 'channel':\n        return this.appChatsManager.hasRights(peerId.toChatId(), 'delete_chat') ? 'ChannelDelete' : 'ChatList.Context.LeaveChannel';\n\n      case 'megagroup':\n      case 'group':\n        return this.appChatsManager.hasRights(peerId.toChatId(), 'delete_chat') ? 'DeleteMega' : 'ChatList.Context.LeaveGroup';\n\n      default:\n        return 'ChatList.Context.DeleteChat';\n    }\n  }\n\n  public noForwards(peerId: PeerId) {\n    if(peerId.isUser()) return false;\n    else {\n      const chat = this.appChatsManager.getChat(peerId.toChatId());\n      return !!(chat as Chat.chat).pFlags?.noforwards;\n    }\n  }\n}\n\nexport type IsPeerType = 'isChannel' | 'isMegagroup' | 'isAnyGroup' | 'isBroadcast' | 'isBot' | 'isContact' | 'isUser' | 'isAnyChat';\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {Photo, PhotoSize, PhotosPhotos} from '../../layer';\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\nimport isObject from '../../helpers/object/isObject';\nimport safeReplaceArrayInObject from '../../helpers/object/safeReplaceArrayInObject';\nimport {AppManager} from './manager';\n\nexport type MyPhoto = Photo.photo;\n\n// TIMES = 2 DUE TO SIDEBAR AND CHAT\n// let TEST_FILE_REFERENCE = \"5440692274120994569\", TEST_FILE_REFERENCE_TIMES = 2;\n\nexport class AppPhotosManager extends AppManager {\n  private photos: {\n    [id: string]: MyPhoto\n  } = {};\n\n  public savePhoto(photo: Photo, context?: ReferenceContext) {\n    if(!photo || photo._ === 'photoEmpty') return;\n\n    /* if(photo.id === TEST_FILE_REFERENCE) {\n      console.warn('Testing FILE_REFERENCE_EXPIRED');\n      const bytes = [2, 67, 175, 43, 190, 0, 0, 20, 62, 95, 111, 33, 45, 99, 220, 116, 218, 11, 167, 127, 213, 18, 127, 32, 243, 202, 117, 80, 30];\n      //photo.file_reference = new Uint8Array(bytes);\n      photo.file_reference = bytes;\n      if(!--TEST_FILE_REFERENCE_TIMES) {\n        TEST_FILE_REFERENCE = '';\n      }\n    } */\n\n    const oldPhoto = this.photos[photo.id];\n    if(photo.file_reference) { // * because we can have a new object w/o the file_reference while sending\n      safeReplaceArrayInObject('file_reference', oldPhoto, photo);\n      this.referenceDatabase.saveContext(photo.file_reference, context);\n    }\n\n    if(photo.sizes?.length) {\n      // * sometimes photoStrippedSize can be the last item\n      photo.sizes.sort((a, b) => {\n        return ((a as PhotoSize.photoSize).size || ((a as PhotoSize.photoSizeProgressive).sizes ? Infinity : 0)) - ((b as PhotoSize.photoSize).size || ((b as PhotoSize.photoSizeProgressive).sizes ? Infinity : 0));\n      });\n\n      const size = photo.sizes[photo.sizes.length - 1];\n      if(size._ === 'photoSizeProgressive') {\n        size.size = size.sizes[size.sizes.length - 1];\n      }\n    }\n\n    if(oldPhoto) {\n      return Object.assign(oldPhoto, photo);\n    }\n\n    return this.photos[photo.id] = photo;\n  }\n\n  public getUserPhotos(userId: UserId, maxId: Photo.photo['id'] = '0', limit: number = 20) {\n    const inputUser = this.appUsersManager.getUserInput(userId);\n    return this.apiManager.invokeApiCacheable('photos.getUserPhotos', {\n      user_id: inputUser,\n      offset: 0,\n      limit,\n      max_id: maxId\n    }, {cacheSeconds: 60}).then((photosResult) => {\n      this.appUsersManager.saveApiUsers(photosResult.users);\n      const photoIds = photosResult.photos.map((photo, idx) => {\n        photosResult.photos[idx] = this.savePhoto(photo, {type: 'profilePhoto', peerId: userId.toPeerId()});\n        return photo.id;\n      });\n\n      // ! WARNING !\n      if(maxId !== '0' && maxId) {\n        const idx = photoIds.indexOf(maxId);\n        if(idx !== -1) {\n          photoIds.splice(idx, 1);\n        }\n      }\n\n      return {\n        count: (photosResult as PhotosPhotos.photosPhotosSlice).count || photoIds.length,\n        photos: photoIds\n      };\n    });\n  }\n\n  /* public getPhotoURL(photo: MTPhoto | MTMyDocument, photoSize: MTPhotoSize) {\n    const downloadOptions = this.getPhotoDownloadOptions(photo, photoSize);\n\n    return {url: getFileURL('photo', downloadOptions), location: downloadOptions.location};\n  } */\n\n  /* public isDownloaded(media: any) {\n    const isPhoto = media._ === 'photo';\n    const photo = isPhoto ? this.getPhoto(media.id) : null;\n    let isDownloaded: boolean;\n    if(photo) {\n      isDownloaded = photo.downloaded > 0;\n    } else {\n      const cachedThumb = this.getDocumentCachedThumb(media.id);\n      isDownloaded = cachedThumb?.downloaded > 0;\n    }\n\n    return isDownloaded;\n  } */\n\n  public getPhoto(photoId: any/* MyPhoto | string */): MyPhoto {\n    return isObject(photoId) ? photoId as MyPhoto : this.photos[photoId as any as string];\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport copy from '../../helpers/object/copy';\nimport {InputMedia, Message, MessageEntity, MessageMedia, Poll, PollResults} from '../../layer';\nimport {logger, LogTypes} from '../logger';\nimport parseMarkdown from '../richTextProcessor/parseMarkdown';\nimport {AppManager} from './manager';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\n\ntype PollId = Poll['id'];\n\nexport class AppPollsManager extends AppManager {\n  public polls: {[id: PollId]: Poll} = {};\n  public results: {[id: PollId]: PollResults} = {};\n  public pollToMessages: {[id: PollId]: Set<string>} = {};\n\n  private log = logger('POLLS', LogTypes.Error);\n\n  protected after() {\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateMessagePoll: (update) => {\n        this.log('updateMessagePoll:', update);\n\n        let poll: Poll = update.poll || this.polls[update.poll_id];\n        if(!poll) {\n          return;\n        }\n\n        let results = update.results;\n        const ret = this.savePoll(poll, results as any);\n        poll = ret.poll;\n        results = ret.results;\n\n        this.rootScope.dispatchEvent('poll_update', {poll, results: results as any});\n      }\n    });\n  }\n\n  public savePoll(poll: Poll, results: PollResults, message?: Message.message) {\n    if(message) {\n      this.updatePollToMessage(message, true);\n    }\n\n    const id = poll.id;\n    if(this.polls[id]) {\n      poll = Object.assign(this.polls[id], poll);\n      results = this.saveResults(poll, results);\n    } else {\n      this.polls[id] = poll;\n\n      poll.chosenIndexes = [];\n      results = this.saveResults(poll, results);\n    }\n\n    return {poll, results};\n  }\n\n  public saveResults(poll: Poll, results: PollResults) {\n    if(this.results[poll.id]) {\n      results = Object.assign(this.results[poll.id], results);\n    } else {\n      this.results[poll.id] = results;\n    }\n\n    if(!results.pFlags.min) { // ! https://core.telegram.org/constructor/pollResults - min\n      poll.chosenIndexes.length = 0;\n      if(results?.results?.length) {\n        results.results.forEach((answer, idx) => {\n          if(answer.pFlags?.chosen) {\n            poll.chosenIndexes.push(idx);\n          }\n        });\n      }\n    }\n\n    return results;\n  }\n\n  public getPoll(pollId: PollId): {poll: Poll, results: PollResults} {\n    return {\n      poll: this.polls[pollId],\n      results: this.results[pollId]\n    };\n  }\n\n  public getInputMediaPoll(poll: Poll, correctAnswers?: Uint8Array[], solution?: string, solutionEntities?: MessageEntity[]): InputMedia.inputMediaPoll {\n    if(solution) {\n      if(!solutionEntities) {\n        solutionEntities = [];\n      }\n\n      solution = parseMarkdown(solution, solutionEntities);\n    } else {\n      solution = undefined; // can be string here\n    }\n\n    return {\n      _: 'inputMediaPoll',\n      poll,\n      correct_answers: correctAnswers,\n      solution,\n      solution_entities: solution ? solutionEntities : undefined\n    };\n  }\n\n  public updatePollToMessage(message: Message.message, add: boolean) {\n    const {id} = (message.media as MessageMedia.messageMediaPoll).poll;\n    let set = this.pollToMessages[id];\n\n    if(!add && !set) {\n      return;\n    }\n\n    if(!set) {\n      set = this.pollToMessages[id] = new Set();\n    }\n\n    const key = message.peerId + '_' + message.mid;\n    if(add) set.add(key);\n    else set.delete(key);\n\n    if(!add && !set.size) {\n      delete this.polls[id];\n      delete this.results[id];\n      delete this.pollToMessages[id];\n    }\n  }\n\n  public sendVote(message: Message.message, optionIds: number[]): Promise<void> {\n    const poll: Poll = (message.media as MessageMedia.messageMediaPoll).poll;\n\n    const options: Uint8Array[] = optionIds.map((index) => {\n      return poll.answers[index].option;\n    });\n\n    const messageId = message.mid;\n    const peerId = message.peerId;\n    const inputPeer = this.appPeersManager.getInputPeerById(peerId);\n\n    if(message.pFlags.is_outgoing) {\n      return this.appMessagesManager.invokeAfterMessageIsSent(messageId, 'sendVote', (message) => {\n        this.log('invoke sendVote callback');\n        return this.sendVote(message as Message.message, optionIds);\n      });\n    }\n\n    return this.apiManager.invokeApi('messages.sendVote', {\n      peer: inputPeer,\n      msg_id: getServerMessageId(message.mid),\n      options\n    }).then((updates) => {\n      this.log('sendVote updates:', updates);\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    });\n  }\n\n  public getResults(message: Message.message) {\n    const inputPeer = this.appPeersManager.getInputPeerById(message.peerId);\n\n    return this.apiManager.invokeApi('messages.getPollResults', {\n      peer: inputPeer,\n      msg_id: getServerMessageId(message.mid)\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n      this.log('getResults updates:', updates);\n    });\n  }\n\n  public getVotes(message: Message.message, option?: Uint8Array, offset?: string, limit = 20) {\n    return this.apiManager.invokeApi('messages.getPollVotes', {\n      peer: this.appPeersManager.getInputPeerById(message.peerId),\n      id: getServerMessageId(message.mid),\n      option,\n      offset,\n      limit\n    }).then((votesList) => {\n      this.log('getPollVotes messages:', votesList);\n\n      this.appUsersManager.saveApiUsers(votesList.users);\n\n      return votesList;\n    });\n  }\n\n  public stopPoll(message: Message.message) {\n    const poll: Poll = (message.media as MessageMedia.messageMediaPoll).poll;\n\n    if(poll.pFlags.closed) return Promise.resolve();\n\n    const newPoll = copy(poll);\n    newPoll.pFlags.closed = true;\n    return this.appMessagesManager.editMessage(message, undefined, {\n      newMedia: this.getInputMediaPoll(newPoll)\n    }).then(() => {\n      // console.log('stopped poll');\n    }, err => {\n      this.log.error('stopPoll error:', err);\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {InputPrivacyKey, InputPrivacyRule, PrivacyRule, PrivacyKey, GlobalPrivacySettings} from '../../layer';\nimport convertInputKeyToKey from '../../helpers/string/convertInputKeyToKey';\nimport {AppManager} from './manager';\n\nexport class AppPrivacyManager extends AppManager {\n  private privacy: Partial<{\n    [key in PrivacyKey['_']]: PrivacyRule[] | Promise<PrivacyRule[]>\n  }> = {};\n\n  protected after() {\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updatePrivacy: (update) => {\n        const key = update.key._;\n        this.privacy[key] = update.rules;\n        this.rootScope.dispatchEvent('privacy_update', update);\n      }\n    });\n  }\n\n  public setPrivacy(inputKey: InputPrivacyKey['_'], rules: InputPrivacyRule[]) {\n    return this.apiManager.invokeApi('account.setPrivacy', {\n      key: {\n        _: inputKey\n      },\n      rules\n    }).then((privacyRules) => {\n      this.appUsersManager.saveApiUsers(privacyRules.users);\n      this.appChatsManager.saveApiChats(privacyRules.chats);\n\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updatePrivacy',\n        key: {\n          _: convertInputKeyToKey(inputKey)\n        },\n        rules: rules.map((inputRule) => {\n          const rule: PrivacyRule = {} as any;\n          Object.assign(rule, inputRule);\n          rule._ = convertInputKeyToKey(rule._) as any;\n          return rule;\n        })\n      });\n\n      // console.log('privacy rules', inputKey, privacyRules, privacyRules.rules);\n\n      return privacyRules.rules;\n    });\n  }\n\n  public getPrivacy(inputKey: InputPrivacyKey['_']) {\n    const privacyKey: PrivacyKey['_'] = convertInputKeyToKey(inputKey) as any;\n    const rules = this.privacy[privacyKey];\n    if(rules) {\n      return Promise.resolve(rules);\n    }\n\n    return this.privacy[privacyKey] = this.apiManager.invokeApi('account.getPrivacy', {\n      key: {\n        _: inputKey\n      }\n    }).then((privacyRules) => {\n      this.appUsersManager.saveApiUsers(privacyRules.users);\n      this.appChatsManager.saveApiChats(privacyRules.chats);\n\n      // console.log('privacy rules', inputKey, privacyRules, privacyRules.rules);\n\n      return this.privacy[privacyKey] = privacyRules.rules;\n    });\n  }\n\n  public getGlobalPrivacySettings() {\n    return this.apiManager.invokeApi('account.getGlobalPrivacySettings');\n  }\n\n  public setGlobalPrivacySettings(settings: GlobalPrivacySettings) {\n    return this.apiManager.invokeApi('account.setGlobalPrivacySettings', {settings});\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {MyTopPeer} from './appUsersManager';\nimport tsNow from '../../helpers/tsNow';\nimport {ChannelParticipantsFilter, ChannelsChannelParticipants, ChannelParticipant, Chat, ChatFull, ChatParticipants, ChatPhoto, ExportedChatInvite, InputChannel, InputFile, SendMessageAction, Update, UserFull, Photo, PhotoSize, Updates} from '../../layer';\nimport SearchIndex from '../searchIndex';\nimport {AppManager} from './manager';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\nimport getPhotoInput from './utils/photos/getPhotoInput';\nimport getParticipantPeerId from './utils/chats/getParticipantPeerId';\nimport ctx from '../../environment/ctx';\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\nimport generateMessageId from './utils/messageId/generateMessageId';\n\nexport type UserTyping = Partial<{userId: UserId, action: SendMessageAction, timeout: number}>;\n\nconst PEER_FULL_TTL = 3 * 60e3;\n\nexport class AppProfileManager extends AppManager {\n  // private botInfos: any = {};\n  private usersFull: {[id: UserId]: UserFull.userFull} = {};\n  private chatsFull: {[id: ChatId]: ChatFull} = {};\n  private fullExpiration: {[peerId: PeerId]: number} = {};\n  private typingsInPeer: {[key: string]: UserTyping[]};\n\n  protected after() {\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateChatParticipants: (update) => {\n        const participants = update.participants;\n        if(participants._ === 'chatParticipants') {\n          const chatId = participants.chat_id;\n          const chatFull = this.chatsFull[chatId] as ChatFull.chatFull;\n          if(chatFull !== undefined) {\n            chatFull.participants = participants;\n            this.rootScope.dispatchEvent('chat_full_update', chatId);\n          }\n        }\n      },\n\n      updateChatParticipantAdd: (update) => {\n        const chatFull = this.chatsFull[update.chat_id] as ChatFull.chatFull;\n        if(chatFull !== undefined) {\n          const _participants = chatFull.participants as ChatParticipants.chatParticipants;\n          const participants = _participants.participants || [];\n          for(let i = 0, length = participants.length; i < length; i++) {\n            if(participants[i].user_id === update.user_id) {\n              return;\n            }\n          }\n\n          participants.push({\n            _: 'chatParticipant',\n            user_id: update.user_id,\n            inviter_id: update.inviter_id,\n            date: tsNow(true)\n          });\n\n          _participants.version = update.version;\n          this.rootScope.dispatchEvent('chat_full_update', update.chat_id);\n        }\n      },\n\n      updateChatParticipantDelete: (update) => {\n        const chatFull = this.chatsFull[update.chat_id] as ChatFull.chatFull;\n        if(chatFull !== undefined) {\n          const _participants = chatFull.participants as ChatParticipants.chatParticipants;\n          const participants = _participants.participants || [];\n          for(let i = 0, length = participants.length; i < length; i++) {\n            if(participants[i].user_id === update.user_id) {\n              participants.splice(i, 1);\n              _participants.version = update.version;\n              this.rootScope.dispatchEvent('chat_full_update', update.chat_id);\n              return;\n            }\n          }\n        }\n      },\n\n      updateUserTyping: this.onUpdateUserTyping,\n      updateChatUserTyping: this.onUpdateUserTyping,\n      updateChannelUserTyping: this.onUpdateUserTyping,\n\n      updatePeerBlocked: this.onUpdatePeerBlocked\n    });\n\n    this.rootScope.addEventListener('chat_update', (chatId) => {\n      const fullChat = this.chatsFull[chatId];\n      const chat: Chat.chat | Chat.channel | Chat.chatForbidden | Chat.channelForbidden = this.appChatsManager.getChat(chatId);\n      if(!fullChat || !chat) {\n        return;\n      }\n\n      let updated = false;\n      if(!!fullChat.call !== !!(chat as Chat.chat).pFlags?.call_active) {\n        updated = true;\n      }\n\n      const {photo} = chat as Chat.chat;\n      if(photo) {\n        const hasChatPhoto = photo._ !== 'chatPhotoEmpty';\n        const hasFullChatPhoto = !!(fullChat.chat_photo && fullChat.chat_photo._ !== 'photoEmpty'); // chat_photo can be missing\n        if(\n          hasChatPhoto !== hasFullChatPhoto || (\n            hasChatPhoto &&\n            photo.photo_id !== fullChat.chat_photo?.id\n          )\n        ) {\n          updated = true;\n        }\n      }\n\n      if(updated) {\n        this.refreshFullPeer(chatId.toPeerId(true));\n      }\n    });\n\n    this.rootScope.addEventListener('channel_update', (chatId) => {\n      this.refreshFullPeer(chatId.toPeerId(true));\n    });\n\n    // * genius\n    this.rootScope.addEventListener('chat_full_update', (chatId) => {\n      this.rootScope.dispatchEvent('peer_full_update', chatId.toPeerId(true));\n    });\n\n    // * genius\n    this.rootScope.addEventListener('user_full_update', (userId) => {\n      this.rootScope.dispatchEvent('peer_full_update', userId.toPeerId(false));\n    });\n\n    this.rootScope.addEventListener('invalidate_participants', (chatId) => {\n      this.invalidateChannelParticipants(chatId);\n    });\n\n    this.typingsInPeer = {};\n  }\n\n  /* public saveBotInfo(botInfo: any) {\n    const botId = botInfo && botInfo.user_id;\n    if(!botId) {\n      return null;\n    }\n\n    const commands: any = {};\n    botInfo.commands.forEach((botCommand: any) => {\n      commands[botCommand.command] = botCommand.description;\n    });\n\n    return this.botInfos[botId] = {\n      id: botId,\n      version: botInfo.version,\n      shareText: botInfo.share_text,\n      description: botInfo.description,\n      commands: commands\n    };\n  } */\n\n  public getProfile(id: UserId, override?: true) {\n    if(this.usersFull[id] && !override && Date.now() < this.fullExpiration[id.toPeerId()]) {\n      return this.usersFull[id];\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'users.getFullUser',\n      params: {\n        id: this.appUsersManager.getUserInput(id)\n      },\n      processResult: (usersUserFull) => {\n        this.appChatsManager.saveApiChats(usersUserFull.chats, true);\n        this.appUsersManager.saveApiUsers(usersUserFull.users);\n\n        const userFull = usersUserFull.full_user;\n        const peerId = id.toPeerId(false);\n        if(userFull.profile_photo) {\n          userFull.profile_photo = this.appPhotosManager.savePhoto(userFull.profile_photo, {type: 'profilePhoto', peerId});\n        }\n\n        const botInfo = userFull.bot_info;\n        if(botInfo) {\n          const referenceContext: ReferenceContext = {type: 'userFull', userId: id};\n          botInfo.description_document = this.appDocsManager.saveDoc(botInfo.description_document, referenceContext);\n          botInfo.description_photo = this.appPhotosManager.savePhoto(botInfo.description_photo, referenceContext);\n        }\n\n        this.appNotificationsManager.savePeerSettings({\n          peerId,\n          settings: userFull.notify_settings\n        });\n\n        this.usersFull[id] = userFull;\n        this.fullExpiration[peerId] = Date.now() + PEER_FULL_TTL;\n\n        /* if(userFull.bot_info) {\n          userFull.bot_info = this.saveBotInfo(userFull.bot_info) as any;\n        } */\n\n        // appMessagesManager.savePinnedMessage(id, userFull.pinned_msg_id);\n\n        this.rootScope.dispatchEvent('user_full_update', id);\n        return userFull;\n      }\n    });\n  }\n\n  public getProfileByPeerId(peerId: PeerId, override?: true) {\n    if(this.appPeersManager.isAnyChat(peerId)) return this.getChatFull(peerId.toChatId(), override);\n    else return this.getProfile(peerId.toUserId(), override);\n  }\n\n  public getCachedFullChat(chatId: ChatId) {\n    return this.chatsFull[chatId];\n  }\n\n  public getCachedFullUser(userId: UserId) {\n    return this.usersFull[userId];\n  }\n\n  public getCachedProfileByPeerId(peerId: PeerId) {\n    return peerId.isUser() ? this.getCachedFullUser(peerId.toUserId()) : this.getCachedFullChat(peerId.toChatId());\n  }\n\n  public async getFullPhoto(peerId: PeerId) {\n    const profile = await this.getProfileByPeerId(peerId);\n    switch(profile._) {\n      case 'userFull':\n        return profile.profile_photo;\n      case 'channelFull':\n      case 'chatFull':\n        return profile.chat_photo;\n    }\n  }\n\n  /* public getPeerBots(peerId: PeerId) {\n    var peerBots: any[] = [];\n    if(peerId >= 0 && !appUsersManager.isBot(peerId) ||\n      (appPeersManager.isChannel(peerId) && !appPeersManager.isMegagroup(peerId))) {\n      return Promise.resolve(peerBots);\n    }\n    if(peerId >= 0) {\n      return this.getProfile(peerId).then((userFull: any) => {\n        var botInfo = userFull.bot_info;\n        if(botInfo && botInfo._ !== 'botInfoEmpty') {\n          peerBots.push(botInfo);\n        }\n        return peerBots;\n      });\n    }\n\n    return this.getChatFull(peerId.toChatId()).then((chatFull: any) => {\n      chatFull.bot_info.forEach((botInfo: any) => {\n        peerBots.push(this.saveBotInfo(botInfo))\n      });\n      return peerBots;\n    });\n  } */\n\n  public getChatFull(id: ChatId, override?: true) {\n    if(this.appChatsManager.isChannel(id)) {\n      return this.getChannelFull(id, override);\n    }\n\n    const peerId = id.toPeerId(true);\n    const fullChat = this.chatsFull[id] as ChatFull.chatFull;\n    if(fullChat && !override && Date.now() < this.fullExpiration[peerId]) {\n      const chat = this.appChatsManager.getChat(id) as Chat.chat;\n      if(\n        chat.pFlags.left ||\n        chat.pFlags.deactivated ||\n        chat.version === (fullChat.participants as ChatParticipants.chatParticipants).version\n      ) {\n        return fullChat as ChatFull;\n      }\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getFullChat',\n      params: {\n        chat_id: id\n      },\n      processResult: (result) => {\n        this.appChatsManager.saveApiChats(result.chats, true);\n        this.appUsersManager.saveApiUsers(result.users);\n        const chatFull = result.full_chat as ChatFull.chatFull;\n        if(chatFull && chatFull.chat_photo && chatFull.chat_photo.id) {\n          chatFull.chat_photo = this.appPhotosManager.savePhoto(chatFull.chat_photo, {type: 'profilePhoto', peerId});\n        }\n\n        if(chatFull.call) {\n          this.appGroupCallsManager.saveGroupCall(chatFull.call, id);\n        }\n\n        // appMessagesManager.savePinnedMessage(peerId, fullChat.pinned_msg_id);\n        this.appNotificationsManager.savePeerSettings({\n          peerId,\n          settings: chatFull.notify_settings\n        });\n\n        this.chatsFull[id] = chatFull;\n        this.fullExpiration[peerId] = Date.now() + PEER_FULL_TTL;\n        this.rootScope.dispatchEvent('chat_full_update', id);\n\n        return chatFull;\n      }\n    });\n  }\n\n  public async getChatInviteLink(id: ChatId, force?: boolean) {\n    const chatFull = await this.getChatFull(id);\n    if(!force &&\n      chatFull.exported_invite &&\n      chatFull.exported_invite._ == 'chatInviteExported') {\n      return chatFull.exported_invite.link;\n    }\n\n    return this.apiManager.invokeApi('messages.exportChatInvite', {\n      peer: this.appPeersManager.getInputPeerById(id.toPeerId(true))\n    }).then((exportedInvite) => {\n      if(this.chatsFull[id] !== undefined) {\n        this.chatsFull[id].exported_invite = exportedInvite;\n      }\n\n      return (exportedInvite as ExportedChatInvite.chatInviteExported).link;\n    });\n  }\n\n  public getChannelParticipants(id: ChatId, filter: ChannelParticipantsFilter = {_: 'channelParticipantsRecent'}, limit = 200, offset = 0) {\n    if(filter._ === 'channelParticipantsRecent') {\n      const chat = this.appChatsManager.getChat(id);\n      if(chat?.pFlags && (\n      // chat.pFlags.kicked ||\n        (chat as Chat.channel).pFlags.broadcast &&\n          !(chat as Chat.channel).pFlags.creator &&\n          !(chat as Chat.channel).admin_rights\n      )) {\n        return Promise.reject();\n      }\n    }\n\n    return this.apiManager.invokeApiCacheable('channels.getParticipants', {\n      channel: this.appChatsManager.getChannelInput(id),\n      filter,\n      offset,\n      limit,\n      hash: '0'\n    }, {cacheSeconds: 60}).then((result) => {\n      this.appUsersManager.saveApiUsers((result as ChannelsChannelParticipants.channelsChannelParticipants).users);\n      return result as ChannelsChannelParticipants.channelsChannelParticipants;\n    });\n    /* let maybeAddSelf = (participants: any[]) => {\n      let chat = appChatsManager.getChat(id);\n      let selfMustBeFirst = filter._ === 'channelParticipantsRecent' &&\n                            !offset &&\n                            !chat.pFlags.kicked &&\n                            !chat.pFlags.left;\n\n      if(selfMustBeFirst) {\n        participants = copy(participants);\n        let myID = appUsersManager.getSelf().id;\n        let myIndex = participants.findIndex((p) => p.user_id === myID);\n        let myParticipant;\n\n        if(myIndex !== -1) {\n          myParticipant = participants[myIndex];\n          participants.splice(myIndex, 1);\n        } else {\n          myParticipant = {_: 'channelParticipantSelf', user_id: myID};\n        }\n\n        participants.unshift(myParticipant);\n      }\n\n      return participants;\n    } */\n  }\n\n  public getChannelParticipant(id: ChatId, peerId: PeerId) {\n    return this.apiManager.invokeApiSingle('channels.getParticipant', {\n      channel: this.appChatsManager.getChannelInput(id),\n      participant: this.appPeersManager.getInputPeerById(peerId)\n    }).then((channelParticipant) => {\n      this.appUsersManager.saveApiUsers(channelParticipant.users);\n      return channelParticipant.participant;\n    });\n  }\n\n  public getChannelFull(id: ChatId, override?: true) {\n    const peerId = id.toPeerId(true);\n    if(this.chatsFull[id] !== undefined && !override && Date.now() < this.fullExpiration[peerId]) {\n      return this.chatsFull[id] as ChatFull.channelFull;\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'channels.getFullChannel',\n      params: {\n        channel: this.appChatsManager.getChannelInput(id)\n      },\n      processResult: (result) => {\n        this.appChatsManager.saveApiChats(result.chats, true);\n        this.appUsersManager.saveApiUsers(result.users);\n        const fullChannel = result.full_chat as ChatFull.channelFull;\n        if(fullChannel && fullChannel.chat_photo.id) {\n          fullChannel.chat_photo = this.appPhotosManager.savePhoto(fullChannel.chat_photo, {type: 'profilePhoto', peerId});\n          // appPhotosManager.savePhoto(fullChannel.chat_photo);\n        }\n\n        if(fullChannel.call) {\n          this.appGroupCallsManager.saveGroupCall(fullChannel.call, id);\n        }\n\n        this.appNotificationsManager.savePeerSettings({\n          peerId,\n          settings: fullChannel.notify_settings\n        });\n\n        this.chatsFull[id] = fullChannel;\n        this.fullExpiration[peerId] = Date.now() + PEER_FULL_TTL;\n        this.rootScope.dispatchEvent('chat_full_update', id);\n\n        return fullChannel;\n      },\n      processError: (error) => {\n        switch(error.type) {\n          case 'CHANNEL_PRIVATE':\n            const channel = this.appChatsManager.getChat(id) as Chat.channel | Chat.channelForbidden;\n            this.apiUpdatesManager.processUpdateMessage({\n              _: 'updates',\n              updates: [{\n                _: 'updateChannel',\n                channel_id: id\n              }],\n              chats: [channel._ === 'channelForbidden' ? channel : {\n                _: 'channelForbidden',\n                id,\n                access_hash: channel.access_hash,\n                title: channel.title,\n                pFlags: channel.pFlags\n              }],\n              users: []\n            } as Updates.updates);\n            break;\n        }\n\n        throw error;\n      }\n    });\n  }\n\n  public getMentions(chatId: ChatId, query: string, threadId?: number): Promise<PeerId[]> {\n    const processUserIds = (topPeers: MyTopPeer[]) => {\n      const startsWithAt = query.charAt(0) === '@';\n      if(startsWithAt) query = query.slice(1);\n      /* const startsWithAt = query.charAt(0) === '@';\n      if(startsWithAt) query = query.slice(1);\n\n      const index = new SearchIndex<number>(!startsWithAt, !startsWithAt); */\n      const index = new SearchIndex<PeerId>({\n        ignoreCase: true\n      });\n\n      const ratingMap: Map<PeerId, number> = new Map();\n      topPeers.forEach((peer) => {\n        index.indexObject(peer.id, this.appUsersManager.getUserSearchText(peer.id));\n        ratingMap.set(peer.id, peer.rating);\n      });\n\n      const peerIds = Array.from(index.search(query));\n      peerIds.sort((a, b) => ratingMap.get(b) - ratingMap.get(a));\n      return peerIds;\n    };\n\n    let promise: Promise<PeerId[]>;\n    if(this.appChatsManager.isChannel(chatId)) {\n      promise = this.getChannelParticipants(chatId, {\n        _: 'channelParticipantsMentions',\n        q: query,\n        top_msg_id: getServerMessageId(threadId)\n      }, 50, 0).then((cP) => {\n        return cP.participants.map((p) => getParticipantPeerId(p));\n      });\n    } else if(chatId) {\n      promise = Promise.resolve(this.getChatFull(chatId)).then((chatFull) => {\n        return ((chatFull as ChatFull.chatFull).participants as ChatParticipants.chatParticipants).participants.map((p) => p.user_id.toPeerId());\n      });\n    } else {\n      promise = Promise.resolve([]);\n    }\n\n    return Promise.all([\n      // [],\n      this.appUsersManager.getTopPeers('bots_inline').catch(() => [] as MyTopPeer[]),\n      promise\n    ]).then((results) => {\n      const peers = results[0].concat(results[1].map((peerId) => ({id: peerId, rating: 0})));\n\n      return processUserIds(peers);\n    });\n  }\n\n  private invalidateChannelParticipants(id: ChatId) {\n    this.apiManager.clearCache('channels.getParticipants', (params) => (params.channel as InputChannel.inputChannel).channel_id === id);\n    this.refreshFullPeer(id.toPeerId(true));\n  }\n\n  private refreshFullPeer(peerId: PeerId) {\n    if(peerId.isUser()) {\n      const userId = peerId.toUserId();\n      delete this.usersFull[userId];\n      this.rootScope.dispatchEvent('user_full_update', userId);\n    } else {\n      const chatId = peerId.toChatId();\n      delete this.chatsFull[chatId];\n      this.rootScope.dispatchEvent('chat_full_update', chatId);\n    }\n\n    // ! эта строчка будет создавать race condition:\n    // ! запрос вернёт chat с установленным флагом call_not_empty, хотя сам апдейт уже будет применён\n    // this.getProfileByPeerId(peerId, true);\n  }\n\n  public updateProfile(first_name?: string, last_name?: string, about?: string) {\n    return this.apiManager.invokeApi('account.updateProfile', {\n      first_name,\n      last_name,\n      about\n    }).then((user) => {\n      this.appUsersManager.saveApiUser(user);\n\n      if(about !== undefined) {\n        const peerId = user.id.toPeerId();\n        const userFull = this.usersFull[user.id];\n        if(userFull) {\n          userFull.about = about;\n        }\n\n        this.rootScope.dispatchEvent('peer_bio_edit', peerId);\n      }\n\n      return this.getProfile(user.id, true);\n    });\n  }\n\n  public uploadProfilePhoto(inputFile: InputFile) {\n    return this.apiManager.invokeApi('photos.uploadProfilePhoto', {\n      file: inputFile\n    }).then((updateResult) => {\n      // ! sometimes can have no user in users\n      const photo = updateResult.photo as Photo.photo;\n      if(!updateResult.users.length) {\n        const strippedThumb = photo.sizes.find((size) => size._ === 'photoStrippedSize') as PhotoSize.photoStrippedSize;\n        updateResult.users.push({\n          ...this.appUsersManager.getSelf(),\n          photo: {\n            _: 'userProfilePhoto',\n            dc_id: photo.dc_id,\n            photo_id: photo.id,\n            stripped_thumb: strippedThumb?.bytes,\n            pFlags: {\n\n            }\n          }\n        });\n      }\n      this.appUsersManager.saveApiUsers(updateResult.users);\n\n      const myId = this.appPeersManager.peerId;\n      this.appPhotosManager.savePhoto(updateResult.photo, {\n        type: 'profilePhoto',\n        peerId: myId\n      });\n\n      const userId = myId.toUserId();\n      // this.apiUpdatesManager.processLocalUpdate({\n      //   _: 'updateUserPhoto',\n      //   user_id: userId,\n      //   date: tsNow(true),\n      //   photo: this.appUsersManager.getUser(userId).photo,\n      //   previous: true\n      // });\n      this.apiUpdatesManager.processLocalUpdate({\n        _: 'updateUser',\n        user_id: userId\n      });\n    });\n  }\n\n  public deletePhotos(photoIds: string[]) {\n    return this.apiManager.invokeApiSingle('photos.deletePhotos', {\n      id: photoIds.map((photoId) => {\n        const photo = this.appPhotosManager.getPhoto(photoId);\n        return getPhotoInput(photo);\n      })\n    }).then((deletedList) => {\n\n    });\n  }\n\n  private verifyParticipantForOnlineCount(participant: {user_id: UserId}) {\n    const user = this.appUsersManager.getUser(participant.user_id);\n    return !!(user && user.status && user.status._ === 'userStatusOnline');\n  }\n\n  private reduceParticipantsForOnlineCount(participants: {user_id: UserId}[]) {\n    return participants.reduce((acc, participant) => {\n      return acc + +this.verifyParticipantForOnlineCount(participant);\n    }, 0);\n  }\n\n  public async getOnlines(id: ChatId): Promise<number> {\n    const minOnline = 1;\n    if(this.appChatsManager.isBroadcast(id)) {\n      return minOnline;\n    }\n\n    const chatInfo = await this.getChatFull(id);\n    if(this.appChatsManager.isMegagroup(id)) {\n      if((chatInfo as ChatFull.channelFull).participants_count <= 100) {\n        const channelParticipants = await this.getChannelParticipants(id, {_: 'channelParticipantsRecent'}, 100);\n        return this.reduceParticipantsForOnlineCount(channelParticipants.participants as ChannelParticipant.channelParticipant[]);\n      }\n\n      const res = await this.apiManager.invokeApiCacheable('messages.getOnlines', {\n        peer: this.appChatsManager.getChannelInputPeer(id)\n      }, {cacheSeconds: 60});\n\n      const onlines = res.onlines ?? minOnline;\n      return onlines;\n    }\n\n    const _participants = (chatInfo as ChatFull.chatFull).participants as ChatParticipants.chatParticipants;\n    if(_participants?.participants) {\n      return this.reduceParticipantsForOnlineCount(_participants.participants);\n    } else {\n      return minOnline;\n    }\n  }\n\n  private getTypingsKey(peerId: PeerId, threadId?: number) {\n    return peerId + (threadId ? `_${threadId}` : '');\n  }\n\n  private onUpdateUserTyping = (update: Update.updateUserTyping | Update.updateChatUserTyping | Update.updateChannelUserTyping) => {\n    const fromId = (update as Update.updateUserTyping).user_id ?\n      (update as Update.updateUserTyping).user_id.toPeerId() :\n      this.appPeersManager.getPeerId((update as Update.updateChatUserTyping).from_id);\n    if(this.appPeersManager.peerId === fromId || update.action._ === 'speakingInGroupCallAction') {\n      return;\n    }\n\n    const topMsgId = (update as Update.updateChannelUserTyping).top_msg_id;\n    const threadId = topMsgId ? generateMessageId(topMsgId) : undefined;\n    const peerId = this.appPeersManager.getPeerId(update);\n    const key = this.getTypingsKey(peerId, threadId);\n    const typings = this.typingsInPeer[key] ??= [];\n    let typing = typings.find((t) => t.userId === fromId);\n\n    const cancelAction = () => {\n      delete typing.timeout;\n      // typings.findAndSplice((t) => t === typing);\n      const idx = typings.indexOf(typing);\n      if(idx !== -1) {\n        typings.splice(idx, 1);\n      }\n\n      this.rootScope.dispatchEvent('peer_typings', {peerId, threadId, typings});\n\n      if(!typings.length) {\n        delete this.typingsInPeer[key];\n      }\n    };\n\n    if(typing?.timeout !== undefined) {\n      clearTimeout(typing.timeout);\n    }\n\n    if(update.action._ === 'sendMessageCancelAction') {\n      if(!typing) {\n        return;\n      }\n\n      cancelAction();\n      return;\n    }\n\n    if(!typing) {\n      typing = {\n        userId: fromId\n      };\n\n      typings.push(typing);\n    }\n\n    // console.log('updateChatUserTyping', update, typings);\n\n    typing.action = update.action;\n\n    const hasUser = this.appUsersManager.hasUser(fromId);\n    if(!hasUser) {\n      // let's load user here\n      if(update._ === 'updateChatUserTyping') {\n        if(update.chat_id && this.appChatsManager.hasChat(update.chat_id) && !this.appChatsManager.isChannel(update.chat_id)) {\n          Promise.resolve(this.getChatFull(update.chat_id)).then(() => {\n            if(typing.timeout !== undefined && this.appUsersManager.hasUser(fromId)) {\n              this.rootScope.dispatchEvent('peer_typings', {peerId, threadId, typings});\n            }\n          });\n        }\n      }\n\n      // return;\n    } else {\n      this.appUsersManager.forceUserOnline(fromId);\n    }\n\n    typing.timeout = ctx.setTimeout(cancelAction, 6000);\n    if(hasUser) {\n      this.rootScope.dispatchEvent('peer_typings', {peerId, threadId, typings});\n    }\n  };\n\n  private onUpdatePeerBlocked = (update: Update.updatePeerBlocked) => {\n    const peerId = this.appPeersManager.getPeerId(update.peer_id);\n    if(this.appPeersManager.isUser(peerId)) {\n      const userId = peerId.toUserId();\n      const userFull = this.usersFull[userId];\n      if(userFull) {\n        if(update.blocked) userFull.pFlags.blocked = true;\n        else delete userFull.pFlags.blocked;\n      }\n\n      this.rootScope.dispatchEvent('user_full_update', userId);\n    }\n\n    this.rootScope.dispatchEvent('peer_block', {peerId, blocked: update.blocked});\n  };\n\n  public getPeerTypings(peerId: PeerId, threadId?: number) {\n    return this.typingsInPeer[this.getTypingsKey(peerId, threadId)];\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {Awaited} from '../types';\n\nexport default function callbackifyAll<T extends readonly unknown[] | [], R extends any>(\n  values: T,\n  callback: (result: { -readonly [P in keyof T]: Awaited<T[P]> }) => R\n): Promise<Awaited<R>> | R {\n  if(values.some((value) => value instanceof Promise)) {\n    return Promise.all(values).then(callback as any);\n  } else {\n    return callback(values as any);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport findAndSplice from '../../helpers/array/findAndSplice';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport assumeType from '../../helpers/assumeType';\nimport callbackify from '../../helpers/callbackify';\nimport callbackifyAll from '../../helpers/callbackifyAll';\nimport copy from '../../helpers/object/copy';\nimport pause from '../../helpers/schedulers/pause';\nimport {AvailableReaction, Message, MessagePeerReaction, MessagesAvailableReactions, Reaction, ReactionCount, Update, Updates} from '../../layer';\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\nimport {AppManager} from './manager';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\nimport reactionsEqual from './utils/reactions/reactionsEqual';\n\nconst SAVE_DOC_KEYS = [\n  'static_icon' as const,\n  'appear_animation' as const,\n  'select_animation' as const,\n  'activate_animation' as const,\n  'effect_animation' as const,\n  'around_animation' as const,\n  'center_icon' as const\n];\n\nconst REFERENCE_CONTEXT: ReferenceContext = {\n  type: 'reactions'\n};\n\nexport class AppReactionsManager extends AppManager {\n  private availableReactions: AvailableReaction[];\n  private sendReactionPromises: Map<string, Promise<any>>;\n  private lastSendingTimes: Map<string, number>;\n\n  protected after() {\n    this.rootScope.addEventListener('language_change', () => {\n      this.availableReactions = undefined;\n      this.getAvailableReactions();\n    });\n\n    this.sendReactionPromises = new Map();\n    this.lastSendingTimes = new Map();\n\n    this.rootScope.addEventListener('user_auth', () => {\n      setTimeout(() => {\n        Promise.resolve(this.getAvailableReactions()).then(async(availableReactions) => {\n          for(const availableReaction of availableReactions) {\n            await Promise.all([\n              availableReaction.around_animation && this.apiFileManager.downloadMedia({media: availableReaction.around_animation}),\n              availableReaction.static_icon && this.apiFileManager.downloadMedia({media: availableReaction.static_icon}),\n              availableReaction.appear_animation && this.apiFileManager.downloadMedia({media: availableReaction.appear_animation}),\n              availableReaction.center_icon && this.apiFileManager.downloadMedia({media: availableReaction.center_icon})\n            ]);\n\n            await pause(1000);\n          }\n        });\n      }, 7.5e3);\n    });\n  }\n\n  public getAvailableReactions() {\n    if(this.availableReactions) return this.availableReactions;\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getAvailableReactions',\n      processResult: (messagesAvailableReactions) => {\n        assumeType<MessagesAvailableReactions.messagesAvailableReactions>(messagesAvailableReactions);\n\n        const availableReactions = this.availableReactions = messagesAvailableReactions.reactions;\n        for(const reaction of availableReactions) {\n          for(const key of SAVE_DOC_KEYS) {\n            if(!reaction[key]) {\n              continue;\n            }\n\n            reaction[key] = this.appDocsManager.saveDoc(reaction[key], REFERENCE_CONTEXT);\n          }\n        }\n\n        return availableReactions;\n      },\n      params: {\n        hash: 0\n      }\n    });\n  }\n\n  public getActiveAvailableReactions() {\n    return callbackify(this.getAvailableReactions(), (availableReactions) => {\n      return availableReactions.filter((availableReaction) => !availableReaction.pFlags.inactive);\n    });\n  }\n\n  public getAvailableReactionsForPeer(peerId: PeerId) {\n    const activeAvailableReactions = this.getActiveAvailableReactions();\n    if(peerId.isUser()) {\n      return this.unshiftQuickReaction(activeAvailableReactions);\n    }\n\n    const chatFull = this.appProfileManager.getChatFull(peerId.toChatId());\n    return callbackifyAll([activeAvailableReactions, chatFull, this.getQuickReaction()], ([activeAvailableReactions, chatFull, quickReaction]) => {\n      const chatAvailableReactions = chatFull.available_reactions ?? {_: 'chatReactionsNone'};\n\n      let filteredChatAvailableReactions: AvailableReaction[] = [];\n      if(chatAvailableReactions._ === 'chatReactionsAll') {\n        filteredChatAvailableReactions = activeAvailableReactions;\n      } else if(chatAvailableReactions._ === 'chatReactionsSome') {\n        filteredChatAvailableReactions = chatAvailableReactions.reactions.map((reaction) => {\n          return activeAvailableReactions.find((availableReaction) => availableReaction.reaction === (reaction as Reaction.reactionEmoji).emoticon);\n        }).filter(Boolean);\n      }\n\n      return this.unshiftQuickReactionInner(filteredChatAvailableReactions, quickReaction);\n    });\n  }\n\n  private unshiftQuickReactionInner(availableReactions: AvailableReaction[], quickReaction: Reaction | AvailableReaction) {\n    if(quickReaction && quickReaction._ !== 'reactionEmoji' && quickReaction._ !== 'availableReaction') return availableReactions;\n    const emoticon = (quickReaction as Reaction.reactionEmoji).emoticon || (quickReaction as AvailableReaction).reaction;\n    const availableReaction = findAndSplice(availableReactions, (availableReaction) => availableReaction.reaction === emoticon);\n    if(availableReaction) {\n      availableReactions.unshift(availableReaction);\n    }\n\n    return availableReactions;\n  }\n\n  private unshiftQuickReaction(\n    availableReactions: AvailableReaction[] | PromiseLike<AvailableReaction.availableReaction[]>,\n    quickReaction: ReturnType<AppReactionsManager['getQuickReaction']> = this.getQuickReaction()\n  ) {\n    return callbackifyAll([\n      availableReactions,\n      quickReaction\n    ], ([availableReactions, quickReaction]) => {\n      return this.unshiftQuickReactionInner(availableReactions, quickReaction);\n    });\n  }\n\n  public getAvailableReactionsByMessage(message: Message.message) {\n    if(!message) return [];\n    const peerId = (message.fwd_from?.channel_post && this.appPeersManager.isMegagroup(message.peerId) && message.fwdFromId) || message.peerId;\n    return this.getAvailableReactionsForPeer(peerId);\n  }\n\n  public isReactionActive(reaction: string) {\n    if(!this.availableReactions) return false;\n    return !!this.availableReactions.find((availableReaction) => availableReaction.reaction === reaction);\n  }\n\n  public getQuickReaction() {\n    return callbackifyAll([\n      this.apiManager.getConfig(),\n      this.getAvailableReactions()\n    ], ([config, availableReactions]) => {\n      const reaction = config.reactions_default;\n      if(reaction?._ === 'reactionEmoji') {\n        return availableReactions.find((availableReaction) => availableReaction.reaction === reaction.emoticon);\n      }\n\n      return reaction as Reaction.reactionCustomEmoji;\n    });\n  }\n\n  public getReactionCached(reaction: string) {\n    return this.availableReactions.find((availableReaction) => availableReaction.reaction === reaction);\n  }\n\n  public getReaction(reaction: string) {\n    return callbackify(this.getAvailableReactions(), () => {\n      return this.getReactionCached(reaction);\n    });\n  }\n\n  public getMessagesReactions(peerId: PeerId, mids: number[]) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getMessagesReactions',\n      params: {\n        id: mids.map((mid) => getServerMessageId(mid)),\n        peer: this.appPeersManager.getInputPeerById(peerId)\n      },\n      processResult: (updates) => {\n        this.apiUpdatesManager.processUpdateMessage(updates);\n\n        // const update = (updates as Updates.updates).updates.find((update) => update._ === 'updateMessageReactions') as Update.updateMessageReactions;\n        // return update.reactions;\n      }\n    });\n  }\n\n  public getMessageReactionsList(peerId: PeerId, mid: number, limit: number, reaction?: Reaction, offset?: string) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getMessageReactionsList',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        id: getServerMessageId(mid),\n        limit,\n        reaction,\n        offset\n      },\n      processResult: (messageReactionsList) => {\n        this.appUsersManager.saveApiUsers(messageReactionsList.users);\n        return messageReactionsList;\n      }\n    });\n  }\n\n  public setDefaultReaction(reaction: Reaction) {\n    return this.apiManager.invokeApi('messages.setDefaultReaction', {reaction}).then(async(value) => {\n      if(value) {\n        const appConfig = await this.apiManager.getConfig();\n        if(appConfig) {\n          appConfig.reactions_default = reaction;\n        }/*  else { // if no config or loading it - overwrite\n          this.apiManager.getAppConfig(true);\n        } */\n\n        this.rootScope.dispatchEvent('quick_reaction', reaction);\n      }\n\n      return value;\n    });\n  }\n\n  public async sendReaction(message: Message.message, reaction?: Reaction | AvailableReaction, onlyLocal?: boolean) {\n    if(reaction._ === 'availableReaction') {\n      reaction = {\n        _: 'reactionEmoji',\n        emoticon: reaction.reaction\n      };\n    }\n\n    const limit = await this.apiManager.getLimit('reactions');\n\n    const lastSendingTimeKey = message.peerId + '_' + message.mid;\n    const lastSendingTime = this.lastSendingTimes.get(lastSendingTimeKey);\n    if(lastSendingTime) {\n      return;\n    } else {\n      this.lastSendingTimes.set(lastSendingTimeKey, Date.now());\n      setTimeout(() => {\n        this.lastSendingTimes.delete(lastSendingTimeKey);\n      }, 333);\n    }\n\n    const {peerId, mid} = message;\n    const myPeerId = this.appPeersManager.peerId;\n\n    const unsetReactionCount = (reactionCount: ReactionCount) => {\n      --reactionCount.count;\n      delete reactionCount.chosen_order;\n\n      if(reactionsEqual(reaction as Reaction, reactionCount.reaction)) {\n        reaction = undefined as Reaction;\n      }\n\n      if(!reactionCount.count) {\n        indexOfAndSplice(reactions.results, reactionCount);\n      }/*  else {\n        insertInDescendSortedArray(reactions.results, chosenReaction, 'count', chosenReactionIdx);\n      } */\n\n      if(reactions.recent_reactions) {\n        findAndSplice(reactions.recent_reactions, (recentReaction) => reactionsEqual(recentReaction.reaction, reactionCount.reaction) && this.appPeersManager.getPeerId(recentReaction.peer_id) === myPeerId);\n      }\n\n      if(!reactions.results.length) {\n        reactions = undefined;\n      }\n    };\n\n    const canSeeList = message.reactions?.pFlags?.can_see_list || !this.appPeersManager.isBroadcast(message.peerId) || message.peerId.isUser();\n    if(!message.reactions) {\n      message.reactions = {\n        _: 'messageReactions',\n        results: [],\n        recent_reactions: canSeeList ? [] : undefined,\n        pFlags: {\n          can_see_list: canSeeList || undefined\n        }\n      };\n    }\n\n    let reactions = onlyLocal ? message.reactions : copy(message.reactions);\n    const chosenReactions = reactions.results.filter((reactionCount) => reactionCount.chosen_order !== undefined);\n    chosenReactions.sort((a, b) => b.chosen_order - a.chosen_order);\n    const unsetReactions: ReactionCount[] = [];\n    const chosenReactionIdx = chosenReactions.findIndex((reactionCount) => reactionsEqual(reactionCount.reaction, reaction as Reaction));\n    if(chosenReactionIdx !== -1) unsetReactions.push(...chosenReactions.splice(chosenReactionIdx, 1));\n    unsetReactions.push(...chosenReactions.splice(limit - +(chosenReactionIdx === -1)));\n    unsetReactions.forEach((reactionCount) => {\n      chosenReactions.forEach((chosenReactionCount) => {\n        if(chosenReactionCount.chosen_order > reactionCount.chosen_order) {\n          --chosenReactionCount.chosen_order;\n        }\n      });\n\n      unsetReactionCount(reactionCount);\n    });\n\n    const chosenReactionsLength = chosenReactions.length;\n    chosenReactions.forEach((reactionCount, idx) => {\n      reactionCount.chosen_order = chosenReactionsLength - 1 - idx;\n    });\n\n    if(reaction) {\n      if(!reactions) {\n        reactions/*  = message.reactions */ = {\n          _: 'messageReactions',\n          results: [],\n          pFlags: {}\n        };\n\n        if(canSeeList) {\n          reactions.pFlags.can_see_list = true;\n        }\n      }\n\n      let reactionCountIdx = reactions.results.findIndex((reactionCount) => reactionsEqual(reactionCount.reaction, reaction as Reaction));\n      let reactionCount = reactionCountIdx !== -1 && reactions.results[reactionCountIdx];\n      if(!reactionCount) {\n        reactionCount = {\n          _: 'reactionCount',\n          count: 0,\n          reaction\n        };\n\n        reactionCountIdx = reactions.results.push(reactionCount) - 1;\n      }\n\n      ++reactionCount.count;\n      reactionCount.chosen_order = chosenReactions.length ? chosenReactions[0].chosen_order + 1 : 0;\n      chosenReactions.unshift(reactionCount);\n\n      if(!reactions.recent_reactions && canSeeList) {\n        reactions.recent_reactions = [];\n      }\n\n      if(reactions.recent_reactions) {\n        const peerReaction: MessagePeerReaction = {\n          _: 'messagePeerReaction',\n          reaction,\n          peer_id: this.appPeersManager.getOutputPeer(myPeerId),\n          pFlags: {}\n        };\n\n        if(!this.appPeersManager.isMegagroup(peerId) && false) {\n          reactions.recent_reactions.push(peerReaction);\n          reactions.recent_reactions = reactions.recent_reactions.slice(-3);\n        } else {\n          reactions.recent_reactions.unshift(peerReaction);\n          reactions.recent_reactions = reactions.recent_reactions.slice(0, 3);\n        }\n      }\n\n      // insertInDescendSortedArray(reactions.results, reactionCount, 'count', reactionCountIdx);\n    }\n\n    const availableReactions = this.availableReactions;\n    if(reactions && availableReactions?.length) {\n      const indexes: Map<DocId | string, number> = new Map();\n      availableReactions.forEach((availableReaction, idx) => {\n        indexes.set(availableReaction.reaction, idx);\n      });\n\n      reactions.results.sort((a, b) => {\n        const id1 = (a.reaction as Reaction.reactionCustomEmoji).document_id || (a.reaction as Reaction.reactionEmoji).emoticon;\n        const id2 = (b.reaction as Reaction.reactionCustomEmoji).document_id || (b.reaction as Reaction.reactionEmoji).emoticon;\n        return (b.count - a.count) || ((indexes.get(id1) ?? 0) - (indexes.get(id2) ?? 0));\n      });\n    }\n\n    if(onlyLocal) {\n      message.reactions = reactions;\n      this.rootScope.dispatchEvent('messages_reactions', [{message, changedResults: []}]);\n      return Promise.resolve();\n    }\n\n    this.apiUpdatesManager.processLocalUpdate({\n      _: 'updateMessageReactions',\n      peer: message.peer_id,\n      msg_id: message.id,\n      reactions: reactions,\n      local: true\n    });\n\n    const promiseKey = [peerId, mid].join('-');\n    const msgId = getServerMessageId(mid);\n    const promise = this.apiManager.invokeApi('messages.sendReaction', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: msgId,\n      reaction: chosenReactions.map((reactionCount) => reactionCount.reaction)\n    }).then((updates) => {\n      assumeType<Updates.updates>(updates);\n\n      const editMessageUpdateIdx = updates.updates.findIndex((update) => update._ === 'updateEditMessage' || update._ === 'updateEditChannelMessage');\n      if(editMessageUpdateIdx !== -1) {\n        const editMessageUpdate = updates.updates[editMessageUpdateIdx] as Update.updateEditMessage | Update.updateEditChannelMessage;\n        updates.updates[editMessageUpdateIdx] = {\n          _: 'updateMessageReactions',\n          msg_id: msgId,\n          peer: this.appPeersManager.getOutputPeer(peerId),\n          reactions: (editMessageUpdate.message as Message.message).reactions,\n          pts: editMessageUpdate.pts,\n          pts_count: editMessageUpdate.pts_count\n        };\n      }\n\n      this.apiUpdatesManager.processUpdateMessage(updates);\n    }).catch((err) => {\n      if(err.type === 'REACTION_INVALID' && this.sendReactionPromises.get(promiseKey) === promise) {\n        this.sendReaction(message, chosenReactions[0]?.reaction, true);\n      }\n    }).finally(() => {\n      if(this.sendReactionPromises.get(promiseKey) === promise) {\n        this.sendReactionPromises.delete(promiseKey);\n      }\n    });\n\n    this.sendReactionPromises.set(promiseKey, promise);\n    return promise;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {MyDocument} from './appDocsManager';\nimport type {DownloadOptions} from '../mtproto/apiFileManager';\nimport {Document, InputFileLocation, InputStickerSet, MessagesAllStickers, MessagesFavedStickers, MessagesFeaturedStickers, MessagesFoundStickerSets, MessagesRecentStickers, MessagesStickers, MessagesStickerSet, PhotoSize, StickerPack, StickerSet, StickerSetCovered, Update} from '../../layer';\nimport {Modify} from '../../types';\nimport AppStorage from '../storage';\nimport DATABASE_STATE from '../../config/databases/state';\nimport assumeType from '../../helpers/assumeType';\nimport fixBase64String from '../../helpers/fixBase64String';\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport findAndSplice from '../../helpers/array/findAndSplice';\nimport {AppManager} from './manager';\nimport fixEmoji from '../richTextProcessor/fixEmoji';\nimport ctx from '../../environment/ctx';\nimport {getEnvironment} from '../../environment/utils';\nimport getDocumentInput from './utils/docs/getDocumentInput';\nimport getStickerEffectThumb from './utils/stickers/getStickerEffectThumb';\n\nconst CACHE_TIME = 3600e3;\n\ntype LOCAL_STICKER_SET_ID = Extract<\n  InputStickerSet['_'],\n  'inputStickerSetAnimatedEmoji' | 'inputStickerSetAnimatedEmojiAnimations' |\n  'inputStickerSetPremiumGifts' | 'inputStickerSetEmojiGenericAnimations' |\n  'inputStickerSetEmojiDefaultStatuses' | 'inputStickerSetEmojiDefaultTopicIcons'\n>;\n\ntype LOCAL_ID = 'EMOJI' | 'EMOJI_ANIMATIONS' | 'PREMIUM_GIFTS' | 'GENERIC_ANIMATIONS' | 'DEFAULT_STATUSES' | 'DEFAULT_TOPIC_ICONS';\n\nconst LOCAL_IDS: {[key in LOCAL_ID]: LOCAL_STICKER_SET_ID} = {\n  EMOJI: 'inputStickerSetAnimatedEmoji',\n  EMOJI_ANIMATIONS: 'inputStickerSetAnimatedEmojiAnimations',\n  PREMIUM_GIFTS: 'inputStickerSetPremiumGifts',\n  GENERIC_ANIMATIONS: 'inputStickerSetEmojiGenericAnimations',\n  DEFAULT_STATUSES: 'inputStickerSetEmojiDefaultStatuses',\n  DEFAULT_TOPIC_ICONS: 'inputStickerSetEmojiDefaultTopicIcons'\n}\n\nconst LOCAL_IDS_SET: Set<LOCAL_STICKER_SET_ID> = new Set(Object.values(LOCAL_IDS) as any);\n\n// let TEST_FILE_REFERENCE_REFRESH = true;\n\nexport type MyStickerSetInput = {\n  id: StickerSet.stickerSet['id'],\n  access_hash?: StickerSet.stickerSet['access_hash']\n};\n\nexport type MyMessagesStickerSet = MessagesStickerSet.messagesStickerSet;\n\nexport class AppStickersManager extends AppManager {\n  private storage = new AppStorage<Record<Long, MyMessagesStickerSet>, typeof DATABASE_STATE>(DATABASE_STATE, 'stickerSets');\n\n  private getStickerSetPromises: {[setId: Long]: Promise<MyMessagesStickerSet>};\n  private getStickersByEmoticonsPromises: {[emoticon: string]: Promise<MyDocument[]>};\n\n  private greetingStickers: MyDocument[];\n  private getGreetingStickersTimeout: number;\n  private getGreetingStickersPromise: Promise<void>;\n\n  private sounds: Record<string, MyDocument>;\n  private getAnimatedEmojiSoundsPromise: Promise<void>;\n\n  private favedStickers: MyDocument[];\n  private recentStickers: MyDocument[];\n\n  private names: Record<string, InputStickerSet.inputStickerSetID>;\n\n  protected after() {\n    this.getStickerSetPromises = {};\n    this.getStickersByEmoticonsPromises = {};\n    this.sounds = {};\n    this.names = {};\n\n    this.rootScope.addEventListener('user_auth', () => {\n      setTimeout(() => {\n        this.getAnimatedEmojiStickerSet();\n        // this.getFavedStickersStickers();\n      }, 1000);\n\n      if(!this.getGreetingStickersPromise && this.getGreetingStickersTimeout === undefined) {\n        this.getGreetingStickersTimeout = ctx.setTimeout(() => {\n          this.getGreetingStickersTimeout = undefined;\n          this.getGreetingSticker(true);\n        }, 5000);\n      }\n    });\n\n    this.rootScope.addEventListener('app_config', () => this.onStickersUpdated('faved', true));\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateNewStickerSet: (update) => {\n        const stickerSet = update.stickerset as MyMessagesStickerSet;\n        this.saveStickerSet(stickerSet, stickerSet.set.id);\n        this.rootScope.dispatchEvent('stickers_installed', stickerSet.set);\n      },\n\n      updateRecentStickers: () => this.onStickersUpdated('recent', true),\n\n      updateFavedStickers: () => this.onStickersUpdated('faved', true),\n\n      updateMoveStickerSetToTop: (update) => {\n        this.rootScope.dispatchEvent('stickers_top', update.stickerset);\n      }\n    });\n  }\n\n  private async onStickersUpdated(type: 'faved' | 'recent', overwrite: boolean) {\n    const stickers = await (type === 'faved' ? this.getFavedStickersStickers(overwrite) : this.getRecentStickersStickers(overwrite));\n    this.rootScope.dispatchEvent('stickers_updated', {\n      type,\n      stickers\n    });\n  }\n\n  public getGreetingSticker(justPreload = false) {\n    if(this.getGreetingStickersTimeout) {\n      clearTimeout(this.getGreetingStickersTimeout);\n      this.getGreetingStickersTimeout = undefined;\n    }\n\n    if(!this.getGreetingStickersPromise) {\n      this.getGreetingStickersPromise = this.getStickersByEmoticon('👋⭐️', false).then((docs) => {\n        if(!docs.length) throw 'NO_STICKERS';\n        this.greetingStickers = docs.slice() as Document.document[];\n        this.greetingStickers.sort((a, b) => Math.random() - Math.random());\n      });\n    }\n\n    return this.getGreetingStickersPromise.then(() => {\n      let doc: Document.document;\n      if(!justPreload) {\n        doc = this.greetingStickers.shift();\n        this.greetingStickers.push(doc);\n      }\n\n      this.apiFileManager.downloadMedia({media: this.greetingStickers[0]}); // preload next sticker\n\n      return doc;\n    });\n  }\n\n  private saveStickers(docs: Document[]) {\n    forEachReverse(docs, (doc, idx) => {\n      doc = this.appDocsManager.saveDoc(doc);\n\n      if(!doc) docs.splice(idx, 1);\n      else docs[idx] = doc;\n    });\n  }\n\n  private canUseStickerSetCache(set: MyMessagesStickerSet, useCache?: boolean) {\n    return set && set.documents?.length && ((Date.now() - set.refreshTime) < CACHE_TIME || useCache);\n  }\n\n  public getStickerSet(set: MyStickerSetInput, params: Partial<{\n    overwrite: boolean,\n    useCache: boolean,\n    saveById: boolean\n  }> = {}): Promise<MyMessagesStickerSet> | MyMessagesStickerSet {\n    let {id} = set;\n    if(!set.access_hash) {\n      set = this.names[id] || set;\n      id = set.id;\n    }\n\n    if(this.getStickerSetPromises[id]) {\n      return this.getStickerSetPromises[id];\n    }\n\n    if(!params.overwrite) {\n      const cachedSet = this.storage.getFromCache(id);\n      if(this.canUseStickerSetCache(cachedSet, params.useCache)) {\n        return cachedSet;\n      }\n    }\n\n    const promise = this.getStickerSetPromises[id] = new Promise(async(resolve) => {\n      if(!params.overwrite) {\n        const cachedSet = await this.storage.get(id);\n        if(this.canUseStickerSetCache(cachedSet, params.useCache)) {\n          this.saveStickers(cachedSet.documents);\n          resolve(cachedSet);\n\n          if(this.getStickerSetPromises[id] === promise) {\n            delete this.getStickerSetPromises[id];\n          }\n\n          return;\n        }\n      }\n\n      try {\n        const stickerSet = await this.apiManager.invokeApi('messages.getStickerSet', {\n          stickerset: this.getStickerSetInput(set),\n          hash: 0\n        }) as MyMessagesStickerSet;\n\n        const saveById = params.saveById ? id : stickerSet.set.id;\n        this.saveStickerSet(stickerSet, saveById);\n\n        resolve(stickerSet);\n      } catch(err) {\n        resolve(null);\n      }\n\n      if(this.getStickerSetPromises[id] === promise) {\n        delete this.getStickerSetPromises[id];\n      }\n    });\n\n    return promise;\n  }\n\n  public getLocalStickerSet(id: LOCAL_STICKER_SET_ID) {\n    return this.getStickerSet({id}, {saveById: true});\n  }\n\n  public getAnimatedEmojiStickerSet() {\n    return Promise.all([\n      this.getLocalStickerSet(LOCAL_IDS.EMOJI),\n      this.getLocalStickerSet(LOCAL_IDS.EMOJI_ANIMATIONS),\n      this.getAnimatedEmojiSounds()\n    ]).then(([emoji, animations]) => {\n      return {emoji, animations};\n    });\n  }\n\n  public getAnimatedEmojiSounds(overwrite?: boolean) {\n    if(this.getAnimatedEmojiSoundsPromise && !overwrite) return this.getAnimatedEmojiSoundsPromise;\n    const promise = this.getAnimatedEmojiSoundsPromise = Promise.all([\n      this.apiManager.getAppConfig(overwrite),\n      this.apiManager.getConfig()\n    ]).then(([appConfig, config]) => {\n      if(this.getAnimatedEmojiSoundsPromise !== promise) {\n        return;\n      }\n\n      for(const emoji in appConfig.emojies_sounds) {\n        const sound = appConfig.emojies_sounds[emoji];\n        const bytesStr = atob(fixBase64String(sound.file_reference_base64, false));\n        const bytes = new Uint8Array(bytesStr.length);\n        for(let i = 0, length = bytes.length; i < length; ++i) {\n          bytes[i] = bytesStr[i].charCodeAt(0);\n        }\n\n        // if(TEST_FILE_REFERENCE_REFRESH) {\n        //   bytes[0] = bytes[1] = bytes[2] = bytes[3] = bytes[4] = 0;\n        //   sound.access_hash += '999';\n        // }\n\n        const doc = this.appDocsManager.saveDoc({\n          _: 'document',\n          pFlags: {},\n          flags: 0,\n          id: sound.id,\n          access_hash: sound.access_hash,\n          attributes: [{\n            _: 'documentAttributeAudio',\n            duration: 1,\n            pFlags: {\n              voice: true\n            }\n          }],\n          date: 0,\n          dc_id: config.this_dc,\n          file_reference: bytes,\n          mime_type: 'audio/ogg'\n          // size: 101010 // test loading everytime\n        }, {\n          type: 'emojiesSounds'\n        });\n\n        this.sounds[emoji] = doc;\n      }\n\n      // if(TEST_FILE_REFERENCE_REFRESH) {\n      //   TEST_FILE_REFERENCE_REFRESH = false;\n      // }\n    });\n\n    return promise;\n  }\n\n  public async getRecentStickers(overwrite?: boolean): Promise<Modify<MessagesRecentStickers.messagesRecentStickers, {\n    stickers: Document[]\n  }>> {\n    const res = await this.apiManager.invokeApiHashable({\n      method: 'messages.getRecentStickers',\n      processResult: (res) => {\n        assumeType<MessagesRecentStickers.messagesRecentStickers>(res);\n\n        this.recentStickers = res.stickers as MyDocument[];\n        this.saveStickers(res.stickers);\n        return res;\n      },\n      overwrite\n    });\n\n    return res;\n  }\n\n  public getRecentStickersStickers(overwrite?: boolean) {\n    if(overwrite) this.recentStickers = undefined;\n    else if(this.recentStickers) return this.recentStickers;\n    return this.getRecentStickers(overwrite).then(() => this.recentStickers);\n  }\n\n  public saveRecentSticker(docId: DocId, unsave?: boolean, attached?: boolean) {\n    const doc = this.appDocsManager.getDoc(docId);\n\n    findAndSplice(this.recentStickers, (_doc) => _doc.id === docId);\n    if(!unsave) {\n      this.recentStickers.unshift(doc);\n\n      const docEmoticon = fixEmoji(doc.stickerEmojiRaw);\n      for(const emoticon in this.getStickersByEmoticonsPromises) {\n        const promise = this.getStickersByEmoticonsPromises[emoticon];\n        promise.then((stickers) => {\n          const _doc = findAndSplice(stickers, (_doc) => _doc.id === doc.id);\n          if(_doc) {\n            stickers.unshift(_doc);\n          } else if(emoticon.includes(docEmoticon)) {\n            stickers.unshift(doc);\n          }\n        });\n      }\n    }\n\n    this.rootScope.dispatchEvent('sticker_updated', {type: 'recent', faved: !unsave, document: doc});\n\n    if(unsave) {\n      this.onStickersUpdated('recent', false);\n    }\n\n    return this.apiManager.invokeApi('messages.saveRecentSticker', {\n      id: getDocumentInput(doc),\n      unsave,\n      attached\n    });\n  }\n\n  private cleanEmoji(emoji: string) {\n    return emoji.replace(/\\ufe0f/g, '').replace(/🏻|🏼|🏽|🏾|🏿/g, '');\n  }\n\n  public getAnimatedEmojiSticker(emoji: string, isAnimation?: boolean) {\n    const id = isAnimation ? LOCAL_IDS.EMOJI_ANIMATIONS : LOCAL_IDS.EMOJI;\n    const stickerSet = this.storage.getFromCache(id);\n    // const stickerSet = await this.getStickerSet({id});\n    if(!stickerSet?.documents) return;\n\n    if(isAnimation) {\n      if(['🧡', '💛', '💚', '💙', '💜', '🖤', '🤍', '🤎'].includes(emoji)) {\n        emoji = '❤️';\n      }\n    }\n\n    emoji = this.cleanEmoji(emoji);\n    const pack = stickerSet.packs.find((p) => p.emoticon === emoji);\n    return pack ? this.appDocsManager.getDoc(pack.documents[0]) : undefined;\n  }\n\n  public getAnimatedEmojiSoundDocument(emoji: string) {\n    return this.sounds[this.cleanEmoji(emoji)];\n  }\n\n  public preloadAnimatedEmojiSticker(emoji: string) {\n    const preloadEmojiPromise = this.getAnimatedEmojiStickerSet().then(() => {\n      return this.getAnimatedEmojiSticker(emoji);\n    });\n\n    return Promise.all([\n      preloadEmojiPromise,\n      this.preloadAnimatedEmojiStickerAnimation(emoji)\n    ]).then(([doc, a]) => {\n      return {\n        doc: doc,\n        animation: a?.doc,\n        sound: a?.sound\n      };\n    });\n  }\n\n  public preloadAnimatedEmojiStickerAnimation(emoji: string) {\n    return this.getAnimatedEmojiStickerSet().then(() => {\n      return this.getAnimatedEmojiSticker(emoji, true);\n    }).then((doc) => {\n      if(!doc) {\n        return;\n      }\n\n      const sound = this.getAnimatedEmojiSoundDocument(emoji);\n      return Promise.all([\n        this.preloadSticker(doc.id),\n        sound ? this.preloadSticker(sound.id) : undefined\n      ]).then(() => {\n        return {doc, sound};\n      });\n    });\n  }\n\n  public preloadSticker(docId: DocId, isPremiumEffect?: boolean) {\n    const doc = this.appDocsManager.getDoc(docId);\n    return this.apiFileManager.downloadMedia({media: doc, thumb: isPremiumEffect ? doc.video_thumbs?.[0] : undefined});\n  }\n\n  private saveStickerSet(res: Omit<MessagesStickerSet.messagesStickerSet, '_'>, id: DocId) {\n    const newSet: MessagesStickerSet = {\n      _: 'messages.stickerSet',\n      set: res.set,\n      packs: res.packs,\n      documents: res.documents as Document[],\n      keywords: res.keywords\n    };\n\n    let stickerSet = this.storage.getFromCache(id);\n    if(stickerSet) {\n      Object.assign(stickerSet, newSet);\n    } else {\n      stickerSet = this.storage.setToCache(id, newSet);\n    }\n\n    if(stickerSet.set.short_name) {\n      this.names[stickerSet.set.short_name] = this.getStickerSetInput(newSet.set) as any;\n    }\n\n    this.saveStickers(res.documents);\n\n    // console.log('stickers wrote', this.stickerSets);\n    const needSave = stickerSet.set.installed_date || LOCAL_IDS_SET.has(id as any);\n    stickerSet.refreshTime = Date.now();\n    this.storage.set({[id]: stickerSet}, !needSave);\n  }\n\n  public getStickerSetThumbDownloadOptions(stickerSet: StickerSet.stickerSet): DownloadOptions {\n    const thumb = stickerSet.thumbs.find((thumb) => thumb._ === 'photoSize') as PhotoSize.photoSize;\n    const dcId = stickerSet.thumb_dc_id;\n\n    const isAnimated = stickerSet.pFlags?.animated;\n\n    const input: InputFileLocation.inputStickerSetThumb = {\n      _: 'inputStickerSetThumb',\n      stickerset: this.getStickerSetInput(stickerSet),\n      thumb_version: stickerSet.thumb_version\n    };\n\n    return {dcId, location: input, size: thumb.size, mimeType: isAnimated ? 'application/x-tgsticker' : 'image/webp'};\n  }\n\n  /* public getStickerSetThumbURL(stickerSet: MTStickerSet) {\n    const thumb = stickerSet.thumb;\n    const dcId = stickerSet.thumb_dc_id;\n\n    const isAnimated = stickerSet.pFlags?.animated;\n\n    const input: inputStickerSetThumb = {\n      _: 'inputStickerSetThumb',\n      stickerset: this.getStickerSetInput(stickerSet),\n      volume_id: thumb.location.volume_id,\n      local_id: thumb.location.local_id\n    };\n\n    const url = getFileURL('document', this.getStickerSetThumbDownloadOptions(stickerSet));\n    return url;\n\n    //return promise;\n  } */\n\n  public getStickerSetInput(set: MyStickerSetInput): InputStickerSet {\n    if(LOCAL_IDS_SET.has(set.id as any)) {\n      return {\n        _: set.id as any\n      };\n    } else if(!set.access_hash) {\n      return {\n        _: 'inputStickerSetShortName',\n        short_name: '' + set.id\n      };\n    } else {\n      return {\n        _: 'inputStickerSetID',\n        id: set.id,\n        access_hash: set.access_hash\n      };\n    }\n  }\n\n  public async getFeaturedStickers() {\n    const res = await this.apiManager.invokeApiHashable({\n      method: 'messages.getFeaturedStickers',\n      processResult: (res) => {\n        assumeType<MessagesFeaturedStickers.messagesFeaturedStickers>(res);\n\n        forEachReverse(res.sets, (covered, idx, arr) => {\n          if(covered.set.pFlags.videos && !getEnvironment().IS_WEBM_SUPPORTED) {\n            arr.splice(idx, 1);\n          }\n        });\n\n        res.sets.forEach((covered) => {\n          this.saveStickerSet({set: covered.set, documents: [], packs: [], keywords: []}, covered.set.id);\n        });\n\n        return res;\n      }\n    });\n\n    return res.sets;\n  }\n\n  public getPromoPremiumStickers() {\n    return this.getStickersByEmoticon('⭐️⭐️', false);\n  }\n\n  public getPremiumStickers() {\n    return this.getStickersByEmoticon('📂⭐️', false);\n  }\n\n  public getFavedStickers(overwrite?: boolean) {\n    return this.apiManager.invokeApiHashable({\n      method: 'messages.getFavedStickers',\n      processResult: (favedStickers) => {\n        assumeType<MessagesFavedStickers.messagesFavedStickers>(favedStickers);\n        this.saveStickers(favedStickers.stickers);\n        this.favedStickers = favedStickers.stickers as MyDocument[];\n        return favedStickers;\n      },\n      overwrite\n    });\n  }\n\n  public getFavedStickersStickers(overwrite?: boolean) {\n    if(overwrite) this.favedStickers = undefined;\n    else if(this.favedStickers) return this.favedStickers;\n    return this.getFavedStickers(overwrite).then(() => this.favedStickers);\n  }\n\n  public getFavedStickersLimit() {\n    return this.apiManager.getLimit('favedStickers');\n  }\n\n  public async faveSticker(docId: DocId, unfave?: boolean) {\n    if(!this.favedStickers) {\n      await this.getFavedStickersStickers();\n    }\n\n    const limit = await this.getFavedStickersLimit();\n\n    const doc = this.appDocsManager.getDoc(docId);\n    findAndSplice(this.favedStickers, (_doc) => _doc.id === doc.id);\n\n    if(!unfave) {\n      this.favedStickers.unshift(doc);\n      const spliced = this.favedStickers.splice(limit, this.favedStickers.length - limit);\n    }\n\n    this.rootScope.dispatchEvent('sticker_updated', {type: 'faved', faved: !unfave, document: doc});\n\n    return this.apiManager.invokeApi('messages.faveSticker', {\n      id: getDocumentInput(doc),\n      unfave\n    }).then(() => {\n      if(unfave) {\n        this.onStickersUpdated('faved', true);\n      }\n    });\n  }\n\n  public async toggleStickerSet(set: StickerSet.stickerSet) {\n    set = this.storage.getFromCache(set.id).set;\n\n    if(set.installed_date) {\n      const res = await this.apiManager.invokeApi('messages.uninstallStickerSet', {\n        stickerset: this.getStickerSetInput(set)\n      });\n\n      if(res) {\n        delete set.installed_date;\n        this.rootScope.dispatchEvent('stickers_deleted', set);\n        this.storage.delete(set.id, true);\n        return true;\n      }\n    } else {\n      const res = await this.apiManager.invokeApi('messages.installStickerSet', {\n        stickerset: this.getStickerSetInput(set),\n        archived: false\n      });\n\n      if(res) {\n        set.installed_date = Date.now() / 1000 | 0;\n        this.rootScope.dispatchEvent('stickers_installed', set);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public toggleStickerSets(sets: StickerSet.stickerSet[]) {\n    return Promise.all(sets.map((set) => this.toggleStickerSet(set)));\n  }\n\n  public async searchStickerSets(query: string, excludeFeatured = true) {\n    const flags = excludeFeatured ? 1 : 0;\n    const res = await this.apiManager.invokeApiHashable({\n      method: 'messages.searchStickerSets',\n      params: {\n        flags,\n        exclude_featured: excludeFeatured || undefined,\n        q: query\n      },\n      processResult: (res) => {\n        assumeType<MessagesFoundStickerSets.messagesFoundStickerSets>(res);\n\n        forEachReverse(res.sets, (covered, idx, arr) => {\n          if(covered.set.pFlags.videos && !getEnvironment().IS_WEBM_SUPPORTED) {\n            arr.splice(idx, 1);\n          }\n        });\n\n        res.sets.forEach((covered) => {\n          this.saveStickerSet({set: covered.set, documents: [], packs: [], keywords: []}, covered.set.id);\n        });\n\n        return res;\n      }\n    });\n\n    const foundSaved: StickerSetCovered[] = [];\n    const cache = this.storage.getCache();\n    for(const id in cache) {\n      const {set} = cache[id];\n\n      if(set.title.toLowerCase().includes(query.toLowerCase()) && !res.sets.find((c) => c.set.id === set.id)) {\n        foundSaved.push({_: 'stickerSetCovered', set, cover: null});\n      }\n    }\n\n    return res.sets.concat(foundSaved);\n  }\n\n  private processAllStickersResult = (allStickers: MessagesAllStickers) => {\n    assumeType<MessagesAllStickers.messagesAllStickers>(allStickers);\n\n    forEachReverse(allStickers.sets, (stickerSet, idx, arr) => {\n      if(stickerSet.pFlags.videos && !getEnvironment().IS_WEBM_SUPPORTED) {\n        arr.splice(idx, 1);\n      }\n    });\n\n    return allStickers;\n  };\n\n  public getAllStickers() {\n    return this.apiManager.invokeApiHashable({\n      method: 'messages.getAllStickers',\n      processResult: this.processAllStickersResult\n    });\n  }\n\n  public getEmojiStickers() {\n    return this.apiManager.invokeApiHashable({\n      method: 'messages.getEmojiStickers',\n      processResult: this.processAllStickersResult\n    });\n  }\n\n  public preloadStickerSets() {\n    return this.getAllStickers().then((allStickers) => {\n      return Promise.all((allStickers as MessagesAllStickers.messagesAllStickers).sets.map((set) => this.getStickerSet(set, {useCache: true})));\n    });\n  }\n\n  // TODO: detect \"🤷\" by \"🤷‍♂️\"\n  public getStickersByEmoticon(emoticon: string, includeOurStickers = true) {\n    emoticon = fixEmoji(emoticon);\n    if(this.getStickersByEmoticonsPromises[emoticon]) return this.getStickersByEmoticonsPromises[emoticon];\n\n    return this.getStickersByEmoticonsPromises[emoticon] = Promise.all([\n      this.apiManager.invokeApiHashable({\n        method: 'messages.getStickers',\n        params: {\n          emoticon\n        },\n        processResult: (stickers) => stickers\n      }),\n      includeOurStickers ? this.preloadStickerSets() : [],\n      includeOurStickers ? this.getRecentStickers() : undefined\n    ]).then(([messagesStickers, installedSets, recentStickers]) => {\n      const foundStickers = (messagesStickers as MessagesStickers.messagesStickers).stickers.map((sticker) => this.appDocsManager.saveDoc(sticker));\n      const cachedStickersAnimated: Document.document[] = [], cachedStickersStatic: Document.document[] = [];\n\n      // console.log('getStickersByEmoticon', messagesStickers, installedSets, recentStickers);\n\n      const iteratePacks = (packs: StickerPack.stickerPack[]) => {\n        for(const pack of packs) {\n          const packEmoticon = fixEmoji(pack.emoticon);\n          if(packEmoticon.includes(emoticon)) {\n            for(const docId of pack.documents) {\n              const doc = this.appDocsManager.getDoc(docId);\n              (doc.animated ? cachedStickersAnimated : cachedStickersStatic).push(doc);\n            }\n          }\n        }\n      };\n\n      if(recentStickers) {\n        iteratePacks(recentStickers.packs);\n        const stickers = recentStickers.stickers;\n        [cachedStickersAnimated, cachedStickersStatic].forEach((s) => {\n          s.sort((a, b) => stickers.indexOf(a) - stickers.indexOf(b));\n        });\n      }\n\n      for(const set of installedSets) {\n        iteratePacks(set.packs);\n      }\n\n      /* const entities = parseEntities(emoticon);\n      if(entities.length === 1) {\n        [cachedStickersAnimated, cachedStickersStatic].forEach((s) => {\n          forEachReverse(s, (doc, idx) => {\n            const docEmoticon = fixEmoji(doc.stickerEmojiRaw);\n            if(docEmoticon !== emoticon) {\n              s.splice(idx, 1);\n            }\n          });\n        });\n      } */\n\n      const stickers = [...new Set(cachedStickersAnimated.concat(cachedStickersStatic, foundStickers))]/* .filter((doc) => !doc.animated) */;\n\n      forEachReverse(stickers, (sticker, idx, arr) => {\n        if((sticker.sticker === 3 && !getEnvironment().IS_WEBM_SUPPORTED) ||\n          (!this.rootScope.premium && getStickerEffectThumb(sticker))) {\n          arr.splice(idx, 1);\n        }\n      });\n\n      return stickers;\n    });\n  }\n\n  public clearRecentStickers() {\n    if(this.recentStickers) {\n      this.recentStickers.length = 0;\n      this.onStickersUpdated('recent', false);\n    }\n\n    return this.apiManager.invokeApi('messages.clearRecentStickers');\n  }\n}\n","export default function fixBase64String(str: string, toUrl: boolean) {\n  if(toUrl) {\n    return str.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=+$/, '');\n  } else {\n    return str.replace(/-/g, '+').replace(/_/g, '/');\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport filterUnique from '../../helpers/array/filterUnique';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport cleanSearchText from '../../helpers/cleanSearchText';\nimport cleanUsername from '../../helpers/cleanUsername';\nimport tsNow from '../../helpers/tsNow';\nimport isObject from '../../helpers/object/isObject';\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\nimport {isRestricted} from '../../helpers/restrictions';\nimport {Chat, ContactsResolvedPeer, InputContact, InputGeoPoint, InputMedia, InputPeer, InputUser, User as MTUser, UserProfilePhoto, UserStatus} from '../../layer';\nimport parseEntities from '../richTextProcessor/parseEntities';\nimport wrapUrl from '../richTextProcessor/wrapUrl';\nimport SearchIndex from '../searchIndex';\nimport {AppManager} from './manager';\nimport getPeerId from './utils/peers/getPeerId';\nimport canSendToUser from './utils/users/canSendToUser';\nimport {AppStoragesManager} from './appStoragesManager';\nimport deepEqual from '../../helpers/object/deepEqual';\nimport getPeerActiveUsernames from './utils/peers/getPeerActiveUsernames';\n\nexport type User = MTUser.user;\nexport type TopPeerType = 'correspondents' | 'bots_inline';\nexport type MyTopPeer = {id: PeerId, rating: number};\n\nexport class AppUsersManager extends AppManager {\n  private storage: AppStoragesManager['storages']['users'];\n\n  private users: {[userId: UserId]: User};\n  private usernames: {[username: string]: PeerId};\n  private contactsIndex: SearchIndex<UserId>;\n  private contactsFillPromise: CancellablePromise<AppUsersManager['contactsList']>;\n  private contactsList: Set<UserId>;\n  private updatedContactsList: boolean;\n\n  private getTopPeersPromises: {[type in TopPeerType]?: Promise<MyTopPeer[]>};\n\n  protected after() {\n    this.clear(true);\n\n    setInterval(this.updateUsersStatuses, 60000);\n\n    this.rootScope.addEventListener('state_synchronized', this.updateUsersStatuses);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateUserStatus: (update) => {\n        const userId = update.user_id;\n        const user = this.users[userId];\n        if(user) {\n          user.status = update.status;\n          if(user.status) {\n            if('expires' in user.status) {\n              user.status.expires -= this.timeManager.getServerTimeOffset();\n            }\n\n            if('was_online' in user.status) {\n              user.status.was_online -= this.timeManager.getServerTimeOffset();\n            }\n          }\n\n          // user.sortStatus = this.getUserStatusForSort(user.status);\n          this.rootScope.dispatchEvent('user_update', userId);\n          this.setUserToStateIfNeeded(user);\n        } // ////else console.warn('No user by id:', userId);\n      },\n\n      // updateUserPhoto: (update) => {\n      //   const userId = update.user_id;\n      //   const user = this.users[userId];\n      //   if(user) {\n      //     if((user.photo as UserProfilePhoto.userProfilePhoto)?.photo_id === (update.photo as UserProfilePhoto.userProfilePhoto)?.photo_id) {\n      //       return;\n      //     }\n\n      //     this.forceUserOnline(userId, update.date);\n\n      //     if(update.photo._ === 'userProfilePhotoEmpty') {\n      //       delete user.photo;\n      //     } else {\n      //       user.photo = safeReplaceObject(user.photo, update.photo);\n      //     }\n\n      //     this.setUserToStateIfNeeded(user);\n\n      //     this.rootScope.dispatchEvent('user_update', userId);\n      //     this.rootScope.dispatchEvent('avatar_update', userId.toPeerId());\n      //   } else console.warn('No user by id:', userId);\n      // },\n\n      updateUserName: (update) => {\n        const userId = update.user_id;\n        const user = this.users[userId];\n        if(user) {\n          this.forceUserOnline(userId);\n\n          this.saveApiUser({\n            ...user,\n            first_name: update.first_name,\n            last_name: update.last_name,\n            username: undefined,\n            usernames: update.usernames\n          }, true);\n        }\n      }\n    });\n\n    /* case 'updateContactLink':\n    this.onContactUpdated(update.user_id, update.my_link._ === 'contactLinkContact');\n    break; */\n\n    this.rootScope.addEventListener('language_change', (e) => {\n      const userId = this.getSelf().id;\n      this.contactsIndex.indexObject(userId, this.getUserSearchText(userId));\n    });\n\n    return Promise.all([\n      this.appStateManager.getState(),\n      this.appStoragesManager.loadStorage('users')\n    ]).then(([state, {results: users, storage}]) => {\n      this.storage = storage;\n\n      this.saveApiUsers(users);\n      for(let i = 0, length = users.length; i < length; ++i) {\n        const user = users[i];\n        if(!user) {\n          continue;\n        }\n\n        if(state.contactsListCachedTime && (user.pFlags.contact || user.pFlags.mutual_contact)) {\n          this.pushContact(user.id);\n\n          if(!this.contactsFillPromise) {\n            this.contactsFillPromise = deferredPromise();\n            this.contactsFillPromise.resolve(this.contactsList);\n          }\n        }\n      }\n\n      // const contactsList = state.contactsList;\n      // if(Array.isArray(contactsList)) {\n      //   contactsList.forEach((userId) => {\n      //     this.pushContact(userId);\n      //   });\n\n      //   if(contactsList.length) {\n      //     this.contactsFillPromise = deferredPromise();\n      //     this.contactsFillPromise.resolve(this.contactsList);\n      //   }\n      // }\n\n      const recentSearch = state.recentSearch || [];\n      for(let i = 0, length = recentSearch.length; i < length; ++i) {\n        this.peersStorage.requestPeer(recentSearch[i], 'recentSearch');\n      }\n\n      this.peersStorage.addEventListener('peerNeeded', (peerId) => {\n        if(!this.appPeersManager.isUser(peerId)) {\n          return;\n        }\n\n        const userId = peerId.toUserId();\n        if(!this.storage.getFromCache(userId)) {\n          this.storage.set({\n            [userId]: this.getUser(userId)\n          });\n        }\n      });\n\n      this.peersStorage.addEventListener('peerUnneeded', (peerId) => {\n        if(!this.appPeersManager.isUser(peerId)) {\n          return;\n        }\n\n        const userId = peerId.toUserId();\n        if(this.storage.getFromCache(userId)) {\n          this.storage.delete(userId);\n        }\n      });\n    });\n  }\n\n  public clear = (init = false) => {\n    if(!init) {\n      for(const userId in this.users) {\n        // const userId = +userId;\n        if(!userId) continue;\n        const peerId = userId.toPeerId();\n        if(!this.peersStorage.isPeerNeeded(peerId)) {\n          const user = this.users[userId];\n          this.modifyUsernamesCache(user, false);\n\n          this.storage.delete(userId);\n          delete this.users[userId];\n        }\n      }\n    } else {\n      this.users = {};\n      this.usernames = {};\n    }\n\n    this.getTopPeersPromises = {};\n    this.contactsIndex = this.createSearchIndex();\n    this.contactsFillPromise = undefined;\n    this.contactsList = new Set();\n    this.updatedContactsList = false;\n  };\n\n  public get userId() {\n    return this.rootScope.myId.toUserId();\n  }\n\n  private onContactsModified(fromServer?: boolean) {\n    // const contactsList = [...this.contactsList];\n    // this.appStateManager.pushToState('contactsList', contactsList);\n\n    if(fromServer) {\n      this.appStateManager.pushToState('contactsListCachedTime', tsNow(true));\n    }\n  }\n\n  public pushRecentSearch(peerId: PeerId) {\n    return this.appStateManager.getState().then((state) => {\n      const recentSearch = state.recentSearch || [];\n      if(recentSearch[0] !== peerId) {\n        indexOfAndSplice(recentSearch, peerId);\n        recentSearch.unshift(peerId);\n        if(recentSearch.length > 20) {\n          recentSearch.length = 20;\n        }\n\n        this.appStateManager.pushToState('recentSearch', recentSearch);\n        for(const peerId of recentSearch) {\n          this.peersStorage.requestPeer(peerId, 'recentSearch');\n        }\n      }\n    });\n  }\n\n  public clearRecentSearch() {\n    return this.appStateManager.getState().then((state) => {\n      const recentSearch = state.recentSearch || [];\n      for(const peerId of recentSearch) {\n        this.peersStorage.releasePeer(peerId, 'recentSearch');\n      }\n\n      recentSearch.length = 0;\n      this.appStateManager.pushToState('recentSearch', recentSearch);\n    });\n  }\n\n  public fillContacts() {\n    if(this.contactsFillPromise && this.updatedContactsList) {\n      return {\n        cached: this.contactsFillPromise.isFulfilled,\n        promise: this.contactsFillPromise\n      };\n    }\n\n    this.updatedContactsList = true;\n\n    const promise = deferredPromise<Set<UserId>>();\n    this.apiManager.invokeApi('contacts.getContacts').then((result) => {\n      if(result._ === 'contacts.contacts') {\n        this.contactsList.clear();\n\n        this.saveApiUsers(result.users);\n\n        result.contacts.forEach((contact) => {\n          this.pushContact(contact.user_id);\n        });\n\n        this.onContactsModified(true);\n\n        this.contactsFillPromise = promise;\n      }\n\n      promise.resolve(this.contactsList);\n    }, () => {\n      this.updatedContactsList = false;\n    });\n\n    return {\n      cached: this.contactsFillPromise?.isFulfilled,\n      promise: this.contactsFillPromise ||= promise\n    };\n  }\n\n  public resolveUsername(username: string): Promise<Chat | User> | Chat | User {\n    if(username[0] === '@') {\n      username = username.slice(1);\n    }\n\n    username = username.toLowerCase();\n    const peerId = this.usernames[username];\n    if(peerId) {\n      return this.appPeersManager.getPeer(peerId);\n    }\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'contacts.resolveUsername',\n      params: {username},\n      processResult: (resolvedPeer) => this.processResolvedPeer(resolvedPeer)\n    });\n  }\n\n  private processResolvedPeer(resolvedPeer: ContactsResolvedPeer.contactsResolvedPeer) {\n    this.saveApiUsers(resolvedPeer.users);\n    this.appChatsManager.saveApiChats(resolvedPeer.chats);\n\n    return this.appPeersManager.getPeer(getPeerId(resolvedPeer.peer)) as Chat | User;\n  }\n\n  public resolvePhone(phone: string) {\n    return this.apiManager.invokeApi('contacts.resolvePhone', {phone}).then((resolvedPeer) => {\n      return this.processResolvedPeer(resolvedPeer) as User;\n    });\n  }\n\n  private pushContact(id: UserId) {\n    this.contactsList.add(id);\n    this.contactsIndex.indexObject(id, this.getUserSearchText(id));\n    this.peersStorage.requestPeer(id.toPeerId(), 'contact');\n  }\n\n  private popContact(id: UserId) {\n    this.contactsList.delete(id);\n    this.contactsIndex.indexObject(id, ''); // delete search index\n    this.peersStorage.releasePeer(id.toPeerId(), 'contact');\n  }\n\n  public getUserSearchText(id: UserId) {\n    const user = this.users[id];\n    if(!user) {\n      return '';\n    }\n\n    const arr: string[] = [\n      user.first_name,\n      user.last_name,\n      user.phone,\n      ...getPeerActiveUsernames(user),\n      // user.pFlags.self ? I18n.format('SavedMessages', true) : '',\n      user.pFlags.self ? 'Saved Messages' : ''\n    ];\n\n    return arr.filter(Boolean).join(' ');\n  }\n\n  public getContacts(query?: string, includeSaved = false, sortBy: 'name' | 'online' | 'none' = 'name') {\n    return this.fillContacts().promise.then((_contactsList) => {\n      let contactsList = [..._contactsList];\n      if(query) {\n        const results = this.contactsIndex.search(query);\n        const filteredContactsList = [...contactsList].filter((id) => results.has(id));\n\n        contactsList = filteredContactsList;\n      }\n\n      if(sortBy === 'name') {\n        contactsList.sort((userId1, userId2) => {\n          const sortName1 = (this.users[userId1] || {}).sortName || '';\n          const sortName2 = (this.users[userId2] || {}).sortName || '';\n          return sortName1.localeCompare(sortName2);\n        });\n      } else if(sortBy === 'online') {\n        contactsList.sort((userId1, userId2) => {\n          const status1 = this.getUserStatusForSort(this.getUser(userId1).status);\n          const status2 = this.getUserStatusForSort(this.getUser(userId2).status);\n          return status2 - status1;\n        });\n      }\n\n      const myUserId = this.userId;\n      indexOfAndSplice(contactsList, myUserId);\n      if(includeSaved) {\n        if(this.testSelfSearch(query)) {\n          contactsList.unshift(myUserId);\n        }\n      }\n\n      return contactsList;\n    });\n  }\n\n  public getContactsPeerIds(\n    query?: Parameters<AppUsersManager['getContacts']>[0],\n    includeSaved?: Parameters<AppUsersManager['getContacts']>[1],\n    sortBy?: Parameters<AppUsersManager['getContacts']>[2],\n    limit?: number\n  ) {\n    return this.getContacts(query, includeSaved, sortBy).then((userIds) => {\n      const peerIds = userIds.map((userId) => userId.toPeerId(false));\n      if(limit) {\n        return peerIds.slice(0, limit);\n      }\n\n      return peerIds;\n    });\n  }\n\n  public toggleBlock(peerId: PeerId, block: boolean) {\n    return this.apiManager.invokeApiSingle(block ? 'contacts.block' : 'contacts.unblock', {\n      id: this.appPeersManager.getInputPeerById(peerId)\n    }).then((value) => {\n      if(value) {\n        this.apiUpdatesManager.processLocalUpdate({\n          _: 'updatePeerBlocked',\n          peer_id: this.appPeersManager.getOutputPeer(peerId),\n          blocked: block\n        });\n      }\n\n      return value;\n    });\n  }\n\n  public testSelfSearch(query: string) {\n    const user = this.getSelf();\n    const index = this.createSearchIndex();\n    index.indexObject(user.id, this.getUserSearchText(user.id));\n    return index.search(query).has(user.id);\n  }\n\n  private createSearchIndex() {\n    return new SearchIndex<UserId>({\n      clearBadChars: true,\n      ignoreCase: true,\n      latinize: true,\n      includeTag: true\n    });\n  }\n\n  public saveApiUsers(apiUsers: MTUser[], override?: boolean) {\n    if((apiUsers as any).saved) return;\n    (apiUsers as any).saved = true;\n    apiUsers.forEach((user) => this.saveApiUser(user, override));\n  }\n\n  public modifyUsernamesCache(peer: Parameters<typeof getPeerActiveUsernames>[0], save: boolean) {\n    const usernames = getPeerActiveUsernames(peer);\n    if(!usernames.length) {\n      return;\n    }\n\n    const cleanedUsernames = usernames.map((username) => cleanUsername(username));\n    if(save) {\n      cleanedUsernames.forEach((searchUsername) => {\n        this.usernames[searchUsername] = peer.id.toPeerId(peer._ !== 'user');\n      });\n    } else {\n      cleanedUsernames.forEach((searchUsername) => {\n        delete this.usernames[searchUsername];\n      });\n    }\n  }\n\n  public setUsernameToCache(peer: Parameters<typeof getPeerActiveUsernames>[0], oldPeer?: typeof peer) {\n    if(\n      !oldPeer ||\n      (oldPeer as MTUser.user).username !== (peer as MTUser.user).username ||\n      !deepEqual((oldPeer as MTUser.user).usernames, (peer as MTUser.user).usernames)\n    ) {\n      this.modifyUsernamesCache(oldPeer, false);\n      this.modifyUsernamesCache(peer, true);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  public saveApiUser(user: MTUser, override?: boolean) {\n    if(!user || user._ === 'userEmpty') return;\n\n    const userId = user.id;\n    const oldUser = this.users[userId];\n\n    // ! commented block can affect performance !\n    // if(oldUser && !override) {\n    //   console.log('saveApiUser same');\n    //   return;\n    // }\n\n    user.pFlags ??= {};\n\n    if(user.pFlags.min && oldUser !== undefined) {\n      return;\n    }\n\n    // * exclude from state\n    // defineNotNumerableProperties(user, ['initials', 'num', 'rFirstName', 'rFullName', 'rPhone', 'sortName', 'sortStatus']);\n\n    const changedUsername = this.setUsernameToCache(user, oldUser);\n\n    if(!oldUser ||\n      oldUser.sortName === undefined ||\n      oldUser.first_name !== user.first_name ||\n      oldUser.last_name !== user.last_name) {\n      const fullName = user.first_name + (user.last_name ? ' ' + user.last_name : '');\n\n      user.sortName = user.pFlags.deleted ? '' : cleanSearchText(fullName, false);\n    } else {\n      user.sortName = oldUser.sortName;\n    }\n\n    if(user.status) {\n      if((user.status as UserStatus.userStatusOnline).expires) {\n        (user.status as UserStatus.userStatusOnline).expires -= this.timeManager.getServerTimeOffset();\n      }\n\n      if((user.status as UserStatus.userStatusOffline).was_online) {\n        (user.status as UserStatus.userStatusOffline).was_online -= this.timeManager.getServerTimeOffset();\n      }\n    }\n\n    if((user as User).photo?._ === 'userProfilePhotoEmpty') {\n      delete (user as User).photo;\n    }\n\n    // user.sortStatus = user.pFlags.bot ? -1 : this.getUserStatusForSort(user.status);\n\n    // if(!user.username && user.usernames) {\n    //   user.username = user.usernames.find((username) => username.pFlags.active).username;\n    // }\n\n    if(oldUser === undefined) {\n      this.users[userId] = user;\n    } else {\n      const changedTitle = user.first_name !== oldUser.first_name ||\n        user.last_name !== oldUser.last_name ||\n        changedUsername;\n\n      const oldPhotoId = (oldUser.photo as UserProfilePhoto.userProfilePhoto)?.photo_id;\n      const newPhotoId = (user.photo as UserProfilePhoto.userProfilePhoto)?.photo_id;\n      const changedPhoto = oldPhotoId !== newPhotoId;\n\n      const changedAnyBadge = oldUser.pFlags.premium !== user.pFlags.premium ||\n        oldUser.pFlags.verified !== user.pFlags.verified ||\n        oldUser.pFlags.scam !== user.pFlags.scam ||\n        oldUser.pFlags.fake !== user.pFlags.fake;\n\n      /* if(user.pFlags.bot && user.bot_info_version !== oldUser.bot_info_version) {\n\n      } */\n\n      const wasContact = !!oldUser.pFlags.contact;\n      const newContact = !!user.pFlags.contact;\n\n      safeReplaceObject(oldUser, user);\n      this.rootScope.dispatchEvent('user_update', userId);\n\n      if(wasContact !== newContact) {\n        this.onContactUpdated(userId, newContact, wasContact);\n      }\n\n      if(changedPhoto) {\n        this.rootScope.dispatchEvent('avatar_update', {peerId: user.id.toPeerId()});\n      }\n\n      if(changedTitle || changedAnyBadge) {\n        this.rootScope.dispatchEvent('peer_title_edit', {peerId: user.id.toPeerId()});\n      }\n    }\n\n    this.checkPremium(user, oldUser);\n    this.setUserToStateIfNeeded(user);\n  }\n\n  private checkPremium(user: User, oldUser: User) {\n    if(user.pFlags.self) {\n      const isPremium = !!user.pFlags.premium;\n      if(this.rootScope.premium !== isPremium) {\n        this.rootScope.dispatchEvent('premium_toggle_private', {isNew: !oldUser, isPremium});\n      }\n    }\n  }\n\n  private setUserToStateIfNeeded(user: User) {\n    if(this.peersStorage.isPeerNeeded(user.id.toPeerId())) {\n      this.storage.set({\n        [user.id]: user\n      });\n    }\n  }\n\n  public isUserOnlineVisible(id: UserId) {\n    return this.getUserStatusForSort(id) > 3;\n  }\n\n  public getUserStatusForSort(status: User['status'] | UserId) {\n    if(typeof(status) !== 'object') {\n      const user = this.getUser(status);\n      status = user?.status;\n    }\n\n    if(status) {\n      const expires = status._ === 'userStatusOnline' ? status.expires : (status._ === 'userStatusOffline' ? status.was_online : 0);\n      if(expires) {\n        return expires;\n      }\n\n      /* const timeNow = tsNow(true);\n      switch(status._) {\n        case 'userStatusRecently':\n          return timeNow - 86400 * 3;\n        case 'userStatusLastWeek':\n          return timeNow - 86400 * 7;\n        case 'userStatusLastMonth':\n          return timeNow - 86400 * 30;\n      } */\n      switch(status._) {\n        case 'userStatusRecently':\n          return 3;\n        case 'userStatusLastWeek':\n          return 2;\n        case 'userStatusLastMonth':\n          return 1;\n      }\n    }\n\n    return 0;\n  }\n\n  public getUser(id: User | UserId) {\n    if(isObject<User>(id)) {\n      return id;\n    }\n\n    return this.users[id];\n  }\n\n  public getUserStatus(id: UserId) {\n    return this.isRegularUser(id) && !this.users[id].pFlags.self && this.users[id].status;\n  }\n\n  public async getUserPhone(id: UserId) {\n    const user = this.getUser(id);\n    if(!user?.phone) {\n      return;\n    }\n\n    const appConfig = await this.apiManager.getAppConfig();\n    return {\n      phone: user.phone,\n      isAnonymous: appConfig.fragment_prefixes.some((prefix) => user.phone.startsWith(prefix))\n    };\n  }\n\n  public getSelf() {\n    return this.getUser(this.userId);\n  }\n\n  public isBot(id: UserId) {\n    return this.users[id] && !!this.users[id].pFlags.bot;\n  }\n\n  public isAttachMenuBot(id: UserId) {\n    return this.isBot(id) && !!this.users[id].pFlags.bot_attach_menu;\n  }\n\n  public isContact(id: UserId) {\n    return this.contactsList.has(id) || !!(this.users[id] && this.users[id].pFlags.contact);\n  }\n\n  public isRegularUser(id: UserId) {\n    const user = this.users[id];\n    return user && !this.isBot(id) && !user.pFlags.deleted && !user.pFlags.support;\n  }\n\n  public isNonContactUser(id: UserId) {\n    return this.isRegularUser(id) && !this.isContact(id) && id !== this.userId;\n  }\n\n  public hasUser(id: UserId, allowMin?: boolean) {\n    const user = this.users[id];\n    return isObject(user) && (allowMin || !user.pFlags.min);\n  }\n\n  public getUserString(id: UserId) {\n    const user = this.getUser(id);\n    return 'u' + id + (user.access_hash ? '_' + user.access_hash : '');\n  }\n\n  public getUserInput(id: UserId): InputUser {\n    const user = this.getUser(id);\n    if(user.pFlags && user.pFlags.self) {\n      return {_: 'inputUserSelf'};\n    }\n\n    return {\n      _: 'inputUser',\n      user_id: id,\n      access_hash: user.access_hash\n    };\n  }\n\n  public getUserInputPeer(id: UserId): InputPeer.inputPeerSelf | InputPeer.inputPeerUser {\n    const user = this.getUser(id);\n    // ! do not use it, there are places that don't support it. need explicit peer id\n    // if(user.pFlags?.self) {\n    //   return {_: 'inputPeerSelf'};\n    // }\n\n    return {\n      _: 'inputPeerUser',\n      user_id: id,\n      access_hash: user.access_hash\n    };\n  }\n\n  public getContactMediaInput(id: UserId): InputMedia.inputMediaContact {\n    const user = this.getUser(id);\n\n    return {\n      _: 'inputMediaContact',\n      first_name: user.first_name,\n      last_name: user.last_name,\n      phone_number: user.phone,\n      vcard: '',\n      user_id: id\n    };\n  }\n\n  private updateUsersStatuses = () => {\n    const timestampNow = tsNow(true);\n    for(const i in this.users) {\n      const user = this.users[i];\n      this.updateUserStatus(user, timestampNow);\n    }\n  };\n\n  private updateUserStatus(user: MTUser.user, timestampNow = tsNow(true)) {\n    if(user.status &&\n      user.status._ === 'userStatusOnline' &&\n      user.status.expires < timestampNow) {\n      user.status = {_: 'userStatusOffline', was_online: user.status.expires};\n      this.rootScope.dispatchEvent('user_update', user.id);\n\n      this.setUserToStateIfNeeded(user);\n    }\n  }\n\n  public forceUserOnline(id: UserId, eventTimestamp?: number) {\n    if(this.isBot(id)) {\n      return;\n    }\n\n    const timestamp = tsNow(true);\n    const onlineTimeFor = 60;\n    if(eventTimestamp) {\n      if((timestamp - eventTimestamp) >= onlineTimeFor) {\n        return;\n      }\n    } else if(this.apiUpdatesManager.updatesState.syncLoading) {\n      return;\n    }\n\n    const user = this.getUser(id);\n    if(user?.status &&\n      user.status._ !== 'userStatusOnline' &&\n      user.status._ !== 'userStatusEmpty' &&\n      !user.pFlags.support &&\n      !user.pFlags.deleted) {\n      user.status = {\n        _: 'userStatusOnline',\n        expires: timestamp + onlineTimeFor\n      };\n\n      // user.sortStatus = this.getUserStatusForSort(user.status);\n      this.rootScope.dispatchEvent('user_update', id);\n\n      this.setUserToStateIfNeeded(user);\n    }\n  }\n\n  public importContact(first_name: string, last_name: string, phone: string) {\n    return this.importContacts([{\n      first_name,\n      last_name,\n      phones: [phone]\n    }]).then((userIds) => {\n      if(!userIds.length) {\n        const error = new Error();\n        (error as any).type = 'NO_USER';\n        throw error;\n      }\n\n      return userIds[0];\n    });\n  }\n\n  public importContacts(contacts: {phones: string[], first_name: string, last_name: string}[]) {\n    const inputContacts: InputContact[] = [];\n\n    for(let i = 0; i < contacts.length; ++i) {\n      for(let j = 0; j < contacts[i].phones.length; ++j) {\n        inputContacts.push({\n          _: 'inputPhoneContact',\n          client_id: (i << 16 | j).toString(10),\n          phone: contacts[i].phones[j],\n          first_name: contacts[i].first_name,\n          last_name: contacts[i].last_name\n        });\n      }\n    }\n\n    return this.apiManager.invokeApi('contacts.importContacts', {\n      contacts: inputContacts\n    }).then((importedContactsResult) => {\n      this.saveApiUsers(importedContactsResult.users);\n\n      const userIds = importedContactsResult.imported.map((importedContact) => {\n        this.onContactUpdated(importedContact.user_id, true);\n        return importedContact.user_id;\n      });\n\n      return userIds;\n    });\n  }\n\n  public getTopPeers(type: TopPeerType) {\n    if(this.getTopPeersPromises[type]) return this.getTopPeersPromises[type];\n\n    return this.getTopPeersPromises[type] = this.appStateManager.getState().then((state) => {\n      const cached = state.topPeersCache[type];\n      if(cached && (cached.cachedTime + 86400e3) > Date.now() && cached.peers) {\n        return cached.peers;\n      }\n\n      return this.apiManager.invokeApi('contacts.getTopPeers', {\n        [type]: true,\n        offset: 0,\n        limit: 15,\n        hash: '0'\n      }).then((result) => {\n        let topPeers: MyTopPeer[] = [];\n        if(result._ === 'contacts.topPeers') {\n          // console.log(result);\n          this.saveApiUsers(result.users);\n          this.appChatsManager.saveApiChats(result.chats);\n\n          if(result.categories.length) {\n            topPeers = result.categories[0].peers.map((topPeer) => {\n              const peerId = getPeerId(topPeer.peer);\n              this.peersStorage.requestPeer(peerId, 'topPeer');\n              return {id: peerId, rating: topPeer.rating};\n            });\n          }\n        }\n\n        state.topPeersCache[type] = {\n          peers: topPeers,\n          cachedTime: Date.now()\n        };\n        this.appStateManager.pushToState('topPeersCache', state.topPeersCache);\n\n        return topPeers;\n      });\n    });\n  }\n\n  public getBlocked(offset = 0, limit = 0) {\n    return this.apiManager.invokeApiSingle('contacts.getBlocked', {offset, limit}).then((contactsBlocked) => {\n      this.saveApiUsers(contactsBlocked.users);\n      this.appChatsManager.saveApiChats(contactsBlocked.chats);\n      const count = contactsBlocked._ === 'contacts.blocked' ? contactsBlocked.users.length + contactsBlocked.chats.length : contactsBlocked.count;\n\n      const peerIds: PeerId[] = contactsBlocked.users.map((u) => u.id.toPeerId()).concat(contactsBlocked.chats.map((c) => c.id.toPeerId(true)));\n\n      return {count, peerIds};\n    });\n  }\n\n  public getLocated(\n    lat: number,\n    long: number,\n    accuracy_radius: number,\n    background: boolean = false,\n    self_expires: number = 0\n  ) {\n    const geo_point: InputGeoPoint = {\n      _: 'inputGeoPoint',\n      lat,\n      long,\n      accuracy_radius\n    };\n\n    return this.apiManager.invokeApi('contacts.getLocated', {\n      geo_point,\n      background\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates);\n      return updates;\n    });\n  }\n\n  /* public searchContacts(query: string, limit = 20) {\n    return Promise.all([\n      this.getContacts(query),\n      apiManager.invokeApi('contacts.search', {\n        q: query,\n        limit\n      })\n    ]).then((results) => {\n      const [myContacts, peers] = results;\n\n      this.saveApiUsers(peers.users);\n      appChatsManager.saveApiChats(peers.chats);\n\n      // * contacts.search returns duplicates in my_results\n      const myResults = new Set(myContacts.concat(peers.my_results.map((p) => appPeersManager.getPeerID(p))));\n\n      const out = {\n        my_results: [...myResults].slice(0, limit),\n        results: peers.results.map((p) => appPeersManager.getPeerID(p))\n      };\n\n      return out;\n    });\n  } */\n  public searchContacts(query: string, limit = 20) {\n    // handle 't.me/username' as 'username'\n    const entities = parseEntities(query);\n    if(entities.length && entities[0].length === query.trim().length && entities[0]._ === 'messageEntityUrl') {\n      try {\n        const url = new URL(wrapUrl(query).url);\n        const path = url.pathname.slice(1);\n        if(path) {\n          query = path;\n        }\n      } catch(err) {}\n    }\n\n    return this.apiManager.invokeApiCacheable('contacts.search', {\n      q: query,\n      limit\n    }, {cacheSeconds: 60}).then((peers) => {\n      this.saveApiUsers(peers.users);\n      this.appChatsManager.saveApiChats(peers.chats);\n\n      const out = {\n        my_results: filterUnique(peers.my_results.map((p) => getPeerId(p))), // ! contacts.search returns duplicates in my_results\n        results: peers.results.map((p) => getPeerId(p))\n      };\n\n      return out;\n    });\n  }\n\n  private onContactUpdated(userId: UserId, isContact: boolean, curIsContact = this.isContact(userId)) {\n    if(isContact !== curIsContact) {\n      if(isContact) {\n        this.pushContact(userId);\n      } else {\n        this.popContact(userId);\n      }\n\n      this.onContactsModified();\n\n      this.rootScope.dispatchEvent('contacts_update', userId);\n    }\n  }\n\n  public updateUsername(username: string) {\n    return this.apiManager.invokeApi('account.updateUsername', {\n      username\n    }).then((user) => {\n      this.saveApiUser(user);\n    });\n  }\n\n  public setUserStatus(userId: UserId, offline: boolean) {\n    if(this.isBot(userId)) {\n      return;\n    }\n\n    const user = this.users[userId];\n    if(user) {\n      const status: UserStatus = offline ? {\n        _: 'userStatusOffline',\n        was_online: tsNow(true)\n      } : {\n        _: 'userStatusOnline',\n        expires: tsNow(true) + 50\n      };\n\n      user.status = status;\n      // user.sortStatus = this.getUserStatusForSort(user.status);\n      this.rootScope.dispatchEvent('user_update', userId);\n\n      this.setUserToStateIfNeeded(user);\n    }\n  }\n\n  public updateMyOnlineStatus(offline: boolean) {\n    this.setUserStatus(this.getSelf().id, offline);\n    return this.apiManager.invokeApiSingle('account.updateStatus', {offline});\n  }\n\n  public addContact(userId: UserId, first_name: string, last_name: string, phone: string, addPhonePrivacyException?: boolean) {\n    /* if(!userId) {\n      return this.importContacts([{\n        first_name,\n        last_name,\n        phones: [phone]\n      }]);\n    } */\n\n    return this.apiManager.invokeApi('contacts.addContact', {\n      id: this.getUserInput(userId),\n      first_name,\n      last_name,\n      phone,\n      add_phone_privacy_exception: addPhonePrivacyException\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates, {override: true});\n\n      this.onContactUpdated(userId, true);\n    });\n  }\n\n  public deleteContacts(userIds: UserId[]) {\n    return this.apiManager.invokeApi('contacts.deleteContacts', {\n      id: userIds.map((userId) => this.getUserInput(userId))\n    }).then((updates) => {\n      this.apiUpdatesManager.processUpdateMessage(updates, {override: true});\n\n      userIds.forEach((userId) => {\n        this.onContactUpdated(userId, false);\n      });\n    });\n  }\n\n  public checkUsername(username: string) {\n    return this.apiManager.invokeApi('account.checkUsername', {username});\n  }\n\n  public toggleUsername(username: string, active: boolean) {\n    return this.apiManager.invokeApi('account.toggleUsername', {username, active});\n  }\n\n  public reorderUsernames(usernames: string[]) {\n    return this.apiManager.invokeApi('account.reorderUsernames', {order: usernames});\n  }\n\n  public canSendToUser(userId: UserId) {\n    return canSendToUser(this.getUser(userId));\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nexport default function cleanUsername(username: string) {\n  return username && username.toLowerCase() || '';\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {ReferenceContext} from '../mtproto/referenceDatabase';\nimport {WebPage} from '../../layer';\nimport safeReplaceObject from '../../helpers/object/safeReplaceObject';\nimport {AppManager} from './manager';\n\nconst photoTypeSet = new Set(['photo', 'video', 'gif', 'document']);\n\ntype WebPageMessageKey = `${PeerId}_${number}`;\n\nexport class AppWebPagesManager extends AppManager {\n  private webpages: {\n    [webPageId: string]: WebPage\n  } = {};\n  private pendingWebPages: {\n    [webPageId: string]: Set<WebPageMessageKey>\n  } = {};\n\n  protected after() {\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateWebPage: (update) => {\n        this.saveWebPage(update.webpage);\n      }\n    });\n  }\n\n  public saveWebPage(apiWebPage: WebPage, messageKey?: WebPageMessageKey, mediaContext?: ReferenceContext) {\n    if(apiWebPage._ === 'webPageNotModified' || apiWebPage._ === 'webPageEmpty') return;\n    const {id} = apiWebPage;\n\n    const oldWebPage = this.webpages[id];\n    const isUpdated = oldWebPage &&\n      oldWebPage._ === apiWebPage._ &&\n      (oldWebPage as WebPage.webPage).hash === (oldWebPage as WebPage.webPage).hash;\n\n    if(apiWebPage._ === 'webPage') {\n      if(apiWebPage.photo?._ === 'photo') {\n        apiWebPage.photo = this.appPhotosManager.savePhoto(apiWebPage.photo, mediaContext);\n      } else {\n        delete apiWebPage.photo;\n      }\n\n      if(apiWebPage.document?._ === 'document') {\n        apiWebPage.document = this.appDocsManager.saveDoc(apiWebPage.document, mediaContext);\n      } else {\n        if(apiWebPage.type === 'document') {\n          delete apiWebPage.type;\n        }\n\n        delete apiWebPage.document;\n      }\n\n      const siteName = apiWebPage.site_name;\n      const shortTitle = apiWebPage.title || apiWebPage.author || siteName || '';\n      if(siteName && shortTitle === siteName) {\n        delete apiWebPage.site_name;\n      }\n\n      // delete apiWebPage.description\n\n      if(!photoTypeSet.has(apiWebPage.type) &&\n        !apiWebPage.description &&\n        apiWebPage.photo) {\n        apiWebPage.type = 'photo';\n      }\n    }\n\n    let pendingSet = this.pendingWebPages[id];\n    if(messageKey) {\n      if(!pendingSet) pendingSet = this.pendingWebPages[id] = new Set();\n      pendingSet.add(messageKey);\n    }\n\n    if(oldWebPage === undefined) {\n      this.webpages[id] = apiWebPage;\n    } else {\n      safeReplaceObject(oldWebPage, apiWebPage);\n    }\n\n    if(!messageKey && pendingSet !== undefined && isUpdated) {\n      const msgs: {peerId: PeerId, mid: number, isScheduled: boolean}[] = [];\n      pendingSet.forEach((value) => {\n        const [peerId, mid, isScheduled] = value.split('_');\n        msgs.push({\n          peerId: peerId.toPeerId(),\n          mid: +mid,\n          isScheduled: !!isScheduled\n        });\n      });\n\n      this.rootScope.dispatchEvent('webpage_updated', {\n        id,\n        msgs\n      });\n    }\n\n    return apiWebPage;\n  }\n\n  public getMessageKeyForPendingWebPage(peerId: PeerId, mid: number, isScheduled?: boolean): WebPageMessageKey {\n    return peerId + '_' + mid + (isScheduled ? '_s' : '') as any;\n  }\n\n  public deleteWebPageFromPending(webPage: WebPage, messageKey: WebPageMessageKey) {\n    const id = (webPage as WebPage.webPage).id;\n    if(!id) return;\n\n    const set = this.pendingWebPages[id];\n    if(set && set.has(messageKey)) {\n      set.delete(messageKey);\n\n      if(!set.size) {\n        delete this.pendingWebPages[id];\n      }\n    }\n  }\n\n  public getCachedWebPage(id: WebPage.webPage['id']) {\n    return this.webpages[id];\n  }\n\n  public getWebPage(url: string) {\n    return this.apiManager.invokeApiHashable({\n      method: 'messages.getWebPage',\n      processResult: (webPage) => {\n        return this.saveWebPage(webPage);\n      },\n      params: {\n        url\n      }\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport readBlobAs from './readBlobAs';\n\nexport default function readBlobAsArrayBuffer(blob: Blob) {\n  return readBlobAs(blob, 'readAsArrayBuffer');\n}\n","export default function fileNameRFC(fileName: string) {\n  // Make filename RFC5987 compatible\n  return encodeURIComponent(fileName).replace(/['()]/g, escape).replace(/\\*/g, '%2A');\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {getServiceMessagePort} from '../mtproto/mtproto.worker';\nimport ServiceMessagePort from '../serviceWorker/serviceMessagePort';\nimport StreamWriter from './streamWriter';\n\nexport default class DownloadWriter implements StreamWriter {\n  constructor(\n    private serviceMessagePort: ServiceMessagePort<true>,\n    private downloadId: string\n  ) {\n    this.serviceMessagePort = getServiceMessagePort();\n  }\n\n  public async write(part: Uint8Array, offset?: number) {\n    return this.serviceMessagePort.invoke('downloadChunk', {\n      id: this.downloadId,\n      chunk: part\n    });\n  }\n\n  public finalize(saveToStorage?: boolean): Promise<Blob> {\n    return this.serviceMessagePort.invoke('downloadFinalize', this.downloadId).then(() => undefined);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport deferredPromise from '../../helpers/cancellablePromise';\nimport makeError from '../../helpers/makeError';\nimport fileNameRFC from '../../helpers/string/fileNameRFC';\nimport {getServiceMessagePort} from '../mtproto/mtproto.worker';\nimport DownloadWriter from './downloadWriter';\nimport FileStorage from './fileStorage';\n\nexport default class DownloadStorage implements FileStorage {\n  public getFile(fileName: string): Promise<any> {\n    return Promise.reject(makeError('NO_ENTRY_FOUND'));\n  }\n\n  public prepareWriting({fileName, downloadId, size}: {\n    fileName: string,\n    downloadId: string,\n    size: number\n  }) {\n    const headers = {\n      'Content-Type': 'application/octet-stream; charset=utf-8',\n      'Content-Disposition': 'attachment; filename*=UTF-8\\'\\'' + fileNameRFC(fileName),\n      ...(size ? {'Content-Length': size} : {})\n    };\n\n    const serviceMessagePort = getServiceMessagePort();\n    const promise = serviceMessagePort.invoke('download', {\n      headers,\n      id: downloadId\n    });\n\n    const deferred = deferredPromise<void>();\n    deferred.cancel = () => {\n      deferred.reject(makeError('DOWNLOAD_CANCELED'));\n    };\n\n    deferred.catch(() => {\n      getServiceMessagePort().invoke('downloadCancel', downloadId);\n    });\n\n    promise.then(deferred.resolve, deferred.reject);\n\n    return {\n      deferred,\n      getWriter: () => {\n        return new DownloadWriter(serviceMessagePort, downloadId);\n      }\n    };\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {ReferenceBytes} from './referenceDatabase';\nimport Modes from '../../config/modes';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport {randomLong} from '../../helpers/random';\nimport {Document, InputFile, InputFileLocation, InputWebFileLocation, Photo, PhotoSize, UploadFile, UploadWebFile, VideoSize, WebDocument} from '../../layer';\nimport {DcId} from '../../types';\nimport CacheStorageController from '../files/cacheStorage';\nimport {logger, LogTypes} from '../logger';\nimport assumeType from '../../helpers/assumeType';\nimport noop from '../../helpers/noop';\nimport readBlobAsArrayBuffer from '../../helpers/blob/readBlobAsArrayBuffer';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport findAndSplice from '../../helpers/array/findAndSplice';\nimport fixFirefoxSvg from '../../helpers/fixFirefoxSvg';\nimport {AppManager} from '../appManagers/manager';\nimport {getEnvironment} from '../../environment/utils';\nimport MTProtoMessagePort from './mtprotoMessagePort';\nimport getFileNameForUpload from '../../helpers/getFileNameForUpload';\nimport type {Progress} from '../appManagers/appDownloadManager';\nimport getDownloadMediaDetails from '../appManagers/utils/download/getDownloadMediaDetails';\n// import networkStats from './networkStats';\nimport getDownloadFileNameFromOptions from '../appManagers/utils/download/getDownloadFileNameFromOptions';\nimport StreamWriter from '../files/streamWriter';\nimport FileStorage from '../files/fileStorage';\nimport {MAX_FILE_SAVE_SIZE} from './mtproto_config';\nimport throttle from '../../helpers/schedulers/throttle';\nimport makeError from '../../helpers/makeError';\nimport readBlobAsUint8Array from '../../helpers/blob/readBlobAsUint8Array';\nimport DownloadStorage from '../files/downloadStorage';\nimport copy from '../../helpers/object/copy';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport {EXTENSION_MIME_TYPE_MAP, MIME_TYPE_EXTENSION_MAP} from '../../environment/mimeTypeMap';\nimport {getServiceMessagePort} from './mtproto.worker';\n\ntype Delayed = {\n  offset: number,\n  writePromise: CancellablePromise<void>,\n  writeDeferred: CancellablePromise<void>\n};\n\nexport type DownloadOptions = {\n  dcId: DcId,\n  location: InputFileLocation | InputWebFileLocation,\n  size?: number,\n  fileName?: string,\n  mimeType?: MTMimeType,\n  limitPart?: number,\n  queueId?: number,\n  onlyCache?: boolean,\n  downloadId?: string\n  // getFileMethod: Parameters<CacheStorageController['getFile']>[1]\n};\n\nexport type DownloadMediaOptions = {\n  media: Photo.photo | Document.document | WebDocument,\n  thumb?: PhotoSize | VideoSize,\n  queueId?: number,\n  onlyCache?: boolean,\n  downloadId?: string\n};\n\ntype DownloadPromise = CancellablePromise<Blob>;\n\nexport type MyUploadFile = UploadFile.uploadFile | UploadWebFile.uploadWebFile;\n\n// export interface RefreshReferenceTask extends WorkerTaskVoidTemplate {\n//   type: 'refreshReference',\n//   payload: ReferenceBytes,\n// };\n\n// export interface RefreshReferenceTaskResponse extends WorkerTaskVoidTemplate {\n//   type: 'refreshReference',\n//   payload: ReferenceBytes,\n//   originalPayload: ReferenceBytes\n// };\n\nconst MAX_DOWNLOAD_FILE_PART_SIZE = 1 * 1024 * 1024;\nconst MAX_UPLOAD_FILE_PART_SIZE = 512 * 1024;\nconst MIN_PART_SIZE = 128 * 1024;\nconst AVG_PART_SIZE = 512 * 1024;\n\nconst REGULAR_DOWNLOAD_DELTA = (9 * 512 * 1024) / MIN_PART_SIZE;\n// const PREMIUM_DOWNLOAD_DELTA = REGULAR_DOWNLOAD_DELTA * 2;\nconst PREMIUM_DOWNLOAD_DELTA = (56 * 512 * 1024) / MIN_PART_SIZE;\n\nconst IGNORE_ERRORS: Set<ErrorType> = new Set([\n  'DOWNLOAD_CANCELED',\n  'UPLOAD_CANCELED',\n  'UNKNOWN',\n  'NO_NEW_CONTEXT'\n]);\n\nexport class ApiFileManager extends AppManager {\n  private cacheStorage = new CacheStorageController('cachedFiles');\n  private downloadStorage = new DownloadStorage();\n\n  private downloadPromises: {\n    [fileName: string]: DownloadPromise\n  } = {};\n\n  // private downloadToDiscPromises: {\n  //   [fileName: string]: DownloadPromise\n  // } = {};\n\n  private uploadPromises: {\n    [fileName: string]: CancellablePromise<InputFile>\n  } = {};\n\n  private downloadPulls: {\n    [dcId: string]: Array<{\n      id: number,\n      queueId: number,\n      cb: () => Promise<MyUploadFile | void>,\n      deferred: {\n        resolve: (...args: any[]) => void,\n        reject: (...args: any[]) => void\n      },\n      activeDelta: number\n    }>\n  } = {};\n  private downloadActives: {[dcId: string]: number} = {};\n\n  public refreshReferencePromises: {\n    [referenceHex: string]: {\n      deferred: CancellablePromise<ReferenceBytes>,\n      timeout?: number\n    }\n  } = {};\n\n  private log: ReturnType<typeof logger> = logger('AFM', LogTypes.Error | LogTypes.Log);\n  private tempId = 0;\n  private queueId = 0;\n  private debug = Modes.debug;\n\n  private maxUploadParts = 4000;\n  private maxDownloadParts = 8000;\n  private webFileDcId: DcId;\n\n  protected after() {\n    setInterval(() => { // clear old promises\n      for(const hex in this.refreshReferencePromises) {\n        const {deferred} = this.refreshReferencePromises[hex];\n        if(deferred.isFulfilled || deferred.isRejected) {\n          delete this.refreshReferencePromises[hex];\n        }\n      }\n    }, 1800e3);\n\n    this.rootScope.addEventListener('config', (config) => {\n      this.webFileDcId = config.webfile_dc_id;\n    });\n\n    this.rootScope.addEventListener('app_config', (appConfig) => {\n      this.maxUploadParts = this.rootScope.premium ? appConfig.upload_max_fileparts_premium : appConfig.upload_max_fileparts_default;\n      this.maxDownloadParts = appConfig.upload_max_fileparts_premium;\n    });\n  }\n\n  private downloadRequest(dcId: 'upload', id: number, cb: () => Promise<void>, activeDelta: number, queueId?: number): Promise<void>;\n  private downloadRequest(dcId: number, id: number, cb: () => Promise<MyUploadFile>, activeDelta: number, queueId?: number): Promise<MyUploadFile>;\n  private downloadRequest(dcId: number | string, id: number, cb: () => Promise<MyUploadFile | void>, activeDelta: number, queueId: number = 0) {\n    if(this.downloadPulls[dcId] === undefined) {\n      this.downloadPulls[dcId] = [];\n      this.downloadActives[dcId] = 0;\n    }\n\n    const downloadPull = this.downloadPulls[dcId];\n\n    const promise = new Promise<MyUploadFile | void>((resolve, reject) => {\n      downloadPull.push({id, queueId, cb, deferred: {resolve, reject}, activeDelta});\n    });\n\n    setTimeout(() => {\n      this.downloadCheck(dcId);\n    }, 0);\n\n    return promise;\n  }\n\n  private downloadCheck(dcId: string | number) {\n    const downloadPull = this.downloadPulls[dcId];\n    const downloadLimit = /* dcId === 'upload' ? 24 :  */(this.rootScope.premium ? PREMIUM_DOWNLOAD_DELTA : REGULAR_DOWNLOAD_DELTA);\n    // const downloadLimit = Infinity;\n\n    if(this.downloadActives[dcId] >= downloadLimit || !downloadPull?.length) {\n      return false;\n    }\n\n    // const data = downloadPull.shift();\n    const data = findAndSplice(downloadPull, (d) => d.queueId === 0) || findAndSplice(downloadPull, (d) => d.queueId === this.queueId) || downloadPull.shift();\n    const activeDelta = data.activeDelta || 1;\n\n    this.downloadActives[dcId] += activeDelta;\n\n    const promise = data.cb();\n    // const networkPromise = networkStats.waitForChunk(dcId as DcId, activeDelta * MIN_PART_SIZE);\n    /* Promise.race([\n      promise\n      // networkPromise\n    ]) */promise.then(() => {\n      this.downloadActives[dcId] -= activeDelta;\n      this.downloadCheck(dcId);\n\n      // networkPromise.resolve();\n    }, (error: ApiError) => {\n      if(!error?.type || !IGNORE_ERRORS.has(error.type)) {\n        this.log.error('downloadCheck error:', error);\n      }\n\n      this.downloadActives[dcId] -= activeDelta;\n      this.downloadCheck(dcId);\n\n      // networkPromise.reject(error);\n    }).finally(() => {\n      promise.then(data.deferred.resolve, data.deferred.reject);\n    });\n  }\n\n  public setQueueId(queueId: number) {\n    // this.log.error('setQueueId', queueId);\n    this.queueId = queueId;\n  }\n\n  private getFileStorage() {\n    return this.cacheStorage;\n  }\n\n  public cancelDownload(fileName: string) {\n    const promises = [this.downloadPromises[fileName], this.uploadPromises[fileName]].filter(Boolean);\n    let canceled = false;\n    for(let i = 0, length = promises.length; i < length; ++i) {\n      const promise = promises[i];\n      if(promise && !promise.isRejected && !promise.isFulfilled) {\n        promise.cancel();\n        canceled = true;\n      }\n    }\n\n    return canceled;\n  }\n\n  public requestWebFilePart(\n    dcId: DcId,\n    location: InputWebFileLocation,\n    offset: number,\n    limit: number,\n    id = 0,\n    queueId = 0,\n    checkCancel?: () => void\n  ) {\n    return this.downloadRequest(dcId, id, async() => { // do not remove async, because checkCancel will throw an error\n      checkCancel?.();\n\n      if('url' in location) {\n        const url = location.url;\n        if(this.isLocalWebFile(url)) {\n          return fetch(url)\n          .then((response) => response.arrayBuffer())\n          .then((arrayBuffer) => {\n            const extension = url.split('.').pop() as MTFileExtension;\n            const mimeType = EXTENSION_MIME_TYPE_MAP[extension] || 'application/octet-stream';\n            return {\n              _: 'upload.webFile',\n              size: arrayBuffer.byteLength,\n              mime_type: mimeType,\n              file_type: {_: 'storage.fileUnknown'},\n              mtime: 0,\n              bytes: new Uint8Array(arrayBuffer)\n            };\n          });\n        }\n      }\n\n      return this.apiManager.invokeApi('upload.getWebFile', {\n        location,\n        offset,\n        limit\n      }, {\n        dcId,\n        fileDownload: true\n      });\n    }, this.getDelta(limit), queueId);\n  }\n\n  public requestFilePart(\n    dcId: DcId,\n    location: InputFileLocation,\n    offset: number,\n    limit: number,\n    id = 0,\n    queueId = 0,\n    checkCancel?: () => void\n  ) {\n    return this.downloadRequest(dcId, id, async() => { // do not remove async, because checkCancel will throw an error\n      checkCancel?.();\n\n      const invoke = async(): Promise<MyUploadFile> => {\n        checkCancel?.(); // do not remove async, because checkCancel will throw an error\n\n        // * IMPORTANT: reference can be changed in previous request\n        const reference = (location as InputFileLocation.inputDocumentFileLocation).file_reference?.slice();\n\n        const promise = // pause(offset > (100 * 1024 * 1024) ? 10000000 : 0).then(() =>\n        this.apiManager.invokeApi('upload.getFile', {\n          location,\n          offset,\n          limit\n        }, {\n          dcId,\n          fileDownload: true\n        }) as Promise<MyUploadFile>/* ) */;\n\n        return promise.catch((err: ApiError) => {\n          checkCancel?.();\n\n          if(err.type === 'FILE_REFERENCE_EXPIRED') {\n            return this.refreshReference(location as InputFileLocation.inputDocumentFileLocation, reference).then(invoke);\n          }\n\n          throw err;\n        });\n      };\n\n      assumeType<InputFileLocation.inputDocumentFileLocation>(location);\n      const reference = location.file_reference;\n      if(reference && !location.checkedReference) { // check stream's location because it's new every call\n        location.checkedReference = true;\n        const hex = bytesToHex(reference);\n        if(this.refreshReferencePromises[hex]) {\n          return this.refreshReference(location, reference).then(invoke);\n        }\n      }\n\n      return invoke();\n    }, this.getDelta(limit), queueId);\n  }\n\n  /* private convertBlobToBytes(blob: Blob) {\n    return blob.arrayBuffer().then((buffer) => new Uint8Array(buffer));\n  } */\n\n  private getDelta(bytes: number) {\n    return bytes / MIN_PART_SIZE;\n  }\n\n  private getLimitPart(size: number, isUpload: boolean): number {\n    if(!size) { // * sometimes size can be 0 (e.g. avatars, webDocuments)\n      return AVG_PART_SIZE;\n    }\n\n    // return 1 * 1024 * 1024;\n\n    let bytes = MIN_PART_SIZE;\n\n    const maxParts = isUpload ? this.maxUploadParts : this.maxDownloadParts;\n    const maxPartSize = isUpload ? MAX_UPLOAD_FILE_PART_SIZE : MAX_DOWNLOAD_FILE_PART_SIZE;\n    // usually it will stick to 512Kb size if the file is too big\n    while((size / bytes) > maxParts && bytes < maxPartSize) {\n      bytes *= 2;\n    }\n    /* if(size < 1e6 || !size) bytes = 512;\n    else if(size < 3e6) bytes = 256;\n    else bytes = 128; */\n\n    return bytes;\n  }\n\n  private uncompressTGS = (bytes: Uint8Array, fileName: string) => {\n    // this.log('uncompressTGS', bytes, bytes.slice().buffer);\n    // slice нужен потому что в uint8array - 5053 length, в arraybuffer - 5084\n    return this.cryptoWorker.invokeCrypto('gzipUncompress', bytes.slice().buffer, false) as Promise<Uint8Array>;\n  };\n\n  private uncompressTGV = (bytes: Uint8Array, fileName: string) => {\n    // this.log('uncompressTGS', bytes, bytes.slice().buffer);\n    // slice нужен потому что в uint8array - 5053 length, в arraybuffer - 5084\n    const buffer = bytes.slice().buffer;\n    if(getEnvironment().IS_FIREFOX) {\n      return this.cryptoWorker.invokeCrypto('gzipUncompress', buffer, true).then((text) => {\n        return fixFirefoxSvg(text as string);\n      }).then((text) => {\n        const textEncoder = new TextEncoder();\n        return textEncoder.encode(text);\n      });\n    }\n\n    return this.cryptoWorker.invokeCrypto('gzipUncompress', buffer, false) as Promise<Uint8Array>;\n  };\n\n  private convertWebp = (bytes: Uint8Array, fileName: string) => {\n    const instance = MTProtoMessagePort.getInstance<false>();\n    return instance.invoke('convertWebp', {fileName, bytes});\n  };\n\n  private convertOpus = (bytes: Uint8Array, fileName: string) => {\n    const instance = MTProtoMessagePort.getInstance<false>();\n    return instance.invoke('convertOpus', {fileName, bytes});\n  };\n\n  private refreshReference(\n    inputFileLocation: InputFileLocation.inputDocumentFileLocation,\n    reference: typeof inputFileLocation['file_reference'],\n    hex = bytesToHex(reference)\n  ) {\n    let r = this.refreshReferencePromises[hex];\n    if(!r) {\n      const deferred = deferredPromise<ReferenceBytes>();\n\n      r = this.refreshReferencePromises[hex] = {\n        deferred\n\n        // ! I don't remember what it was for...\n        // timeout: ctx.setTimeout(() => {\n        //   this.log.error('Didn\\'t refresh the reference:', inputFileLocation);\n        //   deferred.reject(makeError('REFERENCE_IS_NOT_REFRESHED'));\n        // }, 60000)\n      };\n\n      // deferred.catch(noop).finally(() => {\n      //   clearTimeout(r.timeout);\n      // });\n\n      this.referenceDatabase.refreshReference(reference).then((reference) => {\n        if(hex === bytesToHex(reference)) {\n          deferred.reject(makeError('REFERENCE_IS_NOT_REFRESHED'));\n        }\n\n        deferred.resolve(reference);\n      }, deferred.reject);\n    }\n\n    // have to replace file_reference in any way, because location can be different everytime if it's stream\n    return r.deferred.then((reference) => {\n      inputFileLocation.file_reference = reference;\n    });\n  }\n\n  public isDownloading(fileName: string) {\n    return !!this.downloadPromises[fileName];\n  }\n\n  public getDownload(fileName: string) {\n    return this.downloadPromises[fileName];\n  }\n\n  public getUpload(fileName: string) {\n    return this.uploadPromises[fileName];\n  }\n\n  private getConvertMethod(mimeType: MTMimeType) {\n    let process: ApiFileManager['uncompressTGS'] | ApiFileManager['convertWebp'];\n    if(mimeType === 'application/x-tgwallpattern') {\n      process = this.uncompressTGV;\n      mimeType = 'image/svg+xml';\n    } else if(mimeType === 'image/webp' && !getEnvironment().IS_WEBP_SUPPORTED) {\n      process = this.convertWebp;\n      mimeType = 'image/png';\n    } else if(mimeType === 'application/x-tgsticker') {\n      process = this.uncompressTGS;\n      mimeType = 'application/json';\n    } else if(mimeType === 'audio/ogg' && !getEnvironment().IS_OPUS_SUPPORTED) {\n      process = this.convertOpus;\n      mimeType = 'audio/wav';\n    }\n\n    return {mimeType, process};\n  }\n\n  private allocateDeferredPromises(startOffset: number, size: number, limitPart: number) {\n    const delayed: Delayed[] = [];\n    let offset = startOffset;\n    let writePromise: CancellablePromise<void> = Promise.resolve(),\n      writeDeferred: CancellablePromise<void>;\n    do {\n      writeDeferred = deferredPromise<void>();\n      delayed.push({offset, writePromise, writeDeferred});\n      writePromise = writeDeferred;\n      offset += limitPart;\n    } while(offset < size);\n\n    return delayed;\n  }\n\n  private isLocalWebFile(url: string) {\n    return url.startsWith('assets/');\n  }\n\n  public download(options: DownloadOptions): DownloadPromise {\n    const size = options.size ?? 0;\n    const {dcId, location} = options;\n    let {downloadId} = options;\n    if(downloadId && !getServiceMessagePort()) {\n      this.log.error('download fallback to blob', options);\n      downloadId = undefined;\n    }\n\n    const originalMimeType = options.mimeType;\n    const convertMethod = this.getConvertMethod(originalMimeType);\n    const {process} = convertMethod;\n    options.mimeType = convertMethod.mimeType || 'image/jpeg';\n\n    const fileName = getDownloadFileNameFromOptions(options);\n    const cacheFileName = downloadId ? getDownloadFileNameFromOptions({...copy(options), downloadId: undefined}) : fileName;\n    const cacheStorage: FileStorage = this.getFileStorage();\n    const downloadStorage: FileStorage = downloadId ? this.downloadStorage : undefined;\n    let deferred: DownloadPromise = downloadId ? undefined : this.downloadPromises[fileName];\n\n    this.debug && this.log('downloadFile', fileName, options);\n\n    if(deferred) {\n      return deferred;\n    }\n\n    // if(deferred) {\n    //   if(size) {\n    //     return deferred.then(async(blob) => {\n    //       if(blob instanceof Blob && blob.size < size) {\n    //         this.debug && this.log('downloadFile need to deleteFile, wrong size:', blob.size, size);\n\n    //         try {\n    //           await this.delete(fileName);\n    //         } finally {\n    //           return this.download(options);\n    //         }\n    //       } else {\n    //         return blob;\n    //       }\n    //     });\n    //   } else {\n    //     return deferred;\n    //   }\n    // }\n\n    const errorHandler = (item: typeof cachePrepared, error: ApiError) => {\n      if(item?.error) {\n        return;\n      }\n\n      for(const p of prepared) {\n        if(item && item !== p) {\n          continue;\n        }\n\n        p.error = error;\n        p.deferred.reject(error);\n      }\n    };\n\n    const isWebFile = location._ === 'inputWebFileLocation';\n    const isLocalWebFile = isWebFile && this.isLocalWebFile(location.url);\n    const id = this.tempId++;\n    const limitPart = isLocalWebFile ?\n      size :\n      options.limitPart || this.getLimitPart(size, false);\n\n    let getFile: FileStorage['getFile'] = cacheStorage.getFile.bind(cacheStorage);\n\n    let cachePrepared: ReturnType<FileStorage['prepareWriting']> & {writer?: StreamWriter, error?: ApiError},\n      downloadPrepared: typeof cachePrepared;\n    const prepared: (typeof cachePrepared)[] = [];\n    const possibleSize = size || limitPart;\n\n    const getErrorsCount = () => prepared.reduce((acc, item) => acc + +!!item.error, 0);\n\n    const attach = (item: typeof cachePrepared, fileName: string) => {\n      const {deferred} = item;\n      const _errorHandler = errorHandler.bind(null, item);\n\n      deferred.cancel = () => deferred.reject(makeError('DOWNLOAD_CANCELED'));\n      deferred.catch((error) => {\n        _errorHandler(error);\n        item.writer?.truncate?.();\n      }).finally(() => {\n        if(this.downloadPromises[fileName] === deferred) {\n          delete this.downloadPromises[fileName];\n        }\n\n        delete item.writer;\n        // indexOfAndSplice(prepared, item);\n      });\n\n      this.downloadPromises[fileName] = deferred;\n\n      prepared.push(item);\n    };\n\n    if(cacheStorage && (!downloadStorage || possibleSize <= MAX_FILE_SAVE_SIZE)) {\n      cachePrepared = cacheStorage.prepareWriting(cacheFileName, possibleSize, options.mimeType)\n      attach(cachePrepared, cacheFileName);\n    }\n\n    if(downloadStorage) {\n      let downloadFileName = options.fileName; // it's doc file_name\n      if(!downloadFileName) {\n        downloadFileName = cacheFileName;\n        const ext = MIME_TYPE_EXTENSION_MAP[options.mimeType];\n        if(ext) {\n          downloadFileName += '.' + ext;\n        }\n      }\n\n      downloadPrepared = downloadStorage.prepareWriting({\n        fileName: downloadFileName,\n        downloadId,\n        size: possibleSize\n      });\n      attach(downloadPrepared, fileName);\n\n      if(cachePrepared) { // cancel cache too\n        downloadPrepared.deferred.catch((err) => cachePrepared.deferred.reject(err));\n      }\n\n      // this.downloadToDiscPromises[cacheFileName] = deferred;\n      // deferred.catch(noop).finally(() => {\n      //   if(this.downloadToDiscPromises[cacheFileName] === deferred) {\n      //     delete this.downloadToDiscPromises[cacheFileName];\n      //   }\n      // });\n    }\n\n    deferred = downloadPrepared?.deferred ?? cachePrepared.deferred;\n\n    if(downloadStorage && process) { // then have to load file again\n      getFile = downloadStorage.getFile.bind(downloadStorage);\n    }\n\n    getFile(cacheFileName).then(async(blob: Blob) => {\n      checkCancel();\n\n      // if(blob.size < size) {\n      //   if(!options.onlyCache) {\n      //     await this.delete(cacheFileName);\n      //     checkCancel();\n      //   }\n\n      //   throw makeError('NO_ENTRY_FOUND');\n      // }\n\n      if(downloadPrepared) {\n        const writer = downloadPrepared.writer = downloadPrepared.getWriter();\n        checkCancel();\n\n        const arr = await readBlobAsUint8Array(blob);\n        checkCancel();\n        await writer.write(arr);\n        checkCancel();\n\n        downloadPrepared.deferred.resolve(await writer.finalize());\n      }\n\n      if(cachePrepared) {\n        cachePrepared.deferred.resolve(blob);\n      }\n    }).catch(async(err: ApiError) => {\n      if(options.onlyCache) {\n        errorHandler(null, err);\n        return;\n      }\n\n      prepared.forEach((p) => {\n        p.writer = p.getWriter();\n      });\n\n      const maxRequests = Infinity;\n\n      const requestPart = (isWebFile ? this.requestWebFilePart : this.requestFilePart).bind(this);\n\n      if(isWebFile && this.webFileDcId === undefined && !isLocalWebFile) {\n        await this.apiManager.getConfig();\n        checkCancel();\n      }\n\n      const delayed = this.allocateDeferredPromises(0, size, limitPart);\n\n      const progress: Progress = {done: 0, offset: 0, total: size, fileName};\n      const dispatchProgress = () => {\n        try {\n          checkCancel();\n          progress.done = done;\n          this.rootScope.dispatchEvent('download_progress', progress);\n        } catch(err) {}\n      };\n\n      const throttledDispatchProgress = throttle(dispatchProgress, 50, true);\n\n      let done = 0;\n      const superpuper = async() => {\n        const {offset, writePromise, writeDeferred} = delayed.shift();\n        try {\n          checkCancel();\n\n          const requestPerf = performance.now();\n          const result = await requestPart(dcId, location as any, offset, limitPart, id, options.queueId, checkCancel);\n          const requestTime = performance.now() - requestPerf;\n\n          const bytes = result.bytes;\n\n          if(delayed.length) {\n            superpuper();\n          }\n\n          const byteLength = bytes.byteLength;\n          this.debug && this.log('downloadFile requestFilePart result:', fileName, result);\n          const isFinal = (offset + limitPart) >= size || !byteLength;\n          if(byteLength) {\n            done += byteLength;\n\n            if(isFinal) {\n              dispatchProgress();\n            } else {\n              throttledDispatchProgress();\n            }\n\n            const writeQueuePerf = performance.now();\n            await writePromise;\n            checkCancel();\n            const writeQueueTime = performance.now() - writeQueuePerf;\n\n            const perf = performance.now();\n            await Promise.all(prepared.map(({writer}) => writer?.write(bytes, offset)));\n            checkCancel();\n            // downloadId && this.log('write time', performance.now() - perf, 'request time', requestTime, 'queue time', writeQueueTime);\n          }\n\n          if(isFinal) {\n            if(!size || done < size) {\n              prepared.forEach(({writer}) => writer?.trim?.(done));\n            }\n          }\n\n          if(isFinal && process) {\n            const promises = prepared\n            .filter(({writer}) => writer?.getParts && writer.replaceParts)\n            .map(async({writer}) => {\n              const bytes = writer.getParts();\n              const processedResult = await process(bytes, cacheFileName);\n              writer.replaceParts(processedResult);\n            });\n\n            await Promise.all(promises);\n            checkCancel();\n          }\n\n          writeDeferred.resolve();\n\n          if(isFinal) {\n            const saveToStorage = done <= MAX_FILE_SAVE_SIZE;\n            prepared.forEach((item) => {\n              const {deferred, writer} = item;\n              if(deferred.isFulfilled || deferred.isRejected || !writer) {\n                return;\n              }\n\n              const result = writer.finalize(saveToStorage);\n              deferred.resolve(result);\n            });\n          }\n        } catch(err) {\n          errorHandler(null, err as ApiError);\n        }\n      };\n\n      for(let i = 0, length = Math.min(maxRequests, delayed.length); i < length; ++i) {\n        superpuper();\n      }\n    }).catch(noop);\n\n    const checkCancel = () => {\n      if(getErrorsCount() === prepared.length) {\n        throw prepared[0].error;\n      }\n    };\n\n    return deferred;\n  }\n\n  public downloadMedia(options: DownloadMediaOptions): DownloadPromise {\n    let {media, thumb} = options;\n    const isPhoto = media._ === 'photo';\n    if(isPhoto && !thumb) {\n      return Promise.reject('preloadPhoto photoEmpty!');\n    }\n\n    // get original instance with correct file_reference instead of using copies\n    const isDocument = media._ === 'document';\n    // const isWebDocument = media._ === 'webDocument';\n    if(isDocument) media = this.appDocsManager.getDoc((media as Document.document).id);\n    else if(isPhoto) media = this.appPhotosManager.getPhoto((media as Photo.photo).id);\n\n    const {fileName, downloadOptions} = getDownloadMediaDetails(options);\n\n    let promise = this.getDownload(fileName);\n    if(!promise) {\n      promise = this.download(downloadOptions);\n\n      if(isDocument && !thumb) {\n        this.rootScope.dispatchEvent('document_downloading', (media as Document.document).id);\n        promise.then(() => {\n          this.rootScope.dispatchEvent('document_downloaded', (media as Document.document).id);\n        }).catch(noop);\n      }\n    }\n\n    return promise;\n  }\n\n  public downloadMediaURL(options: DownloadMediaOptions): Promise<string> {\n    const {media, thumb} = options;\n\n    let cacheContext = this.thumbsStorage.getCacheContext(media as any, thumb?.type);\n    if((thumb ? (cacheContext.downloaded >= ('size' in thumb ? thumb.size : 0)) : true) && cacheContext.url) {\n      return Promise.resolve(cacheContext.url);\n    }\n\n    return this.downloadMedia(options).then((blob) => {\n      if(!cacheContext.downloaded || cacheContext.downloaded < blob.size) {\n        const url = URL.createObjectURL(blob);\n        cacheContext = this.thumbsStorage.setCacheContextURL(media as any, cacheContext.type, url, blob.size);\n      }\n\n      return cacheContext.url;\n    });\n  }\n\n  public downloadMediaVoid(options: DownloadMediaOptions) {\n    return this.downloadMedia(options).then(noop);\n  }\n\n  private delete(fileName: string) {\n    delete this.downloadPromises[fileName];\n    return this.getFileStorage().delete(fileName);\n  }\n\n  public upload({file, fileName}: {file: Blob | File, fileName?: string}) {\n    fileName ||= getFileNameForUpload(file);\n\n    const fileSize = file.size;\n    const isBigFile = fileSize >= 10485760;\n    const partSize = this.getLimitPart(fileSize, true);\n    const activeDelta = this.getDelta(partSize);\n    const totalParts = Math.ceil(fileSize / partSize);\n    const fileId = randomLong();\n    const resultInputFile: InputFile = {\n      _: isBigFile ? 'inputFileBig' : 'inputFile',\n      id: fileId as any,\n      parts: totalParts,\n      name: fileName,\n      md5_checksum: ''\n    };\n\n    const deferred = deferredPromise<typeof resultInputFile>();\n    if(totalParts > this.maxUploadParts) {\n      deferred.reject(makeError('FILE_TOO_BIG'));\n      return deferred;\n    }\n\n    let canceled = false, resolved = false;\n    let errorHandler = (error: ApiError) => {\n      if(error?.type !== 'UPLOAD_CANCELED') {\n        this.log.error('Up Error', error);\n      }\n\n      deferred.reject(error);\n      canceled = true;\n      errorHandler = noop;\n    };\n\n    const method = isBigFile ? 'upload.saveBigFilePart' : 'upload.saveFilePart';\n    const id = this.tempId++;\n\n    const self = this;\n    function* generator() {\n      let _part = 0, doneParts = 0;\n      for(let offset = 0; offset < fileSize; offset += partSize) {\n        const part = _part++; // 0, 1\n        yield self.downloadRequest('upload', id, async() => {\n          checkCancel();\n\n          const blob = file.slice(offset, offset + partSize);\n          const buffer = await readBlobAsArrayBuffer(blob);\n          checkCancel();\n\n          self.debug && self.log('Upload file part, isBig:', isBigFile, part, buffer.byteLength, new Uint8Array(buffer).length, new Uint8Array(buffer).slice().length);\n\n          return self.apiManager.invokeApi(method, {\n            file_id: fileId,\n            file_part: part,\n            file_total_parts: totalParts,\n            bytes: buffer\n          } as any, {\n            fileUpload: true\n          }).then(() => {\n            if(canceled) {\n              return;\n            }\n\n            ++doneParts;\n            const progress: Progress = {done: doneParts * partSize, offset, total: fileSize, fileName};\n            deferred.notify(progress);\n\n            if(doneParts >= totalParts) {\n              deferred.resolve(resultInputFile);\n              resolved = true;\n            }\n          }, errorHandler);\n        }, activeDelta).catch(errorHandler);\n      }\n    }\n\n    const it = generator();\n    const process = () => {\n      if(canceled) return;\n      const r = it.next();\n      if(r.done || canceled) return;\n      (r.value as Promise<void>).then(process);\n    };\n\n    const maxRequests = Infinity;\n    for(let i = 0, length = Math.min(maxRequests, totalParts); i < length; ++i) {\n      process();\n    }\n\n    const checkCancel = () => {\n      if(canceled) {\n        throw makeError('UPLOAD_CANCELED');\n      }\n    };\n\n    deferred.cancel = () => {\n      if(!canceled && !resolved) {\n        canceled = true;\n        errorHandler(makeError('UPLOAD_CANCELED'));\n      }\n    };\n\n    deferred.notify = (progress: Progress) => {\n      this.rootScope.dispatchEvent('download_progress', progress);\n    };\n\n    deferred.finally(() => {\n      if(this.uploadPromises[fileName] === deferred) {\n        delete this.uploadPromises[fileName];\n      }\n    });\n\n    return this.uploadPromises[fileName] = deferred;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport default function fixFirefoxSvg(text: string) {\n  const svgIndex = text.indexOf('<svg');\n  if(svgIndex !== 0) {\n    text = text.slice(svgIndex);\n  }\n\n  const [_, __, width, height] = text.match(/viewBox=\"(.+?)\"/)[1].split(' ');\n  text = text.replace(/>/, ` width=\"${width}\" height=\"${height}\">`).replace(/[^\\x00-\\x7F]/g, '');\n  return text;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport readBlobAsArrayBuffer from './readBlobAsArrayBuffer';\n\nexport default function readBlobAsUint8Array(blob: Blob) {\n  return readBlobAsArrayBuffer(blob).then((buffer) => new Uint8Array(buffer));\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport ctx from '../../environment/ctx';\nimport callbackify from '../../helpers/callbackify';\nimport {ignoreRestrictionReasons} from '../../helpers/restrictions';\nimport {Config, MethodDeclMap, User} from '../../layer';\nimport {InvokeApiOptions} from '../../types';\nimport {AppManager} from '../appManagers/manager';\nimport {MTAppConfig} from './appConfig';\nimport {UserAuth} from './mtproto_config';\nimport {MTMessage} from './networker';\n\ntype HashResult = {\n  hash: number,\n  result: any\n};\n\ntype HashOptions = {\n  [queryJSON: string]: HashResult\n};\n\nexport type ApiLimitType = 'pin' | 'folderPin' | 'folders' |\n  'favedStickers' | 'reactions' | 'bio' | 'topicPin' | 'caption';\n\nexport default abstract class ApiManagerMethods extends AppManager {\n  private afterMessageIdTemp: number;\n  private hashes: {[method: string]: HashOptions} = {};\n  private apiPromisesSingleProcess: {\n    [q: string]: Map<any, Promise<any>>\n  } = {};\n  private apiPromisesSingle: {\n    [q: string]: Promise<any>\n  } = {};\n  private apiPromisesCacheable: {\n    [method: string]: {\n      [queryJSON: string]: {\n        timestamp: number,\n        promise: Promise<any>,\n        fulfilled: boolean,\n        timeout?: number,\n        params: any\n      }\n    }\n  } = {};\n\n  protected config: Config;\n  protected appConfig: MTAppConfig;\n\n  constructor() {\n    super();\n    this.afterMessageIdTemp = 0;\n  }\n\n  abstract setUserAuth(userAuth: UserAuth | UserId): Promise<void>;\n\n  public setUser(user: User) {\n    // appUsersManager.saveApiUser(user);\n    return this.setUserAuth(user.id);\n  }\n\n  abstract invokeApi<T extends keyof MethodDeclMap>(method: T, params?: MethodDeclMap[T]['req'], options?: InvokeApiOptions): Promise<MethodDeclMap[T]['res']>;\n\n  public invokeApiAfter<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\n    let o = options;\n    o.prepareTempMessageId = '' + ++this.afterMessageIdTemp;\n\n    o = {...options};\n    (options as MTMessage).messageId = o.prepareTempMessageId;\n\n    // console.log('will invokeApi:', method, params, options);\n    return this.invokeApi(method, params, o);\n  }\n\n  public invokeApiHashable<T extends keyof MethodDeclMap, R>(o: {\n    method: T,\n    processResult?: (response: MethodDeclMap[T]['res']) => R,\n    processError?: (error: ApiError) => any,\n    params?: Omit<MethodDeclMap[T]['req'], 'hash'>,\n    options?: InvokeApiOptions & {cacheKey?: string},\n    overwrite?: boolean\n  }) {\n    // @ts-ignore\n    o.params ??= {};\n    o.options ??= {};\n    // console.log('will invokeApi:', method, params, options);\n\n    const {params, options, method, overwrite} = o;\n\n    const queryJSON = JSON.stringify(params);\n    let cached: HashResult;\n    if(this.hashes[method]) {\n      cached = this.hashes[method][queryJSON];\n      if(cached) {\n        if(overwrite) {\n          delete this.hashes[method][queryJSON];\n          cached = undefined;\n        } else {\n          (params as any).hash = cached.hash;\n        }\n      }\n    }\n\n    return this.invokeApiSingleProcess<T, R>({\n      method,\n      processResult: (result) => {\n        if(result._.includes('NotModified')) {\n          // this.debug && this.log.warn('NotModified saved!', method, queryJSON);\n          return cached.result;\n        }\n\n        if(result.hash/*  || result.messages */) {\n          const hash = result.hash/*  || this.computeHash(result.messages) */;\n\n          if(!this.hashes[method]) this.hashes[method] = {};\n          cached = this.hashes[method][queryJSON] = {\n            hash,\n            result\n          };\n        }\n\n        if(o.processResult) {\n          const newResult = o.processResult(result);\n          return cached ? cached.result = newResult : newResult;\n        }\n\n        return result;\n      },\n      params,\n      options\n    });\n  }\n\n  public invokeApiSingle<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {} as any, options: InvokeApiOptions = {}): Promise<MethodDeclMap[T]['res']> {\n    const q = method + '-' + JSON.stringify(params);\n    const cache = this.apiPromisesSingle;\n    if(cache[q]) {\n      return cache[q];\n    }\n\n    return cache[q] = this.invokeApi(method, params, options).finally(() => {\n      delete cache[q];\n    });\n  }\n\n  public invokeApiSingleProcess<T extends keyof MethodDeclMap, R>(o: {\n    method: T,\n    processResult: (response: MethodDeclMap[T]['res']) => R,\n    processError?: (error: ApiError) => any,\n    params?: MethodDeclMap[T]['req'],\n    options?: InvokeApiOptions & {cacheKey?: string, overwrite?: boolean}\n  }): Promise<Awaited<R>> {\n    o.params ??= {};\n    o.options ??= {};\n\n    const {method, processResult, processError, params, options} = o;\n    const cache = this.apiPromisesSingleProcess;\n    const cacheKey = options.cacheKey || JSON.stringify(params);\n    const map = cache[method] ?? (cache[method] = new Map());\n    const oldPromise = map.get(cacheKey);\n    if(oldPromise) {\n      return oldPromise;\n    }\n\n    const getNewPromise = () => {\n      const promise = map.get(cacheKey);\n      return promise === p ? undefined : promise;\n    }\n\n    const originalPromise = this.invokeApi(method, params, options);\n    const newPromise: Promise<Awaited<R>> = originalPromise.then((result) => {\n      return getNewPromise() || processResult(result);\n    }, (error) => {\n      const promise = getNewPromise();\n      if(promise) {\n        return promise;\n      }\n\n      if(!processError) {\n        throw error;\n      }\n\n      return processError(error);\n    });\n\n    const p = newPromise.finally(() => {\n      if(map.get(cacheKey) !== p) {\n        return;\n      }\n\n      map.delete(cacheKey);\n      if(!map.size) {\n        delete cache[method];\n      }\n    });\n\n    map.set(cacheKey, p);\n    return p;\n  }\n\n  public invokeApiCacheable<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {} as any, options: InvokeApiOptions & Partial<{cacheSeconds: number, override: boolean}> = {}): Promise<MethodDeclMap[T]['res']> {\n    const cache = this.apiPromisesCacheable[method] ?? (this.apiPromisesCacheable[method] = {});\n    const queryJSON = JSON.stringify(params);\n    const item = cache[queryJSON];\n    if(item && (!options.override || !item.fulfilled)) {\n      return item.promise;\n    }\n\n    if(options.override) {\n      if(item && item.timeout) {\n        clearTimeout(item.timeout);\n        delete item.timeout;\n      }\n\n      delete options.override;\n    }\n\n    let timeout: number;\n    if(options.cacheSeconds) {\n      timeout = ctx.setTimeout(() => {\n        delete cache[queryJSON];\n      }, options.cacheSeconds * 1000);\n      delete options.cacheSeconds;\n    }\n\n    const promise = this.invokeApi(method, params, options);\n\n    cache[queryJSON] = {\n      timestamp: Date.now(),\n      fulfilled: false,\n      timeout,\n      promise,\n      params\n    };\n\n    return promise;\n  }\n\n  public clearCache<T extends keyof MethodDeclMap>(method: T, verify: (params: MethodDeclMap[T]['req']) => boolean) {\n    const cache = this.apiPromisesCacheable[method];\n    if(cache) {\n      for(const queryJSON in cache) {\n        const item = cache[queryJSON];\n        try {\n          if(verify(item.params)) {\n            if(item.timeout) {\n              clearTimeout(item.timeout);\n            }\n\n            delete cache[queryJSON];\n          }\n        } catch(err) {\n          // this.log.error('clearCache error:', err, queryJSON, item);\n        }\n      }\n    }\n  }\n\n  public getConfig(overwrite?: boolean) {\n    if(this.config && !overwrite) {\n      return this.config;\n    }\n\n    return this.invokeApiSingleProcess({\n      method: 'help.getConfig',\n      params: {},\n      processResult: (config) => {\n        this.config = config;\n        this.rootScope.dispatchEvent('config', config);\n        return config;\n      },\n      options: {overwrite}\n    });\n  }\n\n  public getAppConfig(overwrite?: boolean) {\n    if(this.appConfig && !overwrite) {\n      return this.appConfig;\n    }\n\n    return this.invokeApiSingleProcess({\n      method: 'help.getAppConfig',\n      params: {},\n      processResult: (config: MTAppConfig) => {\n        this.appConfig = config;\n        ignoreRestrictionReasons(config.ignore_restriction_reasons ?? []);\n        this.rootScope.dispatchEvent('app_config', config);\n        return config;\n      },\n      options: {overwrite}\n    });\n  }\n\n  public getLimit(type: ApiLimitType, isPremium?: boolean) {\n    return callbackify(this.getAppConfig(), (appConfig) => {\n      const map: {[type in ApiLimitType]: [keyof MTAppConfig, keyof MTAppConfig] | keyof MTAppConfig} = {\n        pin: ['dialogs_pinned_limit_default', 'dialogs_pinned_limit_premium'],\n        folderPin: ['dialogs_folder_pinned_limit_default', 'dialogs_folder_pinned_limit_premium'],\n        folders: ['dialog_filters_limit_default', 'dialog_filters_limit_premium'],\n        favedStickers: ['stickers_faved_limit_default', 'stickers_faved_limit_premium'],\n        reactions: ['reactions_user_max_default', 'reactions_user_max_premium'],\n        bio: ['about_length_limit_default', 'about_length_limit_premium'],\n        topicPin: 'topics_pinned_limit',\n        caption: ['caption_length_limit_default', 'caption_length_limit_premium']\n      };\n\n      isPremium ??= this.rootScope.premium;\n\n      const a = map[type];\n      const key = Array.isArray(a) ? a[isPremium ? 1 : 0] : a;\n      return appConfig[key] as number;\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\n                   \nimport transportController from './transports/controller';\nimport MTTransport from './transports/transport';\n         \n\nimport type {UserAuth} from './mtproto_config';\nimport type {DcAuthKey, DcId, DcServerSalt, InvokeApiOptions} from '../../types';\nimport type {MethodDeclMap} from '../../layer';\nimport type TcpObfuscated from './transports/tcpObfuscated';\nimport sessionStorage from '../sessionStorage';\nimport MTPNetworker, {MTMessage} from './networker';\nimport {ConnectionType, constructTelegramWebSocketUrl, DcConfigurator, TransportType} from './dcConfigurator';\nimport {logger} from '../logger';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport App from '../../config/app';\nimport {MOUNT_CLASS_TO} from '../../config/debug';\nimport {IDB} from '../files/idb';\nimport CryptoWorker from '../crypto/cryptoMessagePort';\nimport ctx from '../../environment/ctx';\nimport noop from '../../helpers/noop';\nimport Modes from '../../config/modes';\nimport bytesFromHex from '../../helpers/bytes/bytesFromHex';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport isObject from '../../helpers/object/isObject';\nimport pause from '../../helpers/schedulers/pause';\nimport ApiManagerMethods from './api_methods';\nimport {getEnvironment} from '../../environment/utils';\nimport toggleStorages from '../../helpers/toggleStorages';\n\n/* class RotatableArray<T> {\n  public array: Array<T> = [];\n  private lastIndex = -1;\n\n  public get() {\n    this.lastIndex = clamp(this.lastIndex + 1, 0, this.array.length - 1);\n    return this.array[this.lastIndex];\n  }\n} */\n\nconst PREMIUM_FILE_NETWORKERS_COUNT = 6;\nconst REGULAR_FILE_NETWORKERS_COUNT = 3;\n\nexport class ApiManager extends ApiManagerMethods {\n  private cachedNetworkers: {\n    [transportType in TransportType]: {\n      [connectionType in ConnectionType]: {\n        [dcId: DcId]: MTPNetworker[]\n      }\n    }\n  };\n\n  private cachedExportPromise: {[x: number]: Promise<unknown>};\n  private gettingNetworkers: {[dcIdAndType: string]: Promise<MTPNetworker>};\n  private baseDcId: DcId;\n\n  // public telegramMeNotified = false;\n\n  private log: ReturnType<typeof logger>;\n\n  private afterMessageTempIds: {\n    [tempId: string]: {\n      messageId: string,\n      promise: Promise<any>\n    }\n  };\n\n  private transportType: TransportType;\n\n  private updatesProcessor: (obj: any) => void;\n\n  private loggingOut: boolean;\n\n  constructor() {\n    super();\n    this.log = logger('API');\n\n    this.cachedNetworkers = {} as any;\n    this.cachedExportPromise = {};\n    this.gettingNetworkers = {};\n    this.baseDcId = 0;\n    this.afterMessageTempIds = {};\n\n    this.transportType = Modes.transport;\n\n                       \n    transportController.addEventListener('transport', (transportType) => {\n      this.changeTransportType(transportType);\n    });\n             \n\n    // * Make sure that the used autologin_token is no more than 10000 seconds old\n    // * https://core.telegram.org/api/url-authorization\n    const REFRESH_APP_CONFIG_INTERVAL = (10000 - 30) * 1000;\n    setInterval(() => {\n      this.getAppConfig(true);\n    }, REFRESH_APP_CONFIG_INTERVAL);\n  }\n\n  protected after() {\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateConfig: () => {\n        this.getConfig(true);\n        this.getAppConfig(true);\n      }\n    });\n\n    this.rootScope.addEventListener('user_auth', () => {\n      if(this.config) { // refresh configs if had a config during authorization\n        this.apiUpdatesManager.processLocalUpdate({_: 'updateConfig'});\n      }\n    });\n\n    this.rootScope.addEventListener('premium_toggle', (isPremium) => {\n      this.iterateNetworkers(({networker, connectionType, dcId, transportType}) => {\n        if(connectionType === 'client' || transportType !== 'websocket') {\n          return;\n        }\n\n        const transport = networker.transport;\n        if(!transport) {\n          this.log.error('wow what, no transport?', networker);\n          return;\n        }\n\n        if((transport as TcpObfuscated).connection) {\n          const url = constructTelegramWebSocketUrl(dcId, connectionType, isPremium);\n          (transport as TcpObfuscated).changeUrl(url);\n        }\n      });\n    });\n  }\n\n  // private lol = false;\n\n  // constructor() {\n  // MtpSingleInstanceService.start();\n\n  /* AppStorage.get<number>('dc').then((dcId) => {\n      if(dcId) {\n        this.baseDcId = dcId;\n      }\n    }); */\n  // }\n\n  /* public telegramMeNotify(newValue: boolean) {\n    if(this.telegramMeNotified !== newValue) {\n      this.telegramMeNotified = newValue;\n      //telegramMeWebService.setAuthorized(this.telegramMeNotified);\n    }\n  } */\n\n  private getTransportType(connectionType: ConnectionType) {\n                              \n                 \n                                                                                                                           \n                                                                                                \n            \n    // @ts-ignore\n    const transportType: TransportType = this.transportType;\n             \n\n    return transportType;\n  }\n\n  private iterateNetworkers(callback: (o: {networker: MTPNetworker, dcId: DcId, connectionType: ConnectionType, transportType: TransportType, index: number, array: MTPNetworker[]}) => void) {\n    for(const transportType in this.cachedNetworkers) {\n      const connections = this.cachedNetworkers[transportType as TransportType];\n      for(const connectionType in connections) {\n        const dcs = connections[connectionType as ConnectionType];\n        for(const dcId in dcs) {\n          const networkers = dcs[dcId as any as DcId];\n          networkers.forEach((networker, idx, arr) => {\n            callback({\n              networker,\n              dcId: +dcId as DcId,\n              connectionType: connectionType as ConnectionType,\n              transportType: transportType as TransportType,\n              index: idx,\n              array: arr\n            });\n          });\n        }\n      }\n    }\n  }\n\n  private chooseServer(dcId: DcId, connectionType: ConnectionType, transportType: TransportType) {\n    return this.dcConfigurator.chooseServer(dcId, connectionType, transportType, connectionType === 'client', this.rootScope.premium);\n  }\n\n  public changeTransportType(transportType: TransportType) {\n    const oldTransportType = this.transportType;\n    if(oldTransportType === transportType) {\n      return;\n    }\n\n    this.log('changing transport from', oldTransportType, 'to', transportType);\n\n    const oldObject = this.cachedNetworkers[oldTransportType];\n    const newObject = this.cachedNetworkers[transportType];\n    this.cachedNetworkers[transportType] = oldObject;\n    this.cachedNetworkers[oldTransportType] = newObject;\n\n    this.transportType = transportType;\n\n    for(const oldGetKey in this.gettingNetworkers) {\n      const promise = this.gettingNetworkers[oldGetKey];\n      delete this.gettingNetworkers[oldGetKey];\n\n      const newGetKey = oldGetKey.replace(oldTransportType, transportType);\n      this.gettingNetworkers[newGetKey] = promise;\n\n      this.log('changed networker getKey from', oldGetKey, 'to', newGetKey)\n    }\n\n    this.iterateNetworkers((info) => {\n      const transportType = this.getTransportType(info.connectionType);\n      const transport = this.chooseServer(info.dcId, info.connectionType, transportType);\n      this.changeNetworkerTransport(info.networker, transport);\n    });\n  }\n\n  public async getBaseDcId() {\n    if(this.baseDcId) {\n      return this.baseDcId;\n    }\n\n    const baseDcId = await sessionStorage.get('dc');\n    if(!this.baseDcId) {\n      if(!baseDcId) {\n        this.setBaseDcId(App.baseDcId);\n      } else {\n        this.baseDcId = baseDcId;\n      }\n    }\n\n    return this.baseDcId;\n  }\n\n  public async setUserAuth(userAuth: UserAuth | UserId) {\n    if(typeof(userAuth) === 'string' || typeof(userAuth) === 'number') {\n      userAuth = {dcID: 0, date: Date.now() / 1000 | 0, id: userAuth.toPeerId(false)};\n    }\n\n    this.rootScope.dispatchEvent('user_auth', userAuth);\n\n    if(!userAuth.dcID) {\n      const baseDcId = await this.getBaseDcId();\n      userAuth.dcID = baseDcId;\n    }\n\n    sessionStorage.set({\n      user_auth: userAuth\n    });\n\n    // this.telegramMeNotify(true);\n  }\n\n  public setBaseDcId(dcId: DcId) {\n    const wasDcId = this.baseDcId;\n    if(wasDcId) { // if migrated set ondrain\n      this.getNetworker(wasDcId).then((networker) => {\n        this.setOnDrainIfNeeded(networker);\n      });\n    }\n\n    this.baseDcId = dcId;\n\n    sessionStorage.set({\n      dc: this.baseDcId\n    });\n  }\n\n  public async logOut() {\n    if(this.loggingOut) {\n      return;\n    }\n\n    this.loggingOut = true;\n    const storageKeys: Array<DcAuthKey> = [];\n\n    const prefix = 'dc';\n    for(let dcId = 1; dcId <= 5; dcId++) {\n      storageKeys.push(prefix + dcId + '_auth_key' as any);\n    }\n\n    // WebPushApiManager.forceUnsubscribe(); // WARNING // moved to worker's master\n    const storageResult = await Promise.all(storageKeys.map((key) => sessionStorage.get(key)));\n\n    const logoutPromises: Promise<any>[] = [];\n    for(let i = 0; i < storageResult.length; i++) {\n      if(storageResult[i]) {\n        logoutPromises.push(this.invokeApi('auth.logOut', {}, {dcId: (i + 1) as DcId, ignoreErrors: true}));\n      }\n    }\n\n    const clear = async() => {\n      this.baseDcId = undefined;\n      // this.telegramMeNotify(false);\n      await toggleStorages(false, true);\n      IDB.closeDatabases();\n      this.rootScope.dispatchEvent('logging_out');\n    };\n\n    setTimeout(clear, 1e3);\n\n    // return;\n\n    return Promise.all(logoutPromises).catch((error) => {\n      error.handled = true;\n    }).finally(clear)/* .then(() => {\n      location.pathname = '/';\n    }) */;\n  }\n\n  private generateNetworkerGetKey(dcId: DcId, transportType: TransportType, connectionType: ConnectionType) {\n    return [dcId, transportType, connectionType].join('-');\n  }\n\n  public getNetworker(dcId: DcId, options: InvokeApiOptions = {}): Promise<MTPNetworker> {\n    const connectionType: ConnectionType = options.fileDownload ? 'download' : (options.fileUpload ? 'upload' : 'client');\n    // const connectionType: ConnectionType = 'client';\n\n    const transportType = this.getTransportType(connectionType);\n    if(!this.cachedNetworkers[transportType]) {\n      this.cachedNetworkers[transportType] = {\n        client: {},\n        download: {},\n        upload: {}\n      };\n    }\n\n    const cache = this.cachedNetworkers[transportType][connectionType];\n    if(!(dcId in cache)) {\n      cache[dcId] = [];\n    }\n\n    const networkers = cache[dcId];\n    // @ts-ignore\n    const maxNetworkers = connectionType === 'client' || transportType === 'https' ? 1 : (this.rootScope.premium ? PREMIUM_FILE_NETWORKERS_COUNT : REGULAR_FILE_NETWORKERS_COUNT);\n    if(networkers.length >= maxNetworkers) {\n      let i = maxNetworkers - 1, found = false;\n      for(; i >= 0; --i) {\n        if(networkers[i].isOnline) {\n          found = true;\n          break;\n        }\n      }\n\n      const networker = networkers.splice(found ? i : maxNetworkers - 1, 1)[0];\n      networkers.unshift(networker);\n      return Promise.resolve(networker);\n    }\n\n    let getKey = this.generateNetworkerGetKey(dcId, transportType, connectionType);\n    if(this.gettingNetworkers[getKey]) {\n      return this.gettingNetworkers[getKey];\n    }\n\n    const ak: DcAuthKey = `dc${dcId}_auth_key` as any;\n    const ss: DcServerSalt = `dc${dcId}_server_salt` as any;\n\n    let transport = this.chooseServer(dcId, connectionType, transportType);\n    return this.gettingNetworkers[getKey] = Promise.all([ak, ss].map((key) => sessionStorage.get(key)))\n    .then(async([authKeyHex, serverSaltHex]) => {\n      let networker: MTPNetworker, error: any;\n      if(authKeyHex && authKeyHex.length === 512) {\n        if(!serverSaltHex || serverSaltHex.length !== 16) {\n          serverSaltHex = 'AAAAAAAAAAAAAAAA';\n        }\n\n        const authKey = bytesFromHex(authKeyHex);\n        const authKeyId = (await CryptoWorker.invokeCrypto('sha1', authKey)).slice(-8);\n        const serverSalt = bytesFromHex(serverSaltHex);\n\n        networker = this.networkerFactory.getNetworker(dcId, authKey, authKeyId, serverSalt, options);\n      } else {\n        try { // if no saved state\n          const auth = await this.authorizer.auth(dcId);\n\n          sessionStorage.set({\n            [ak]: bytesToHex(auth.authKey),\n            [ss]: bytesToHex(auth.serverSalt)\n          });\n\n          networker = this.networkerFactory.getNetworker(dcId, auth.authKey, auth.authKeyId, auth.serverSalt, options);\n        } catch(_error) {\n          error = _error;\n        }\n      }\n\n      // ! cannot get it before this promise because simultaneous changeTransport will change nothing\n      const newTransportType = this.getTransportType(connectionType);\n      if(newTransportType !== transportType) {\n        getKey = this.generateNetworkerGetKey(dcId, newTransportType, connectionType);\n        transport.destroy();\n        DcConfigurator.removeTransport(this.dcConfigurator.chosenServers, transport);\n\n        if(networker) {\n          transport = this.chooseServer(dcId, connectionType, newTransportType);\n        }\n\n        this.log('transport has been changed during authorization from', transportType, 'to', newTransportType);\n      }\n\n      /* networker.onConnectionStatusChange = (online) => {\n        console.log('status:', online);\n      }; */\n\n      delete this.gettingNetworkers[getKey];\n\n      if(error) {\n        this.log('get networker error', error, (error as Error).stack);\n        throw error;\n      }\n\n      this.changeNetworkerTransport(networker, transport);\n      networkers.unshift(networker);\n      this.setOnDrainIfNeeded(networker);\n      return networker;\n    });\n  }\n\n  public getNetworkerVoid(dcId: DcId) {\n    return this.getNetworker(dcId).then(noop, noop);\n  }\n\n  private changeNetworkerTransport(networker: MTPNetworker, transport?: MTTransport) {\n    const oldTransport = networker.transport;\n    if(oldTransport) {\n      DcConfigurator.removeTransport(this.dcConfigurator.chosenServers, oldTransport);\n    }\n\n    networker.changeTransport(transport);\n  }\n\n  private onNetworkerDrain(networker: MTPNetworker) {\n    this.log('networker drain', networker.dcId);\n    networker.onDrain = undefined;\n    this.changeNetworkerTransport(networker);\n    networker.destroy();\n    this.networkerFactory.removeNetworker(networker);\n    DcConfigurator.removeTransport(this.cachedNetworkers, networker);\n  }\n\n  public setOnDrainIfNeeded(networker: MTPNetworker) {\n    if(networker.onDrain) {\n      return;\n    }\n\n    const checkPromise: Promise<boolean> = networker.isFileNetworker ?\n      Promise.resolve(true) :\n      this.getBaseDcId().then((baseDcId) => networker.dcId !== baseDcId);\n    checkPromise.then((canRelease) => {\n      if(networker.onDrain) {\n        return;\n      }\n\n      if(canRelease) {\n        networker.onDrain = () => this.onNetworkerDrain(networker);\n        networker.setDrainTimeout();\n      }\n    });\n  }\n\n  public setUpdatesProcessor(callback: (obj: any) => void) {\n    this.updatesProcessor = callback;\n    this.networkerFactory.setUpdatesProcessor(callback);\n  }\n\n  public invokeApi<T extends keyof MethodDeclMap>(method: T, params: MethodDeclMap[T]['req'] = {}, options: InvokeApiOptions = {}): CancellablePromise<MethodDeclMap[T]['res']> {\n    // /////this.log('Invoke api', method, params, options);\n\n    /* if(!this.lol) {\n      networkerFactory.updatesProcessor({_: 'new_session_created'}, true);\n      this.lol = true;\n    } */\n\n    const deferred = deferredPromise<MethodDeclMap[T]['res']>();\n\n    let {afterMessageId, prepareTempMessageId} = options;\n    if(prepareTempMessageId) {\n      deferred.then(() => {\n        delete this.afterMessageTempIds[prepareTempMessageId];\n      });\n    }\n\n    if(MOUNT_CLASS_TO) {\n      const startTime = Date.now();\n      const interval = ctx.setInterval(() => {\n        if(!cachedNetworker || !cachedNetworker.isStopped()) {\n          this.log.error('Request is still processing:', method, params, options, 'time:', (Date.now() - startTime) / 1000);\n        }\n        // this.cachedUploadNetworkers[2].requestMessageStatus();\n      }, 5e3);\n\n      deferred.catch(noop).finally(() => {\n        clearInterval(interval);\n      });\n    }\n\n    const rejectPromise = async(error: ApiError) => {\n      if(!error) {\n        error = {type: 'ERROR_EMPTY'};\n      } else if(!isObject(error)) {\n        error = {message: error};\n      }\n\n      if((error.code === 401 && error.type === 'SESSION_REVOKED') ||\n        (error.code === 406 && error.type === 'AUTH_KEY_DUPLICATED')) {\n        this.logOut();\n      }\n\n      if(options.ignoreErrors) {\n        throw error;\n      }\n\n      if(error.code === 406) {\n        error.handled = true;\n      }\n\n      if(!options.noErrorBox) {\n        error.input = method;\n        error.stack = stack || (error.originalError && error.originalError.stack) || error.stack || (new Error()).stack;\n        setTimeout(() => {\n          if(!error.handled) {\n            if(error.code === 401) {\n              this.logOut();\n            } else {\n              // ErrorService.show({error: error}); // WARNING\n            }\n\n            error.handled = true;\n          }\n        }, 100);\n      }\n\n      throw error;\n    };\n\n    let dcId: DcId;\n\n    let cachedNetworker: MTPNetworker;\n    const stack = (new Error()).stack || 'empty stack';\n    const performRequest = (): Promise<any> => {\n      if(afterMessageId) {\n        const after = this.afterMessageTempIds[afterMessageId];\n        if(after) {\n          options.afterMessageId = after.messageId;\n        }\n      }\n\n      const promise = cachedNetworker.wrapApiCall(method, params, options);\n\n      if(prepareTempMessageId) {\n        this.afterMessageTempIds[prepareTempMessageId] = {\n          messageId: (options as MTMessage).messageId,\n          promise: deferred\n        };\n      }\n\n      return promise.catch((error: ApiError) => {\n        // if(!options.ignoreErrors) {\n        if(error.type !== 'FILE_REFERENCE_EXPIRED'/*  && error.type !== 'MSG_WAIT_FAILED' */) {\n          this.log.error('Error', error.code, error.type, this.baseDcId, dcId, method, params);\n        }\n\n        if(error.code === 401 && this.baseDcId === dcId) {\n          if(error.type !== 'SESSION_PASSWORD_NEEDED') {\n            sessionStorage.delete('dc')\n            sessionStorage.delete('user_auth'); // ! возможно тут вообще не нужно это делать, но нужно проверить случай с USER_DEACTIVATED (https://core.telegram.org/api/errors)\n            // this.telegramMeNotify(false);\n          }\n\n          throw error;\n        } else if(error.code === 401 && this.baseDcId && dcId !== this.baseDcId) {\n          if(this.cachedExportPromise[dcId] === undefined) {\n            const promise = new Promise((exportResolve, exportReject) => {\n              this.invokeApi('auth.exportAuthorization', {dc_id: dcId}, {noErrorBox: true}).then((exportedAuth) => {\n                this.invokeApi('auth.importAuthorization', {\n                  id: exportedAuth.id,\n                  bytes: exportedAuth.bytes\n                }, {dcId, noErrorBox: true}).then(exportResolve, exportReject);\n              }, exportReject);\n            });\n\n            this.cachedExportPromise[dcId] = promise;\n          }\n\n          return this.cachedExportPromise[dcId].then(() => performRequest());\n        } else if(error.code === 303) {\n          const newDcId = +error.type.match(/^(PHONE_MIGRATE_|NETWORK_MIGRATE_|USER_MIGRATE_)(\\d+)/)[2] as DcId;\n          if(newDcId !== dcId) {\n            if(options.dcId) {\n              options.dcId = newDcId;\n            } else {\n              this.setBaseDcId(newDcId);\n            }\n\n            return this.invokeApi(method, params, options);\n          }\n        } else if(error.code === 400 && error.type.indexOf('FILE_MIGRATE') === 0) {\n          const newDcId = +error.type.match(/^(FILE_MIGRATE_)(\\d+)/)[2] as DcId;\n          if(newDcId !== dcId) {\n            options.dcId = newDcId;\n            return this.invokeApi(method, params, options);\n          } else {\n            throw error;\n          }\n        } else if(error.code === 400 && error.type === 'CONNECTION_NOT_INITED') {\n          this.networkerFactory.unsetConnectionInited();\n          return performRequest();\n        } else if(!options.rawError && error.code === 420) {\n          const waitTime = +error.type.match(/^FLOOD_WAIT_(\\d+)/)[1] || 1;\n\n          if(waitTime > (options.floodMaxTimeout ?? 60) && !options.prepareTempMessageId) {\n            throw error;\n          }\n\n          return pause(waitTime/* (waitTime + 5) */ * 1000).then(() => performRequest());\n        } else if(!options.rawError && ['MSG_WAIT_FAILED', 'MSG_WAIT_TIMEOUT'].includes(error.type)) {\n          const after = this.afterMessageTempIds[afterMessageId];\n\n          afterMessageId = undefined;\n          delete options.afterMessageId;\n\n          if(after) return after.promise.then(() => performRequest());\n          else return performRequest();\n        } else if(!options.rawError && error.code === 500) {\n          const now = Date.now();\n          if(options.stopTime) {\n            if(now >= options.stopTime) {\n              throw error;\n            }\n          }\n\n          options.waitTime = options.waitTime ? Math.min(60, options.waitTime * 1.5) : 1;\n          return pause(options.waitTime * 1000).then(() => performRequest());\n        } else if(error.type === 'UNKNOWN' || error.type === 'MTPROTO_CLUSTER_INVALID') { // cluster invalid - request from regular user to premium endpoint\n          return pause(1000).then(() => performRequest());\n        } else {\n          throw error;\n        }\n      });\n    }\n\n    let p: Promise<MTPNetworker>;\n    if(dcId = (options.dcId || this.baseDcId)) {\n      p = this.getNetworker(dcId, options);\n    } else {\n      p = this.getBaseDcId().then((baseDcId) => this.getNetworker(dcId = baseDcId, options));\n    }\n\n    p.then((networker) => {\n      cachedNetworker = networker;\n      const promise = performRequest();\n      cachedNetworker.attachPromise(deferred, options as MTMessage);\n      return promise;\n    })\n    .then(deferred.resolve)\n    .catch(rejectPromise)\n    .catch(deferred.reject);\n\n    return deferred;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport applyMixins from '../../helpers/applyMixins';\nimport EventListenerBase from '../../helpers/eventListenerBase';\nimport {AppManager} from '../appManagers/manager';\n\nexport type StatePeerType = 'recentSearch' | 'topPeer' | 'dialog' | 'contact' | 'topMessage' | 'self';\n\ntype PeersStorageKey = `${StatePeerType}_${string | PeerId}` | StatePeerType;\n\nclass PeersStorage {\n  private neededPeers: Map<PeerId, Set<PeersStorageKey>> = new Map();\n  private singlePeerMap: Map<PeersStorageKey, Set<PeerId>> = new Map();\n\n  constructor() {\n    this._constructor(false);\n  }\n\n  protected after() {\n    this.rootScope.addEventListener('user_auth', () => {\n      this.requestPeer(this.appPeersManager.peerId, 'self');\n    });\n  }\n\n  public requestPeer(peerId: PeerId, key: PeersStorageKey) {\n    let set = this.neededPeers.get(peerId);\n    if(set && set.has(key)) {\n      return;\n    }\n\n    if(!set) {\n      set = new Set();\n      this.neededPeers.set(peerId, set);\n    }\n\n    set.add(key);\n\n    this.dispatchEvent('peerNeeded', peerId);\n  }\n\n  public releasePeer(peerId: PeerId, key: PeersStorageKey) {\n    const set = this.neededPeers.get(peerId);\n    if(!set) {\n      return;\n    }\n\n    set.delete(key);\n\n    if(!set.size) {\n      this.neededPeers.delete(peerId);\n      this.dispatchEvent('peerUnneeded', peerId);\n    }\n  }\n\n  public requestPeersForKey(peerIds: Set<PeerId> | number[], key: PeersStorageKey) {\n    if(Array.isArray(peerIds)) {\n      peerIds = new Set(peerIds);\n    }\n\n    let set = this.singlePeerMap.get(key);\n    if(set) {\n      for(const peerId of set) {\n        if(peerIds.has(peerId)) {\n          continue;\n        }\n\n        this.releasePeer(peerId, key);\n        set.delete(peerId);\n      }\n\n      if(!set.size && !peerIds.size) {\n        this.singlePeerMap.delete(key);\n        return;\n      }\n    }\n\n    if(peerIds.size) {\n      if(!set) {\n        set = new Set();\n        this.singlePeerMap.set(key, set);\n      }\n\n      for(const peerId of peerIds) {\n        if(set.has(peerId)) {\n          continue;\n        }\n\n        this.requestPeer(peerId, key);\n        set.add(peerId);\n      }\n    }\n  }\n\n  public isPeerNeeded(peerId: PeerId) {\n    return this.neededPeers.has(peerId);\n  }\n}\n\ninterface PeersStorage extends EventListenerBase<{\n  peerNeeded: (peerId: PeerId) => void,\n  peerUnneeded: (peerId: PeerId) => void,\n}>, AppManager {}\napplyMixins(PeersStorage, [EventListenerBase, AppManager]);\n\nexport default PeersStorage;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {WebDocument} from '../../layer';\nimport type {MyDocument} from '../appManagers/appDocsManager';\nimport type {MyPhoto} from '../appManagers/appPhotosManager';\nimport {THUMB_TYPE_FULL} from '../mtproto/mtproto_config';\n\nexport type ThumbCache = {\n  downloaded: number,\n  url: string,\n  type: string\n};\n\nexport type ThumbsCache = {\n  [key: string]: {\n    [size: string]: ThumbCache\n  }\n};\n\nconst thumbFullSize = THUMB_TYPE_FULL;\n\nexport type ThumbStorageMedia = MyPhoto | MyDocument | WebDocument;\n\nexport default class ThumbsStorage {\n  private thumbsCache: ThumbsCache = {};\n\n  private getKey(media: ThumbStorageMedia) {\n    return media._ + ((media as MyPhoto).id ?? (media as WebDocument).url);\n  }\n\n  public getCacheContext(media: ThumbStorageMedia, thumbSize: string = thumbFullSize): ThumbCache {\n    /* if(media._ === 'photo' && thumbSize !== 'i') {\n      thumbSize = thumbFullSize;\n    } */\n\n    const cache = this.thumbsCache[this.getKey(media)] ??= {};\n    return cache[thumbSize] ??= {downloaded: 0, url: '', type: thumbSize};\n  }\n\n  public setCacheContextURL(media: ThumbStorageMedia, thumbSize: string = thumbFullSize, url: string, downloaded: number = 0) {\n    const cacheContext = this.getCacheContext(media, thumbSize);\n    cacheContext.url = url;\n    cacheContext.downloaded = downloaded;\n    return cacheContext;\n  }\n\n  public deleteCacheContext(media: ThumbStorageMedia, thumbSize: string = thumbFullSize) {\n    const cache = this.thumbsCache[this.getKey(media)];\n    if(cache) {\n      delete cache[thumbSize];\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nexport type MTProtoConstructor = {\n  id: number,\n  predicate: string,\n  params: Array<{\n    name: string,\n    type: string\n  }>,\n  type: string\n};\n\nexport type MTProtoMethod = {\n  id: number,\n  method: string,\n  params: Array<{\n    name: string,\n    type: string\n  }>,\n  type: string\n};\n\n// eslint-disable-next-line quotes, comma-spacing\nexport default {\"MTProto\":{\"constructors\":[{\"id\":481674261,\"predicate\":\"vector\",\"params\":[],\"type\":\"Vector t\"},{\"id\":85337187,\"predicate\":\"resPQ\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"server_public_key_fingerprints\",\"type\":\"Vector<long>\"}],\"type\":\"ResPQ\"},{\"id\":-1443537003,\"predicate\":\"p_q_inner_data_dc\",\"params\":[{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce\",\"type\":\"int256\"},{\"name\":\"dc\",\"type\":\"int\"}],\"type\":\"P_Q_inner_data\"},{\"id\":1459478408,\"predicate\":\"p_q_inner_data_temp_dc\",\"params\":[{\"name\":\"pq\",\"type\":\"bytes\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce\",\"type\":\"int256\"},{\"name\":\"dc\",\"type\":\"int\"},{\"name\":\"expires_in\",\"type\":\"int\"}],\"type\":\"P_Q_inner_data\"},{\"id\":-790100132,\"predicate\":\"server_DH_params_ok\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"encrypted_answer\",\"type\":\"bytes\"}],\"type\":\"Server_DH_Params\"},{\"id\":-1249309254,\"predicate\":\"server_DH_inner_data\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"dh_prime\",\"type\":\"bytes\"},{\"name\":\"g_a\",\"type\":\"bytes\"},{\"name\":\"server_time\",\"type\":\"int\"}],\"type\":\"Server_DH_inner_data\"},{\"id\":1715713620,\"predicate\":\"client_DH_inner_data\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"retry_id\",\"type\":\"long\"},{\"name\":\"g_b\",\"type\":\"bytes\"}],\"type\":\"Client_DH_Inner_Data\"},{\"id\":1003222836,\"predicate\":\"dh_gen_ok\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash1\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1188831161,\"predicate\":\"dh_gen_retry\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash2\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":-1499615742,\"predicate\":\"dh_gen_fail\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"new_nonce_hash3\",\"type\":\"int128\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1973679973,\"predicate\":\"bind_auth_key_inner\",\"params\":[{\"name\":\"nonce\",\"type\":\"long\"},{\"name\":\"temp_auth_key_id\",\"type\":\"long\"},{\"name\":\"perm_auth_key_id\",\"type\":\"long\"},{\"name\":\"temp_session_id\",\"type\":\"long\"},{\"name\":\"expires_at\",\"type\":\"int\"}],\"type\":\"BindAuthKeyInner\"},{\"id\":-212046591,\"predicate\":\"rpc_result\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"result\",\"type\":\"Object\"}],\"type\":\"RpcResult\"},{\"id\":558156313,\"predicate\":\"rpc_error\",\"params\":[{\"name\":\"error_code\",\"type\":\"int\"},{\"name\":\"error_message\",\"type\":\"string\"}],\"type\":\"RpcError\"},{\"id\":1579864942,\"predicate\":\"rpc_answer_unknown\",\"params\":[],\"type\":\"RpcDropAnswer\"},{\"id\":-847714938,\"predicate\":\"rpc_answer_dropped_running\",\"params\":[],\"type\":\"RpcDropAnswer\"},{\"id\":-1539647305,\"predicate\":\"rpc_answer_dropped\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"seq_no\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"int\"}],\"type\":\"RpcDropAnswer\"},{\"id\":155834844,\"predicate\":\"future_salt\",\"params\":[{\"name\":\"valid_since\",\"type\":\"int\"},{\"name\":\"valid_until\",\"type\":\"int\"},{\"name\":\"salt\",\"type\":\"long\"}],\"type\":\"FutureSalt\"},{\"id\":-1370486635,\"predicate\":\"future_salts\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"now\",\"type\":\"int\"},{\"name\":\"salts\",\"type\":\"vector<future_salt>\"}],\"type\":\"FutureSalts\"},{\"id\":880243653,\"predicate\":\"pong\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"ping_id\",\"type\":\"long\"}],\"type\":\"Pong\"},{\"id\":-501201412,\"predicate\":\"destroy_session_ok\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":1658015945,\"predicate\":\"destroy_session_none\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":-1631450872,\"predicate\":\"new_session_created\",\"params\":[{\"name\":\"first_msg_id\",\"type\":\"long\"},{\"name\":\"unique_id\",\"type\":\"long\"},{\"name\":\"server_salt\",\"type\":\"long\"}],\"type\":\"NewSession\"},{\"id\":1945237724,\"predicate\":\"msg_container\",\"params\":[{\"name\":\"messages\",\"type\":\"vector<%Message>\"}],\"type\":\"MessageContainer\"},{\"id\":1538843921,\"predicate\":\"message\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"seqno\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"body\",\"type\":\"Object\"}],\"type\":\"Message\"},{\"id\":-530561358,\"predicate\":\"msg_copy\",\"params\":[{\"name\":\"orig_message\",\"type\":\"Message\"}],\"type\":\"MessageCopy\"},{\"id\":812830625,\"predicate\":\"gzip_packed\",\"params\":[{\"name\":\"packed_data\",\"type\":\"bytes\"}],\"type\":\"Object\"},{\"id\":1658238041,\"predicate\":\"msgs_ack\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgsAck\"},{\"id\":-1477445615,\"predicate\":\"bad_msg_notification\",\"params\":[{\"name\":\"bad_msg_id\",\"type\":\"long\"},{\"name\":\"bad_msg_seqno\",\"type\":\"int\"},{\"name\":\"error_code\",\"type\":\"int\"}],\"type\":\"BadMsgNotification\"},{\"id\":-307542917,\"predicate\":\"bad_server_salt\",\"params\":[{\"name\":\"bad_msg_id\",\"type\":\"long\"},{\"name\":\"bad_msg_seqno\",\"type\":\"int\"},{\"name\":\"error_code\",\"type\":\"int\"},{\"name\":\"new_server_salt\",\"type\":\"long\"}],\"type\":\"BadMsgNotification\"},{\"id\":2105940488,\"predicate\":\"msg_resend_req\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgResendReq\"},{\"id\":-630588590,\"predicate\":\"msgs_state_req\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"}],\"type\":\"MsgsStateReq\"},{\"id\":81704317,\"predicate\":\"msgs_state_info\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"},{\"name\":\"info\",\"type\":\"bytes\"}],\"type\":\"MsgsStateInfo\"},{\"id\":-1933520591,\"predicate\":\"msgs_all_info\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"},{\"name\":\"info\",\"type\":\"bytes\"}],\"type\":\"MsgsAllInfo\"},{\"id\":661470918,\"predicate\":\"msg_detailed_info\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"answer_msg_id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"status\",\"type\":\"int\"}],\"type\":\"MsgDetailedInfo\"},{\"id\":-2137147681,\"predicate\":\"msg_new_detailed_info\",\"params\":[{\"name\":\"answer_msg_id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"int\"},{\"name\":\"status\",\"type\":\"int\"}],\"type\":\"MsgDetailedInfo\"},{\"id\":-161422892,\"predicate\":\"destroy_auth_key_ok\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"},{\"id\":178201177,\"predicate\":\"destroy_auth_key_none\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"},{\"id\":-368010477,\"predicate\":\"destroy_auth_key_fail\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"}],\"methods\":[{\"id\":-1099002127,\"method\":\"req_pq_multi\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"}],\"type\":\"ResPQ\"},{\"id\":-686627650,\"method\":\"req_DH_params\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"q\",\"type\":\"bytes\"},{\"name\":\"public_key_fingerprint\",\"type\":\"long\"},{\"name\":\"encrypted_data\",\"type\":\"bytes\"}],\"type\":\"Server_DH_Params\"},{\"id\":-184262881,\"method\":\"set_client_DH_params\",\"params\":[{\"name\":\"nonce\",\"type\":\"int128\"},{\"name\":\"server_nonce\",\"type\":\"int128\"},{\"name\":\"encrypted_data\",\"type\":\"bytes\"}],\"type\":\"Set_client_DH_params_answer\"},{\"id\":1491380032,\"method\":\"rpc_drop_answer\",\"params\":[{\"name\":\"req_msg_id\",\"type\":\"long\"}],\"type\":\"RpcDropAnswer\"},{\"id\":-1188971260,\"method\":\"get_future_salts\",\"params\":[{\"name\":\"num\",\"type\":\"int\"}],\"type\":\"FutureSalts\"},{\"id\":2059302892,\"method\":\"ping\",\"params\":[{\"name\":\"ping_id\",\"type\":\"long\"}],\"type\":\"Pong\"},{\"id\":-213746804,\"method\":\"ping_delay_disconnect\",\"params\":[{\"name\":\"ping_id\",\"type\":\"long\"},{\"name\":\"disconnect_delay\",\"type\":\"int\"}],\"type\":\"Pong\"},{\"id\":-414113498,\"method\":\"destroy_session\",\"params\":[{\"name\":\"session_id\",\"type\":\"long\"}],\"type\":\"DestroySessionRes\"},{\"id\":-1835453025,\"method\":\"http_wait\",\"params\":[{\"name\":\"max_delay\",\"type\":\"int\"},{\"name\":\"wait_after\",\"type\":\"int\"},{\"name\":\"max_wait\",\"type\":\"int\"}],\"type\":\"HttpWait\"},{\"id\":-784117408,\"method\":\"destroy_auth_key\",\"params\":[],\"type\":\"DestroyAuthKeyRes\"}]},\"API\":{\"constructors\":[{\"id\":-1132882121,\"predicate\":\"boolFalse\",\"params\":[],\"type\":\"Bool\"},{\"id\":-1720552011,\"predicate\":\"boolTrue\",\"params\":[],\"type\":\"Bool\"},{\"id\":1072550713,\"predicate\":\"true\",\"params\":[],\"type\":\"True\"},{\"id\":481674261,\"predicate\":\"vector\",\"params\":[],\"type\":\"Vector t\"},{\"id\":-994444869,\"predicate\":\"error\",\"params\":[{\"name\":\"code\",\"type\":\"int\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"Error\"},{\"id\":1450380236,\"predicate\":\"null\",\"params\":[],\"type\":\"Null\"},{\"id\":2134579434,\"predicate\":\"inputPeerEmpty\",\"params\":[],\"type\":\"InputPeer\"},{\"id\":2107670217,\"predicate\":\"inputPeerSelf\",\"params\":[],\"type\":\"InputPeer\"},{\"id\":900291769,\"predicate\":\"inputPeerChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-1182234929,\"predicate\":\"inputUserEmpty\",\"params\":[],\"type\":\"InputUser\"},{\"id\":-138301121,\"predicate\":\"inputUserSelf\",\"params\":[],\"type\":\"InputUser\"},{\"id\":-208488460,\"predicate\":\"inputPhoneContact\",\"params\":[{\"name\":\"client_id\",\"type\":\"long\"},{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"}],\"type\":\"InputContact\"},{\"id\":-181407105,\"predicate\":\"inputFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"md5_checksum\",\"type\":\"string\"}],\"type\":\"InputFile\"},{\"id\":-1771768449,\"predicate\":\"inputMediaEmpty\",\"params\":[],\"type\":\"InputMedia\"},{\"id\":505969924,\"predicate\":\"inputMediaUploadedPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.2?true\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"stickers\",\"type\":\"flags.0?Vector<InputDocument>\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.1?int\"}],\"type\":\"InputMedia\"},{\"id\":-1279654347,\"predicate\":\"inputMediaPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"InputPhoto\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":-104578748,\"predicate\":\"inputMediaGeoPoint\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"}],\"type\":\"InputMedia\"},{\"id\":-122978821,\"predicate\":\"inputMediaContact\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":480546647,\"predicate\":\"inputChatPhotoEmpty\",\"params\":[],\"type\":\"InputChatPhoto\"},{\"id\":-968723890,\"predicate\":\"inputChatUploadedPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"flags.0?InputFile\"},{\"name\":\"video\",\"type\":\"flags.1?InputFile\"},{\"name\":\"video_start_ts\",\"type\":\"flags.2?double\"}],\"type\":\"InputChatPhoto\"},{\"id\":-1991004873,\"predicate\":\"inputChatPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"InputChatPhoto\"},{\"id\":-457104426,\"predicate\":\"inputGeoPointEmpty\",\"params\":[],\"type\":\"InputGeoPoint\"},{\"id\":1210199983,\"predicate\":\"inputGeoPoint\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"lat\",\"type\":\"double\"},{\"name\":\"long\",\"type\":\"double\"},{\"name\":\"accuracy_radius\",\"type\":\"flags.0?int\"}],\"type\":\"InputGeoPoint\"},{\"id\":483901197,\"predicate\":\"inputPhotoEmpty\",\"params\":[],\"type\":\"InputPhoto\"},{\"id\":1001634122,\"predicate\":\"inputPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputPhoto\"},{\"id\":-539317279,\"predicate\":\"inputFileLocation\",\"params\":[{\"name\":\"volume_id\",\"type\":\"long\"},{\"name\":\"local_id\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputFileLocation\"},{\"id\":1498486562,\"predicate\":\"peerUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":918946202,\"predicate\":\"peerChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":-1432995067,\"predicate\":\"storage.fileUnknown\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1086091090,\"predicate\":\"storage.filePartial\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":8322574,\"predicate\":\"storage.fileJpeg\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-891180321,\"predicate\":\"storage.fileGif\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":172975040,\"predicate\":\"storage.filePng\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-1373745011,\"predicate\":\"storage.filePdf\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1384777335,\"predicate\":\"storage.fileMp3\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":1258941372,\"predicate\":\"storage.fileMov\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-1278304028,\"predicate\":\"storage.fileMp4\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":276907596,\"predicate\":\"storage.fileWebp\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":-742634630,\"predicate\":\"userEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"User\"},{\"id\":1326562017,\"predicate\":\"userProfilePhotoEmpty\",\"params\":[],\"type\":\"UserProfilePhoto\"},{\"id\":-2100168954,\"predicate\":\"userProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_video\",\"type\":\"flags.0?true\"},{\"name\":\"personal\",\"type\":\"flags.2?true\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"stripped_thumb\",\"type\":\"flags.1?bytes\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"UserProfilePhoto\"},{\"id\":164646985,\"predicate\":\"userStatusEmpty\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":-306628279,\"predicate\":\"userStatusOnline\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"UserStatus\"},{\"id\":9203775,\"predicate\":\"userStatusOffline\",\"params\":[{\"name\":\"was_online\",\"type\":\"int\"}],\"type\":\"UserStatus\"},{\"id\":693512293,\"predicate\":\"chatEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Chat\"},{\"id\":1103884886,\"predicate\":\"chat\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"left\",\"type\":\"flags.2?true\"},{\"name\":\"deactivated\",\"type\":\"flags.5?true\"},{\"name\":\"call_active\",\"type\":\"flags.23?true\"},{\"name\":\"call_not_empty\",\"type\":\"flags.24?true\"},{\"name\":\"noforwards\",\"type\":\"flags.25?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"ChatPhoto\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"migrated_to\",\"type\":\"flags.6?InputChannel\"},{\"name\":\"admin_rights\",\"type\":\"flags.14?ChatAdminRights\"},{\"name\":\"default_banned_rights\",\"type\":\"flags.18?ChatBannedRights\"}],\"type\":\"Chat\"},{\"id\":1704108455,\"predicate\":\"chatForbidden\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Chat\"},{\"id\":-908914376,\"predicate\":\"chatFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_set_username\",\"type\":\"flags.7?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.8?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"participants\",\"type\":\"ChatParticipants\"},{\"name\":\"chat_photo\",\"type\":\"flags.2?Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"exported_invite\",\"type\":\"flags.13?ExportedChatInvite\"},{\"name\":\"bot_info\",\"type\":\"flags.3?Vector<BotInfo>\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.6?int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"call\",\"type\":\"flags.12?InputGroupCall\"},{\"name\":\"ttl_period\",\"type\":\"flags.14?int\"},{\"name\":\"groupcall_default_join_as\",\"type\":\"flags.15?Peer\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.16?string\"},{\"name\":\"requests_pending\",\"type\":\"flags.17?int\"},{\"name\":\"recent_requesters\",\"type\":\"flags.17?Vector<long>\"},{\"name\":\"available_reactions\",\"type\":\"flags.18?ChatReactions\"}],\"type\":\"ChatFull\"},{\"id\":-1070776313,\"predicate\":\"chatParticipant\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChatParticipant\"},{\"id\":-2023500831,\"predicate\":\"chatParticipantsForbidden\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"self_participant\",\"type\":\"flags.0?ChatParticipant\"}],\"type\":\"ChatParticipants\"},{\"id\":1018991608,\"predicate\":\"chatParticipants\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"participants\",\"type\":\"Vector<ChatParticipant>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"ChatParticipants\"},{\"id\":935395612,\"predicate\":\"chatPhotoEmpty\",\"params\":[],\"type\":\"ChatPhoto\"},{\"id\":476978193,\"predicate\":\"chatPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_video\",\"type\":\"flags.0?true\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"stripped_thumb\",\"type\":\"flags.1?bytes\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"ChatPhoto\"},{\"id\":-1868117372,\"predicate\":\"messageEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"peer_id\",\"type\":\"flags.0?Peer\"}],\"type\":\"Message\"},{\"id\":940666592,\"predicate\":\"message\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"post\",\"type\":\"flags.14?true\"},{\"name\":\"from_scheduled\",\"type\":\"flags.18?true\"},{\"name\":\"legacy\",\"type\":\"flags.19?true\"},{\"name\":\"edit_hide\",\"type\":\"flags.21?true\"},{\"name\":\"pinned\",\"type\":\"flags.24?true\"},{\"name\":\"noforwards\",\"type\":\"flags.26?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"flags.8?Peer\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"flags.9?MessageMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.6?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"views\",\"type\":\"flags.10?int\"},{\"name\":\"forwards\",\"type\":\"flags.10?int\"},{\"name\":\"replies\",\"type\":\"flags.23?MessageReplies\"},{\"name\":\"edit_date\",\"type\":\"flags.15?int\"},{\"name\":\"post_author\",\"type\":\"flags.16?string\"},{\"name\":\"grouped_id\",\"type\":\"flags.17?long\"},{\"name\":\"reactions\",\"type\":\"flags.20?MessageReactions\"},{\"name\":\"restriction_reason\",\"type\":\"flags.22?Vector<RestrictionReason>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Message\"},{\"id\":721967202,\"predicate\":\"messageService\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"post\",\"type\":\"flags.14?true\"},{\"name\":\"legacy\",\"type\":\"flags.19?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"flags.8?Peer\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"action\",\"type\":\"MessageAction\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Message\"},{\"id\":1038967584,\"predicate\":\"messageMediaEmpty\",\"params\":[],\"type\":\"MessageMedia\"},{\"id\":1766936791,\"predicate\":\"messageMediaPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.3?true\"},{\"name\":\"photo\",\"type\":\"flags.0?Photo\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.2?int\"}],\"type\":\"MessageMedia\"},{\"id\":1457575028,\"predicate\":\"messageMediaGeo\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"}],\"type\":\"MessageMedia\"},{\"id\":1882335561,\"predicate\":\"messageMediaContact\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageMedia\"},{\"id\":-1618676578,\"predicate\":\"messageMediaUnsupported\",\"params\":[],\"type\":\"MessageMedia\"},{\"id\":-1230047312,\"predicate\":\"messageActionEmpty\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1119368275,\"predicate\":\"messageActionChatCreate\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-1247687078,\"predicate\":\"messageActionChatEditTitle\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":2144015272,\"predicate\":\"messageActionChatEditPhoto\",\"params\":[{\"name\":\"photo\",\"type\":\"Photo\"}],\"type\":\"MessageAction\"},{\"id\":-1780220945,\"predicate\":\"messageActionChatDeletePhoto\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":365886720,\"predicate\":\"messageActionChatAddUser\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-1539362612,\"predicate\":\"messageActionChatDeleteUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-712374074,\"predicate\":\"dialog\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.2?true\"},{\"name\":\"unread_mark\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_message\",\"type\":\"int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"unread_mentions_count\",\"type\":\"int\"},{\"name\":\"unread_reactions_count\",\"type\":\"int\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"pts\",\"type\":\"flags.0?int\"},{\"name\":\"draft\",\"type\":\"flags.1?DraftMessage\"},{\"name\":\"folder_id\",\"type\":\"flags.4?int\"},{\"name\":\"ttl_period\",\"type\":\"flags.5?int\"}],\"type\":\"Dialog\"},{\"id\":590459437,\"predicate\":\"photoEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Photo\"},{\"id\":-82216347,\"predicate\":\"photo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_stickers\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"sizes\",\"type\":\"Vector<PhotoSize>\"},{\"name\":\"video_sizes\",\"type\":\"flags.1?Vector<VideoSize>\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"Photo\"},{\"id\":236446268,\"predicate\":\"photoSizeEmpty\",\"params\":[{\"name\":\"type\",\"type\":\"string\"}],\"type\":\"PhotoSize\"},{\"id\":1976012384,\"predicate\":\"photoSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"size\",\"type\":\"int\"}],\"type\":\"PhotoSize\"},{\"id\":35527382,\"predicate\":\"photoCachedSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":286776671,\"predicate\":\"geoPointEmpty\",\"params\":[],\"type\":\"GeoPoint\"},{\"id\":-1297942941,\"predicate\":\"geoPoint\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"long\",\"type\":\"double\"},{\"name\":\"lat\",\"type\":\"double\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"accuracy_radius\",\"type\":\"flags.0?int\"}],\"type\":\"GeoPoint\"},{\"id\":1577067778,\"predicate\":\"auth.sentCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"auth.SentCodeType\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"next_type\",\"type\":\"flags.1?auth.CodeType\"},{\"name\":\"timeout\",\"type\":\"flags.2?int\"}],\"type\":\"auth.SentCode\"},{\"id\":872119224,\"predicate\":\"auth.authorization\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"setup_password_required\",\"type\":\"flags.1?true\"},{\"name\":\"otherwise_relogin_days\",\"type\":\"flags.1?int\"},{\"name\":\"tmp_sessions\",\"type\":\"flags.0?int\"},{\"name\":\"user\",\"type\":\"User\"}],\"type\":\"auth.Authorization\"},{\"id\":-1271602504,\"predicate\":\"auth.exportedAuthorization\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"auth.ExportedAuthorization\"},{\"id\":-1195615476,\"predicate\":\"inputNotifyPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"InputNotifyPeer\"},{\"id\":423314455,\"predicate\":\"inputNotifyUsers\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":1251338318,\"predicate\":\"inputNotifyChats\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":-551616469,\"predicate\":\"inputPeerNotifySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"show_previews\",\"type\":\"flags.0?Bool\"},{\"name\":\"silent\",\"type\":\"flags.1?Bool\"},{\"name\":\"mute_until\",\"type\":\"flags.2?int\"},{\"name\":\"sound\",\"type\":\"flags.3?NotificationSound\"}],\"type\":\"InputPeerNotifySettings\"},{\"id\":-1472527322,\"predicate\":\"peerNotifySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"show_previews\",\"type\":\"flags.0?Bool\"},{\"name\":\"silent\",\"type\":\"flags.1?Bool\"},{\"name\":\"mute_until\",\"type\":\"flags.2?int\"},{\"name\":\"ios_sound\",\"type\":\"flags.3?NotificationSound\"},{\"name\":\"android_sound\",\"type\":\"flags.4?NotificationSound\"},{\"name\":\"other_sound\",\"type\":\"flags.5?NotificationSound\"}],\"type\":\"PeerNotifySettings\"},{\"id\":-1525149427,\"predicate\":\"peerSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"report_spam\",\"type\":\"flags.0?true\"},{\"name\":\"add_contact\",\"type\":\"flags.1?true\"},{\"name\":\"block_contact\",\"type\":\"flags.2?true\"},{\"name\":\"share_contact\",\"type\":\"flags.3?true\"},{\"name\":\"need_contacts_exception\",\"type\":\"flags.4?true\"},{\"name\":\"report_geo\",\"type\":\"flags.5?true\"},{\"name\":\"autoarchived\",\"type\":\"flags.7?true\"},{\"name\":\"invite_members\",\"type\":\"flags.8?true\"},{\"name\":\"request_chat_broadcast\",\"type\":\"flags.10?true\"},{\"name\":\"geo_distance\",\"type\":\"flags.6?int\"},{\"name\":\"request_chat_title\",\"type\":\"flags.9?string\"},{\"name\":\"request_chat_date\",\"type\":\"flags.9?int\"}],\"type\":\"PeerSettings\"},{\"id\":-1539849235,\"predicate\":\"wallPaper\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"pattern\",\"type\":\"flags.3?true\"},{\"name\":\"dark\",\"type\":\"flags.4?true\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"Document\"},{\"name\":\"settings\",\"type\":\"flags.2?WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":1490799288,\"predicate\":\"inputReportReasonSpam\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":505595789,\"predicate\":\"inputReportReasonViolence\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":777640226,\"predicate\":\"inputReportReasonPornography\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1376497949,\"predicate\":\"inputReportReasonChildAbuse\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1041980751,\"predicate\":\"inputReportReasonOther\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-120378643,\"predicate\":\"userFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blocked\",\"type\":\"flags.0?true\"},{\"name\":\"phone_calls_available\",\"type\":\"flags.4?true\"},{\"name\":\"phone_calls_private\",\"type\":\"flags.5?true\"},{\"name\":\"can_pin_message\",\"type\":\"flags.7?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.12?true\"},{\"name\":\"video_calls_available\",\"type\":\"flags.13?true\"},{\"name\":\"voice_messages_forbidden\",\"type\":\"flags.20?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"flags.1?string\"},{\"name\":\"settings\",\"type\":\"PeerSettings\"},{\"name\":\"personal_photo\",\"type\":\"flags.21?Photo\"},{\"name\":\"profile_photo\",\"type\":\"flags.2?Photo\"},{\"name\":\"fallback_photo\",\"type\":\"flags.22?Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"bot_info\",\"type\":\"flags.3?BotInfo\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.6?int\"},{\"name\":\"common_chats_count\",\"type\":\"int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"ttl_period\",\"type\":\"flags.14?int\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.15?string\"},{\"name\":\"private_forward_name\",\"type\":\"flags.16?string\"},{\"name\":\"bot_group_admin_rights\",\"type\":\"flags.17?ChatAdminRights\"},{\"name\":\"bot_broadcast_admin_rights\",\"type\":\"flags.18?ChatAdminRights\"},{\"name\":\"premium_gifts\",\"type\":\"flags.19?Vector<PremiumGiftOption>\"}],\"type\":\"UserFull\"},{\"id\":341499403,\"predicate\":\"contact\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"mutual\",\"type\":\"Bool\"}],\"type\":\"Contact\"},{\"id\":-1052885936,\"predicate\":\"importedContact\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"client_id\",\"type\":\"long\"}],\"type\":\"ImportedContact\"},{\"id\":383348795,\"predicate\":\"contactStatus\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"status\",\"type\":\"UserStatus\"}],\"type\":\"ContactStatus\"},{\"id\":-1219778094,\"predicate\":\"contacts.contactsNotModified\",\"params\":[],\"type\":\"contacts.Contacts\"},{\"id\":-353862078,\"predicate\":\"contacts.contacts\",\"params\":[{\"name\":\"contacts\",\"type\":\"Vector<Contact>\"},{\"name\":\"saved_count\",\"type\":\"int\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Contacts\"},{\"id\":2010127419,\"predicate\":\"contacts.importedContacts\",\"params\":[{\"name\":\"imported\",\"type\":\"Vector<ImportedContact>\"},{\"name\":\"popular_invites\",\"type\":\"Vector<PopularContact>\"},{\"name\":\"retry_contacts\",\"type\":\"Vector<long>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.ImportedContacts\"},{\"id\":182326673,\"predicate\":\"contacts.blocked\",\"params\":[{\"name\":\"blocked\",\"type\":\"Vector<PeerBlocked>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Blocked\"},{\"id\":-513392236,\"predicate\":\"contacts.blockedSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"blocked\",\"type\":\"Vector<PeerBlocked>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Blocked\"},{\"id\":364538944,\"predicate\":\"messages.dialogs\",\"params\":[{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Dialogs\"},{\"id\":1910543603,\"predicate\":\"messages.dialogsSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Dialogs\"},{\"id\":-1938715001,\"predicate\":\"messages.messages\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":978610270,\"predicate\":\"messages.messagesSlice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"next_rate\",\"type\":\"flags.0?int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.2?int\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":1694474197,\"predicate\":\"messages.chats\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<Chat>\"}],\"type\":\"messages.Chats\"},{\"id\":-438840932,\"predicate\":\"messages.chatFull\",\"params\":[{\"name\":\"full_chat\",\"type\":\"ChatFull\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatFull\"},{\"id\":-1269012015,\"predicate\":\"messages.affectedHistory\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1474492012,\"predicate\":\"inputMessagesFilterEmpty\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1777752804,\"predicate\":\"inputMessagesFilterPhotos\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1614803355,\"predicate\":\"inputMessagesFilterVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":1458172132,\"predicate\":\"inputMessagesFilterPhotoVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1629621880,\"predicate\":\"inputMessagesFilterDocument\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":2129714567,\"predicate\":\"inputMessagesFilterUrl\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-3644025,\"predicate\":\"inputMessagesFilterGif\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":522914557,\"predicate\":\"updateNewMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1318109142,\"predicate\":\"updateMessageID\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"random_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-1576161051,\"predicate\":\"updateDeleteMessages\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1071741569,\"predicate\":\"updateUserTyping\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":-2092401936,\"predicate\":\"updateChatUserTyping\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":125178264,\"predicate\":\"updateChatParticipants\",\"params\":[{\"name\":\"participants\",\"type\":\"ChatParticipants\"}],\"type\":\"Update\"},{\"id\":-440534818,\"predicate\":\"updateUserStatus\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"status\",\"type\":\"UserStatus\"}],\"type\":\"Update\"},{\"id\":-1484486364,\"predicate\":\"updateUserName\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"usernames\",\"type\":\"Vector<Username>\"}],\"type\":\"Update\"},{\"id\":-1519637954,\"predicate\":\"updates.state\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"qts\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"}],\"type\":\"updates.State\"},{\"id\":1567990072,\"predicate\":\"updates.differenceEmpty\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":16030880,\"predicate\":\"updates.difference\",\"params\":[{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"new_encrypted_messages\",\"type\":\"Vector<EncryptedMessage>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"state\",\"type\":\"updates.State\"}],\"type\":\"updates.Difference\"},{\"id\":-1459938943,\"predicate\":\"updates.differenceSlice\",\"params\":[{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"new_encrypted_messages\",\"type\":\"Vector<EncryptedMessage>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"intermediate_state\",\"type\":\"updates.State\"}],\"type\":\"updates.Difference\"},{\"id\":-484987010,\"predicate\":\"updatesTooLong\",\"params\":[],\"type\":\"Updates\"},{\"id\":826001400,\"predicate\":\"updateShortMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":1299050149,\"predicate\":\"updateShortChatMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?long\"},{\"name\":\"reply_to\",\"type\":\"flags.3?MessageReplyHeader\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":2027216577,\"predicate\":\"updateShort\",\"params\":[{\"name\":\"update\",\"type\":\"Update\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1918567619,\"predicate\":\"updatesCombined\",\"params\":[{\"name\":\"updates\",\"type\":\"Vector<Update>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq_start\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1957577280,\"predicate\":\"updates\",\"params\":[{\"name\":\"updates\",\"type\":\"Vector<Update>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1916114267,\"predicate\":\"photos.photos\",\"params\":[{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photos\"},{\"id\":352657236,\"predicate\":\"photos.photosSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photos\"},{\"id\":539045032,\"predicate\":\"photos.photo\",\"params\":[{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photo\"},{\"id\":157948117,\"predicate\":\"upload.file\",\"params\":[{\"name\":\"type\",\"type\":\"storage.FileType\"},{\"name\":\"mtime\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.File\"},{\"id\":414687501,\"predicate\":\"dcOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"ipv6\",\"type\":\"flags.0?true\"},{\"name\":\"media_only\",\"type\":\"flags.1?true\"},{\"name\":\"tcpo_only\",\"type\":\"flags.2?true\"},{\"name\":\"cdn\",\"type\":\"flags.3?true\"},{\"name\":\"static\",\"type\":\"flags.4?true\"},{\"name\":\"this_port_only\",\"type\":\"flags.5?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"ip_address\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"flags.10?bytes\"}],\"type\":\"DcOption\"},{\"id\":589653676,\"predicate\":\"config\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phonecalls_enabled\",\"type\":\"flags.1?true\"},{\"name\":\"default_p2p_contacts\",\"type\":\"flags.3?true\"},{\"name\":\"preload_featured_stickers\",\"type\":\"flags.4?true\"},{\"name\":\"ignore_phone_entities\",\"type\":\"flags.5?true\"},{\"name\":\"revoke_pm_inbox\",\"type\":\"flags.6?true\"},{\"name\":\"blocked_mode\",\"type\":\"flags.8?true\"},{\"name\":\"pfs_enabled\",\"type\":\"flags.13?true\"},{\"name\":\"force_try_ipv6\",\"type\":\"flags.14?true\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"test_mode\",\"type\":\"Bool\"},{\"name\":\"this_dc\",\"type\":\"int\"},{\"name\":\"dc_options\",\"type\":\"Vector<DcOption>\"},{\"name\":\"dc_txt_domain_name\",\"type\":\"string\"},{\"name\":\"chat_size_max\",\"type\":\"int\"},{\"name\":\"megagroup_size_max\",\"type\":\"int\"},{\"name\":\"forwarded_count_max\",\"type\":\"int\"},{\"name\":\"online_update_period_ms\",\"type\":\"int\"},{\"name\":\"offline_blur_timeout_ms\",\"type\":\"int\"},{\"name\":\"offline_idle_timeout_ms\",\"type\":\"int\"},{\"name\":\"online_cloud_timeout_ms\",\"type\":\"int\"},{\"name\":\"notify_cloud_delay_ms\",\"type\":\"int\"},{\"name\":\"notify_default_delay_ms\",\"type\":\"int\"},{\"name\":\"push_chat_period_ms\",\"type\":\"int\"},{\"name\":\"push_chat_limit\",\"type\":\"int\"},{\"name\":\"saved_gifs_limit\",\"type\":\"int\"},{\"name\":\"edit_time_limit\",\"type\":\"int\"},{\"name\":\"revoke_time_limit\",\"type\":\"int\"},{\"name\":\"revoke_pm_time_limit\",\"type\":\"int\"},{\"name\":\"rating_e_decay\",\"type\":\"int\"},{\"name\":\"stickers_recent_limit\",\"type\":\"int\"},{\"name\":\"stickers_faved_limit\",\"type\":\"int\"},{\"name\":\"channels_read_media_period\",\"type\":\"int\"},{\"name\":\"tmp_sessions\",\"type\":\"flags.0?int\"},{\"name\":\"pinned_dialogs_count_max\",\"type\":\"int\"},{\"name\":\"pinned_infolder_count_max\",\"type\":\"int\"},{\"name\":\"call_receive_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_ring_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_connect_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_packet_timeout_ms\",\"type\":\"int\"},{\"name\":\"me_url_prefix\",\"type\":\"string\"},{\"name\":\"autoupdate_url_prefix\",\"type\":\"flags.7?string\"},{\"name\":\"gif_search_username\",\"type\":\"flags.9?string\"},{\"name\":\"venue_search_username\",\"type\":\"flags.10?string\"},{\"name\":\"img_search_username\",\"type\":\"flags.11?string\"},{\"name\":\"static_maps_provider\",\"type\":\"flags.12?string\"},{\"name\":\"caption_length_max\",\"type\":\"int\"},{\"name\":\"message_length_max\",\"type\":\"int\"},{\"name\":\"webfile_dc_id\",\"type\":\"int\"},{\"name\":\"suggested_lang_code\",\"type\":\"flags.2?string\"},{\"name\":\"lang_pack_version\",\"type\":\"flags.2?int\"},{\"name\":\"base_lang_pack_version\",\"type\":\"flags.2?int\"},{\"name\":\"reactions_default\",\"type\":\"flags.15?Reaction\"}],\"type\":\"Config\"},{\"id\":-1910892683,\"predicate\":\"nearestDc\",\"params\":[{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"this_dc\",\"type\":\"int\"},{\"name\":\"nearest_dc\",\"type\":\"int\"}],\"type\":\"NearestDc\"},{\"id\":-860107216,\"predicate\":\"help.appUpdate\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_not_skip\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"document\",\"type\":\"flags.1?Document\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"sticker\",\"type\":\"flags.3?Document\"}],\"type\":\"help.AppUpdate\"},{\"id\":-1000708810,\"predicate\":\"help.noAppUpdate\",\"params\":[],\"type\":\"help.AppUpdate\"},{\"id\":415997816,\"predicate\":\"help.inviteText\",\"params\":[{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"help.InviteText\"},{\"id\":314359194,\"predicate\":\"updateNewEncryptedMessage\",\"params\":[{\"name\":\"message\",\"type\":\"EncryptedMessage\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":386986326,\"predicate\":\"updateEncryptedChatTyping\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1264392051,\"predicate\":\"updateEncryption\",\"params\":[{\"name\":\"chat\",\"type\":\"EncryptedChat\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":956179895,\"predicate\":\"updateEncryptedMessagesRead\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1417756512,\"predicate\":\"encryptedChatEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"EncryptedChat\"},{\"id\":1722964307,\"predicate\":\"encryptedChatWaiting\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":1223809356,\"predicate\":\"encryptedChatRequested\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a\",\"type\":\"bytes\"}],\"type\":\"EncryptedChat\"},{\"id\":1643173063,\"predicate\":\"encryptedChat\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_or_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":505183301,\"predicate\":\"encryptedChatDiscarded\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"history_deleted\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"EncryptedChat\"},{\"id\":-247351839,\"predicate\":\"inputEncryptedChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputEncryptedChat\"},{\"id\":-1038136962,\"predicate\":\"encryptedFileEmpty\",\"params\":[],\"type\":\"EncryptedFile\"},{\"id\":-1476358952,\"predicate\":\"encryptedFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"long\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"EncryptedFile\"},{\"id\":406307684,\"predicate\":\"inputEncryptedFileEmpty\",\"params\":[],\"type\":\"InputEncryptedFile\"},{\"id\":1690108678,\"predicate\":\"inputEncryptedFileUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"md5_checksum\",\"type\":\"string\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"InputEncryptedFile\"},{\"id\":1511503333,\"predicate\":\"inputEncryptedFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputEncryptedFile\"},{\"id\":-182231723,\"predicate\":\"inputEncryptedFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":-317144808,\"predicate\":\"encryptedMessage\",\"params\":[{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"},{\"name\":\"file\",\"type\":\"EncryptedFile\"}],\"type\":\"EncryptedMessage\"},{\"id\":594758406,\"predicate\":\"encryptedMessageService\",\"params\":[{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"EncryptedMessage\"},{\"id\":-1058912715,\"predicate\":\"messages.dhConfigNotModified\",\"params\":[{\"name\":\"random\",\"type\":\"bytes\"}],\"type\":\"messages.DhConfig\"},{\"id\":740433629,\"predicate\":\"messages.dhConfig\",\"params\":[{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"random\",\"type\":\"bytes\"}],\"type\":\"messages.DhConfig\"},{\"id\":1443858741,\"predicate\":\"messages.sentEncryptedMessage\",\"params\":[{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":-1802240206,\"predicate\":\"messages.sentEncryptedFile\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"file\",\"type\":\"EncryptedFile\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":-95482955,\"predicate\":\"inputFileBig\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"InputFile\"},{\"id\":767652808,\"predicate\":\"inputEncryptedFileBigUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"InputEncryptedFile\"},{\"id\":1037718609,\"predicate\":\"updateChatParticipantAdd\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-483443337,\"predicate\":\"updateChatParticipantDelete\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1906403213,\"predicate\":\"updateDcOptions\",\"params\":[{\"name\":\"dc_options\",\"type\":\"Vector<DcOption>\"}],\"type\":\"Update\"},{\"id\":1530447553,\"predicate\":\"inputMediaUploadedDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"nosound_video\",\"type\":\"flags.3?true\"},{\"name\":\"force_file\",\"type\":\"flags.4?true\"},{\"name\":\"spoiler\",\"type\":\"flags.5?true\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"thumb\",\"type\":\"flags.2?InputFile\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"},{\"name\":\"stickers\",\"type\":\"flags.0?Vector<InputDocument>\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.1?int\"}],\"type\":\"InputMedia\"},{\"id\":860303448,\"predicate\":\"inputMediaDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.2?true\"},{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"},{\"name\":\"query\",\"type\":\"flags.1?string\"}],\"type\":\"InputMedia\"},{\"id\":-1666158377,\"predicate\":\"messageMediaDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"nopremium\",\"type\":\"flags.3?true\"},{\"name\":\"spoiler\",\"type\":\"flags.4?true\"},{\"name\":\"document\",\"type\":\"flags.0?Document\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.2?int\"}],\"type\":\"MessageMedia\"},{\"id\":1928391342,\"predicate\":\"inputDocumentEmpty\",\"params\":[],\"type\":\"InputDocument\"},{\"id\":448771445,\"predicate\":\"inputDocument\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputDocument\"},{\"id\":-1160743548,\"predicate\":\"inputDocumentFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"thumb_size\",\"type\":\"string\"}],\"type\":\"InputFileLocation\"},{\"id\":922273905,\"predicate\":\"documentEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Document\"},{\"id\":-1881881384,\"predicate\":\"document\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"long\"},{\"name\":\"thumbs\",\"type\":\"flags.0?Vector<PhotoSize>\"},{\"name\":\"video_thumbs\",\"type\":\"flags.1?Vector<VideoSize>\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"Document\"},{\"id\":398898678,\"predicate\":\"help.support\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"user\",\"type\":\"User\"}],\"type\":\"help.Support\"},{\"id\":-1613493288,\"predicate\":\"notifyPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"NotifyPeer\"},{\"id\":-1261946036,\"predicate\":\"notifyUsers\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":-1073230141,\"predicate\":\"notifyChats\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":-1094555409,\"predicate\":\"updateNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"NotifyPeer\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"}],\"type\":\"Update\"},{\"id\":381645902,\"predicate\":\"sendMessageTypingAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-44119819,\"predicate\":\"sendMessageCancelAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-1584933265,\"predicate\":\"sendMessageRecordVideoAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-378127636,\"predicate\":\"sendMessageUploadVideoAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-718310409,\"predicate\":\"sendMessageRecordAudioAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-212740181,\"predicate\":\"sendMessageUploadAudioAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-774682074,\"predicate\":\"sendMessageUploadPhotoAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-1441998364,\"predicate\":\"sendMessageUploadDocumentAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":393186209,\"predicate\":\"sendMessageGeoLocationAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":1653390447,\"predicate\":\"sendMessageChooseContactAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-1290580579,\"predicate\":\"contacts.found\",\"params\":[{\"name\":\"my_results\",\"type\":\"Vector<Peer>\"},{\"name\":\"results\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Found\"},{\"id\":-337352679,\"predicate\":\"updateServiceNotification\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"popup\",\"type\":\"flags.0?true\"},{\"name\":\"inbox_date\",\"type\":\"flags.1?int\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"MessageMedia\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"}],\"type\":\"Update\"},{\"id\":-496024847,\"predicate\":\"userStatusRecently\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":129960444,\"predicate\":\"userStatusLastWeek\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":2011940674,\"predicate\":\"userStatusLastMonth\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":-298113238,\"predicate\":\"updatePrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"PrivacyKey\"},{\"name\":\"rules\",\"type\":\"Vector<PrivacyRule>\"}],\"type\":\"Update\"},{\"id\":1335282456,\"predicate\":\"inputPrivacyKeyStatusTimestamp\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-1137792208,\"predicate\":\"privacyKeyStatusTimestamp\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":218751099,\"predicate\":\"inputPrivacyValueAllowContacts\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":407582158,\"predicate\":\"inputPrivacyValueAllowAll\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":320652927,\"predicate\":\"inputPrivacyValueAllowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":195371015,\"predicate\":\"inputPrivacyValueDisallowContacts\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":-697604407,\"predicate\":\"inputPrivacyValueDisallowAll\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":-1877932953,\"predicate\":\"inputPrivacyValueDisallowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":-123988,\"predicate\":\"privacyValueAllowContacts\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":1698855810,\"predicate\":\"privacyValueAllowAll\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-1198497870,\"predicate\":\"privacyValueAllowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":-125240806,\"predicate\":\"privacyValueDisallowContacts\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-1955338397,\"predicate\":\"privacyValueDisallowAll\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":-463335103,\"predicate\":\"privacyValueDisallowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":1352683077,\"predicate\":\"account.privacyRules\",\"params\":[{\"name\":\"rules\",\"type\":\"Vector<PrivacyRule>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"account.PrivacyRules\"},{\"id\":-1194283041,\"predicate\":\"accountDaysTTL\",\"params\":[{\"name\":\"days\",\"type\":\"int\"}],\"type\":\"AccountDaysTTL\"},{\"id\":88680979,\"predicate\":\"updateUserPhone\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":1815593308,\"predicate\":\"documentAttributeImageSize\",\"params\":[{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"DocumentAttribute\"},{\"id\":297109817,\"predicate\":\"documentAttributeAnimated\",\"params\":[],\"type\":\"DocumentAttribute\"},{\"id\":1662637586,\"predicate\":\"documentAttributeSticker\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"mask\",\"type\":\"flags.1?true\"},{\"name\":\"alt\",\"type\":\"string\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"mask_coords\",\"type\":\"flags.0?MaskCoords\"}],\"type\":\"DocumentAttribute\"},{\"id\":250621158,\"predicate\":\"documentAttributeVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"round_message\",\"type\":\"flags.0?true\"},{\"name\":\"supports_streaming\",\"type\":\"flags.1?true\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"DocumentAttribute\"},{\"id\":-1739392570,\"predicate\":\"documentAttributeAudio\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"voice\",\"type\":\"flags.10?true\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"performer\",\"type\":\"flags.1?string\"},{\"name\":\"waveform\",\"type\":\"flags.2?bytes\"}],\"type\":\"DocumentAttribute\"},{\"id\":358154344,\"predicate\":\"documentAttributeFilename\",\"params\":[{\"name\":\"file_name\",\"type\":\"string\"}],\"type\":\"DocumentAttribute\"},{\"id\":-244016606,\"predicate\":\"messages.stickersNotModified\",\"params\":[],\"type\":\"messages.Stickers\"},{\"id\":816245886,\"predicate\":\"messages.stickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.Stickers\"},{\"id\":313694676,\"predicate\":\"stickerPack\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"documents\",\"type\":\"Vector<long>\"}],\"type\":\"StickerPack\"},{\"id\":-395967805,\"predicate\":\"messages.allStickersNotModified\",\"params\":[],\"type\":\"messages.AllStickers\"},{\"id\":-843329861,\"predicate\":\"messages.allStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSet>\"}],\"type\":\"messages.AllStickers\"},{\"id\":-1667805217,\"predicate\":\"updateReadHistoryInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"still_unread_count\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":791617983,\"predicate\":\"updateReadHistoryOutbox\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-2066640507,\"predicate\":\"messages.affectedMessages\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":2139689491,\"predicate\":\"updateWebPage\",\"params\":[{\"name\":\"webpage\",\"type\":\"WebPage\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-350980120,\"predicate\":\"webPageEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"WebPage\"},{\"id\":-981018084,\"predicate\":\"webPagePending\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"WebPage\"},{\"id\":-392411726,\"predicate\":\"webPage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"display_url\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"type\",\"type\":\"flags.0?string\"},{\"name\":\"site_name\",\"type\":\"flags.1?string\"},{\"name\":\"title\",\"type\":\"flags.2?string\"},{\"name\":\"description\",\"type\":\"flags.3?string\"},{\"name\":\"photo\",\"type\":\"flags.4?Photo\"},{\"name\":\"embed_url\",\"type\":\"flags.5?string\"},{\"name\":\"embed_type\",\"type\":\"flags.5?string\"},{\"name\":\"embed_width\",\"type\":\"flags.6?int\"},{\"name\":\"embed_height\",\"type\":\"flags.6?int\"},{\"name\":\"duration\",\"type\":\"flags.7?int\"},{\"name\":\"author\",\"type\":\"flags.8?string\"},{\"name\":\"document\",\"type\":\"flags.9?Document\"},{\"name\":\"cached_page\",\"type\":\"flags.10?Page\"},{\"name\":\"attributes\",\"type\":\"flags.12?Vector<WebPageAttribute>\"}],\"type\":\"WebPage\"},{\"id\":-1557277184,\"predicate\":\"messageMediaWebPage\",\"params\":[{\"name\":\"webpage\",\"type\":\"WebPage\"}],\"type\":\"MessageMedia\"},{\"id\":-1392388579,\"predicate\":\"authorization\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"current\",\"type\":\"flags.0?true\"},{\"name\":\"official_app\",\"type\":\"flags.1?true\"},{\"name\":\"password_pending\",\"type\":\"flags.2?true\"},{\"name\":\"encrypted_requests_disabled\",\"type\":\"flags.3?true\"},{\"name\":\"call_requests_disabled\",\"type\":\"flags.4?true\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"device_model\",\"type\":\"string\"},{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"system_version\",\"type\":\"string\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"app_name\",\"type\":\"string\"},{\"name\":\"app_version\",\"type\":\"string\"},{\"name\":\"date_created\",\"type\":\"int\"},{\"name\":\"date_active\",\"type\":\"int\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"region\",\"type\":\"string\"}],\"type\":\"Authorization\"},{\"id\":1275039392,\"predicate\":\"account.authorizations\",\"params\":[{\"name\":\"authorization_ttl_days\",\"type\":\"int\"},{\"name\":\"authorizations\",\"type\":\"Vector<Authorization>\"}],\"type\":\"account.Authorizations\"},{\"id\":-1787080453,\"predicate\":\"account.password\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_recovery\",\"type\":\"flags.0?true\"},{\"name\":\"has_secure_values\",\"type\":\"flags.1?true\"},{\"name\":\"has_password\",\"type\":\"flags.2?true\"},{\"name\":\"current_algo\",\"type\":\"flags.2?PasswordKdfAlgo\"},{\"name\":\"srp_B\",\"type\":\"flags.2?bytes\"},{\"name\":\"srp_id\",\"type\":\"flags.2?long\"},{\"name\":\"hint\",\"type\":\"flags.3?string\"},{\"name\":\"email_unconfirmed_pattern\",\"type\":\"flags.4?string\"},{\"name\":\"new_algo\",\"type\":\"PasswordKdfAlgo\"},{\"name\":\"new_secure_algo\",\"type\":\"SecurePasswordKdfAlgo\"},{\"name\":\"secure_random\",\"type\":\"bytes\"},{\"name\":\"pending_reset_date\",\"type\":\"flags.5?int\"},{\"name\":\"login_email_pattern\",\"type\":\"flags.6?string\"}],\"type\":\"account.Password\"},{\"id\":-1705233435,\"predicate\":\"account.passwordSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"email\",\"type\":\"flags.0?string\"},{\"name\":\"secure_settings\",\"type\":\"flags.1?SecureSecretSettings\"}],\"type\":\"account.PasswordSettings\"},{\"id\":-1036572727,\"predicate\":\"account.passwordInputSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"new_algo\",\"type\":\"flags.0?PasswordKdfAlgo\"},{\"name\":\"new_password_hash\",\"type\":\"flags.0?bytes\"},{\"name\":\"hint\",\"type\":\"flags.0?string\"},{\"name\":\"email\",\"type\":\"flags.1?string\"},{\"name\":\"new_secure_settings\",\"type\":\"flags.2?SecureSecretSettings\"}],\"type\":\"account.PasswordInputSettings\"},{\"id\":326715557,\"predicate\":\"auth.passwordRecovery\",\"params\":[{\"name\":\"email_pattern\",\"type\":\"string\"}],\"type\":\"auth.PasswordRecovery\"},{\"id\":-1052959727,\"predicate\":\"inputMediaVenue\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":784356159,\"predicate\":\"messageMediaVenue\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"}],\"type\":\"MessageMedia\"},{\"id\":-1551583367,\"predicate\":\"receivedNotifyMessage\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"flags\",\"type\":\"int\"}],\"type\":\"ReceivedNotifyMessage\"},{\"id\":179611673,\"predicate\":\"chatInviteExported\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.0?true\"},{\"name\":\"permanent\",\"type\":\"flags.5?true\"},{\"name\":\"request_needed\",\"type\":\"flags.6?true\"},{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"start_date\",\"type\":\"flags.4?int\"},{\"name\":\"expire_date\",\"type\":\"flags.1?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.2?int\"},{\"name\":\"usage\",\"type\":\"flags.3?int\"},{\"name\":\"requested\",\"type\":\"flags.7?int\"},{\"name\":\"title\",\"type\":\"flags.8?string\"}],\"type\":\"ExportedChatInvite\"},{\"id\":1516793212,\"predicate\":\"chatInviteAlready\",\"params\":[{\"name\":\"chat\",\"type\":\"Chat\"}],\"type\":\"ChatInvite\"},{\"id\":806110401,\"predicate\":\"chatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"flags.0?true\"},{\"name\":\"broadcast\",\"type\":\"flags.1?true\"},{\"name\":\"public\",\"type\":\"flags.2?true\"},{\"name\":\"megagroup\",\"type\":\"flags.3?true\"},{\"name\":\"request_needed\",\"type\":\"flags.6?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"about\",\"type\":\"flags.5?string\"},{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"flags.4?Vector<User>\"}],\"type\":\"ChatInvite\"},{\"id\":51520707,\"predicate\":\"messageActionChatJoinedByLink\",\"params\":[{\"name\":\"inviter_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":1757493555,\"predicate\":\"updateReadMessagesContents\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-4838507,\"predicate\":\"inputStickerSetEmpty\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":-1645763991,\"predicate\":\"inputStickerSetID\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputStickerSet\"},{\"id\":-2044933984,\"predicate\":\"inputStickerSetShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"InputStickerSet\"},{\"id\":768691932,\"predicate\":\"stickerSet\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"archived\",\"type\":\"flags.1?true\"},{\"name\":\"official\",\"type\":\"flags.2?true\"},{\"name\":\"masks\",\"type\":\"flags.3?true\"},{\"name\":\"animated\",\"type\":\"flags.5?true\"},{\"name\":\"videos\",\"type\":\"flags.6?true\"},{\"name\":\"emojis\",\"type\":\"flags.7?true\"},{\"name\":\"installed_date\",\"type\":\"flags.0?int\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"thumbs\",\"type\":\"flags.4?Vector<PhotoSize>\"},{\"name\":\"thumb_dc_id\",\"type\":\"flags.4?int\"},{\"name\":\"thumb_version\",\"type\":\"flags.4?int\"},{\"name\":\"thumb_document_id\",\"type\":\"flags.8?long\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"StickerSet\"},{\"id\":1846886166,\"predicate\":\"messages.stickerSet\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"keywords\",\"type\":\"Vector<StickerKeyword>\"},{\"name\":\"documents\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.StickerSet\"},{\"id\":-1885878744,\"predicate\":\"user\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"self\",\"type\":\"flags.10?true\"},{\"name\":\"contact\",\"type\":\"flags.11?true\"},{\"name\":\"mutual_contact\",\"type\":\"flags.12?true\"},{\"name\":\"deleted\",\"type\":\"flags.13?true\"},{\"name\":\"bot\",\"type\":\"flags.14?true\"},{\"name\":\"bot_chat_history\",\"type\":\"flags.15?true\"},{\"name\":\"bot_nochats\",\"type\":\"flags.16?true\"},{\"name\":\"verified\",\"type\":\"flags.17?true\"},{\"name\":\"restricted\",\"type\":\"flags.18?true\"},{\"name\":\"min\",\"type\":\"flags.20?true\"},{\"name\":\"bot_inline_geo\",\"type\":\"flags.21?true\"},{\"name\":\"support\",\"type\":\"flags.23?true\"},{\"name\":\"scam\",\"type\":\"flags.24?true\"},{\"name\":\"apply_min_photo\",\"type\":\"flags.25?true\"},{\"name\":\"fake\",\"type\":\"flags.26?true\"},{\"name\":\"bot_attach_menu\",\"type\":\"flags.27?true\"},{\"name\":\"premium\",\"type\":\"flags.28?true\"},{\"name\":\"attach_menu_enabled\",\"type\":\"flags.29?true\"},{\"name\":\"flags2\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"flags.0?long\"},{\"name\":\"first_name\",\"type\":\"flags.1?string\"},{\"name\":\"last_name\",\"type\":\"flags.2?string\"},{\"name\":\"username\",\"type\":\"flags.3?string\"},{\"name\":\"phone\",\"type\":\"flags.4?string\"},{\"name\":\"photo\",\"type\":\"flags.5?UserProfilePhoto\"},{\"name\":\"status\",\"type\":\"flags.6?UserStatus\"},{\"name\":\"bot_info_version\",\"type\":\"flags.14?int\"},{\"name\":\"restriction_reason\",\"type\":\"flags.18?Vector<RestrictionReason>\"},{\"name\":\"bot_inline_placeholder\",\"type\":\"flags.19?string\"},{\"name\":\"lang_code\",\"type\":\"flags.22?string\"},{\"name\":\"emoji_status\",\"type\":\"flags.30?EmojiStatus\"},{\"name\":\"usernames\",\"type\":\"flags2.0?Vector<Username>\"}],\"type\":\"User\"},{\"id\":-1032140601,\"predicate\":\"botCommand\",\"params\":[{\"name\":\"command\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"type\":\"BotCommand\"},{\"id\":-1892676777,\"predicate\":\"botInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"flags.0?long\"},{\"name\":\"description\",\"type\":\"flags.1?string\"},{\"name\":\"description_photo\",\"type\":\"flags.4?Photo\"},{\"name\":\"description_document\",\"type\":\"flags.5?Document\"},{\"name\":\"commands\",\"type\":\"flags.2?Vector<BotCommand>\"},{\"name\":\"menu_button\",\"type\":\"flags.3?BotMenuButton\"}],\"type\":\"BotInfo\"},{\"id\":-1560655744,\"predicate\":\"keyboardButton\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":2002815875,\"predicate\":\"keyboardButtonRow\",\"params\":[{\"name\":\"buttons\",\"type\":\"Vector<KeyboardButton>\"}],\"type\":\"KeyboardButtonRow\"},{\"id\":-1606526075,\"predicate\":\"replyKeyboardHide\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"}],\"type\":\"ReplyMarkup\"},{\"id\":-2035021048,\"predicate\":\"replyKeyboardForceReply\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"single_use\",\"type\":\"flags.1?true\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"},{\"name\":\"placeholder\",\"type\":\"flags.3?string\"}],\"type\":\"ReplyMarkup\"},{\"id\":-2049074735,\"predicate\":\"replyKeyboardMarkup\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"resize\",\"type\":\"flags.0?true\"},{\"name\":\"single_use\",\"type\":\"flags.1?true\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"},{\"name\":\"persistent\",\"type\":\"flags.4?true\"},{\"name\":\"rows\",\"type\":\"Vector<KeyboardButtonRow>\"},{\"name\":\"placeholder\",\"type\":\"flags.3?string\"}],\"type\":\"ReplyMarkup\"},{\"id\":-571955892,\"predicate\":\"inputPeerUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-233744186,\"predicate\":\"inputUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputUser\"},{\"id\":-1148011883,\"predicate\":\"messageEntityUnknown\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-100378723,\"predicate\":\"messageEntityMention\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1868782349,\"predicate\":\"messageEntityHashtag\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1827637959,\"predicate\":\"messageEntityBotCommand\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1859134776,\"predicate\":\"messageEntityUrl\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1692693954,\"predicate\":\"messageEntityEmail\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1117713463,\"predicate\":\"messageEntityBold\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-2106619040,\"predicate\":\"messageEntityItalic\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":681706865,\"predicate\":\"messageEntityCode\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1938967520,\"predicate\":\"messageEntityPre\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"language\",\"type\":\"string\"}],\"type\":\"MessageEntity\"},{\"id\":1990644519,\"predicate\":\"messageEntityTextUrl\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"MessageEntity\"},{\"id\":-1877614335,\"predicate\":\"updateShortSentMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"media\",\"type\":\"flags.9?MessageMedia\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"ttl_period\",\"type\":\"flags.25?int\"}],\"type\":\"Updates\"},{\"id\":-292807034,\"predicate\":\"inputChannelEmpty\",\"params\":[],\"type\":\"InputChannel\"},{\"id\":-212145112,\"predicate\":\"inputChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputChannel\"},{\"id\":-1566230754,\"predicate\":\"peerChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"Peer\"},{\"id\":666680316,\"predicate\":\"inputPeerChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-2094689180,\"predicate\":\"channel\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"left\",\"type\":\"flags.2?true\"},{\"name\":\"broadcast\",\"type\":\"flags.5?true\"},{\"name\":\"verified\",\"type\":\"flags.7?true\"},{\"name\":\"megagroup\",\"type\":\"flags.8?true\"},{\"name\":\"restricted\",\"type\":\"flags.9?true\"},{\"name\":\"signatures\",\"type\":\"flags.11?true\"},{\"name\":\"min\",\"type\":\"flags.12?true\"},{\"name\":\"scam\",\"type\":\"flags.19?true\"},{\"name\":\"has_link\",\"type\":\"flags.20?true\"},{\"name\":\"has_geo\",\"type\":\"flags.21?true\"},{\"name\":\"slowmode_enabled\",\"type\":\"flags.22?true\"},{\"name\":\"call_active\",\"type\":\"flags.23?true\"},{\"name\":\"call_not_empty\",\"type\":\"flags.24?true\"},{\"name\":\"fake\",\"type\":\"flags.25?true\"},{\"name\":\"gigagroup\",\"type\":\"flags.26?true\"},{\"name\":\"noforwards\",\"type\":\"flags.27?true\"},{\"name\":\"join_to_send\",\"type\":\"flags.28?true\"},{\"name\":\"join_request\",\"type\":\"flags.29?true\"},{\"name\":\"forum\",\"type\":\"flags.30?true\"},{\"name\":\"flags2\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"flags.13?long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"username\",\"type\":\"flags.6?string\"},{\"name\":\"photo\",\"type\":\"ChatPhoto\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"restriction_reason\",\"type\":\"flags.9?Vector<RestrictionReason>\"},{\"name\":\"admin_rights\",\"type\":\"flags.14?ChatAdminRights\"},{\"name\":\"banned_rights\",\"type\":\"flags.15?ChatBannedRights\"},{\"name\":\"default_banned_rights\",\"type\":\"flags.18?ChatBannedRights\"},{\"name\":\"participants_count\",\"type\":\"flags.17?int\"},{\"name\":\"usernames\",\"type\":\"flags2.0?Vector<Username>\"}],\"type\":\"Chat\"},{\"id\":399807445,\"predicate\":\"channelForbidden\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"broadcast\",\"type\":\"flags.5?true\"},{\"name\":\"megagroup\",\"type\":\"flags.8?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"until_date\",\"type\":\"flags.16?int\"}],\"type\":\"Chat\"},{\"id\":2131196633,\"predicate\":\"contacts.resolvedPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":-231385849,\"predicate\":\"channelFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_view_participants\",\"type\":\"flags.3?true\"},{\"name\":\"can_set_username\",\"type\":\"flags.6?true\"},{\"name\":\"can_set_stickers\",\"type\":\"flags.7?true\"},{\"name\":\"hidden_prehistory\",\"type\":\"flags.10?true\"},{\"name\":\"can_set_location\",\"type\":\"flags.16?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.19?true\"},{\"name\":\"can_view_stats\",\"type\":\"flags.20?true\"},{\"name\":\"blocked\",\"type\":\"flags.22?true\"},{\"name\":\"flags2\",\"type\":\"#\"},{\"name\":\"can_delete_channel\",\"type\":\"flags2.0?true\"},{\"name\":\"antispam\",\"type\":\"flags2.1?true\"},{\"name\":\"participants_hidden\",\"type\":\"flags2.2?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"participants_count\",\"type\":\"flags.0?int\"},{\"name\":\"admins_count\",\"type\":\"flags.1?int\"},{\"name\":\"kicked_count\",\"type\":\"flags.2?int\"},{\"name\":\"banned_count\",\"type\":\"flags.2?int\"},{\"name\":\"online_count\",\"type\":\"flags.13?int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"chat_photo\",\"type\":\"Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"exported_invite\",\"type\":\"flags.23?ExportedChatInvite\"},{\"name\":\"bot_info\",\"type\":\"Vector<BotInfo>\"},{\"name\":\"migrated_from_chat_id\",\"type\":\"flags.4?long\"},{\"name\":\"migrated_from_max_id\",\"type\":\"flags.4?int\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.5?int\"},{\"name\":\"stickerset\",\"type\":\"flags.8?StickerSet\"},{\"name\":\"available_min_id\",\"type\":\"flags.9?int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"linked_chat_id\",\"type\":\"flags.14?long\"},{\"name\":\"location\",\"type\":\"flags.15?ChannelLocation\"},{\"name\":\"slowmode_seconds\",\"type\":\"flags.17?int\"},{\"name\":\"slowmode_next_send_date\",\"type\":\"flags.18?int\"},{\"name\":\"stats_dc\",\"type\":\"flags.12?int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"call\",\"type\":\"flags.21?InputGroupCall\"},{\"name\":\"ttl_period\",\"type\":\"flags.24?int\"},{\"name\":\"pending_suggestions\",\"type\":\"flags.25?Vector<string>\"},{\"name\":\"groupcall_default_join_as\",\"type\":\"flags.26?Peer\"},{\"name\":\"theme_emoticon\",\"type\":\"flags.27?string\"},{\"name\":\"requests_pending\",\"type\":\"flags.28?int\"},{\"name\":\"recent_requesters\",\"type\":\"flags.28?Vector<long>\"},{\"name\":\"default_send_as\",\"type\":\"flags.29?Peer\"},{\"name\":\"available_reactions\",\"type\":\"flags.30?ChatReactions\"}],\"type\":\"ChatFull\"},{\"id\":182649427,\"predicate\":\"messageRange\",\"params\":[{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"MessageRange\"},{\"id\":-948520370,\"predicate\":\"messages.channelMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.2?int\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"topics\",\"type\":\"Vector<ForumTopic>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":-1781355374,\"predicate\":\"messageActionChannelCreate\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":277713951,\"predicate\":\"updateChannelTooLong\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"pts\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":1666927625,\"predicate\":\"updateChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":1656358105,\"predicate\":\"updateNewChannelMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1842450928,\"predicate\":\"updateReadChannelInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"still_unread_count\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1020437742,\"predicate\":\"updateDeleteChannelMessages\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-232346616,\"predicate\":\"updateChannelMessageViews\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"views\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1041346555,\"predicate\":\"updates.channelDifferenceEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":-1531132162,\"predicate\":\"updates.channelDifferenceTooLong\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"},{\"name\":\"dialog\",\"type\":\"Dialog\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":543450958,\"predicate\":\"updates.channelDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"},{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":-1798033689,\"predicate\":\"channelMessagesFilterEmpty\",\"params\":[],\"type\":\"ChannelMessagesFilter\"},{\"id\":-847783593,\"predicate\":\"channelMessagesFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_new_messages\",\"type\":\"flags.1?true\"},{\"name\":\"ranges\",\"type\":\"Vector<MessageRange>\"}],\"type\":\"ChannelMessagesFilter\"},{\"id\":-1072953408,\"predicate\":\"channelParticipant\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChannelParticipant\"},{\"id\":900251559,\"predicate\":\"channelParticipantSelf\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"via_request\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChannelParticipant\"},{\"id\":803602899,\"predicate\":\"channelParticipantCreator\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"flags.0?string\"}],\"type\":\"ChannelParticipant\"},{\"id\":-566281095,\"predicate\":\"channelParticipantsRecent\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1268741783,\"predicate\":\"channelParticipantsAdmins\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1548400251,\"predicate\":\"channelParticipantsKicked\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-1699676497,\"predicate\":\"channels.channelParticipants\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"Vector<ChannelParticipant>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.ChannelParticipants\"},{\"id\":-541588713,\"predicate\":\"channels.channelParticipant\",\"params\":[{\"name\":\"participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.ChannelParticipant\"},{\"id\":-462696732,\"predicate\":\"chatParticipantCreator\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"ChatParticipant\"},{\"id\":-1600962725,\"predicate\":\"chatParticipantAdmin\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChatParticipant\"},{\"id\":-674602590,\"predicate\":\"updateChatParticipantAdmin\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"is_admin\",\"type\":\"Bool\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-519864430,\"predicate\":\"messageActionChatMigrateTo\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-365344535,\"predicate\":\"messageActionChannelMigrateFrom\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":-1328445861,\"predicate\":\"channelParticipantsBots\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":2013922064,\"predicate\":\"help.termsOfService\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"popup\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"DataJSON\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"min_age_confirm\",\"type\":\"flags.1?int\"}],\"type\":\"help.TermsOfService\"},{\"id\":1753886890,\"predicate\":\"updateNewStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"messages.StickerSet\"}],\"type\":\"Update\"},{\"id\":196268545,\"predicate\":\"updateStickerSetsOrder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"},{\"name\":\"order\",\"type\":\"Vector<long>\"}],\"type\":\"Update\"},{\"id\":834816008,\"predicate\":\"updateStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"}],\"type\":\"Update\"},{\"id\":-402498398,\"predicate\":\"messages.savedGifsNotModified\",\"params\":[],\"type\":\"messages.SavedGifs\"},{\"id\":-2069878259,\"predicate\":\"messages.savedGifs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"gifs\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.SavedGifs\"},{\"id\":-1821035490,\"predicate\":\"updateSavedGifs\",\"params\":[],\"type\":\"Update\"},{\"id\":864077702,\"predicate\":\"inputBotInlineMessageMediaAuto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":1036876423,\"predicate\":\"inputBotInlineMessageText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.0?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-2000710887,\"predicate\":\"inputBotInlineResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"url\",\"type\":\"flags.3?string\"},{\"name\":\"thumb\",\"type\":\"flags.4?InputWebDocument\"},{\"name\":\"content\",\"type\":\"flags.5?InputWebDocument\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":1984755728,\"predicate\":\"botInlineMessageMediaAuto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1937807902,\"predicate\":\"botInlineMessageText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.0?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":295067450,\"predicate\":\"botInlineResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"url\",\"type\":\"flags.3?string\"},{\"name\":\"thumb\",\"type\":\"flags.4?WebDocument\"},{\"name\":\"content\",\"type\":\"flags.5?WebDocument\"},{\"name\":\"send_message\",\"type\":\"BotInlineMessage\"}],\"type\":\"BotInlineResult\"},{\"id\":-1803769784,\"predicate\":\"messages.botResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"gallery\",\"type\":\"flags.0?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"next_offset\",\"type\":\"flags.1?string\"},{\"name\":\"switch_pm\",\"type\":\"flags.2?InlineBotSwitchPM\"},{\"name\":\"results\",\"type\":\"Vector<BotInlineResult>\"},{\"name\":\"cache_time\",\"type\":\"int\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.BotResults\"},{\"id\":1232025500,\"predicate\":\"updateBotInlineQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"geo\",\"type\":\"flags.0?GeoPoint\"},{\"name\":\"peer_type\",\"type\":\"flags.1?InlineQueryPeerType\"},{\"name\":\"offset\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":317794823,\"predicate\":\"updateBotInlineSend\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"geo\",\"type\":\"flags.0?GeoPoint\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"msg_id\",\"type\":\"flags.1?InputBotInlineMessageID\"}],\"type\":\"Update\"},{\"id\":1358283666,\"predicate\":\"inputMessagesFilterVoice\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":928101534,\"predicate\":\"inputMessagesFilterMusic\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1107622874,\"predicate\":\"inputPrivacyKeyChatInvite\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1343122938,\"predicate\":\"privacyKeyChatInvite\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1571494644,\"predicate\":\"exportedMessageLink\",\"params\":[{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"html\",\"type\":\"string\"}],\"type\":\"ExportedMessageLink\"},{\"id\":1601666510,\"predicate\":\"messageFwdHeader\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"imported\",\"type\":\"flags.7?true\"},{\"name\":\"from_id\",\"type\":\"flags.0?Peer\"},{\"name\":\"from_name\",\"type\":\"flags.5?string\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"channel_post\",\"type\":\"flags.2?int\"},{\"name\":\"post_author\",\"type\":\"flags.3?string\"},{\"name\":\"saved_from_peer\",\"type\":\"flags.4?Peer\"},{\"name\":\"saved_from_msg_id\",\"type\":\"flags.4?int\"},{\"name\":\"psa_type\",\"type\":\"flags.6?string\"}],\"type\":\"MessageFwdHeader\"},{\"id\":457133559,\"predicate\":\"updateEditChannelMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1799538451,\"predicate\":\"messageActionPinMessage\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":1923290508,\"predicate\":\"auth.codeTypeSms\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":1948046307,\"predicate\":\"auth.codeTypeCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":577556219,\"predicate\":\"auth.codeTypeFlashCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":1035688326,\"predicate\":\"auth.sentCodeTypeApp\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1073693790,\"predicate\":\"auth.sentCodeTypeSms\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":1398007207,\"predicate\":\"auth.sentCodeTypeCall\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1425815847,\"predicate\":\"auth.sentCodeTypeFlashCall\",\"params\":[{\"name\":\"pattern\",\"type\":\"string\"}],\"type\":\"auth.SentCodeType\"},{\"id\":629866245,\"predicate\":\"keyboardButtonUrl\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":901503851,\"predicate\":\"keyboardButtonCallback\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requires_password\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"KeyboardButton\"},{\"id\":-1318425559,\"predicate\":\"keyboardButtonRequestPhone\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-59151553,\"predicate\":\"keyboardButtonRequestGeoLocation\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":90744648,\"predicate\":\"keyboardButtonSwitchInline\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"same_peer\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"query\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":1218642516,\"predicate\":\"replyInlineMarkup\",\"params\":[{\"name\":\"rows\",\"type\":\"Vector<KeyboardButtonRow>\"}],\"type\":\"ReplyMarkup\"},{\"id\":911761060,\"predicate\":\"messages.botCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"alert\",\"type\":\"flags.1?true\"},{\"name\":\"has_url\",\"type\":\"flags.3?true\"},{\"name\":\"native_ui\",\"type\":\"flags.4?true\"},{\"name\":\"message\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"cache_time\",\"type\":\"int\"}],\"type\":\"messages.BotCallbackAnswer\"},{\"id\":-1177566067,\"predicate\":\"updateBotCallbackQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"chat_instance\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"game_short_name\",\"type\":\"flags.1?string\"}],\"type\":\"Update\"},{\"id\":649453030,\"predicate\":\"messages.messageEditData\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"caption\",\"type\":\"flags.0?true\"}],\"type\":\"messages.MessageEditData\"},{\"id\":-469536605,\"predicate\":\"updateEditMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1768777083,\"predicate\":\"inputBotInlineMessageMediaGeo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":1098628881,\"predicate\":\"inputBotInlineMessageMediaVenue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-1494368259,\"predicate\":\"inputBotInlineMessageMediaContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":85477117,\"predicate\":\"botInlineMessageMediaGeo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1970903652,\"predicate\":\"botInlineMessageMediaVenue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":416402882,\"predicate\":\"botInlineMessageMediaContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1462213465,\"predicate\":\"inputBotInlineResultPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"InputPhoto\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":-459324,\"predicate\":\"inputBotInlineResultDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"document\",\"type\":\"InputDocument\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":400266251,\"predicate\":\"botInlineMediaResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?Photo\"},{\"name\":\"document\",\"type\":\"flags.1?Document\"},{\"name\":\"title\",\"type\":\"flags.2?string\"},{\"name\":\"description\",\"type\":\"flags.3?string\"},{\"name\":\"send_message\",\"type\":\"BotInlineMessage\"}],\"type\":\"BotInlineResult\"},{\"id\":-1995686519,\"predicate\":\"inputBotInlineMessageID\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputBotInlineMessageID\"},{\"id\":1763610706,\"predicate\":\"updateInlineBotCallbackQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"msg_id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"chat_instance\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"game_short_name\",\"type\":\"flags.1?string\"}],\"type\":\"Update\"},{\"id\":1008755359,\"predicate\":\"inlineBotSwitchPM\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"start_param\",\"type\":\"string\"}],\"type\":\"InlineBotSwitchPM\"},{\"id\":863093588,\"predicate\":\"messages.peerDialogs\",\"params\":[{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"state\",\"type\":\"updates.State\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":-305282981,\"predicate\":\"topPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"rating\",\"type\":\"double\"}],\"type\":\"TopPeer\"},{\"id\":-1419371685,\"predicate\":\"topPeerCategoryBotsPM\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":344356834,\"predicate\":\"topPeerCategoryBotsInline\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":104314861,\"predicate\":\"topPeerCategoryCorrespondents\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-1122524854,\"predicate\":\"topPeerCategoryGroups\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":371037736,\"predicate\":\"topPeerCategoryChannels\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-75283823,\"predicate\":\"topPeerCategoryPeers\",\"params\":[{\"name\":\"category\",\"type\":\"TopPeerCategory\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"peers\",\"type\":\"Vector<TopPeer>\"}],\"type\":\"TopPeerCategoryPeers\"},{\"id\":-567906571,\"predicate\":\"contacts.topPeersNotModified\",\"params\":[],\"type\":\"contacts.TopPeers\"},{\"id\":1891070632,\"predicate\":\"contacts.topPeers\",\"params\":[{\"name\":\"categories\",\"type\":\"Vector<TopPeerCategoryPeers>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.TopPeers\"},{\"id\":-595914432,\"predicate\":\"messageEntityMentionName\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"MessageEntity\"},{\"id\":546203849,\"predicate\":\"inputMessageEntityMentionName\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"MessageEntity\"},{\"id\":975236280,\"predicate\":\"inputMessagesFilterChatPhotos\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1218471511,\"predicate\":\"updateReadChannelOutbox\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":457829485,\"predicate\":\"updateDraftMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"draft\",\"type\":\"DraftMessage\"}],\"type\":\"Update\"},{\"id\":453805082,\"predicate\":\"draftMessageEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"date\",\"type\":\"flags.0?int\"}],\"type\":\"DraftMessage\"},{\"id\":-40996577,\"predicate\":\"draftMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"DraftMessage\"},{\"id\":-1615153660,\"predicate\":\"messageActionHistoryClear\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-958657434,\"predicate\":\"messages.featuredStickersNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":-1103615738,\"predicate\":\"messages.featuredStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"premium\",\"type\":\"flags.0?true\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"},{\"name\":\"unread\",\"type\":\"Vector<long>\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":1461528386,\"predicate\":\"updateReadFeaturedStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":186120336,\"predicate\":\"messages.recentStickersNotModified\",\"params\":[],\"type\":\"messages.RecentStickers\"},{\"id\":-1999405994,\"predicate\":\"messages.recentStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"},{\"name\":\"dates\",\"type\":\"Vector<int>\"}],\"type\":\"messages.RecentStickers\"},{\"id\":-1706939360,\"predicate\":\"updateRecentStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":1338747336,\"predicate\":\"messages.archivedStickers\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.ArchivedStickers\"},{\"id\":946083368,\"predicate\":\"messages.stickerSetInstallResultSuccess\",\"params\":[],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":904138920,\"predicate\":\"messages.stickerSetInstallResultArchive\",\"params\":[{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":1678812626,\"predicate\":\"stickerSetCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"cover\",\"type\":\"Document\"}],\"type\":\"StickerSetCovered\"},{\"id\":-1574314746,\"predicate\":\"updateConfig\",\"params\":[],\"type\":\"Update\"},{\"id\":861169551,\"predicate\":\"updatePtsChanged\",\"params\":[],\"type\":\"Update\"},{\"id\":-440664550,\"predicate\":\"inputMediaPhotoExternal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.1?true\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":-78455655,\"predicate\":\"inputMediaDocumentExternal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"spoiler\",\"type\":\"flags.1?true\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":872932635,\"predicate\":\"stickerSetMultiCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"covers\",\"type\":\"Vector<Document>\"}],\"type\":\"StickerSetCovered\"},{\"id\":-1361650766,\"predicate\":\"maskCoords\",\"params\":[{\"name\":\"n\",\"type\":\"int\"},{\"name\":\"x\",\"type\":\"double\"},{\"name\":\"y\",\"type\":\"double\"},{\"name\":\"zoom\",\"type\":\"double\"}],\"type\":\"MaskCoords\"},{\"id\":-1744710921,\"predicate\":\"documentAttributeHasStickers\",\"params\":[],\"type\":\"DocumentAttribute\"},{\"id\":1251549527,\"predicate\":\"inputStickeredMediaPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"InputStickeredMedia\"},{\"id\":70813275,\"predicate\":\"inputStickeredMediaDocument\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"}],\"type\":\"InputStickeredMedia\"},{\"id\":-1107729093,\"predicate\":\"game\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"document\",\"type\":\"flags.0?Document\"}],\"type\":\"Game\"},{\"id\":1336154098,\"predicate\":\"inputBotInlineResultGame\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":1262639204,\"predicate\":\"inputBotInlineMessageGame\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":-38694904,\"predicate\":\"messageMediaGame\",\"params\":[{\"name\":\"game\",\"type\":\"Game\"}],\"type\":\"MessageMedia\"},{\"id\":-750828557,\"predicate\":\"inputMediaGame\",\"params\":[{\"name\":\"id\",\"type\":\"InputGame\"}],\"type\":\"InputMedia\"},{\"id\":53231223,\"predicate\":\"inputGameID\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputGame\"},{\"id\":-1020139510,\"predicate\":\"inputGameShortName\",\"params\":[{\"name\":\"bot_id\",\"type\":\"InputUser\"},{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"InputGame\"},{\"id\":1358175439,\"predicate\":\"keyboardButtonGame\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-1834538890,\"predicate\":\"messageActionGameScore\",\"params\":[{\"name\":\"game_id\",\"type\":\"long\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":1940093419,\"predicate\":\"highScore\",\"params\":[{\"name\":\"pos\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"HighScore\"},{\"id\":-1707344487,\"predicate\":\"messages.highScores\",\"params\":[{\"name\":\"scores\",\"type\":\"Vector<HighScore>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.HighScores\"},{\"id\":1258196845,\"predicate\":\"updates.differenceTooLong\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":791390623,\"predicate\":\"updateChannelWebPage\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"webpage\",\"type\":\"WebPage\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1663561404,\"predicate\":\"messages.chatsSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"}],\"type\":\"messages.Chats\"},{\"id\":-599948721,\"predicate\":\"textEmpty\",\"params\":[],\"type\":\"RichText\"},{\"id\":1950782688,\"predicate\":\"textPlain\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":1730456516,\"predicate\":\"textBold\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-653089380,\"predicate\":\"textItalic\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-1054465340,\"predicate\":\"textUnderline\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-1678197867,\"predicate\":\"textStrike\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":1816074681,\"predicate\":\"textFixed\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":1009288385,\"predicate\":\"textUrl\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"}],\"type\":\"RichText\"},{\"id\":-564523562,\"predicate\":\"textEmail\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":2120376535,\"predicate\":\"textConcat\",\"params\":[{\"name\":\"texts\",\"type\":\"Vector<RichText>\"}],\"type\":\"RichText\"},{\"id\":324435594,\"predicate\":\"pageBlockUnsupported\",\"params\":[],\"type\":\"PageBlock\"},{\"id\":1890305021,\"predicate\":\"pageBlockTitle\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1879401953,\"predicate\":\"pageBlockSubtitle\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1162877472,\"predicate\":\"pageBlockAuthorDate\",\"params\":[{\"name\":\"author\",\"type\":\"RichText\"},{\"name\":\"published_date\",\"type\":\"int\"}],\"type\":\"PageBlock\"},{\"id\":-1076861716,\"predicate\":\"pageBlockHeader\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-248793375,\"predicate\":\"pageBlockSubheader\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":1182402406,\"predicate\":\"pageBlockParagraph\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1066346178,\"predicate\":\"pageBlockPreformatted\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"language\",\"type\":\"string\"}],\"type\":\"PageBlock\"},{\"id\":1216809369,\"predicate\":\"pageBlockFooter\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-618614392,\"predicate\":\"pageBlockDivider\",\"params\":[],\"type\":\"PageBlock\"},{\"id\":-837994576,\"predicate\":\"pageBlockAnchor\",\"params\":[{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"PageBlock\"},{\"id\":-454524911,\"predicate\":\"pageBlockList\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageListItem>\"}],\"type\":\"PageBlock\"},{\"id\":641563686,\"predicate\":\"pageBlockBlockquote\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"caption\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":1329878739,\"predicate\":\"pageBlockPullquote\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"caption\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":391759200,\"predicate\":\"pageBlockPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"},{\"name\":\"url\",\"type\":\"flags.0?string\"},{\"name\":\"webpage_id\",\"type\":\"flags.0?long\"}],\"type\":\"PageBlock\"},{\"id\":2089805750,\"predicate\":\"pageBlockVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"autoplay\",\"type\":\"flags.0?true\"},{\"name\":\"loop\",\"type\":\"flags.1?true\"},{\"name\":\"video_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":972174080,\"predicate\":\"pageBlockCover\",\"params\":[{\"name\":\"cover\",\"type\":\"PageBlock\"}],\"type\":\"PageBlock\"},{\"id\":-1468953147,\"predicate\":\"pageBlockEmbed\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"full_width\",\"type\":\"flags.0?true\"},{\"name\":\"allow_scrolling\",\"type\":\"flags.3?true\"},{\"name\":\"url\",\"type\":\"flags.1?string\"},{\"name\":\"html\",\"type\":\"flags.2?string\"},{\"name\":\"poster_photo_id\",\"type\":\"flags.4?long\"},{\"name\":\"w\",\"type\":\"flags.5?int\"},{\"name\":\"h\",\"type\":\"flags.5?int\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":-229005301,\"predicate\":\"pageBlockEmbedPost\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"},{\"name\":\"author_photo_id\",\"type\":\"long\"},{\"name\":\"author\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":1705048653,\"predicate\":\"pageBlockCollage\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":52401552,\"predicate\":\"pageBlockSlideshow\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":1930545681,\"predicate\":\"webPageNotModified\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"cached_page_views\",\"type\":\"flags.0?int\"}],\"type\":\"WebPage\"},{\"id\":-88417185,\"predicate\":\"inputPrivacyKeyPhoneCall\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1030105979,\"predicate\":\"privacyKeyPhoneCall\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-580219064,\"predicate\":\"sendMessageGamePlayAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":-2048646399,\"predicate\":\"phoneCallDiscardReasonMissed\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":-527056480,\"predicate\":\"phoneCallDiscardReasonDisconnect\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":1471006352,\"predicate\":\"phoneCallDiscardReasonHangup\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":-84416311,\"predicate\":\"phoneCallDiscardReasonBusy\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":1852826908,\"predicate\":\"updateDialogPinned\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"peer\",\"type\":\"DialogPeer\"}],\"type\":\"Update\"},{\"id\":-99664734,\"predicate\":\"updatePinnedDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"order\",\"type\":\"flags.0?Vector<DialogPeer>\"}],\"type\":\"Update\"},{\"id\":2104790276,\"predicate\":\"dataJSON\",\"params\":[{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"DataJSON\"},{\"id\":-2095595325,\"predicate\":\"updateBotWebhookJSON\",\"params\":[{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"Update\"},{\"id\":-1684914010,\"predicate\":\"updateBotWebhookJSONQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"DataJSON\"},{\"name\":\"timeout\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-886477832,\"predicate\":\"labeledPrice\",\"params\":[{\"name\":\"label\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"LabeledPrice\"},{\"id\":1048946971,\"predicate\":\"invoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"test\",\"type\":\"flags.0?true\"},{\"name\":\"name_requested\",\"type\":\"flags.1?true\"},{\"name\":\"phone_requested\",\"type\":\"flags.2?true\"},{\"name\":\"email_requested\",\"type\":\"flags.3?true\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.4?true\"},{\"name\":\"flexible\",\"type\":\"flags.5?true\"},{\"name\":\"phone_to_provider\",\"type\":\"flags.6?true\"},{\"name\":\"email_to_provider\",\"type\":\"flags.7?true\"},{\"name\":\"recurring\",\"type\":\"flags.9?true\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"prices\",\"type\":\"Vector<LabeledPrice>\"},{\"name\":\"max_tip_amount\",\"type\":\"flags.8?long\"},{\"name\":\"suggested_tip_amounts\",\"type\":\"flags.8?Vector<long>\"},{\"name\":\"recurring_terms_url\",\"type\":\"flags.9?string\"}],\"type\":\"Invoice\"},{\"id\":-1900697899,\"predicate\":\"inputMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?InputWebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"provider_data\",\"type\":\"DataJSON\"},{\"name\":\"start_param\",\"type\":\"flags.1?string\"},{\"name\":\"extended_media\",\"type\":\"flags.2?InputMedia\"}],\"type\":\"InputMedia\"},{\"id\":-368917890,\"predicate\":\"paymentCharge\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"provider_charge_id\",\"type\":\"string\"}],\"type\":\"PaymentCharge\"},{\"id\":-1892568281,\"predicate\":\"messageActionPaymentSentMe\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"recurring_init\",\"type\":\"flags.2?true\"},{\"name\":\"recurring_used\",\"type\":\"flags.3?true\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"charge\",\"type\":\"PaymentCharge\"}],\"type\":\"MessageAction\"},{\"id\":-156940077,\"predicate\":\"messageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.1?true\"},{\"name\":\"test\",\"type\":\"flags.3?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?WebDocument\"},{\"name\":\"receipt_msg_id\",\"type\":\"flags.2?int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"start_param\",\"type\":\"string\"},{\"name\":\"extended_media\",\"type\":\"flags.4?MessageExtendedMedia\"}],\"type\":\"MessageMedia\"},{\"id\":512535275,\"predicate\":\"postAddress\",\"params\":[{\"name\":\"street_line1\",\"type\":\"string\"},{\"name\":\"street_line2\",\"type\":\"string\"},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"state\",\"type\":\"string\"},{\"name\":\"country_iso2\",\"type\":\"string\"},{\"name\":\"post_code\",\"type\":\"string\"}],\"type\":\"PostAddress\"},{\"id\":-1868808300,\"predicate\":\"paymentRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"name\",\"type\":\"flags.0?string\"},{\"name\":\"phone\",\"type\":\"flags.1?string\"},{\"name\":\"email\",\"type\":\"flags.2?string\"},{\"name\":\"shipping_address\",\"type\":\"flags.3?PostAddress\"}],\"type\":\"PaymentRequestedInfo\"},{\"id\":-1344716869,\"predicate\":\"keyboardButtonBuy\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-1776926890,\"predicate\":\"messageActionPaymentSent\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"recurring_init\",\"type\":\"flags.2?true\"},{\"name\":\"recurring_used\",\"type\":\"flags.3?true\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"invoice_slug\",\"type\":\"flags.0?string\"}],\"type\":\"MessageAction\"},{\"id\":-842892769,\"predicate\":\"paymentSavedCredentialsCard\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"PaymentSavedCredentials\"},{\"id\":475467473,\"predicate\":\"webDocument\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"WebDocument\"},{\"id\":-1678949555,\"predicate\":\"inputWebDocument\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"InputWebDocument\"},{\"id\":-1036396922,\"predicate\":\"inputWebFileLocation\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputWebFileLocation\"},{\"id\":568808380,\"predicate\":\"upload.webFile\",\"params\":[{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"file_type\",\"type\":\"storage.FileType\"},{\"name\":\"mtime\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.WebFile\"},{\"id\":-1610250415,\"predicate\":\"payments.paymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_save_credentials\",\"type\":\"flags.2?true\"},{\"name\":\"password_missing\",\"type\":\"flags.3?true\"},{\"name\":\"form_id\",\"type\":\"long\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.5?WebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"provider_id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"native_provider\",\"type\":\"flags.4?string\"},{\"name\":\"native_params\",\"type\":\"flags.4?DataJSON\"},{\"name\":\"additional_methods\",\"type\":\"flags.6?Vector<PaymentFormMethod>\"},{\"name\":\"saved_info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"saved_credentials\",\"type\":\"flags.1?Vector<PaymentSavedCredentials>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.PaymentForm\"},{\"id\":-784000893,\"predicate\":\"payments.validatedRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_options\",\"type\":\"flags.1?Vector<ShippingOption>\"}],\"type\":\"payments.ValidatedRequestedInfo\"},{\"id\":1314881805,\"predicate\":\"payments.paymentResult\",\"params\":[{\"name\":\"updates\",\"type\":\"Updates\"}],\"type\":\"payments.PaymentResult\"},{\"id\":1891958275,\"predicate\":\"payments.paymentReceipt\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"provider_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.2?WebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping\",\"type\":\"flags.1?ShippingOption\"},{\"name\":\"tip_amount\",\"type\":\"flags.3?long\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"credentials_title\",\"type\":\"string\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.PaymentReceipt\"},{\"id\":-74456004,\"predicate\":\"payments.savedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_saved_credentials\",\"type\":\"flags.1?true\"},{\"name\":\"saved_info\",\"type\":\"flags.0?PaymentRequestedInfo\"}],\"type\":\"payments.SavedInfo\"},{\"id\":-1056001329,\"predicate\":\"inputPaymentCredentialsSaved\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"tmp_password\",\"type\":\"bytes\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":873977640,\"predicate\":\"inputPaymentCredentials\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"save\",\"type\":\"flags.0?true\"},{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":-614138572,\"predicate\":\"account.tmpPassword\",\"params\":[{\"name\":\"tmp_password\",\"type\":\"bytes\"},{\"name\":\"valid_until\",\"type\":\"int\"}],\"type\":\"account.TmpPassword\"},{\"id\":-1239335713,\"predicate\":\"shippingOption\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"prices\",\"type\":\"Vector<LabeledPrice>\"}],\"type\":\"ShippingOption\"},{\"id\":-1246823043,\"predicate\":\"updateBotShippingQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"shipping_address\",\"type\":\"PostAddress\"}],\"type\":\"Update\"},{\"id\":-1934976362,\"predicate\":\"updateBotPrecheckoutQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-6249322,\"predicate\":\"inputStickerSetItem\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"document\",\"type\":\"InputDocument\"},{\"name\":\"emoji\",\"type\":\"string\"},{\"name\":\"mask_coords\",\"type\":\"flags.0?MaskCoords\"}],\"type\":\"InputStickerSetItem\"},{\"id\":-1425052898,\"predicate\":\"updatePhoneCall\",\"params\":[{\"name\":\"phone_call\",\"type\":\"PhoneCall\"}],\"type\":\"Update\"},{\"id\":506920429,\"predicate\":\"inputPhoneCall\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPhoneCall\"},{\"id\":1399245077,\"predicate\":\"phoneCallEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"PhoneCall\"},{\"id\":-987599081,\"predicate\":\"phoneCallWaiting\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"},{\"name\":\"receive_date\",\"type\":\"flags.0?int\"}],\"type\":\"PhoneCall\"},{\"id\":347139340,\"predicate\":\"phoneCallRequested\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_hash\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"PhoneCall\"},{\"id\":912311057,\"predicate\":\"phoneCallAccepted\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"PhoneCall\"},{\"id\":-1770029977,\"predicate\":\"phoneCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"p2p_allowed\",\"type\":\"flags.5?true\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"participant_id\",\"type\":\"long\"},{\"name\":\"g_a_or_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"},{\"name\":\"connections\",\"type\":\"Vector<PhoneConnection>\"},{\"name\":\"start_date\",\"type\":\"int\"}],\"type\":\"PhoneCall\"},{\"id\":1355435489,\"predicate\":\"phoneCallDiscarded\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"need_rating\",\"type\":\"flags.2?true\"},{\"name\":\"need_debug\",\"type\":\"flags.3?true\"},{\"name\":\"video\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"reason\",\"type\":\"flags.0?PhoneCallDiscardReason\"},{\"name\":\"duration\",\"type\":\"flags.1?int\"}],\"type\":\"PhoneCall\"},{\"id\":-1665063993,\"predicate\":\"phoneConnection\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"tcp\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"ipv6\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"peer_tag\",\"type\":\"bytes\"}],\"type\":\"PhoneConnection\"},{\"id\":-58224696,\"predicate\":\"phoneCallProtocol\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"udp_p2p\",\"type\":\"flags.0?true\"},{\"name\":\"udp_reflector\",\"type\":\"flags.1?true\"},{\"name\":\"min_layer\",\"type\":\"int\"},{\"name\":\"max_layer\",\"type\":\"int\"},{\"name\":\"library_versions\",\"type\":\"Vector<string>\"}],\"type\":\"PhoneCallProtocol\"},{\"id\":-326966976,\"predicate\":\"phone.phoneCall\",\"params\":[{\"name\":\"phone_call\",\"type\":\"PhoneCall\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.PhoneCall\"},{\"id\":-2134272152,\"predicate\":\"inputMessagesFilterPhoneCalls\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"missed\",\"type\":\"flags.0?true\"}],\"type\":\"MessagesFilter\"},{\"id\":-2132731265,\"predicate\":\"messageActionPhoneCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.2?true\"},{\"name\":\"call_id\",\"type\":\"long\"},{\"name\":\"reason\",\"type\":\"flags.0?PhoneCallDiscardReason\"},{\"name\":\"duration\",\"type\":\"flags.1?int\"}],\"type\":\"MessageAction\"},{\"id\":2054952868,\"predicate\":\"inputMessagesFilterRoundVoice\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1253451181,\"predicate\":\"inputMessagesFilterRoundVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1997373508,\"predicate\":\"sendMessageRecordRoundAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":608050278,\"predicate\":\"sendMessageUploadRoundAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":-242427324,\"predicate\":\"upload.fileCdnRedirect\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"encryption_key\",\"type\":\"bytes\"},{\"name\":\"encryption_iv\",\"type\":\"bytes\"},{\"name\":\"file_hashes\",\"type\":\"Vector<FileHash>\"}],\"type\":\"upload.File\"},{\"id\":-290921362,\"predicate\":\"upload.cdnFileReuploadNeeded\",\"params\":[{\"name\":\"request_token\",\"type\":\"bytes\"}],\"type\":\"upload.CdnFile\"},{\"id\":-1449145777,\"predicate\":\"upload.cdnFile\",\"params\":[{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.CdnFile\"},{\"id\":-914167110,\"predicate\":\"cdnPublicKey\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"public_key\",\"type\":\"string\"}],\"type\":\"CdnPublicKey\"},{\"id\":1462101002,\"predicate\":\"cdnConfig\",\"params\":[{\"name\":\"public_keys\",\"type\":\"Vector<CdnPublicKey>\"}],\"type\":\"CdnConfig\"},{\"id\":-283684427,\"predicate\":\"pageBlockChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"Chat\"}],\"type\":\"PageBlock\"},{\"id\":-892239370,\"predicate\":\"langPackString\",\"params\":[{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":1816636575,\"predicate\":\"langPackStringPluralized\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"zero_value\",\"type\":\"flags.0?string\"},{\"name\":\"one_value\",\"type\":\"flags.1?string\"},{\"name\":\"two_value\",\"type\":\"flags.2?string\"},{\"name\":\"few_value\",\"type\":\"flags.3?string\"},{\"name\":\"many_value\",\"type\":\"flags.4?string\"},{\"name\":\"other_value\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":695856818,\"predicate\":\"langPackStringDeleted\",\"params\":[{\"name\":\"key\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":-209337866,\"predicate\":\"langPackDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"strings\",\"type\":\"Vector<LangPackString>\"}],\"type\":\"LangPackDifference\"},{\"id\":-288727837,\"predicate\":\"langPackLanguage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"official\",\"type\":\"flags.0?true\"},{\"name\":\"rtl\",\"type\":\"flags.2?true\"},{\"name\":\"beta\",\"type\":\"flags.3?true\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"native_name\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"base_lang_code\",\"type\":\"flags.1?string\"},{\"name\":\"plural_code\",\"type\":\"string\"},{\"name\":\"strings_count\",\"type\":\"int\"},{\"name\":\"translated_count\",\"type\":\"int\"},{\"name\":\"translations_url\",\"type\":\"string\"}],\"type\":\"LangPackLanguage\"},{\"id\":1180041828,\"predicate\":\"updateLangPackTooLong\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":1442983757,\"predicate\":\"updateLangPack\",\"params\":[{\"name\":\"difference\",\"type\":\"LangPackDifference\"}],\"type\":\"Update\"},{\"id\":885242707,\"predicate\":\"channelParticipantAdmin\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_edit\",\"type\":\"flags.0?true\"},{\"name\":\"self\",\"type\":\"flags.1?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"inviter_id\",\"type\":\"flags.1?long\"},{\"name\":\"promoted_by\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"flags.2?string\"}],\"type\":\"ChannelParticipant\"},{\"id\":1844969806,\"predicate\":\"channelParticipantBanned\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"left\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"kicked_by\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"ChannelParticipant\"},{\"id\":338142689,\"predicate\":\"channelParticipantsBanned\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":106343499,\"predicate\":\"channelParticipantsSearch\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-421545947,\"predicate\":\"channelAdminLogEventActionChangeTitle\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1427671598,\"predicate\":\"channelAdminLogEventActionChangeAbout\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1783299128,\"predicate\":\"channelAdminLogEventActionChangeUsername\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1129042607,\"predicate\":\"channelAdminLogEventActionChangePhoto\",\"params\":[{\"name\":\"prev_photo\",\"type\":\"Photo\"},{\"name\":\"new_photo\",\"type\":\"Photo\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":460916654,\"predicate\":\"channelAdminLogEventActionToggleInvites\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":648939889,\"predicate\":\"channelAdminLogEventActionToggleSignatures\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-370660328,\"predicate\":\"channelAdminLogEventActionUpdatePinned\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1889215493,\"predicate\":\"channelAdminLogEventActionEditMessage\",\"params\":[{\"name\":\"prev_message\",\"type\":\"Message\"},{\"name\":\"new_message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1121994683,\"predicate\":\"channelAdminLogEventActionDeleteMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":405815507,\"predicate\":\"channelAdminLogEventActionParticipantJoin\",\"params\":[],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-124291086,\"predicate\":\"channelAdminLogEventActionParticipantLeave\",\"params\":[],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-484690728,\"predicate\":\"channelAdminLogEventActionParticipantInvite\",\"params\":[{\"name\":\"participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-422036098,\"predicate\":\"channelAdminLogEventActionParticipantToggleBan\",\"params\":[{\"name\":\"prev_participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-714643696,\"predicate\":\"channelAdminLogEventActionParticipantToggleAdmin\",\"params\":[{\"name\":\"prev_participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":531458253,\"predicate\":\"channelAdminLogEvent\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"action\",\"type\":\"ChannelAdminLogEventAction\"}],\"type\":\"ChannelAdminLogEvent\"},{\"id\":-309659827,\"predicate\":\"channels.adminLogResults\",\"params\":[{\"name\":\"events\",\"type\":\"Vector<ChannelAdminLogEvent>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.AdminLogResults\"},{\"id\":-368018716,\"predicate\":\"channelAdminLogEventsFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"join\",\"type\":\"flags.0?true\"},{\"name\":\"leave\",\"type\":\"flags.1?true\"},{\"name\":\"invite\",\"type\":\"flags.2?true\"},{\"name\":\"ban\",\"type\":\"flags.3?true\"},{\"name\":\"unban\",\"type\":\"flags.4?true\"},{\"name\":\"kick\",\"type\":\"flags.5?true\"},{\"name\":\"unkick\",\"type\":\"flags.6?true\"},{\"name\":\"promote\",\"type\":\"flags.7?true\"},{\"name\":\"demote\",\"type\":\"flags.8?true\"},{\"name\":\"info\",\"type\":\"flags.9?true\"},{\"name\":\"settings\",\"type\":\"flags.10?true\"},{\"name\":\"pinned\",\"type\":\"flags.11?true\"},{\"name\":\"edit\",\"type\":\"flags.12?true\"},{\"name\":\"delete\",\"type\":\"flags.13?true\"},{\"name\":\"group_call\",\"type\":\"flags.14?true\"},{\"name\":\"invites\",\"type\":\"flags.15?true\"},{\"name\":\"send\",\"type\":\"flags.16?true\"},{\"name\":\"forums\",\"type\":\"flags.17?true\"}],\"type\":\"ChannelAdminLogEventsFilter\"},{\"id\":511092620,\"predicate\":\"topPeerCategoryPhoneCalls\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-2143067670,\"predicate\":\"pageBlockAudio\",\"params\":[{\"name\":\"audio_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":1558266229,\"predicate\":\"popularContact\",\"params\":[{\"name\":\"client_id\",\"type\":\"long\"},{\"name\":\"importers\",\"type\":\"int\"}],\"type\":\"PopularContact\"},{\"id\":1200788123,\"predicate\":\"messageActionScreenshotTaken\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1634752813,\"predicate\":\"messages.favedStickersNotModified\",\"params\":[],\"type\":\"messages.FavedStickers\"},{\"id\":750063767,\"predicate\":\"messages.favedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.FavedStickers\"},{\"id\":-451831443,\"predicate\":\"updateFavedStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":-366410403,\"predicate\":\"updateChannelReadMessagesContents\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":-1040652646,\"predicate\":\"inputMessagesFilterMyMentions\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":1887741886,\"predicate\":\"updateContactsReset\",\"params\":[],\"type\":\"Update\"},{\"id\":-1312568665,\"predicate\":\"channelAdminLogEventActionChangeStickerSet\",\"params\":[{\"name\":\"prev_stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"new_stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-85549226,\"predicate\":\"messageActionCustomAction\",\"params\":[{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":178373535,\"predicate\":\"inputPaymentCredentialsApplePay\",\"params\":[{\"name\":\"payment_data\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":-419271411,\"predicate\":\"inputMessagesFilterGeo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-530392189,\"predicate\":\"inputMessagesFilterContacts\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1304443240,\"predicate\":\"updateChannelAvailableMessages\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"available_min_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1599903217,\"predicate\":\"channelAdminLogEventActionTogglePreHistoryHidden\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1759532989,\"predicate\":\"inputMediaGeoLive\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"stopped\",\"type\":\"flags.0?true\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.2?int\"},{\"name\":\"period\",\"type\":\"flags.1?int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.3?int\"}],\"type\":\"InputMedia\"},{\"id\":-1186937242,\"predicate\":\"messageMediaGeoLive\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"heading\",\"type\":\"flags.0?int\"},{\"name\":\"period\",\"type\":\"int\"},{\"name\":\"proximity_notification_radius\",\"type\":\"flags.1?int\"}],\"type\":\"MessageMedia\"},{\"id\":1189204285,\"predicate\":\"recentMeUrlUnknown\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1188296222,\"predicate\":\"recentMeUrlUser\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1294306862,\"predicate\":\"recentMeUrlChat\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"RecentMeUrl\"},{\"id\":-347535331,\"predicate\":\"recentMeUrlChatInvite\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"chat_invite\",\"type\":\"ChatInvite\"}],\"type\":\"RecentMeUrl\"},{\"id\":-1140172836,\"predicate\":\"recentMeUrlStickerSet\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"set\",\"type\":\"StickerSetCovered\"}],\"type\":\"RecentMeUrl\"},{\"id\":235081943,\"predicate\":\"help.recentMeUrls\",\"params\":[{\"name\":\"urls\",\"type\":\"Vector<RecentMeUrl>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"help.RecentMeUrls\"},{\"id\":-266911767,\"predicate\":\"channels.channelParticipantsNotModified\",\"params\":[],\"type\":\"channels.ChannelParticipants\"},{\"id\":1951620897,\"predicate\":\"messages.messagesNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":482797855,\"predicate\":\"inputSingleMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"media\",\"type\":\"InputMedia\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.0?Vector<MessageEntity>\"}],\"type\":\"InputSingleMedia\"},{\"id\":-1493633966,\"predicate\":\"webAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"domain\",\"type\":\"string\"},{\"name\":\"browser\",\"type\":\"string\"},{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"date_created\",\"type\":\"int\"},{\"name\":\"date_active\",\"type\":\"int\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"region\",\"type\":\"string\"}],\"type\":\"WebAuthorization\"},{\"id\":-313079300,\"predicate\":\"account.webAuthorizations\",\"params\":[{\"name\":\"authorizations\",\"type\":\"Vector<WebAuthorization>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"account.WebAuthorizations\"},{\"id\":-1502174430,\"predicate\":\"inputMessageID\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"InputMessage\"},{\"id\":-1160215659,\"predicate\":\"inputMessageReplyTo\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"InputMessage\"},{\"id\":-2037963464,\"predicate\":\"inputMessagePinned\",\"params\":[],\"type\":\"InputMessage\"},{\"id\":-1687559349,\"predicate\":\"messageEntityPhone\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1280209983,\"predicate\":\"messageEntityCashtag\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1410748418,\"predicate\":\"messageActionBotAllowed\",\"params\":[{\"name\":\"domain\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":-55902537,\"predicate\":\"inputDialogPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"InputDialogPeer\"},{\"id\":-445792507,\"predicate\":\"dialogPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"DialogPeer\"},{\"id\":223655517,\"predicate\":\"messages.foundStickerSetsNotModified\",\"params\":[],\"type\":\"messages.FoundStickerSets\"},{\"id\":-1963942446,\"predicate\":\"messages.foundStickerSets\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.FoundStickerSets\"},{\"id\":-207944868,\"predicate\":\"fileHash\",\"params\":[{\"name\":\"offset\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"FileHash\"},{\"id\":-104284986,\"predicate\":\"webDocumentNoProxy\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"WebDocument\"},{\"id\":1968737087,\"predicate\":\"inputClientProxy\",\"params\":[{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"}],\"type\":\"InputClientProxy\"},{\"id\":-483352705,\"predicate\":\"help.termsOfServiceUpdateEmpty\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":686618977,\"predicate\":\"help.termsOfServiceUpdate\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"terms_of_service\",\"type\":\"help.TermsOfService\"}],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":859091184,\"predicate\":\"inputSecureFileUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"md5_checksum\",\"type\":\"string\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"InputSecureFile\"},{\"id\":1399317950,\"predicate\":\"inputSecureFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputSecureFile\"},{\"id\":-876089816,\"predicate\":\"inputSecureFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":1679398724,\"predicate\":\"secureFileEmpty\",\"params\":[],\"type\":\"SecureFile\"},{\"id\":2097791614,\"predicate\":\"secureFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"long\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureFile\"},{\"id\":-1964327229,\"predicate\":\"secureData\",\"params\":[{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"data_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureData\"},{\"id\":2103482845,\"predicate\":\"securePlainPhone\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"SecurePlainData\"},{\"id\":569137759,\"predicate\":\"securePlainEmail\",\"params\":[{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"SecurePlainData\"},{\"id\":-1658158621,\"predicate\":\"secureValueTypePersonalDetails\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":1034709504,\"predicate\":\"secureValueTypePassport\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":115615172,\"predicate\":\"secureValueTypeDriverLicense\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1596951477,\"predicate\":\"secureValueTypeIdentityCard\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1717268701,\"predicate\":\"secureValueTypeInternalPassport\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-874308058,\"predicate\":\"secureValueTypeAddress\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-63531698,\"predicate\":\"secureValueTypeUtilityBill\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1995211763,\"predicate\":\"secureValueTypeBankStatement\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1954007928,\"predicate\":\"secureValueTypeRentalAgreement\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1713143702,\"predicate\":\"secureValueTypePassportRegistration\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-368907213,\"predicate\":\"secureValueTypeTemporaryRegistration\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1289704741,\"predicate\":\"secureValueTypePhone\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":-1908627474,\"predicate\":\"secureValueTypeEmail\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":411017418,\"predicate\":\"secureValue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data\",\"type\":\"flags.0?SecureData\"},{\"name\":\"front_side\",\"type\":\"flags.1?SecureFile\"},{\"name\":\"reverse_side\",\"type\":\"flags.2?SecureFile\"},{\"name\":\"selfie\",\"type\":\"flags.3?SecureFile\"},{\"name\":\"translation\",\"type\":\"flags.6?Vector<SecureFile>\"},{\"name\":\"files\",\"type\":\"flags.4?Vector<SecureFile>\"},{\"name\":\"plain_data\",\"type\":\"flags.5?SecurePlainData\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"SecureValue\"},{\"id\":-618540889,\"predicate\":\"inputSecureValue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data\",\"type\":\"flags.0?SecureData\"},{\"name\":\"front_side\",\"type\":\"flags.1?InputSecureFile\"},{\"name\":\"reverse_side\",\"type\":\"flags.2?InputSecureFile\"},{\"name\":\"selfie\",\"type\":\"flags.3?InputSecureFile\"},{\"name\":\"translation\",\"type\":\"flags.6?Vector<InputSecureFile>\"},{\"name\":\"files\",\"type\":\"flags.4?Vector<InputSecureFile>\"},{\"name\":\"plain_data\",\"type\":\"flags.5?SecurePlainData\"}],\"type\":\"InputSecureValue\"},{\"id\":-316748368,\"predicate\":\"secureValueHash\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"SecureValueHash\"},{\"id\":-391902247,\"predicate\":\"secureValueErrorData\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data_hash\",\"type\":\"bytes\"},{\"name\":\"field\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":12467706,\"predicate\":\"secureValueErrorFrontSide\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-2037765467,\"predicate\":\"secureValueErrorReverseSide\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-449327402,\"predicate\":\"secureValueErrorSelfie\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":2054162547,\"predicate\":\"secureValueErrorFile\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":1717706985,\"predicate\":\"secureValueErrorFiles\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"Vector<bytes>\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":871426631,\"predicate\":\"secureCredentialsEncrypted\",\"params\":[{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureCredentialsEncrypted\"},{\"id\":-1389486888,\"predicate\":\"account.authorizationForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"required_types\",\"type\":\"Vector<SecureRequiredType>\"},{\"name\":\"values\",\"type\":\"Vector<SecureValue>\"},{\"name\":\"errors\",\"type\":\"Vector<SecureValueError>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"privacy_policy_url\",\"type\":\"flags.0?string\"}],\"type\":\"account.AuthorizationForm\"},{\"id\":-2128640689,\"predicate\":\"account.sentEmailCode\",\"params\":[{\"name\":\"email_pattern\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"account.SentEmailCode\"},{\"id\":455635795,\"predicate\":\"messageActionSecureValuesSentMe\",\"params\":[{\"name\":\"values\",\"type\":\"Vector<SecureValue>\"},{\"name\":\"credentials\",\"type\":\"SecureCredentialsEncrypted\"}],\"type\":\"MessageAction\"},{\"id\":-648257196,\"predicate\":\"messageActionSecureValuesSent\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"MessageAction\"},{\"id\":1722786150,\"predicate\":\"help.deepLinkInfoEmpty\",\"params\":[],\"type\":\"help.DeepLinkInfo\"},{\"id\":1783556146,\"predicate\":\"help.deepLinkInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"update_app\",\"type\":\"flags.0?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"}],\"type\":\"help.DeepLinkInfo\"},{\"id\":289586518,\"predicate\":\"savedPhoneContact\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"SavedContact\"},{\"id\":1304052993,\"predicate\":\"account.takeout\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"account.Takeout\"},{\"id\":700340377,\"predicate\":\"inputTakeoutFileLocation\",\"params\":[],\"type\":\"InputFileLocation\"},{\"id\":-513517117,\"predicate\":\"updateDialogUnreadMark\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"unread\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"DialogPeer\"}],\"type\":\"Update\"},{\"id\":-253500010,\"predicate\":\"messages.dialogsNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.Dialogs\"},{\"id\":-1625153079,\"predicate\":\"inputWebFileGeoPointLocation\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"zoom\",\"type\":\"int\"},{\"name\":\"scale\",\"type\":\"int\"}],\"type\":\"InputWebFileLocation\"},{\"id\":-1255369827,\"predicate\":\"contacts.topPeersDisabled\",\"params\":[],\"type\":\"contacts.TopPeers\"},{\"id\":-1685456582,\"predicate\":\"inputReportReasonCopyright\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-732254058,\"predicate\":\"passwordKdfAlgoUnknown\",\"params\":[],\"type\":\"PasswordKdfAlgo\"},{\"id\":4883767,\"predicate\":\"securePasswordKdfAlgoUnknown\",\"params\":[],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":-1141711456,\"predicate\":\"securePasswordKdfAlgoPBKDF2HMACSHA512iter100000\",\"params\":[{\"name\":\"salt\",\"type\":\"bytes\"}],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":-2042159726,\"predicate\":\"securePasswordKdfAlgoSHA512\",\"params\":[{\"name\":\"salt\",\"type\":\"bytes\"}],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":354925740,\"predicate\":\"secureSecretSettings\",\"params\":[{\"name\":\"secure_algo\",\"type\":\"SecurePasswordKdfAlgo\"},{\"name\":\"secure_secret\",\"type\":\"bytes\"},{\"name\":\"secure_secret_id\",\"type\":\"long\"}],\"type\":\"SecureSecretSettings\"},{\"id\":982592842,\"predicate\":\"passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow\",\"params\":[{\"name\":\"salt1\",\"type\":\"bytes\"},{\"name\":\"salt2\",\"type\":\"bytes\"},{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"p\",\"type\":\"bytes\"}],\"type\":\"PasswordKdfAlgo\"},{\"id\":-1736378792,\"predicate\":\"inputCheckPasswordEmpty\",\"params\":[],\"type\":\"InputCheckPasswordSRP\"},{\"id\":-763367294,\"predicate\":\"inputCheckPasswordSRP\",\"params\":[{\"name\":\"srp_id\",\"type\":\"long\"},{\"name\":\"A\",\"type\":\"bytes\"},{\"name\":\"M1\",\"type\":\"bytes\"}],\"type\":\"InputCheckPasswordSRP\"},{\"id\":-2036501105,\"predicate\":\"secureValueError\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-1592506512,\"predicate\":\"secureValueErrorTranslationFile\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":878931416,\"predicate\":\"secureValueErrorTranslationFiles\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"Vector<bytes>\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":-2103600678,\"predicate\":\"secureRequiredType\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"native_names\",\"type\":\"flags.0?true\"},{\"name\":\"selfie_required\",\"type\":\"flags.1?true\"},{\"name\":\"translation_required\",\"type\":\"flags.2?true\"},{\"name\":\"type\",\"type\":\"SecureValueType\"}],\"type\":\"SecureRequiredType\"},{\"id\":41187252,\"predicate\":\"secureRequiredTypeOneOf\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureRequiredType>\"}],\"type\":\"SecureRequiredType\"},{\"id\":-1078332329,\"predicate\":\"help.passportConfigNotModified\",\"params\":[],\"type\":\"help.PassportConfig\"},{\"id\":-1600596305,\"predicate\":\"help.passportConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"countries_langs\",\"type\":\"DataJSON\"}],\"type\":\"help.PassportConfig\"},{\"id\":488313413,\"predicate\":\"inputAppEvent\",\"params\":[{\"name\":\"time\",\"type\":\"double\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"peer\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"JSONValue\"}],\"type\":\"InputAppEvent\"},{\"id\":-1059185703,\"predicate\":\"jsonObjectValue\",\"params\":[{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"JSONValue\"}],\"type\":\"JSONObjectValue\"},{\"id\":1064139624,\"predicate\":\"jsonNull\",\"params\":[],\"type\":\"JSONValue\"},{\"id\":-952869270,\"predicate\":\"jsonBool\",\"params\":[{\"name\":\"value\",\"type\":\"Bool\"}],\"type\":\"JSONValue\"},{\"id\":736157604,\"predicate\":\"jsonNumber\",\"params\":[{\"name\":\"value\",\"type\":\"double\"}],\"type\":\"JSONValue\"},{\"id\":-1222740358,\"predicate\":\"jsonString\",\"params\":[{\"name\":\"value\",\"type\":\"string\"}],\"type\":\"JSONValue\"},{\"id\":-146520221,\"predicate\":\"jsonArray\",\"params\":[{\"name\":\"value\",\"type\":\"Vector<JSONValue>\"}],\"type\":\"JSONValue\"},{\"id\":-1715350371,\"predicate\":\"jsonObject\",\"params\":[{\"name\":\"value\",\"type\":\"Vector<JSONObjectValue>\"}],\"type\":\"JSONValue\"},{\"id\":-1311015810,\"predicate\":\"inputNotifyBroadcasts\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":-703403793,\"predicate\":\"notifyBroadcasts\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":-311786236,\"predicate\":\"textSubscript\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":-939827711,\"predicate\":\"textSuperscript\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":55281185,\"predicate\":\"textMarked\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":483104362,\"predicate\":\"textPhone\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":136105807,\"predicate\":\"textImage\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"RichText\"},{\"id\":504660880,\"predicate\":\"pageBlockKicker\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":878078826,\"predicate\":\"pageTableCell\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"header\",\"type\":\"flags.0?true\"},{\"name\":\"align_center\",\"type\":\"flags.3?true\"},{\"name\":\"align_right\",\"type\":\"flags.4?true\"},{\"name\":\"valign_middle\",\"type\":\"flags.5?true\"},{\"name\":\"valign_bottom\",\"type\":\"flags.6?true\"},{\"name\":\"text\",\"type\":\"flags.7?RichText\"},{\"name\":\"colspan\",\"type\":\"flags.1?int\"},{\"name\":\"rowspan\",\"type\":\"flags.2?int\"}],\"type\":\"PageTableCell\"},{\"id\":-524237339,\"predicate\":\"pageTableRow\",\"params\":[{\"name\":\"cells\",\"type\":\"Vector<PageTableCell>\"}],\"type\":\"PageTableRow\"},{\"id\":-1085412734,\"predicate\":\"pageBlockTable\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bordered\",\"type\":\"flags.0?true\"},{\"name\":\"striped\",\"type\":\"flags.1?true\"},{\"name\":\"title\",\"type\":\"RichText\"},{\"name\":\"rows\",\"type\":\"Vector<PageTableRow>\"}],\"type\":\"PageBlock\"},{\"id\":1869903447,\"predicate\":\"pageCaption\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"credit\",\"type\":\"RichText\"}],\"type\":\"PageCaption\"},{\"id\":-1188055347,\"predicate\":\"pageListItemText\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageListItem\"},{\"id\":635466748,\"predicate\":\"pageListItemBlocks\",\"params\":[{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"}],\"type\":\"PageListItem\"},{\"id\":1577484359,\"predicate\":\"pageListOrderedItemText\",\"params\":[{\"name\":\"num\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageListOrderedItem\"},{\"id\":-1730311882,\"predicate\":\"pageListOrderedItemBlocks\",\"params\":[{\"name\":\"num\",\"type\":\"string\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"}],\"type\":\"PageListOrderedItem\"},{\"id\":-1702174239,\"predicate\":\"pageBlockOrderedList\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageListOrderedItem>\"}],\"type\":\"PageBlock\"},{\"id\":1987480557,\"predicate\":\"pageBlockDetails\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"open\",\"type\":\"flags.0?true\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"title\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":-1282352120,\"predicate\":\"pageRelatedArticle\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"description\",\"type\":\"flags.1?string\"},{\"name\":\"photo_id\",\"type\":\"flags.2?long\"},{\"name\":\"author\",\"type\":\"flags.3?string\"},{\"name\":\"published_date\",\"type\":\"flags.4?int\"}],\"type\":\"PageRelatedArticle\"},{\"id\":370236054,\"predicate\":\"pageBlockRelatedArticles\",\"params\":[{\"name\":\"title\",\"type\":\"RichText\"},{\"name\":\"articles\",\"type\":\"Vector<PageRelatedArticle>\"}],\"type\":\"PageBlock\"},{\"id\":-1538310410,\"predicate\":\"pageBlockMap\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"zoom\",\"type\":\"int\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":-1738178803,\"predicate\":\"page\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"part\",\"type\":\"flags.0?true\"},{\"name\":\"rtl\",\"type\":\"flags.1?true\"},{\"name\":\"v2\",\"type\":\"flags.2?true\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"documents\",\"type\":\"Vector<Document>\"},{\"name\":\"views\",\"type\":\"flags.3?int\"}],\"type\":\"Page\"},{\"id\":-610373422,\"predicate\":\"inputPrivacyKeyPhoneP2P\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":961092808,\"predicate\":\"privacyKeyPhoneP2P\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":894777186,\"predicate\":\"textAnchor\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":-1945767479,\"predicate\":\"help.supportName\",\"params\":[{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"help.SupportName\"},{\"id\":-206688531,\"predicate\":\"help.userInfoEmpty\",\"params\":[],\"type\":\"help.UserInfo\"},{\"id\":32192344,\"predicate\":\"help.userInfo\",\"params\":[{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"author\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"help.UserInfo\"},{\"id\":-202219658,\"predicate\":\"messageActionContactSignUp\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":-1398708869,\"predicate\":\"updateMessagePoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"poll_id\",\"type\":\"long\"},{\"name\":\"poll\",\"type\":\"flags.0?Poll\"},{\"name\":\"results\",\"type\":\"PollResults\"}],\"type\":\"Update\"},{\"id\":1823064809,\"predicate\":\"pollAnswer\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"option\",\"type\":\"bytes\"}],\"type\":\"PollAnswer\"},{\"id\":-2032041631,\"predicate\":\"poll\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"closed\",\"type\":\"flags.0?true\"},{\"name\":\"public_voters\",\"type\":\"flags.1?true\"},{\"name\":\"multiple_choice\",\"type\":\"flags.2?true\"},{\"name\":\"quiz\",\"type\":\"flags.3?true\"},{\"name\":\"question\",\"type\":\"string\"},{\"name\":\"answers\",\"type\":\"Vector<PollAnswer>\"},{\"name\":\"close_period\",\"type\":\"flags.4?int\"},{\"name\":\"close_date\",\"type\":\"flags.5?int\"}],\"type\":\"Poll\"},{\"id\":997055186,\"predicate\":\"pollAnswerVoters\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chosen\",\"type\":\"flags.0?true\"},{\"name\":\"correct\",\"type\":\"flags.1?true\"},{\"name\":\"option\",\"type\":\"bytes\"},{\"name\":\"voters\",\"type\":\"int\"}],\"type\":\"PollAnswerVoters\"},{\"id\":-591909213,\"predicate\":\"pollResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"min\",\"type\":\"flags.0?true\"},{\"name\":\"results\",\"type\":\"flags.1?Vector<PollAnswerVoters>\"},{\"name\":\"total_voters\",\"type\":\"flags.2?int\"},{\"name\":\"recent_voters\",\"type\":\"flags.3?Vector<long>\"},{\"name\":\"solution\",\"type\":\"flags.4?string\"},{\"name\":\"solution_entities\",\"type\":\"flags.4?Vector<MessageEntity>\"}],\"type\":\"PollResults\"},{\"id\":261416433,\"predicate\":\"inputMediaPoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"poll\",\"type\":\"Poll\"},{\"name\":\"correct_answers\",\"type\":\"flags.0?Vector<bytes>\"},{\"name\":\"solution\",\"type\":\"flags.1?string\"},{\"name\":\"solution_entities\",\"type\":\"flags.1?Vector<MessageEntity>\"}],\"type\":\"InputMedia\"},{\"id\":1272375192,\"predicate\":\"messageMediaPoll\",\"params\":[{\"name\":\"poll\",\"type\":\"Poll\"},{\"name\":\"results\",\"type\":\"PollResults\"}],\"type\":\"MessageMedia\"},{\"id\":-264117680,\"predicate\":\"chatOnlines\",\"params\":[{\"name\":\"onlines\",\"type\":\"int\"}],\"type\":\"ChatOnlines\"},{\"id\":1202287072,\"predicate\":\"statsURL\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"StatsURL\"},{\"id\":-525288402,\"predicate\":\"photoStrippedSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":1605510357,\"predicate\":\"chatAdminRights\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"change_info\",\"type\":\"flags.0?true\"},{\"name\":\"post_messages\",\"type\":\"flags.1?true\"},{\"name\":\"edit_messages\",\"type\":\"flags.2?true\"},{\"name\":\"delete_messages\",\"type\":\"flags.3?true\"},{\"name\":\"ban_users\",\"type\":\"flags.4?true\"},{\"name\":\"invite_users\",\"type\":\"flags.5?true\"},{\"name\":\"pin_messages\",\"type\":\"flags.7?true\"},{\"name\":\"add_admins\",\"type\":\"flags.9?true\"},{\"name\":\"anonymous\",\"type\":\"flags.10?true\"},{\"name\":\"manage_call\",\"type\":\"flags.11?true\"},{\"name\":\"other\",\"type\":\"flags.12?true\"},{\"name\":\"manage_topics\",\"type\":\"flags.13?true\"}],\"type\":\"ChatAdminRights\"},{\"id\":-1626209256,\"predicate\":\"chatBannedRights\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"view_messages\",\"type\":\"flags.0?true\"},{\"name\":\"send_messages\",\"type\":\"flags.1?true\"},{\"name\":\"send_media\",\"type\":\"flags.2?true\"},{\"name\":\"send_stickers\",\"type\":\"flags.3?true\"},{\"name\":\"send_gifs\",\"type\":\"flags.4?true\"},{\"name\":\"send_games\",\"type\":\"flags.5?true\"},{\"name\":\"send_inline\",\"type\":\"flags.6?true\"},{\"name\":\"embed_links\",\"type\":\"flags.7?true\"},{\"name\":\"send_polls\",\"type\":\"flags.8?true\"},{\"name\":\"change_info\",\"type\":\"flags.10?true\"},{\"name\":\"invite_users\",\"type\":\"flags.15?true\"},{\"name\":\"pin_messages\",\"type\":\"flags.17?true\"},{\"name\":\"manage_topics\",\"type\":\"flags.18?true\"},{\"name\":\"until_date\",\"type\":\"int\"}],\"type\":\"ChatBannedRights\"},{\"id\":1421875280,\"predicate\":\"updateChatDefaultBannedRights\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"default_banned_rights\",\"type\":\"ChatBannedRights\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-433014407,\"predicate\":\"inputWallPaper\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputWallPaper\"},{\"id\":1913199744,\"predicate\":\"inputWallPaperSlug\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"InputWallPaper\"},{\"id\":-1150621555,\"predicate\":\"channelParticipantsContacts\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":771095562,\"predicate\":\"channelAdminLogEventActionDefaultBannedRights\",\"params\":[{\"name\":\"prev_banned_rights\",\"type\":\"ChatBannedRights\"},{\"name\":\"new_banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1895328189,\"predicate\":\"channelAdminLogEventActionStopPoll\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":471437699,\"predicate\":\"account.wallPapersNotModified\",\"params\":[],\"type\":\"account.WallPapers\"},{\"id\":-842824308,\"predicate\":\"account.wallPapers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"wallpapers\",\"type\":\"Vector<WallPaper>\"}],\"type\":\"account.WallPapers\"},{\"id\":-1973130814,\"predicate\":\"codeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"allow_flashcall\",\"type\":\"flags.0?true\"},{\"name\":\"current_number\",\"type\":\"flags.1?true\"},{\"name\":\"allow_app_hash\",\"type\":\"flags.4?true\"},{\"name\":\"allow_missed_call\",\"type\":\"flags.5?true\"},{\"name\":\"logout_tokens\",\"type\":\"flags.6?Vector<bytes>\"}],\"type\":\"CodeSettings\"},{\"id\":499236004,\"predicate\":\"wallPaperSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blur\",\"type\":\"flags.1?true\"},{\"name\":\"motion\",\"type\":\"flags.2?true\"},{\"name\":\"background_color\",\"type\":\"flags.0?int\"},{\"name\":\"second_background_color\",\"type\":\"flags.4?int\"},{\"name\":\"third_background_color\",\"type\":\"flags.5?int\"},{\"name\":\"fourth_background_color\",\"type\":\"flags.6?int\"},{\"name\":\"intensity\",\"type\":\"flags.3?int\"},{\"name\":\"rotation\",\"type\":\"flags.4?int\"}],\"type\":\"WallPaperSettings\"},{\"id\":-1896171181,\"predicate\":\"autoDownloadSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"disabled\",\"type\":\"flags.0?true\"},{\"name\":\"video_preload_large\",\"type\":\"flags.1?true\"},{\"name\":\"audio_preload_next\",\"type\":\"flags.2?true\"},{\"name\":\"phonecalls_less_data\",\"type\":\"flags.3?true\"},{\"name\":\"photo_size_max\",\"type\":\"int\"},{\"name\":\"video_size_max\",\"type\":\"long\"},{\"name\":\"file_size_max\",\"type\":\"long\"},{\"name\":\"video_upload_maxbitrate\",\"type\":\"int\"}],\"type\":\"AutoDownloadSettings\"},{\"id\":1674235686,\"predicate\":\"account.autoDownloadSettings\",\"params\":[{\"name\":\"low\",\"type\":\"AutoDownloadSettings\"},{\"name\":\"medium\",\"type\":\"AutoDownloadSettings\"},{\"name\":\"high\",\"type\":\"AutoDownloadSettings\"}],\"type\":\"account.AutoDownloadSettings\"},{\"id\":-709641735,\"predicate\":\"emojiKeyword\",\"params\":[{\"name\":\"keyword\",\"type\":\"string\"},{\"name\":\"emoticons\",\"type\":\"Vector<string>\"}],\"type\":\"EmojiKeyword\"},{\"id\":594408994,\"predicate\":\"emojiKeywordDeleted\",\"params\":[{\"name\":\"keyword\",\"type\":\"string\"},{\"name\":\"emoticons\",\"type\":\"Vector<string>\"}],\"type\":\"EmojiKeyword\"},{\"id\":1556570557,\"predicate\":\"emojiKeywordsDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"keywords\",\"type\":\"Vector<EmojiKeyword>\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":-1519029347,\"predicate\":\"emojiURL\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"EmojiURL\"},{\"id\":-1275374751,\"predicate\":\"emojiLanguage\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiLanguage\"},{\"id\":-1529000952,\"predicate\":\"inputPrivacyKeyForwards\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1777096355,\"predicate\":\"privacyKeyForwards\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1461304012,\"predicate\":\"inputPrivacyKeyProfilePhoto\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-1777000467,\"predicate\":\"privacyKeyProfilePhoto\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":1075322878,\"predicate\":\"inputPhotoFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"thumb_size\",\"type\":\"string\"}],\"type\":\"InputFileLocation\"},{\"id\":-667654413,\"predicate\":\"inputPhotoLegacyFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"volume_id\",\"type\":\"long\"},{\"name\":\"local_id\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":925204121,\"predicate\":\"inputPeerPhotoFileLocation\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"big\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"photo_id\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":-1652231205,\"predicate\":\"inputStickerSetThumb\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"thumb_version\",\"type\":\"int\"}],\"type\":\"InputFileLocation\"},{\"id\":-11252123,\"predicate\":\"folder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"autofill_new_broadcasts\",\"type\":\"flags.0?true\"},{\"name\":\"autofill_public_groups\",\"type\":\"flags.1?true\"},{\"name\":\"autofill_new_correspondents\",\"type\":\"flags.2?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.3?ChatPhoto\"}],\"type\":\"Folder\"},{\"id\":1908216652,\"predicate\":\"dialogFolder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.2?true\"},{\"name\":\"folder\",\"type\":\"Folder\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_message\",\"type\":\"int\"},{\"name\":\"unread_muted_peers_count\",\"type\":\"int\"},{\"name\":\"unread_unmuted_peers_count\",\"type\":\"int\"},{\"name\":\"unread_muted_messages_count\",\"type\":\"int\"},{\"name\":\"unread_unmuted_messages_count\",\"type\":\"int\"}],\"type\":\"Dialog\"},{\"id\":1684014375,\"predicate\":\"inputDialogPeerFolder\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"InputDialogPeer\"},{\"id\":1363483106,\"predicate\":\"dialogPeerFolder\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"DialogPeer\"},{\"id\":-70073706,\"predicate\":\"inputFolderPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"InputFolderPeer\"},{\"id\":-373643672,\"predicate\":\"folderPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"FolderPeer\"},{\"id\":422972864,\"predicate\":\"updateFolderPeers\",\"params\":[{\"name\":\"folder_peers\",\"type\":\"Vector<FolderPeer>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":497305826,\"predicate\":\"inputUserFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"InputUser\"},{\"id\":1536380829,\"predicate\":\"inputChannelFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"InputChannel\"},{\"id\":-1468331492,\"predicate\":\"inputPeerUserFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":-1121318848,\"predicate\":\"inputPeerChannelFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"channel_id\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":55761658,\"predicate\":\"inputPrivacyKeyPhoneNumber\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":-778378131,\"predicate\":\"privacyKeyPhoneNumber\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-1472172887,\"predicate\":\"topPeerCategoryForwardUsers\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":-68239120,\"predicate\":\"topPeerCategoryForwardChats\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":84703944,\"predicate\":\"channelAdminLogEventActionChangeLinkedChat\",\"params\":[{\"name\":\"prev_value\",\"type\":\"long\"},{\"name\":\"new_value\",\"type\":\"long\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-398136321,\"predicate\":\"messages.searchCounter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.SearchCounter\"},{\"id\":280464681,\"predicate\":\"keyboardButtonUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"fwd_text\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"button_id\",\"type\":\"int\"}],\"type\":\"KeyboardButton\"},{\"id\":-802258988,\"predicate\":\"inputKeyboardButtonUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"request_write_access\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"fwd_text\",\"type\":\"flags.1?string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"bot\",\"type\":\"InputUser\"}],\"type\":\"KeyboardButton\"},{\"id\":-1831650802,\"predicate\":\"urlAuthResultRequest\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"request_write_access\",\"type\":\"flags.0?true\"},{\"name\":\"bot\",\"type\":\"User\"},{\"name\":\"domain\",\"type\":\"string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1886646706,\"predicate\":\"urlAuthResultAccepted\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1445536993,\"predicate\":\"urlAuthResultDefault\",\"params\":[],\"type\":\"UrlAuthResult\"},{\"id\":-2079962673,\"predicate\":\"inputPrivacyValueAllowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":-380694650,\"predicate\":\"inputPrivacyValueDisallowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":1796427406,\"predicate\":\"privacyValueAllowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":1103656293,\"predicate\":\"privacyValueDisallowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<long>\"}],\"type\":\"PrivacyRule\"},{\"id\":-1672577397,\"predicate\":\"messageEntityUnderline\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1090087980,\"predicate\":\"messageEntityStrike\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":34469328,\"predicate\":\"messageEntityBlockquote\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":1786671974,\"predicate\":\"updatePeerSettings\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"settings\",\"type\":\"PeerSettings\"}],\"type\":\"Update\"},{\"id\":-1078612597,\"predicate\":\"channelLocationEmpty\",\"params\":[],\"type\":\"ChannelLocation\"},{\"id\":547062491,\"predicate\":\"channelLocation\",\"params\":[{\"name\":\"geo_point\",\"type\":\"GeoPoint\"},{\"name\":\"address\",\"type\":\"string\"}],\"type\":\"ChannelLocation\"},{\"id\":-901375139,\"predicate\":\"peerLocated\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"distance\",\"type\":\"int\"}],\"type\":\"PeerLocated\"},{\"id\":-1263546448,\"predicate\":\"updatePeerLocated\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<PeerLocated>\"}],\"type\":\"Update\"},{\"id\":241923758,\"predicate\":\"channelAdminLogEventActionChangeLocation\",\"params\":[{\"name\":\"prev_value\",\"type\":\"ChannelLocation\"},{\"name\":\"new_value\",\"type\":\"ChannelLocation\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-606798099,\"predicate\":\"inputReportReasonGeoIrrelevant\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":1401984889,\"predicate\":\"channelAdminLogEventActionToggleSlowMode\",\"params\":[{\"name\":\"prev_value\",\"type\":\"int\"},{\"name\":\"new_value\",\"type\":\"int\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1148485274,\"predicate\":\"auth.authorizationSignUpRequired\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"terms_of_service\",\"type\":\"flags.0?help.TermsOfService\"}],\"type\":\"auth.Authorization\"},{\"id\":-666824391,\"predicate\":\"payments.paymentVerificationNeeded\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"payments.PaymentResult\"},{\"id\":42402760,\"predicate\":\"inputStickerSetAnimatedEmoji\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":967122427,\"predicate\":\"updateNewScheduledMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"Update\"},{\"id\":-1870238482,\"predicate\":\"updateDeleteScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":-797791052,\"predicate\":\"restrictionReason\",\"params\":[{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"reason\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"RestrictionReason\"},{\"id\":1012306921,\"predicate\":\"inputTheme\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputTheme\"},{\"id\":-175567375,\"predicate\":\"inputThemeSlug\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"InputTheme\"},{\"id\":-1609668650,\"predicate\":\"theme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"for_chat\",\"type\":\"flags.5?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"flags.2?Document\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<ThemeSettings>\"},{\"name\":\"emoticon\",\"type\":\"flags.6?string\"},{\"name\":\"installs_count\",\"type\":\"flags.4?int\"}],\"type\":\"Theme\"},{\"id\":-199313886,\"predicate\":\"account.themesNotModified\",\"params\":[],\"type\":\"account.Themes\"},{\"id\":-1707242387,\"predicate\":\"account.themes\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"themes\",\"type\":\"Vector<Theme>\"}],\"type\":\"account.Themes\"},{\"id\":-2112423005,\"predicate\":\"updateTheme\",\"params\":[{\"name\":\"theme\",\"type\":\"Theme\"}],\"type\":\"Update\"},{\"id\":-786326563,\"predicate\":\"inputPrivacyKeyAddedByPhone\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":1124062251,\"predicate\":\"privacyKeyAddedByPhone\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-2027964103,\"predicate\":\"updateGeoLiveViewed\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1448076945,\"predicate\":\"updateLoginToken\",\"params\":[],\"type\":\"Update\"},{\"id\":1654593920,\"predicate\":\"auth.loginToken\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":110008598,\"predicate\":\"auth.loginTokenMigrateTo\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":957176926,\"predicate\":\"auth.loginTokenSuccess\",\"params\":[{\"name\":\"authorization\",\"type\":\"auth.Authorization\"}],\"type\":\"auth.LoginToken\"},{\"id\":1474462241,\"predicate\":\"account.contentSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"sensitive_enabled\",\"type\":\"flags.0?true\"},{\"name\":\"sensitive_can_change\",\"type\":\"flags.1?true\"}],\"type\":\"account.ContentSettings\"},{\"id\":-1456996667,\"predicate\":\"messages.inactiveChats\",\"params\":[{\"name\":\"dates\",\"type\":\"Vector<int>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.InactiveChats\"},{\"id\":-1012849566,\"predicate\":\"baseThemeClassic\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-69724536,\"predicate\":\"baseThemeDay\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-1212997976,\"predicate\":\"baseThemeNight\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":1834973166,\"predicate\":\"baseThemeTinted\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":1527845466,\"predicate\":\"baseThemeArctic\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":-1770371538,\"predicate\":\"inputWallPaperNoFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"InputWallPaper\"},{\"id\":-528465642,\"predicate\":\"wallPaperNoFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"dark\",\"type\":\"flags.4?true\"},{\"name\":\"settings\",\"type\":\"flags.2?WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":-1881255857,\"predicate\":\"inputThemeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message_colors_animated\",\"type\":\"flags.2?true\"},{\"name\":\"base_theme\",\"type\":\"BaseTheme\"},{\"name\":\"accent_color\",\"type\":\"int\"},{\"name\":\"outbox_accent_color\",\"type\":\"flags.3?int\"},{\"name\":\"message_colors\",\"type\":\"flags.0?Vector<int>\"},{\"name\":\"wallpaper\",\"type\":\"flags.1?InputWallPaper\"},{\"name\":\"wallpaper_settings\",\"type\":\"flags.1?WallPaperSettings\"}],\"type\":\"InputThemeSettings\"},{\"id\":-94849324,\"predicate\":\"themeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message_colors_animated\",\"type\":\"flags.2?true\"},{\"name\":\"base_theme\",\"type\":\"BaseTheme\"},{\"name\":\"accent_color\",\"type\":\"int\"},{\"name\":\"outbox_accent_color\",\"type\":\"flags.3?int\"},{\"name\":\"message_colors\",\"type\":\"flags.0?Vector<int>\"},{\"name\":\"wallpaper\",\"type\":\"flags.1?WallPaper\"}],\"type\":\"ThemeSettings\"},{\"id\":1421174295,\"predicate\":\"webPageAttributeTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"documents\",\"type\":\"flags.0?Vector<Document>\"},{\"name\":\"settings\",\"type\":\"flags.1?ThemeSettings\"}],\"type\":\"WebPageAttribute\"},{\"id\":274961865,\"predicate\":\"updateMessagePollVote\",\"params\":[{\"name\":\"poll_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":886196148,\"predicate\":\"messageUserVote\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"option\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessageUserVote\"},{\"id\":1017491692,\"predicate\":\"messageUserVoteInputOption\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessageUserVote\"},{\"id\":-1973033641,\"predicate\":\"messageUserVoteMultiple\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessageUserVote\"},{\"id\":136574537,\"predicate\":\"messages.votesList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"votes\",\"type\":\"Vector<MessageUserVote>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"}],\"type\":\"messages.VotesList\"},{\"id\":-1144565411,\"predicate\":\"keyboardButtonRequestPoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"quiz\",\"type\":\"flags.0?Bool\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":1981704948,\"predicate\":\"messageEntityBankCard\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-177732982,\"predicate\":\"bankCardOpenUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"BankCardOpenUrl\"},{\"id\":1042605427,\"predicate\":\"payments.bankCardData\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"open_urls\",\"type\":\"Vector<BankCardOpenUrl>\"}],\"type\":\"payments.BankCardData\"},{\"id\":-118740917,\"predicate\":\"peerSelfLocated\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"PeerLocated\"},{\"id\":1949890536,\"predicate\":\"dialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"contacts\",\"type\":\"flags.0?true\"},{\"name\":\"non_contacts\",\"type\":\"flags.1?true\"},{\"name\":\"groups\",\"type\":\"flags.2?true\"},{\"name\":\"broadcasts\",\"type\":\"flags.3?true\"},{\"name\":\"bots\",\"type\":\"flags.4?true\"},{\"name\":\"exclude_muted\",\"type\":\"flags.11?true\"},{\"name\":\"exclude_read\",\"type\":\"flags.12?true\"},{\"name\":\"exclude_archived\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"emoticon\",\"type\":\"flags.25?string\"},{\"name\":\"pinned_peers\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"include_peers\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"exclude_peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"DialogFilter\"},{\"id\":2004110666,\"predicate\":\"dialogFilterSuggested\",\"params\":[{\"name\":\"filter\",\"type\":\"DialogFilter\"},{\"name\":\"description\",\"type\":\"string\"}],\"type\":\"DialogFilterSuggested\"},{\"id\":654302845,\"predicate\":\"updateDialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"filter\",\"type\":\"flags.0?DialogFilter\"}],\"type\":\"Update\"},{\"id\":-1512627963,\"predicate\":\"updateDialogFilterOrder\",\"params\":[{\"name\":\"order\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":889491791,\"predicate\":\"updateDialogFilters\",\"params\":[],\"type\":\"Update\"},{\"id\":-1237848657,\"predicate\":\"statsDateRangeDays\",\"params\":[{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"}],\"type\":\"StatsDateRangeDays\"},{\"id\":-884757282,\"predicate\":\"statsAbsValueAndPrev\",\"params\":[{\"name\":\"current\",\"type\":\"double\"},{\"name\":\"previous\",\"type\":\"double\"}],\"type\":\"StatsAbsValueAndPrev\"},{\"id\":-875679776,\"predicate\":\"statsPercentValue\",\"params\":[{\"name\":\"part\",\"type\":\"double\"},{\"name\":\"total\",\"type\":\"double\"}],\"type\":\"StatsPercentValue\"},{\"id\":1244130093,\"predicate\":\"statsGraphAsync\",\"params\":[{\"name\":\"token\",\"type\":\"string\"}],\"type\":\"StatsGraph\"},{\"id\":-1092839390,\"predicate\":\"statsGraphError\",\"params\":[{\"name\":\"error\",\"type\":\"string\"}],\"type\":\"StatsGraph\"},{\"id\":-1901828938,\"predicate\":\"statsGraph\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"json\",\"type\":\"DataJSON\"},{\"name\":\"zoom_token\",\"type\":\"flags.0?string\"}],\"type\":\"StatsGraph\"},{\"id\":-1387279939,\"predicate\":\"messageInteractionCounters\",\"params\":[{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"views\",\"type\":\"int\"},{\"name\":\"forwards\",\"type\":\"int\"}],\"type\":\"MessageInteractionCounters\"},{\"id\":-1107852396,\"predicate\":\"stats.broadcastStats\",\"params\":[{\"name\":\"period\",\"type\":\"StatsDateRangeDays\"},{\"name\":\"followers\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"views_per_post\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"shares_per_post\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"enabled_notifications\",\"type\":\"StatsPercentValue\"},{\"name\":\"growth_graph\",\"type\":\"StatsGraph\"},{\"name\":\"followers_graph\",\"type\":\"StatsGraph\"},{\"name\":\"mute_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_hours_graph\",\"type\":\"StatsGraph\"},{\"name\":\"interactions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"iv_interactions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"views_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"new_followers_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"languages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"recent_message_interactions\",\"type\":\"Vector<MessageInteractionCounters>\"}],\"type\":\"stats.BroadcastStats\"},{\"id\":-428884101,\"predicate\":\"inputMediaDice\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":1065280907,\"predicate\":\"messageMediaDice\",\"params\":[{\"name\":\"value\",\"type\":\"int\"},{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"MessageMedia\"},{\"id\":-427863538,\"predicate\":\"inputStickerSetDice\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"InputStickerSet\"},{\"id\":-1728664459,\"predicate\":\"help.promoDataEmpty\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"help.PromoData\"},{\"id\":-1942390465,\"predicate\":\"help.promoData\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"proxy\",\"type\":\"flags.0?true\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"psa_type\",\"type\":\"flags.1?string\"},{\"name\":\"psa_message\",\"type\":\"flags.2?string\"}],\"type\":\"help.PromoData\"},{\"id\":-567037804,\"predicate\":\"videoSize\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"video_start_ts\",\"type\":\"flags.0?double\"}],\"type\":\"VideoSize\"},{\"id\":643940105,\"predicate\":\"updatePhoneCallSignalingData\",\"params\":[{\"name\":\"phone_call_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"Update\"},{\"id\":1634294960,\"predicate\":\"chatInvitePeek\",\"params\":[{\"name\":\"chat\",\"type\":\"Chat\"},{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"ChatInvite\"},{\"id\":-1660637285,\"predicate\":\"statsGroupTopPoster\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"int\"},{\"name\":\"avg_chars\",\"type\":\"int\"}],\"type\":\"StatsGroupTopPoster\"},{\"id\":-682079097,\"predicate\":\"statsGroupTopAdmin\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"deleted\",\"type\":\"int\"},{\"name\":\"kicked\",\"type\":\"int\"},{\"name\":\"banned\",\"type\":\"int\"}],\"type\":\"StatsGroupTopAdmin\"},{\"id\":1398765469,\"predicate\":\"statsGroupTopInviter\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"invitations\",\"type\":\"int\"}],\"type\":\"StatsGroupTopInviter\"},{\"id\":-276825834,\"predicate\":\"stats.megagroupStats\",\"params\":[{\"name\":\"period\",\"type\":\"StatsDateRangeDays\"},{\"name\":\"members\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"messages\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"viewers\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"posters\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"growth_graph\",\"type\":\"StatsGraph\"},{\"name\":\"members_graph\",\"type\":\"StatsGraph\"},{\"name\":\"new_members_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"languages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"messages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"actions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_hours_graph\",\"type\":\"StatsGraph\"},{\"name\":\"weekdays_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_posters\",\"type\":\"Vector<StatsGroupTopPoster>\"},{\"name\":\"top_admins\",\"type\":\"Vector<StatsGroupTopAdmin>\"},{\"name\":\"top_inviters\",\"type\":\"Vector<StatsGroupTopInviter>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"stats.MegagroupStats\"},{\"id\":-1096616924,\"predicate\":\"globalPrivacySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"archive_and_mute_new_noncontact_peers\",\"type\":\"flags.0?Bool\"}],\"type\":\"GlobalPrivacySettings\"},{\"id\":1667228533,\"predicate\":\"phoneConnectionWebrtc\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"turn\",\"type\":\"flags.0?true\"},{\"name\":\"stun\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"ipv6\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"password\",\"type\":\"string\"}],\"type\":\"PhoneConnection\"},{\"id\":1107543535,\"predicate\":\"help.countryCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"country_code\",\"type\":\"string\"},{\"name\":\"prefixes\",\"type\":\"flags.0?Vector<string>\"},{\"name\":\"patterns\",\"type\":\"flags.1?Vector<string>\"}],\"type\":\"help.CountryCode\"},{\"id\":-1014526429,\"predicate\":\"help.country\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"hidden\",\"type\":\"flags.0?true\"},{\"name\":\"iso2\",\"type\":\"string\"},{\"name\":\"default_name\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"flags.1?string\"},{\"name\":\"country_codes\",\"type\":\"Vector<help.CountryCode>\"}],\"type\":\"help.Country\"},{\"id\":-1815339214,\"predicate\":\"help.countriesListNotModified\",\"params\":[],\"type\":\"help.CountriesList\"},{\"id\":-2016381538,\"predicate\":\"help.countriesList\",\"params\":[{\"name\":\"countries\",\"type\":\"Vector<help.Country>\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.CountriesList\"},{\"id\":1163625789,\"predicate\":\"messageViews\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"views\",\"type\":\"flags.0?int\"},{\"name\":\"forwards\",\"type\":\"flags.1?int\"},{\"name\":\"replies\",\"type\":\"flags.2?MessageReplies\"}],\"type\":\"MessageViews\"},{\"id\":-761649164,\"predicate\":\"updateChannelMessageForwards\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"forwards\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-96535659,\"predicate\":\"photoSizeProgressive\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"sizes\",\"type\":\"Vector<int>\"}],\"type\":\"PhotoSize\"},{\"id\":-1228606141,\"predicate\":\"messages.messageViews\",\"params\":[{\"name\":\"views\",\"type\":\"Vector<MessageViews>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.MessageViews\"},{\"id\":-693004986,\"predicate\":\"updateReadChannelDiscussionInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"},{\"name\":\"broadcast_id\",\"type\":\"flags.0?long\"},{\"name\":\"broadcast_post\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":1767677564,\"predicate\":\"updateReadChannelDiscussionOutbox\",\"params\":[{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1506535550,\"predicate\":\"messages.discussionMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"max_id\",\"type\":\"flags.0?int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"flags.1?int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"flags.2?int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.DiscussionMessage\"},{\"id\":-1495959709,\"predicate\":\"messageReplyHeader\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reply_to_scheduled\",\"type\":\"flags.2?true\"},{\"name\":\"forum_topic\",\"type\":\"flags.3?true\"},{\"name\":\"reply_to_msg_id\",\"type\":\"int\"},{\"name\":\"reply_to_peer_id\",\"type\":\"flags.0?Peer\"},{\"name\":\"reply_to_top_id\",\"type\":\"flags.1?int\"}],\"type\":\"MessageReplyHeader\"},{\"id\":-2083123262,\"predicate\":\"messageReplies\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"comments\",\"type\":\"flags.0?true\"},{\"name\":\"replies\",\"type\":\"int\"},{\"name\":\"replies_pts\",\"type\":\"int\"},{\"name\":\"recent_repliers\",\"type\":\"flags.1?Vector<Peer>\"},{\"name\":\"channel_id\",\"type\":\"flags.0?long\"},{\"name\":\"max_id\",\"type\":\"flags.2?int\"},{\"name\":\"read_max_id\",\"type\":\"flags.3?int\"}],\"type\":\"MessageReplies\"},{\"id\":610945826,\"predicate\":\"updatePeerBlocked\",\"params\":[{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"blocked\",\"type\":\"Bool\"}],\"type\":\"Update\"},{\"id\":-386039788,\"predicate\":\"peerBlocked\",\"params\":[{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"PeerBlocked\"},{\"id\":-1937192669,\"predicate\":\"updateChannelUserTyping\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":-1392895362,\"predicate\":\"inputMessageCallbackQuery\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"query_id\",\"type\":\"long\"}],\"type\":\"InputMessage\"},{\"id\":453242886,\"predicate\":\"channelParticipantLeft\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"ChannelParticipant\"},{\"id\":-531931925,\"predicate\":\"channelParticipantsMentions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"q\",\"type\":\"flags.0?string\"},{\"name\":\"top_msg_id\",\"type\":\"flags.1?int\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":-309990731,\"predicate\":\"updatePinnedMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1538885128,\"predicate\":\"updatePinnedChannelMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":464520273,\"predicate\":\"inputMessagesFilterPinned\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":-1986399595,\"predicate\":\"stats.messageStats\",\"params\":[{\"name\":\"views_graph\",\"type\":\"StatsGraph\"}],\"type\":\"stats.MessageStats\"},{\"id\":-1730095465,\"predicate\":\"messageActionGeoProximityReached\",\"params\":[{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"to_id\",\"type\":\"Peer\"},{\"name\":\"distance\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":-668906175,\"predicate\":\"photoPathSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":-651419003,\"predicate\":\"speakingInGroupCallAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":2004925620,\"predicate\":\"groupCallDiscarded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"duration\",\"type\":\"int\"}],\"type\":\"GroupCall\"},{\"id\":-711498484,\"predicate\":\"groupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"join_muted\",\"type\":\"flags.1?true\"},{\"name\":\"can_change_join_muted\",\"type\":\"flags.2?true\"},{\"name\":\"join_date_asc\",\"type\":\"flags.6?true\"},{\"name\":\"schedule_start_subscribed\",\"type\":\"flags.8?true\"},{\"name\":\"can_start_video\",\"type\":\"flags.9?true\"},{\"name\":\"record_video_active\",\"type\":\"flags.11?true\"},{\"name\":\"rtmp_stream\",\"type\":\"flags.12?true\"},{\"name\":\"listeners_hidden\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.3?string\"},{\"name\":\"stream_dc_id\",\"type\":\"flags.4?int\"},{\"name\":\"record_start_date\",\"type\":\"flags.5?int\"},{\"name\":\"schedule_date\",\"type\":\"flags.7?int\"},{\"name\":\"unmuted_video_count\",\"type\":\"flags.10?int\"},{\"name\":\"unmuted_video_limit\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"GroupCall\"},{\"id\":-659913713,\"predicate\":\"inputGroupCall\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputGroupCall\"},{\"id\":2047704898,\"predicate\":\"messageActionGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"duration\",\"type\":\"flags.0?int\"}],\"type\":\"MessageAction\"},{\"id\":1345295095,\"predicate\":\"messageActionInviteToGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"users\",\"type\":\"Vector<long>\"}],\"type\":\"MessageAction\"},{\"id\":-341428482,\"predicate\":\"groupCallParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"muted\",\"type\":\"flags.0?true\"},{\"name\":\"left\",\"type\":\"flags.1?true\"},{\"name\":\"can_self_unmute\",\"type\":\"flags.2?true\"},{\"name\":\"just_joined\",\"type\":\"flags.4?true\"},{\"name\":\"versioned\",\"type\":\"flags.5?true\"},{\"name\":\"min\",\"type\":\"flags.8?true\"},{\"name\":\"muted_by_you\",\"type\":\"flags.9?true\"},{\"name\":\"volume_by_admin\",\"type\":\"flags.10?true\"},{\"name\":\"self\",\"type\":\"flags.12?true\"},{\"name\":\"video_joined\",\"type\":\"flags.15?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"active_date\",\"type\":\"flags.3?int\"},{\"name\":\"source\",\"type\":\"int\"},{\"name\":\"volume\",\"type\":\"flags.7?int\"},{\"name\":\"about\",\"type\":\"flags.11?string\"},{\"name\":\"raise_hand_rating\",\"type\":\"flags.13?long\"},{\"name\":\"video\",\"type\":\"flags.6?GroupCallParticipantVideo\"},{\"name\":\"presentation\",\"type\":\"flags.14?GroupCallParticipantVideo\"}],\"type\":\"GroupCallParticipant\"},{\"id\":-124097970,\"predicate\":\"updateChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":-219423922,\"predicate\":\"updateGroupCallParticipants\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":347227392,\"predicate\":\"updateGroupCall\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"call\",\"type\":\"GroupCall\"}],\"type\":\"Update\"},{\"id\":-1636664659,\"predicate\":\"phone.groupCall\",\"params\":[{\"name\":\"call\",\"type\":\"GroupCall\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"participants_next_offset\",\"type\":\"string\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.GroupCall\"},{\"id\":-193506890,\"predicate\":\"phone.groupParticipants\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"Vector<GroupCallParticipant>\"},{\"name\":\"next_offset\",\"type\":\"string\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"phone.GroupParticipants\"},{\"id\":813821341,\"predicate\":\"inlineQueryPeerTypeSameBotPM\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":-2093215828,\"predicate\":\"inlineQueryPeerTypePM\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":-681130742,\"predicate\":\"inlineQueryPeerTypeChat\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":1589952067,\"predicate\":\"inlineQueryPeerTypeMegagroup\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":1664413338,\"predicate\":\"inlineQueryPeerTypeBroadcast\",\"params\":[],\"type\":\"InlineQueryPeerType\"},{\"id\":589338437,\"predicate\":\"channelAdminLogEventActionStartGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-610299584,\"predicate\":\"channelAdminLogEventActionDiscardGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-115071790,\"predicate\":\"channelAdminLogEventActionParticipantMute\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-431740480,\"predicate\":\"channelAdminLogEventActionParticipantUnmute\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1456906823,\"predicate\":\"channelAdminLogEventActionToggleGroupCallSetting\",\"params\":[{\"name\":\"join_muted\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1966921727,\"predicate\":\"inputPaymentCredentialsGooglePay\",\"params\":[{\"name\":\"payment_token\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":375566091,\"predicate\":\"messages.historyImport\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"messages.HistoryImport\"},{\"id\":-606432698,\"predicate\":\"sendMessageHistoryImportAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":1578088377,\"predicate\":\"messages.historyImportParsed\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pm\",\"type\":\"flags.0?true\"},{\"name\":\"group\",\"type\":\"flags.1?true\"},{\"name\":\"title\",\"type\":\"flags.2?string\"}],\"type\":\"messages.HistoryImportParsed\"},{\"id\":-170010905,\"predicate\":\"inputReportReasonFake\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-275956116,\"predicate\":\"messages.affectedFoundMessages\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedFoundMessages\"},{\"id\":1007897979,\"predicate\":\"messageActionSetMessagesTTL\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"period\",\"type\":\"int\"},{\"name\":\"auto_setting_from\",\"type\":\"flags.0?long\"}],\"type\":\"MessageAction\"},{\"id\":-1147422299,\"predicate\":\"updatePeerHistoryTTL\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"ttl_period\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":-796432838,\"predicate\":\"updateChatParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"actor_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"prev_participant\",\"type\":\"flags.0?ChatParticipant\"},{\"name\":\"new_participant\",\"type\":\"flags.1?ChatParticipant\"},{\"name\":\"invite\",\"type\":\"flags.2?ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1738720581,\"predicate\":\"updateChannelParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"actor_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"prev_participant\",\"type\":\"flags.0?ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"flags.1?ChannelParticipant\"},{\"name\":\"invite\",\"type\":\"flags.2?ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-997782967,\"predicate\":\"updateBotStopped\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"stopped\",\"type\":\"Bool\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1940201511,\"predicate\":\"chatInviteImporter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requested\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"about\",\"type\":\"flags.2?string\"},{\"name\":\"approved_by\",\"type\":\"flags.1?long\"}],\"type\":\"ChatInviteImporter\"},{\"id\":-1111085620,\"predicate\":\"messages.exportedChatInvites\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"invites\",\"type\":\"Vector<ExportedChatInvite>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvites\"},{\"id\":410107472,\"predicate\":\"messages.exportedChatInvite\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":572915951,\"predicate\":\"messages.exportedChatInviteReplaced\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"new_invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":-2118733814,\"predicate\":\"messages.chatInviteImporters\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"importers\",\"type\":\"Vector<ChatInviteImporter>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatInviteImporters\"},{\"id\":-219353309,\"predicate\":\"chatAdminWithInvites\",\"params\":[{\"name\":\"admin_id\",\"type\":\"long\"},{\"name\":\"invites_count\",\"type\":\"int\"},{\"name\":\"revoked_invites_count\",\"type\":\"int\"}],\"type\":\"ChatAdminWithInvites\"},{\"id\":-1231326505,\"predicate\":\"messages.chatAdminsWithInvites\",\"params\":[{\"name\":\"admins\",\"type\":\"Vector<ChatAdminWithInvites>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatAdminsWithInvites\"},{\"id\":1557846647,\"predicate\":\"channelAdminLogEventActionParticipantJoinByInvite\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1515256996,\"predicate\":\"channelAdminLogEventActionExportedInviteDelete\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1091179342,\"predicate\":\"channelAdminLogEventActionExportedInviteRevoke\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-384910503,\"predicate\":\"channelAdminLogEventActionExportedInviteEdit\",\"params\":[{\"name\":\"prev_invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"new_invite\",\"type\":\"ExportedChatInvite\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1048537159,\"predicate\":\"channelAdminLogEventActionParticipantVolume\",\"params\":[{\"name\":\"participant\",\"type\":\"GroupCallParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1855199800,\"predicate\":\"channelAdminLogEventActionChangeHistoryTTL\",\"params\":[{\"name\":\"prev_value\",\"type\":\"int\"},{\"name\":\"new_value\",\"type\":\"int\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1571952873,\"predicate\":\"messages.checkedHistoryImportPeer\",\"params\":[{\"name\":\"confirm_text\",\"type\":\"string\"}],\"type\":\"messages.CheckedHistoryImportPeer\"},{\"id\":93890858,\"predicate\":\"inputGroupCallStream\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"time_ms\",\"type\":\"long\"},{\"name\":\"scale\",\"type\":\"int\"},{\"name\":\"video_channel\",\"type\":\"flags.0?int\"},{\"name\":\"video_quality\",\"type\":\"flags.0?int\"}],\"type\":\"InputFileLocation\"},{\"id\":-1343921601,\"predicate\":\"phone.joinAsPeers\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.JoinAsPeers\"},{\"id\":541839704,\"predicate\":\"phone.exportedGroupCallInvite\",\"params\":[{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"phone.ExportedGroupCallInvite\"},{\"id\":-672693723,\"predicate\":\"inputBotInlineMessageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?InputWebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"provider_data\",\"type\":\"DataJSON\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":894081801,\"predicate\":\"botInlineMessageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.1?true\"},{\"name\":\"test\",\"type\":\"flags.3?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?WebDocument\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":-1281329567,\"predicate\":\"messageActionGroupCallScheduled\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"schedule_date\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":-592373577,\"predicate\":\"groupCallParticipantVideoSourceGroup\",\"params\":[{\"name\":\"semantics\",\"type\":\"string\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"}],\"type\":\"GroupCallParticipantVideoSourceGroup\"},{\"id\":1735736008,\"predicate\":\"groupCallParticipantVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"paused\",\"type\":\"flags.0?true\"},{\"name\":\"endpoint\",\"type\":\"string\"},{\"name\":\"source_groups\",\"type\":\"Vector<GroupCallParticipantVideoSourceGroup>\"},{\"name\":\"audio_source\",\"type\":\"flags.1?int\"}],\"type\":\"GroupCallParticipantVideo\"},{\"id\":192428418,\"predicate\":\"updateGroupCallConnection\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"presentation\",\"type\":\"flags.0?true\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Update\"},{\"id\":-2046910401,\"predicate\":\"stickers.suggestedShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"stickers.SuggestedShortName\"},{\"id\":795652779,\"predicate\":\"botCommandScopeDefault\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":1011811544,\"predicate\":\"botCommandScopeUsers\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":1877059713,\"predicate\":\"botCommandScopeChats\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":-1180016534,\"predicate\":\"botCommandScopeChatAdmins\",\"params\":[],\"type\":\"BotCommandScope\"},{\"id\":-610432643,\"predicate\":\"botCommandScopePeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"BotCommandScope\"},{\"id\":1071145937,\"predicate\":\"botCommandScopePeerAdmins\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"BotCommandScope\"},{\"id\":169026035,\"predicate\":\"botCommandScopePeerUser\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"BotCommandScope\"},{\"id\":-478701471,\"predicate\":\"account.resetPasswordFailedWait\",\"params\":[{\"name\":\"retry_date\",\"type\":\"int\"}],\"type\":\"account.ResetPasswordResult\"},{\"id\":-370148227,\"predicate\":\"account.resetPasswordRequestedWait\",\"params\":[{\"name\":\"until_date\",\"type\":\"int\"}],\"type\":\"account.ResetPasswordResult\"},{\"id\":-383330754,\"predicate\":\"account.resetPasswordOk\",\"params\":[],\"type\":\"account.ResetPasswordResult\"},{\"id\":1299263278,\"predicate\":\"updateBotCommands\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"commands\",\"type\":\"Vector<BotCommand>\"}],\"type\":\"Update\"},{\"id\":-1434950843,\"predicate\":\"messageActionSetChatTheme\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":-1336228175,\"predicate\":\"sendMessageChooseStickerAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":981691896,\"predicate\":\"sponsoredMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"recommended\",\"type\":\"flags.5?true\"},{\"name\":\"show_peer_photo\",\"type\":\"flags.6?true\"},{\"name\":\"random_id\",\"type\":\"bytes\"},{\"name\":\"from_id\",\"type\":\"flags.3?Peer\"},{\"name\":\"chat_invite\",\"type\":\"flags.4?ChatInvite\"},{\"name\":\"chat_invite_hash\",\"type\":\"flags.4?string\"},{\"name\":\"channel_post\",\"type\":\"flags.2?int\"},{\"name\":\"start_param\",\"type\":\"flags.0?string\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"}],\"type\":\"SponsoredMessage\"},{\"id\":-907141753,\"predicate\":\"messages.sponsoredMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"posts_between\",\"type\":\"flags.0?int\"},{\"name\":\"messages\",\"type\":\"Vector<SponsoredMessage>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.SponsoredMessages\"},{\"id\":215889721,\"predicate\":\"inputStickerSetAnimatedEmojiAnimations\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":630664139,\"predicate\":\"sendMessageEmojiInteraction\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"interaction\",\"type\":\"DataJSON\"}],\"type\":\"SendMessageAction\"},{\"id\":-1234857938,\"predicate\":\"sendMessageEmojiInteractionSeen\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"SendMessageAction\"},{\"id\":-1227287081,\"predicate\":\"inputBotInlineMessageID64\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"owner_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputBotInlineMessageID\"},{\"id\":-911191137,\"predicate\":\"searchResultsCalendarPeriod\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"min_msg_id\",\"type\":\"int\"},{\"name\":\"max_msg_id\",\"type\":\"int\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"SearchResultsCalendarPeriod\"},{\"id\":343859772,\"predicate\":\"messages.searchResultsCalendar\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.0?true\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"min_msg_id\",\"type\":\"int\"},{\"name\":\"offset_id_offset\",\"type\":\"flags.1?int\"},{\"name\":\"periods\",\"type\":\"Vector<SearchResultsCalendarPeriod>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.SearchResultsCalendar\"},{\"id\":2137295719,\"predicate\":\"searchResultPosition\",\"params\":[{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"SearchResultsPosition\"},{\"id\":1404185519,\"predicate\":\"messages.searchResultsPositions\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"positions\",\"type\":\"Vector<SearchResultsPosition>\"}],\"type\":\"messages.SearchResultsPositions\"},{\"id\":-339958837,\"predicate\":\"messageActionChatJoinedByRequest\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":1885586395,\"predicate\":\"updatePendingJoinRequests\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"requests_pending\",\"type\":\"int\"},{\"name\":\"recent_requesters\",\"type\":\"Vector<long>\"}],\"type\":\"Update\"},{\"id\":299870598,\"predicate\":\"updateBotChatInviteRequester\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":-1347021750,\"predicate\":\"channelAdminLogEventActionParticipantJoinByRequest\",\"params\":[{\"name\":\"invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"approved_by\",\"type\":\"long\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-376962181,\"predicate\":\"inputKeyboardButtonUserProfile\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"KeyboardButton\"},{\"id\":814112961,\"predicate\":\"keyboardButtonUserProfile\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"KeyboardButton\"},{\"id\":-191450938,\"predicate\":\"channels.sendAsPeers\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<SendAsPeer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.SendAsPeers\"},{\"id\":-886388890,\"predicate\":\"channelAdminLogEventActionToggleNoForwards\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-738646805,\"predicate\":\"messages.stickerSetNotModified\",\"params\":[],\"type\":\"messages.StickerSet\"},{\"id\":997004590,\"predicate\":\"users.userFull\",\"params\":[{\"name\":\"full_user\",\"type\":\"UserFull\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"users.UserFull\"},{\"id\":1753266509,\"predicate\":\"messages.peerSettings\",\"params\":[{\"name\":\"settings\",\"type\":\"PeerSettings\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.PeerSettings\"},{\"id\":663693416,\"predicate\":\"channelAdminLogEventActionSendMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-702884114,\"predicate\":\"auth.codeTypeMissedCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":-2113903484,\"predicate\":\"auth.sentCodeTypeMissedCall\",\"params\":[{\"name\":\"prefix\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1012759713,\"predicate\":\"auth.loggedOut\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"future_auth_token\",\"type\":\"flags.0?bytes\"}],\"type\":\"auth.LoggedOut\"},{\"id\":1578843320,\"predicate\":\"updateMessageReactions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"reactions\",\"type\":\"MessageReactions\"}],\"type\":\"Update\"},{\"id\":-1546531968,\"predicate\":\"reactionCount\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chosen_order\",\"type\":\"flags.0?int\"},{\"name\":\"reaction\",\"type\":\"Reaction\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"ReactionCount\"},{\"id\":1328256121,\"predicate\":\"messageReactions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"min\",\"type\":\"flags.0?true\"},{\"name\":\"can_see_list\",\"type\":\"flags.2?true\"},{\"name\":\"results\",\"type\":\"Vector<ReactionCount>\"},{\"name\":\"recent_reactions\",\"type\":\"flags.1?Vector<MessagePeerReaction>\"}],\"type\":\"MessageReactions\"},{\"id\":834488621,\"predicate\":\"messages.messageReactionsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"Vector<MessagePeerReaction>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"}],\"type\":\"messages.MessageReactionsList\"},{\"id\":-1065882623,\"predicate\":\"availableReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inactive\",\"type\":\"flags.0?true\"},{\"name\":\"premium\",\"type\":\"flags.2?true\"},{\"name\":\"reaction\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"static_icon\",\"type\":\"Document\"},{\"name\":\"appear_animation\",\"type\":\"Document\"},{\"name\":\"select_animation\",\"type\":\"Document\"},{\"name\":\"activate_animation\",\"type\":\"Document\"},{\"name\":\"effect_animation\",\"type\":\"Document\"},{\"name\":\"around_animation\",\"type\":\"flags.1?Document\"},{\"name\":\"center_icon\",\"type\":\"flags.1?Document\"}],\"type\":\"AvailableReaction\"},{\"id\":-1626924713,\"predicate\":\"messages.availableReactionsNotModified\",\"params\":[],\"type\":\"messages.AvailableReactions\"},{\"id\":1989032621,\"predicate\":\"messages.availableReactions\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"reactions\",\"type\":\"Vector<AvailableReaction>\"}],\"type\":\"messages.AvailableReactions\"},{\"id\":852137487,\"predicate\":\"messageEntitySpoiler\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":-1102180616,\"predicate\":\"channelAdminLogEventActionChangeAvailableReactions\",\"params\":[{\"name\":\"prev_value\",\"type\":\"ChatReactions\"},{\"name\":\"new_value\",\"type\":\"ChatReactions\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1741309751,\"predicate\":\"messages.translateNoResult\",\"params\":[],\"type\":\"messages.TranslatedText\"},{\"id\":-1575684144,\"predicate\":\"messages.translateResultText\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"messages.TranslatedText\"},{\"id\":-1319698788,\"predicate\":\"messagePeerReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"big\",\"type\":\"flags.0?true\"},{\"name\":\"unread\",\"type\":\"flags.1?true\"},{\"name\":\"peer_id\",\"type\":\"Peer\"},{\"name\":\"reaction\",\"type\":\"Reaction\"}],\"type\":\"MessagePeerReaction\"},{\"id\":-2132064081,\"predicate\":\"groupCallStreamChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"int\"},{\"name\":\"scale\",\"type\":\"int\"},{\"name\":\"last_timestamp_ms\",\"type\":\"long\"}],\"type\":\"GroupCallStreamChannel\"},{\"id\":-790330702,\"predicate\":\"phone.groupCallStreamChannels\",\"params\":[{\"name\":\"channels\",\"type\":\"Vector<GroupCallStreamChannel>\"}],\"type\":\"phone.GroupCallStreamChannels\"},{\"id\":177124030,\"predicate\":\"inputReportReasonIllegalDrugs\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":-1631091139,\"predicate\":\"inputReportReasonPersonalDetails\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":767505458,\"predicate\":\"phone.groupCallStreamRtmpUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"key\",\"type\":\"string\"}],\"type\":\"phone.GroupCallStreamRtmpUrl\"},{\"id\":1165423600,\"predicate\":\"attachMenuBotIconColor\",\"params\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"color\",\"type\":\"int\"}],\"type\":\"AttachMenuBotIconColor\"},{\"id\":-1297663893,\"predicate\":\"attachMenuBotIcon\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"icon\",\"type\":\"Document\"},{\"name\":\"colors\",\"type\":\"flags.0?Vector<AttachMenuBotIconColor>\"}],\"type\":\"AttachMenuBotIcon\"},{\"id\":-928371502,\"predicate\":\"attachMenuBot\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inactive\",\"type\":\"flags.0?true\"},{\"name\":\"has_settings\",\"type\":\"flags.1?true\"},{\"name\":\"request_write_access\",\"type\":\"flags.2?true\"},{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"peer_types\",\"type\":\"Vector<AttachMenuPeerType>\"},{\"name\":\"icons\",\"type\":\"Vector<AttachMenuBotIcon>\"}],\"type\":\"AttachMenuBot\"},{\"id\":-237467044,\"predicate\":\"attachMenuBotsNotModified\",\"params\":[],\"type\":\"AttachMenuBots\"},{\"id\":1011024320,\"predicate\":\"attachMenuBots\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"bots\",\"type\":\"Vector<AttachMenuBot>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"AttachMenuBots\"},{\"id\":-1816172929,\"predicate\":\"attachMenuBotsBot\",\"params\":[{\"name\":\"bot\",\"type\":\"AttachMenuBot\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"AttachMenuBotsBot\"},{\"id\":397910539,\"predicate\":\"updateAttachMenuBots\",\"params\":[],\"type\":\"Update\"},{\"id\":202659196,\"predicate\":\"webViewResultUrl\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"WebViewResult\"},{\"id\":-2010155333,\"predicate\":\"simpleWebViewResultUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"SimpleWebViewResult\"},{\"id\":211046684,\"predicate\":\"webViewMessageSent\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"msg_id\",\"type\":\"flags.0?InputBotInlineMessageID\"}],\"type\":\"WebViewMessageSent\"},{\"id\":361936797,\"predicate\":\"updateWebViewResultSent\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":326529584,\"predicate\":\"keyboardButtonWebView\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":-1598009252,\"predicate\":\"keyboardButtonSimpleWebView\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":1205698681,\"predicate\":\"messageActionWebViewDataSentMe\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":-1262252875,\"predicate\":\"messageActionWebViewDataSent\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":347625491,\"predicate\":\"updateBotMenuButton\",\"params\":[{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"button\",\"type\":\"BotMenuButton\"}],\"type\":\"Update\"},{\"id\":1966318984,\"predicate\":\"botMenuButtonDefault\",\"params\":[],\"type\":\"BotMenuButton\"},{\"id\":1113113093,\"predicate\":\"botMenuButtonCommands\",\"params\":[],\"type\":\"BotMenuButton\"},{\"id\":-944407322,\"predicate\":\"botMenuButton\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"BotMenuButton\"},{\"id\":-67704655,\"predicate\":\"account.savedRingtonesNotModified\",\"params\":[],\"type\":\"account.SavedRingtones\"},{\"id\":-1041683259,\"predicate\":\"account.savedRingtones\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"ringtones\",\"type\":\"Vector<Document>\"}],\"type\":\"account.SavedRingtones\"},{\"id\":1960361625,\"predicate\":\"updateSavedRingtones\",\"params\":[],\"type\":\"Update\"},{\"id\":-1746354498,\"predicate\":\"notificationSoundDefault\",\"params\":[],\"type\":\"NotificationSound\"},{\"id\":1863070943,\"predicate\":\"notificationSoundNone\",\"params\":[],\"type\":\"NotificationSound\"},{\"id\":-2096391452,\"predicate\":\"notificationSoundLocal\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"NotificationSound\"},{\"id\":-9666487,\"predicate\":\"notificationSoundRingtone\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"NotificationSound\"},{\"id\":-1222230163,\"predicate\":\"account.savedRingtone\",\"params\":[],\"type\":\"account.SavedRingtone\"},{\"id\":523271863,\"predicate\":\"account.savedRingtoneConverted\",\"params\":[{\"name\":\"document\",\"type\":\"Document\"}],\"type\":\"account.SavedRingtone\"},{\"id\":2104224014,\"predicate\":\"attachMenuPeerTypeSameBotPM\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":-1020528102,\"predicate\":\"attachMenuPeerTypeBotPM\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":-247016673,\"predicate\":\"attachMenuPeerTypePM\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":84480319,\"predicate\":\"attachMenuPeerTypeChat\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":2080104188,\"predicate\":\"attachMenuPeerTypeBroadcast\",\"params\":[],\"type\":\"AttachMenuPeerType\"},{\"id\":-317687113,\"predicate\":\"chatInvitePublicJoinRequests\",\"params\":[],\"type\":\"ExportedChatInvite\"},{\"id\":-977967015,\"predicate\":\"inputInvoiceMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"InputInvoice\"},{\"id\":-1020867857,\"predicate\":\"inputInvoiceSlug\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"InputInvoice\"},{\"id\":-1362048039,\"predicate\":\"payments.exportedInvoice\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"payments.ExportedInvoice\"},{\"id\":8703322,\"predicate\":\"updateTranscribedAudio\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pending\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"transcription_id\",\"type\":\"long\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":-1821037486,\"predicate\":\"messages.transcribedAudio\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pending\",\"type\":\"flags.0?true\"},{\"name\":\"transcription_id\",\"type\":\"long\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"messages.TranscribedAudio\"},{\"id\":909284270,\"predicate\":\"dialogFilterDefault\",\"params\":[],\"type\":\"DialogFilter\"},{\"id\":1395946908,\"predicate\":\"help.premiumPromo\",\"params\":[{\"name\":\"status_text\",\"type\":\"string\"},{\"name\":\"status_entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"video_sections\",\"type\":\"Vector<string>\"},{\"name\":\"videos\",\"type\":\"Vector<Document>\"},{\"name\":\"period_options\",\"type\":\"Vector<PremiumSubscriptionOption>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"help.PremiumPromo\"},{\"id\":-925956616,\"predicate\":\"messageEntityCustomEmoji\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"document_id\",\"type\":\"long\"}],\"type\":\"MessageEntity\"},{\"id\":-48981863,\"predicate\":\"documentAttributeCustomEmoji\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"free\",\"type\":\"flags.0?true\"},{\"name\":\"text_color\",\"type\":\"flags.1?true\"},{\"name\":\"alt\",\"type\":\"string\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"DocumentAttribute\"},{\"id\":1087454222,\"predicate\":\"stickerSetFullCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"keywords\",\"type\":\"Vector<StickerKeyword>\"},{\"name\":\"documents\",\"type\":\"Vector<Document>\"}],\"type\":\"StickerSetCovered\"},{\"id\":-1502273946,\"predicate\":\"inputStorePaymentPremiumSubscription\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"restore\",\"type\":\"flags.0?true\"}],\"type\":\"InputStorePaymentPurpose\"},{\"id\":1634697192,\"predicate\":\"inputStorePaymentGiftPremium\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"InputStorePaymentPurpose\"},{\"id\":-1415514682,\"predicate\":\"messageActionGiftPremium\",\"params\":[{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"},{\"name\":\"months\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":1958953753,\"predicate\":\"premiumGiftOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"},{\"name\":\"bot_url\",\"type\":\"string\"},{\"name\":\"store_product\",\"type\":\"flags.0?string\"}],\"type\":\"PremiumGiftOption\"},{\"id\":-930399486,\"predicate\":\"inputStickerSetPremiumGifts\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":-78886548,\"predicate\":\"updateReadFeaturedEmojiStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":-1360618136,\"predicate\":\"inputPrivacyKeyVoiceMessages\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":110621716,\"predicate\":\"privacyKeyVoiceMessages\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":-1996951013,\"predicate\":\"paymentFormMethod\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"PaymentFormMethod\"},{\"id\":-193992412,\"predicate\":\"inputWebFileAudioAlbumThumbLocation\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"small\",\"type\":\"flags.2?true\"},{\"name\":\"document\",\"type\":\"flags.0?InputDocument\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"performer\",\"type\":\"flags.1?string\"}],\"type\":\"InputWebFileLocation\"},{\"id\":769727150,\"predicate\":\"emojiStatusEmpty\",\"params\":[],\"type\":\"EmojiStatus\"},{\"id\":-1835310691,\"predicate\":\"emojiStatus\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"}],\"type\":\"EmojiStatus\"},{\"id\":-97474361,\"predicate\":\"emojiStatusUntil\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"},{\"name\":\"until\",\"type\":\"int\"}],\"type\":\"EmojiStatus\"},{\"id\":674706841,\"predicate\":\"updateUserEmojiStatus\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"},{\"name\":\"emoji_status\",\"type\":\"EmojiStatus\"}],\"type\":\"Update\"},{\"id\":821314523,\"predicate\":\"updateRecentEmojiStatuses\",\"params\":[],\"type\":\"Update\"},{\"id\":-796072379,\"predicate\":\"account.emojiStatusesNotModified\",\"params\":[],\"type\":\"account.EmojiStatuses\"},{\"id\":-1866176559,\"predicate\":\"account.emojiStatuses\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"statuses\",\"type\":\"Vector<EmojiStatus>\"}],\"type\":\"account.EmojiStatuses\"},{\"id\":2046153753,\"predicate\":\"reactionEmpty\",\"params\":[],\"type\":\"Reaction\"},{\"id\":455247544,\"predicate\":\"reactionEmoji\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"Reaction\"},{\"id\":-1992950669,\"predicate\":\"reactionCustomEmoji\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"}],\"type\":\"Reaction\"},{\"id\":-352570692,\"predicate\":\"chatReactionsNone\",\"params\":[],\"type\":\"ChatReactions\"},{\"id\":1385335754,\"predicate\":\"chatReactionsAll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"allow_custom\",\"type\":\"flags.0?true\"}],\"type\":\"ChatReactions\"},{\"id\":1713193015,\"predicate\":\"chatReactionsSome\",\"params\":[{\"name\":\"reactions\",\"type\":\"Vector<Reaction>\"}],\"type\":\"ChatReactions\"},{\"id\":-1334846497,\"predicate\":\"messages.reactionsNotModified\",\"params\":[],\"type\":\"messages.Reactions\"},{\"id\":-352454890,\"predicate\":\"messages.reactions\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"reactions\",\"type\":\"Vector<Reaction>\"}],\"type\":\"messages.Reactions\"},{\"id\":1870160884,\"predicate\":\"updateRecentReactions\",\"params\":[],\"type\":\"Update\"},{\"id\":-2030252155,\"predicate\":\"updateMoveStickerSetToTop\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"},{\"name\":\"stickerset\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":1511364673,\"predicate\":\"auth.sentCodeTypeEmailCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"apple_signin_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"google_signin_allowed\",\"type\":\"flags.1?true\"},{\"name\":\"email_pattern\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"next_phone_login_date\",\"type\":\"flags.2?int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":-1521934870,\"predicate\":\"auth.sentCodeTypeSetUpEmailRequired\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"apple_signin_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"google_signin_allowed\",\"type\":\"flags.1?true\"}],\"type\":\"auth.SentCodeType\"},{\"id\":1128644211,\"predicate\":\"emailVerifyPurposeLoginSetup\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"EmailVerifyPurpose\"},{\"id\":1383932651,\"predicate\":\"emailVerifyPurposeLoginChange\",\"params\":[],\"type\":\"EmailVerifyPurpose\"},{\"id\":-1141565819,\"predicate\":\"emailVerifyPurposePassport\",\"params\":[],\"type\":\"EmailVerifyPurpose\"},{\"id\":-1842457175,\"predicate\":\"emailVerificationCode\",\"params\":[{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"EmailVerification\"},{\"id\":-611279166,\"predicate\":\"emailVerificationGoogle\",\"params\":[{\"name\":\"token\",\"type\":\"string\"}],\"type\":\"EmailVerification\"},{\"id\":-1764723459,\"predicate\":\"emailVerificationApple\",\"params\":[{\"name\":\"token\",\"type\":\"string\"}],\"type\":\"EmailVerification\"},{\"id\":731303195,\"predicate\":\"account.emailVerified\",\"params\":[{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"account.EmailVerified\"},{\"id\":-507835039,\"predicate\":\"account.emailVerifiedLogin\",\"params\":[{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"sent_code\",\"type\":\"auth.SentCode\"}],\"type\":\"account.EmailVerified\"},{\"id\":-1225711938,\"predicate\":\"premiumSubscriptionOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"current\",\"type\":\"flags.1?true\"},{\"name\":\"can_purchase_upgrade\",\"type\":\"flags.2?true\"},{\"name\":\"months\",\"type\":\"int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"},{\"name\":\"bot_url\",\"type\":\"string\"},{\"name\":\"store_product\",\"type\":\"flags.0?string\"}],\"type\":\"PremiumSubscriptionOption\"},{\"id\":80008398,\"predicate\":\"inputStickerSetEmojiGenericAnimations\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":701560302,\"predicate\":\"inputStickerSetEmojiDefaultStatuses\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":-1206095820,\"predicate\":\"sendAsPeer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"premium_required\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"SendAsPeer\"},{\"id\":-1386050360,\"predicate\":\"messageExtendedMediaPreview\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"w\",\"type\":\"flags.0?int\"},{\"name\":\"h\",\"type\":\"flags.0?int\"},{\"name\":\"thumb\",\"type\":\"flags.1?PhotoSize\"},{\"name\":\"video_duration\",\"type\":\"flags.2?int\"}],\"type\":\"MessageExtendedMedia\"},{\"id\":-297296796,\"predicate\":\"messageExtendedMedia\",\"params\":[{\"name\":\"media\",\"type\":\"MessageMedia\"}],\"type\":\"MessageExtendedMedia\"},{\"id\":1517529484,\"predicate\":\"updateMessageExtendedMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"extended_media\",\"type\":\"MessageExtendedMedia\"}],\"type\":\"Update\"},{\"id\":-50416996,\"predicate\":\"stickerKeyword\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"},{\"name\":\"keyword\",\"type\":\"Vector<string>\"}],\"type\":\"StickerKeyword\"},{\"id\":-1274595769,\"predicate\":\"username\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"editable\",\"type\":\"flags.0?true\"},{\"name\":\"active\",\"type\":\"flags.1?true\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Username\"},{\"id\":-263212119,\"predicate\":\"channelAdminLogEventActionChangeUsernames\",\"params\":[{\"name\":\"prev_value\",\"type\":\"Vector<string>\"},{\"name\":\"new_value\",\"type\":\"Vector<string>\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":46949251,\"predicate\":\"channelAdminLogEventActionToggleForum\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1483767080,\"predicate\":\"channelAdminLogEventActionCreateTopic\",\"params\":[{\"name\":\"topic\",\"type\":\"ForumTopic\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-261103096,\"predicate\":\"channelAdminLogEventActionEditTopic\",\"params\":[{\"name\":\"prev_topic\",\"type\":\"ForumTopic\"},{\"name\":\"new_topic\",\"type\":\"ForumTopic\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":-1374254839,\"predicate\":\"channelAdminLogEventActionDeleteTopic\",\"params\":[{\"name\":\"topic\",\"type\":\"ForumTopic\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1569535291,\"predicate\":\"channelAdminLogEventActionPinTopic\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"prev_topic\",\"type\":\"flags.0?ForumTopic\"},{\"name\":\"new_topic\",\"type\":\"flags.1?ForumTopic\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":37687451,\"predicate\":\"forumTopicDeleted\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"ForumTopic\"},{\"id\":1903173033,\"predicate\":\"forumTopic\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"my\",\"type\":\"flags.1?true\"},{\"name\":\"closed\",\"type\":\"flags.2?true\"},{\"name\":\"pinned\",\"type\":\"flags.3?true\"},{\"name\":\"short\",\"type\":\"flags.5?true\"},{\"name\":\"hidden\",\"type\":\"flags.6?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"icon_color\",\"type\":\"int\"},{\"name\":\"icon_emoji_id\",\"type\":\"flags.0?long\"},{\"name\":\"top_message\",\"type\":\"int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"unread_mentions_count\",\"type\":\"int\"},{\"name\":\"unread_reactions_count\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"Peer\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"draft\",\"type\":\"flags.4?DraftMessage\"}],\"type\":\"ForumTopic\"},{\"id\":913709011,\"predicate\":\"messages.forumTopics\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"order_by_create_date\",\"type\":\"flags.0?true\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"topics\",\"type\":\"Vector<ForumTopic>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"pts\",\"type\":\"int\"}],\"type\":\"messages.ForumTopics\"},{\"id\":228168278,\"predicate\":\"messageActionTopicCreate\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"icon_color\",\"type\":\"int\"},{\"name\":\"icon_emoji_id\",\"type\":\"flags.0?long\"}],\"type\":\"MessageAction\"},{\"id\":-1064024032,\"predicate\":\"messageActionTopicEdit\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"icon_emoji_id\",\"type\":\"flags.1?long\"},{\"name\":\"closed\",\"type\":\"flags.2?Bool\"},{\"name\":\"hidden\",\"type\":\"flags.3?Bool\"}],\"type\":\"MessageAction\"},{\"id\":422509539,\"predicate\":\"updateChannelPinnedTopic\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"topic_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":1548122514,\"predicate\":\"inputNotifyForumTopic\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"int\"}],\"type\":\"InputNotifyPeer\"},{\"id\":577659656,\"predicate\":\"notifyForumTopic\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_msg_id\",\"type\":\"int\"}],\"type\":\"NotifyPeer\"},{\"id\":1153562857,\"predicate\":\"inputStickerSetEmojiDefaultTopicIcons\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":406407439,\"predicate\":\"messages.sponsoredMessagesEmpty\",\"params\":[],\"type\":\"messages.SponsoredMessages\"},{\"id\":-31881726,\"predicate\":\"updateChannelPinnedTopics\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"long\"},{\"name\":\"order\",\"type\":\"flags.0?Vector<int>\"}],\"type\":\"Update\"},{\"id\":1135897376,\"predicate\":\"defaultHistoryTTL\",\"params\":[{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"DefaultHistoryTTL\"},{\"id\":116234636,\"predicate\":\"auth.codeTypeFragmentSms\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":-648651719,\"predicate\":\"auth.sentCodeTypeFragmentSms\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":1103040667,\"predicate\":\"exportedContactToken\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"ExportedContactToken\"},{\"id\":1693675004,\"predicate\":\"channelAdminLogEventActionToggleAntiSpam\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":1474192222,\"predicate\":\"messageActionSuggestProfilePhoto\",\"params\":[{\"name\":\"photo\",\"type\":\"Photo\"}],\"type\":\"MessageAction\"},{\"id\":-404267113,\"predicate\":\"messageActionAttachMenuBotAllowed\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":2008112412,\"predicate\":\"stickerSetNoCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"}],\"type\":\"StickerSetCovered\"},{\"id\":542282808,\"predicate\":\"updateUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"long\"}],\"type\":\"Update\"}],\"methods\":[{\"id\":-878758099,\"method\":\"invokeAfterMsg\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":1036301552,\"method\":\"invokeAfterMsgs\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1502141361,\"method\":\"auth.sendCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":-2131827673,\"method\":\"auth.signUp\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":-1923962543,\"method\":\"auth.signIn\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"flags.0?string\"},{\"name\":\"email_verification\",\"type\":\"flags.1?EmailVerification\"}],\"type\":\"auth.Authorization\"},{\"id\":1047706137,\"method\":\"auth.logOut\",\"params\":[],\"type\":\"auth.LoggedOut\"},{\"id\":-1616179942,\"method\":\"auth.resetAuthorizations\",\"params\":[],\"type\":\"Bool\"},{\"id\":-440401971,\"method\":\"auth.exportAuthorization\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"auth.ExportedAuthorization\"},{\"id\":-1518699091,\"method\":\"auth.importAuthorization\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"auth.Authorization\"},{\"id\":-841733627,\"method\":\"auth.bindTempAuthKey\",\"params\":[{\"name\":\"perm_auth_key_id\",\"type\":\"long\"},{\"name\":\"nonce\",\"type\":\"long\"},{\"name\":\"expires_at\",\"type\":\"int\"},{\"name\":\"encrypted_message\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-326762118,\"method\":\"account.registerDevice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_muted\",\"type\":\"flags.0?true\"},{\"name\":\"token_type\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"app_sandbox\",\"type\":\"Bool\"},{\"name\":\"secret\",\"type\":\"bytes\"},{\"name\":\"other_uids\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":1779249670,\"method\":\"account.unregisterDevice\",\"params\":[{\"name\":\"token_type\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"other_uids\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-2067899501,\"method\":\"account.updateNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputNotifyPeer\"},{\"name\":\"settings\",\"type\":\"InputPeerNotifySettings\"}],\"type\":\"Bool\"},{\"id\":313765169,\"method\":\"account.getNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputNotifyPeer\"}],\"type\":\"PeerNotifySettings\"},{\"id\":-612493497,\"method\":\"account.resetNotifySettings\",\"params\":[],\"type\":\"Bool\"},{\"id\":2018596725,\"method\":\"account.updateProfile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"first_name\",\"type\":\"flags.0?string\"},{\"name\":\"last_name\",\"type\":\"flags.1?string\"},{\"name\":\"about\",\"type\":\"flags.2?string\"}],\"type\":\"User\"},{\"id\":1713919532,\"method\":\"account.updateStatus\",\"params\":[{\"name\":\"offline\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":127302966,\"method\":\"account.getWallPapers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.WallPapers\"},{\"id\":-977650298,\"method\":\"account.reportPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":227648840,\"method\":\"users.getUsers\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Vector<User>\"},{\"id\":-1240508136,\"method\":\"users.getFullUser\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"}],\"type\":\"users.UserFull\"},{\"id\":2061264541,\"method\":\"contacts.getContactIDs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Vector<int>\"},{\"id\":-995929106,\"method\":\"contacts.getStatuses\",\"params\":[],\"type\":\"Vector<ContactStatus>\"},{\"id\":1574346258,\"method\":\"contacts.getContacts\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"contacts.Contacts\"},{\"id\":746589157,\"method\":\"contacts.importContacts\",\"params\":[{\"name\":\"contacts\",\"type\":\"Vector<InputContact>\"}],\"type\":\"contacts.ImportedContacts\"},{\"id\":157945344,\"method\":\"contacts.deleteContacts\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":269745566,\"method\":\"contacts.deleteByPhones\",\"params\":[{\"name\":\"phones\",\"type\":\"Vector<string>\"}],\"type\":\"Bool\"},{\"id\":1758204945,\"method\":\"contacts.block\",\"params\":[{\"name\":\"id\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-1096393392,\"method\":\"contacts.unblock\",\"params\":[{\"name\":\"id\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-176409329,\"method\":\"contacts.getBlocked\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"contacts.Blocked\"},{\"id\":1673946374,\"method\":\"messages.getMessages\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputMessage>\"}],\"type\":\"messages.Messages\"},{\"id\":-1594569905,\"method\":\"messages.getDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_pinned\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Dialogs\"},{\"id\":1143203525,\"method\":\"messages.getHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":-1593989278,\"method\":\"messages.search\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"from_id\",\"type\":\"flags.0?InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":238054714,\"method\":\"messages.readHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":-1332768214,\"method\":\"messages.deleteHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"just_clear\",\"type\":\"flags.0?true\"},{\"name\":\"revoke\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_date\",\"type\":\"flags.2?int\"},{\"name\":\"max_date\",\"type\":\"flags.3?int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":-443640366,\"method\":\"messages.deleteMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":94983360,\"method\":\"messages.receivedMessages\",\"params\":[{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Vector<ReceivedNotifyMessage>\"},{\"id\":1486110434,\"method\":\"messages.setTyping\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Bool\"},{\"id\":482476935,\"method\":\"messages.sendMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"update_stickersets_order\",\"type\":\"flags.15?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"top_msg_id\",\"type\":\"flags.9?int\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":1967638886,\"method\":\"messages.sendMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"update_stickersets_order\",\"type\":\"flags.15?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"top_msg_id\",\"type\":\"flags.9?int\"},{\"name\":\"media\",\"type\":\"InputMedia\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-966673468,\"method\":\"messages.forwardMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"with_my_score\",\"type\":\"flags.8?true\"},{\"name\":\"drop_author\",\"type\":\"flags.11?true\"},{\"name\":\"drop_media_captions\",\"type\":\"flags.12?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"from_peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"random_id\",\"type\":\"Vector<long>\"},{\"name\":\"to_peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.9?int\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-820669733,\"method\":\"messages.reportSpam\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-270948702,\"method\":\"messages.getPeerSettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.PeerSettings\"},{\"id\":-1991005362,\"method\":\"messages.report\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1240027791,\"method\":\"messages.getChats\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<long>\"}],\"type\":\"messages.Chats\"},{\"id\":-1364194508,\"method\":\"messages.getFullChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"messages.ChatFull\"},{\"id\":1937260541,\"method\":\"messages.editChatTitle\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":903730804,\"method\":\"messages.editChatPhoto\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"photo\",\"type\":\"InputChatPhoto\"}],\"type\":\"Updates\"},{\"id\":-230206493,\"method\":\"messages.addChatUser\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"fwd_limit\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1575461717,\"method\":\"messages.deleteChatUser\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke_history\",\"type\":\"flags.0?true\"},{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":3450904,\"method\":\"messages.createChat\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"users\",\"type\":\"Vector<InputUser>\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"ttl_period\",\"type\":\"flags.0?int\"}],\"type\":\"Updates\"},{\"id\":-304838614,\"method\":\"updates.getState\",\"params\":[],\"type\":\"updates.State\"},{\"id\":630429265,\"method\":\"updates.getDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_total_limit\",\"type\":\"flags.0?int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":473782614,\"method\":\"photos.updateProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"fallback\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"photos.Photo\"},{\"id\":-1980559511,\"method\":\"photos.uploadProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"fallback\",\"type\":\"flags.3?true\"},{\"name\":\"file\",\"type\":\"flags.0?InputFile\"},{\"name\":\"video\",\"type\":\"flags.1?InputFile\"},{\"name\":\"video_start_ts\",\"type\":\"flags.2?double\"}],\"type\":\"photos.Photo\"},{\"id\":-2016444625,\"method\":\"photos.deletePhotos\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputPhoto>\"}],\"type\":\"Vector<long>\"},{\"id\":-1291540959,\"method\":\"upload.saveFilePart\",\"params\":[{\"name\":\"file_id\",\"type\":\"long\"},{\"name\":\"file_part\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-1101843010,\"method\":\"upload.getFile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"precise\",\"type\":\"flags.0?true\"},{\"name\":\"cdn_supported\",\"type\":\"flags.1?true\"},{\"name\":\"location\",\"type\":\"InputFileLocation\"},{\"name\":\"offset\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.File\"},{\"id\":-990308245,\"method\":\"help.getConfig\",\"params\":[],\"type\":\"Config\"},{\"id\":531836966,\"method\":\"help.getNearestDc\",\"params\":[],\"type\":\"NearestDc\"},{\"id\":1378703997,\"method\":\"help.getAppUpdate\",\"params\":[{\"name\":\"source\",\"type\":\"string\"}],\"type\":\"help.AppUpdate\"},{\"id\":1295590211,\"method\":\"help.getInviteText\",\"params\":[],\"type\":\"help.InviteText\"},{\"id\":-1848823128,\"method\":\"photos.getUserPhotos\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"photos.Photos\"},{\"id\":651135312,\"method\":\"messages.getDhConfig\",\"params\":[{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"random_length\",\"type\":\"int\"}],\"type\":\"messages.DhConfig\"},{\"id\":-162681021,\"method\":\"messages.requestEncryption\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"g_a\",\"type\":\"bytes\"}],\"type\":\"EncryptedChat\"},{\"id\":1035731989,\"method\":\"messages.acceptEncryption\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":-208425312,\"method\":\"messages.discardEncryption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"delete_history\",\"type\":\"flags.0?true\"},{\"name\":\"chat_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":2031374829,\"method\":\"messages.setEncryptedTyping\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"typing\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":2135648522,\"method\":\"messages.readEncryptedHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"max_date\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1157265941,\"method\":\"messages.sendEncrypted\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":1431914525,\"method\":\"messages.sendEncryptedFile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"file\",\"type\":\"InputEncryptedFile\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":852769188,\"method\":\"messages.sendEncryptedService\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":1436924774,\"method\":\"messages.receivedQueue\",\"params\":[{\"name\":\"max_qts\",\"type\":\"int\"}],\"type\":\"Vector<long>\"},{\"id\":1259113487,\"method\":\"messages.reportEncryptedSpam\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"}],\"type\":\"Bool\"},{\"id\":-562337987,\"method\":\"upload.saveBigFilePart\",\"params\":[{\"name\":\"file_id\",\"type\":\"long\"},{\"name\":\"file_part\",\"type\":\"int\"},{\"name\":\"file_total_parts\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-1043505495,\"method\":\"initConnection\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"device_model\",\"type\":\"string\"},{\"name\":\"system_version\",\"type\":\"string\"},{\"name\":\"app_version\",\"type\":\"string\"},{\"name\":\"system_lang_code\",\"type\":\"string\"},{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"proxy\",\"type\":\"flags.0?InputClientProxy\"},{\"name\":\"params\",\"type\":\"flags.1?JSONValue\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1663104819,\"method\":\"help.getSupport\",\"params\":[],\"type\":\"help.Support\"},{\"id\":916930423,\"method\":\"messages.readMessageContents\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":655677548,\"method\":\"account.checkUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1040964988,\"method\":\"account.updateUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"User\"},{\"id\":301470424,\"method\":\"contacts.search\",\"params\":[{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"contacts.Found\"},{\"id\":-623130288,\"method\":\"account.getPrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"InputPrivacyKey\"}],\"type\":\"account.PrivacyRules\"},{\"id\":-906486552,\"method\":\"account.setPrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"InputPrivacyKey\"},{\"name\":\"rules\",\"type\":\"Vector<InputPrivacyRule>\"}],\"type\":\"account.PrivacyRules\"},{\"id\":-1564422284,\"method\":\"account.deleteAccount\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reason\",\"type\":\"string\"},{\"name\":\"password\",\"type\":\"flags.0?InputCheckPasswordSRP\"}],\"type\":\"Bool\"},{\"id\":150761757,\"method\":\"account.getAccountTTL\",\"params\":[],\"type\":\"AccountDaysTTL\"},{\"id\":608323678,\"method\":\"account.setAccountTTL\",\"params\":[{\"name\":\"ttl\",\"type\":\"AccountDaysTTL\"}],\"type\":\"Bool\"},{\"id\":-627372787,\"method\":\"invokeWithLayer\",\"params\":[{\"name\":\"layer\",\"type\":\"int\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-113456221,\"method\":\"contacts.resolveUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":-2108208411,\"method\":\"account.sendChangePhoneCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1891839707,\"method\":\"account.changePhone\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"User\"},{\"id\":-710552671,\"method\":\"messages.getStickers\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Stickers\"},{\"id\":-1197432408,\"method\":\"messages.getAllStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.AllStickers\"},{\"id\":954152242,\"method\":\"account.updateDeviceLocked\",\"params\":[{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1738800940,\"method\":\"auth.importBotAuthorization\",\"params\":[{\"name\":\"flags\",\"type\":\"int\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"bot_auth_token\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":-1956073268,\"method\":\"messages.getWebPagePreview\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"MessageMedia\"},{\"id\":-484392616,\"method\":\"account.getAuthorizations\",\"params\":[],\"type\":\"account.Authorizations\"},{\"id\":-545786948,\"method\":\"account.resetAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":1418342645,\"method\":\"account.getPassword\",\"params\":[],\"type\":\"account.Password\"},{\"id\":-1663767815,\"method\":\"account.getPasswordSettings\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"account.PasswordSettings\"},{\"id\":-1516564433,\"method\":\"account.updatePasswordSettings\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"},{\"name\":\"new_settings\",\"type\":\"account.PasswordInputSettings\"}],\"type\":\"Bool\"},{\"id\":-779399914,\"method\":\"auth.checkPassword\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"auth.Authorization\"},{\"id\":-661144474,\"method\":\"auth.requestPasswordRecovery\",\"params\":[],\"type\":\"auth.PasswordRecovery\"},{\"id\":923364464,\"method\":\"auth.recoverPassword\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"code\",\"type\":\"string\"},{\"name\":\"new_settings\",\"type\":\"flags.0?account.PasswordInputSettings\"}],\"type\":\"auth.Authorization\"},{\"id\":-1080796745,\"method\":\"invokeWithoutUpdates\",\"params\":[{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1607670315,\"method\":\"messages.exportChatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"legacy_revoke_permanent\",\"type\":\"flags.2?true\"},{\"name\":\"request_needed\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"expire_date\",\"type\":\"flags.0?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.1?int\"},{\"name\":\"title\",\"type\":\"flags.4?string\"}],\"type\":\"ExportedChatInvite\"},{\"id\":1051570619,\"method\":\"messages.checkChatInvite\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"}],\"type\":\"ChatInvite\"},{\"id\":1817183516,\"method\":\"messages.importChatInvite\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-928977804,\"method\":\"messages.getStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.StickerSet\"},{\"id\":-946871200,\"method\":\"messages.installStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"archived\",\"type\":\"Bool\"}],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":-110209570,\"method\":\"messages.uninstallStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"Bool\"},{\"id\":-421563528,\"method\":\"messages.startBot\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"start_param\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-1877938321,\"method\":\"help.getAppChangelog\",\"params\":[{\"name\":\"prev_app_version\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":1468322785,\"method\":\"messages.getMessagesViews\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"increment\",\"type\":\"Bool\"}],\"type\":\"messages.MessageViews\"},{\"id\":-871347913,\"method\":\"channels.readHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-2067661490,\"method\":\"channels.deleteMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":-196443371,\"method\":\"channels.reportSpam\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-1383294429,\"method\":\"channels.getMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<InputMessage>\"}],\"type\":\"messages.Messages\"},{\"id\":2010044880,\"method\":\"channels.getParticipants\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"filter\",\"type\":\"ChannelParticipantsFilter\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"channels.ChannelParticipants\"},{\"id\":-1599378234,\"method\":\"channels.getParticipant\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"}],\"type\":\"channels.ChannelParticipant\"},{\"id\":176122811,\"method\":\"channels.getChannels\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputChannel>\"}],\"type\":\"messages.Chats\"},{\"id\":141781513,\"method\":\"channels.getFullChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"messages.ChatFull\"},{\"id\":-1862244601,\"method\":\"channels.createChannel\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"broadcast\",\"type\":\"flags.0?true\"},{\"name\":\"megagroup\",\"type\":\"flags.1?true\"},{\"name\":\"for_import\",\"type\":\"flags.3?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"geo_point\",\"type\":\"flags.2?InputGeoPoint\"},{\"name\":\"address\",\"type\":\"flags.2?string\"},{\"name\":\"ttl_period\",\"type\":\"flags.4?int\"}],\"type\":\"Updates\"},{\"id\":-751007486,\"method\":\"channels.editAdmin\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":1450044624,\"method\":\"channels.editTitle\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-248621111,\"method\":\"channels.editPhoto\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"photo\",\"type\":\"InputChatPhoto\"}],\"type\":\"Updates\"},{\"id\":283557164,\"method\":\"channels.checkUsername\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":890549214,\"method\":\"channels.updateUsername\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":615851205,\"method\":\"channels.joinChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":-130635115,\"method\":\"channels.leaveChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":429865580,\"method\":\"channels.inviteToChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":-1072619549,\"method\":\"channels.deleteChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":51854712,\"method\":\"updates.getChannelDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"filter\",\"type\":\"ChannelMessagesFilter\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":-1470377534,\"method\":\"messages.editChatAdmin\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"is_admin\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1568189671,\"method\":\"messages.migrateChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":1271290010,\"method\":\"messages.searchGlobal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"offset_rate\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":2016638777,\"method\":\"messages.reorderStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"},{\"name\":\"order\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-1309538785,\"method\":\"messages.getDocumentByHash\",\"params\":[{\"name\":\"sha256\",\"type\":\"bytes\"},{\"name\":\"size\",\"type\":\"long\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":1559270965,\"method\":\"messages.getSavedGifs\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.SavedGifs\"},{\"id\":846868683,\"method\":\"messages.saveGif\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":1364105629,\"method\":\"messages.getInlineBotResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"geo_point\",\"type\":\"flags.0?InputGeoPoint\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"offset\",\"type\":\"string\"}],\"type\":\"messages.BotResults\"},{\"id\":-346119674,\"method\":\"messages.setInlineBotResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"gallery\",\"type\":\"flags.0?true\"},{\"name\":\"private\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"results\",\"type\":\"Vector<InputBotInlineResult>\"},{\"name\":\"cache_time\",\"type\":\"int\"},{\"name\":\"next_offset\",\"type\":\"flags.2?string\"},{\"name\":\"switch_pm\",\"type\":\"flags.3?InlineBotSwitchPM\"}],\"type\":\"Bool\"},{\"id\":-738468661,\"method\":\"messages.sendInlineBotResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"hide_via\",\"type\":\"flags.11?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"top_msg_id\",\"type\":\"flags.9?int\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":-432034325,\"method\":\"channels.exportMessageLink\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"grouped\",\"type\":\"flags.0?true\"},{\"name\":\"thread\",\"type\":\"flags.1?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"ExportedMessageLink\"},{\"id\":527021574,\"method\":\"channels.toggleSignatures\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":1056025023,\"method\":\"auth.resendCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"auth.SentCode\"},{\"id\":520357240,\"method\":\"auth.cancelCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-39416522,\"method\":\"messages.getMessageEditData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"messages.MessageEditData\"},{\"id\":1224152952,\"method\":\"messages.editMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"flags.11?string\"},{\"name\":\"media\",\"type\":\"flags.14?InputMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.15?int\"}],\"type\":\"Updates\"},{\"id\":-2091549254,\"method\":\"messages.editInlineBotMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"message\",\"type\":\"flags.11?string\"},{\"name\":\"media\",\"type\":\"flags.14?InputMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"Bool\"},{\"id\":-1824339449,\"method\":\"messages.getBotCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"game\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"password\",\"type\":\"flags.2?InputCheckPasswordSRP\"}],\"type\":\"messages.BotCallbackAnswer\"},{\"id\":-712043766,\"method\":\"messages.setBotCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"alert\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"cache_time\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-1758168906,\"method\":\"contacts.getTopPeers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"correspondents\",\"type\":\"flags.0?true\"},{\"name\":\"bots_pm\",\"type\":\"flags.1?true\"},{\"name\":\"bots_inline\",\"type\":\"flags.2?true\"},{\"name\":\"phone_calls\",\"type\":\"flags.3?true\"},{\"name\":\"forward_users\",\"type\":\"flags.4?true\"},{\"name\":\"forward_chats\",\"type\":\"flags.5?true\"},{\"name\":\"groups\",\"type\":\"flags.10?true\"},{\"name\":\"channels\",\"type\":\"flags.15?true\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"contacts.TopPeers\"},{\"id\":451113900,\"method\":\"contacts.resetTopPeerRating\",\"params\":[{\"name\":\"category\",\"type\":\"TopPeerCategory\"},{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-462373635,\"method\":\"messages.getPeerDialogs\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<InputDialogPeer>\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":-1271718337,\"method\":\"messages.saveDraft\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"top_msg_id\",\"type\":\"flags.2?int\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"Bool\"},{\"id\":1782549861,\"method\":\"messages.getAllDrafts\",\"params\":[],\"type\":\"Updates\"},{\"id\":1685588756,\"method\":\"messages.getFeaturedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":1527873830,\"method\":\"messages.readFeaturedStickers\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-1649852357,\"method\":\"messages.getRecentStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.RecentStickers\"},{\"id\":958863608,\"method\":\"messages.saveRecentSticker\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1986437075,\"method\":\"messages.clearRecentStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":1475442322,\"method\":\"messages.getArchivedStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"emojis\",\"type\":\"flags.1?true\"},{\"name\":\"offset_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ArchivedStickers\"},{\"id\":457157256,\"method\":\"account.sendConfirmPhoneCode\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1596029123,\"method\":\"account.confirmPhone\",\"params\":[{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-122669393,\"method\":\"channels.getAdminedPublicChannels\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"by_location\",\"type\":\"flags.0?true\"},{\"name\":\"check_limit\",\"type\":\"flags.1?true\"}],\"type\":\"messages.Chats\"},{\"id\":1678738104,\"method\":\"messages.getMaskStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.AllStickers\"},{\"id\":-866424884,\"method\":\"messages.getAttachedStickers\",\"params\":[{\"name\":\"media\",\"type\":\"InputStickeredMedia\"}],\"type\":\"Vector<StickerSetCovered>\"},{\"id\":-1907842680,\"method\":\"auth.dropTempAuthKeys\",\"params\":[{\"name\":\"except_auth_keys\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":-1896289088,\"method\":\"messages.setGameScore\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"edit_message\",\"type\":\"flags.0?true\"},{\"name\":\"force\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":363700068,\"method\":\"messages.setInlineGameScore\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"edit_message\",\"type\":\"flags.0?true\"},{\"name\":\"force\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-400399203,\"method\":\"messages.getGameHighScores\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"messages.HighScores\"},{\"id\":258170395,\"method\":\"messages.getInlineGameHighScores\",\"params\":[{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"messages.HighScores\"},{\"id\":-468934396,\"method\":\"messages.getCommonChats\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Chats\"},{\"id\":-2023787330,\"method\":\"messages.getAllChats\",\"params\":[{\"name\":\"except_ids\",\"type\":\"Vector<long>\"}],\"type\":\"messages.Chats\"},{\"id\":-333262899,\"method\":\"help.setBotUpdatesStatus\",\"params\":[{\"name\":\"pending_updates_count\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":852135825,\"method\":\"messages.getWebPage\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"WebPage\"},{\"id\":-1489903017,\"method\":\"messages.toggleDialogPin\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputDialogPeer\"}],\"type\":\"Bool\"},{\"id\":991616823,\"method\":\"messages.reorderPinnedDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"int\"},{\"name\":\"order\",\"type\":\"Vector<InputDialogPeer>\"}],\"type\":\"Bool\"},{\"id\":-692498958,\"method\":\"messages.getPinnedDialogs\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":-1440257555,\"method\":\"bots.sendCustomRequest\",\"params\":[{\"name\":\"custom_method\",\"type\":\"string\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"DataJSON\"},{\"id\":-434028723,\"method\":\"bots.answerWebhookJSONQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":619086221,\"method\":\"upload.getWebFile\",\"params\":[{\"name\":\"location\",\"type\":\"InputWebFileLocation\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.WebFile\"},{\"id\":924093883,\"method\":\"payments.getPaymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"invoice\",\"type\":\"InputInvoice\"},{\"name\":\"theme_params\",\"type\":\"flags.0?DataJSON\"}],\"type\":\"payments.PaymentForm\"},{\"id\":611897804,\"method\":\"payments.getPaymentReceipt\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"payments.PaymentReceipt\"},{\"id\":-1228345045,\"method\":\"payments.validateRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"save\",\"type\":\"flags.0?true\"},{\"name\":\"invoice\",\"type\":\"InputInvoice\"},{\"name\":\"info\",\"type\":\"PaymentRequestedInfo\"}],\"type\":\"payments.ValidatedRequestedInfo\"},{\"id\":755192367,\"method\":\"payments.sendPaymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"form_id\",\"type\":\"long\"},{\"name\":\"invoice\",\"type\":\"InputInvoice\"},{\"name\":\"requested_info_id\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"credentials\",\"type\":\"InputPaymentCredentials\"},{\"name\":\"tip_amount\",\"type\":\"flags.2?long\"}],\"type\":\"payments.PaymentResult\"},{\"id\":1151208273,\"method\":\"account.getTmpPassword\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"},{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"account.TmpPassword\"},{\"id\":578650699,\"method\":\"payments.getSavedInfo\",\"params\":[],\"type\":\"payments.SavedInfo\"},{\"id\":-667062079,\"method\":\"payments.clearSavedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"credentials\",\"type\":\"flags.0?true\"},{\"name\":\"info\",\"type\":\"flags.1?true\"}],\"type\":\"Bool\"},{\"id\":-436833542,\"method\":\"messages.setBotShippingResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"error\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_options\",\"type\":\"flags.1?Vector<ShippingOption>\"}],\"type\":\"Bool\"},{\"id\":163765653,\"method\":\"messages.setBotPrecheckoutResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"success\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"error\",\"type\":\"flags.0?string\"}],\"type\":\"Bool\"},{\"id\":-1876841625,\"method\":\"stickers.createStickerSet\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"animated\",\"type\":\"flags.1?true\"},{\"name\":\"videos\",\"type\":\"flags.4?true\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"thumb\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"stickers\",\"type\":\"Vector<InputStickerSetItem>\"},{\"name\":\"software\",\"type\":\"flags.3?string\"}],\"type\":\"messages.StickerSet\"},{\"id\":-143257775,\"method\":\"stickers.removeStickerFromSet\",\"params\":[{\"name\":\"sticker\",\"type\":\"InputDocument\"}],\"type\":\"messages.StickerSet\"},{\"id\":-4795190,\"method\":\"stickers.changeStickerPosition\",\"params\":[{\"name\":\"sticker\",\"type\":\"InputDocument\"},{\"name\":\"position\",\"type\":\"int\"}],\"type\":\"messages.StickerSet\"},{\"id\":-2041315650,\"method\":\"stickers.addStickerToSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"sticker\",\"type\":\"InputStickerSetItem\"}],\"type\":\"messages.StickerSet\"},{\"id\":1369162417,\"method\":\"messages.uploadMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"media\",\"type\":\"InputMedia\"}],\"type\":\"MessageMedia\"},{\"id\":1430593449,\"method\":\"phone.getCallConfig\",\"params\":[],\"type\":\"DataJSON\"},{\"id\":1124046573,\"method\":\"phone.requestCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"g_a_hash\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":1003664544,\"method\":\"phone.acceptCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":788404002,\"method\":\"phone.confirmCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"g_a\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":399855457,\"method\":\"phone.receivedCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"}],\"type\":\"Bool\"},{\"id\":-1295269440,\"method\":\"phone.discardCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"reason\",\"type\":\"PhoneCallDiscardReason\"},{\"name\":\"connection_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":1508562471,\"method\":\"phone.setCallRating\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_initiative\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"rating\",\"type\":\"int\"},{\"name\":\"comment\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":662363518,\"method\":\"phone.saveCallDebug\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"debug\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":962554330,\"method\":\"upload.getCdnFile\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"offset\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.CdnFile\"},{\"id\":-1691921240,\"method\":\"upload.reuploadCdnFile\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"request_token\",\"type\":\"bytes\"}],\"type\":\"Vector<FileHash>\"},{\"id\":1375900482,\"method\":\"help.getCdnConfig\",\"params\":[],\"type\":\"CdnConfig\"},{\"id\":-219008246,\"method\":\"langpack.getLangPack\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"LangPackDifference\"},{\"id\":-269862909,\"method\":\"langpack.getStrings\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"keys\",\"type\":\"Vector<string>\"}],\"type\":\"Vector<LangPackString>\"},{\"id\":-845657435,\"method\":\"langpack.getDifference\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"}],\"type\":\"LangPackDifference\"},{\"id\":1120311183,\"method\":\"langpack.getLanguages\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"}],\"type\":\"Vector<LangPackLanguage>\"},{\"id\":-1763259007,\"method\":\"channels.editBanned\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"Updates\"},{\"id\":870184064,\"method\":\"channels.getAdminLog\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"events_filter\",\"type\":\"flags.0?ChannelAdminLogEventsFilter\"},{\"name\":\"admins\",\"type\":\"flags.1?Vector<InputUser>\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"min_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"channels.AdminLogResults\"},{\"id\":-1847836879,\"method\":\"upload.getCdnFileHashes\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"offset\",\"type\":\"long\"}],\"type\":\"Vector<FileHash>\"},{\"id\":-914493408,\"method\":\"messages.sendScreenshotNotification\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"int\"},{\"name\":\"random_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":-359881479,\"method\":\"channels.setStickers\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"Bool\"},{\"id\":82946729,\"method\":\"messages.getFavedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FavedStickers\"},{\"id\":-1174420133,\"method\":\"messages.faveSticker\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unfave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-357180360,\"method\":\"channels.readMessageContents\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-2020263951,\"method\":\"contacts.resetSaved\",\"params\":[],\"type\":\"Bool\"},{\"id\":-251140208,\"method\":\"messages.getUnreadMentions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":-1683319225,\"method\":\"channels.deleteHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"for_everyone\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1036054804,\"method\":\"help.getRecentMeUrls\",\"params\":[{\"name\":\"referer\",\"type\":\"string\"}],\"type\":\"help.RecentMeUrls\"},{\"id\":-356796084,\"method\":\"channels.togglePreHistoryHidden\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":921026381,\"method\":\"messages.readMentions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1881817312,\"method\":\"messages.getRecentLocations\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":-1225713124,\"method\":\"messages.sendMultiMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"noforwards\",\"type\":\"flags.14?true\"},{\"name\":\"update_stickersets_order\",\"type\":\"flags.15?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"top_msg_id\",\"type\":\"flags.9?int\"},{\"name\":\"multi_media\",\"type\":\"Vector<InputSingleMedia>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Updates\"},{\"id\":1347929239,\"method\":\"messages.uploadEncryptedFile\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"file\",\"type\":\"InputEncryptedFile\"}],\"type\":\"EncryptedFile\"},{\"id\":405695855,\"method\":\"account.getWebAuthorizations\",\"params\":[],\"type\":\"account.WebAuthorizations\"},{\"id\":755087855,\"method\":\"account.resetWebAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":1747789204,\"method\":\"account.resetWebAuthorizations\",\"params\":[],\"type\":\"Bool\"},{\"id\":896555914,\"method\":\"messages.searchStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_featured\",\"type\":\"flags.0?true\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FoundStickerSets\"},{\"id\":-1856595926,\"method\":\"upload.getFileHashes\",\"params\":[{\"name\":\"location\",\"type\":\"InputFileLocation\"},{\"name\":\"offset\",\"type\":\"long\"}],\"type\":\"Vector<FileHash>\"},{\"id\":749019089,\"method\":\"help.getTermsOfServiceUpdate\",\"params\":[],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":-294455398,\"method\":\"help.acceptTermsOfService\",\"params\":[{\"name\":\"id\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":-1299661699,\"method\":\"account.getAllSecureValues\",\"params\":[],\"type\":\"Vector<SecureValue>\"},{\"id\":1936088002,\"method\":\"account.getSecureValue\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"Vector<SecureValue>\"},{\"id\":-1986010339,\"method\":\"account.saveSecureValue\",\"params\":[{\"name\":\"value\",\"type\":\"InputSecureValue\"},{\"name\":\"secure_secret_id\",\"type\":\"long\"}],\"type\":\"SecureValue\"},{\"id\":-1199522741,\"method\":\"account.deleteSecureValue\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"Bool\"},{\"id\":-1865902923,\"method\":\"users.setSecureValueErrors\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"},{\"name\":\"errors\",\"type\":\"Vector<SecureValueError>\"}],\"type\":\"Bool\"},{\"id\":-1456907910,\"method\":\"account.getAuthorizationForm\",\"params\":[{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"scope\",\"type\":\"string\"},{\"name\":\"public_key\",\"type\":\"string\"}],\"type\":\"account.AuthorizationForm\"},{\"id\":-202552205,\"method\":\"account.acceptAuthorization\",\"params\":[{\"name\":\"bot_id\",\"type\":\"long\"},{\"name\":\"scope\",\"type\":\"string\"},{\"name\":\"public_key\",\"type\":\"string\"},{\"name\":\"value_hashes\",\"type\":\"Vector<SecureValueHash>\"},{\"name\":\"credentials\",\"type\":\"SecureCredentialsEncrypted\"}],\"type\":\"Bool\"},{\"id\":-1516022023,\"method\":\"account.sendVerifyPhoneCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":1305716726,\"method\":\"account.verifyPhone\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-1730136133,\"method\":\"account.sendVerifyEmailCode\",\"params\":[{\"name\":\"purpose\",\"type\":\"EmailVerifyPurpose\"},{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"account.SentEmailCode\"},{\"id\":53322959,\"method\":\"account.verifyEmail\",\"params\":[{\"name\":\"purpose\",\"type\":\"EmailVerifyPurpose\"},{\"name\":\"verification\",\"type\":\"EmailVerification\"}],\"type\":\"account.EmailVerified\"},{\"id\":1072547679,\"method\":\"help.getDeepLinkInfo\",\"params\":[{\"name\":\"path\",\"type\":\"string\"}],\"type\":\"help.DeepLinkInfo\"},{\"id\":-2098076769,\"method\":\"contacts.getSaved\",\"params\":[],\"type\":\"Vector<SavedContact>\"},{\"id\":-2092831552,\"method\":\"channels.getLeftChannels\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"messages.Chats\"},{\"id\":-1896617296,\"method\":\"account.initTakeoutSession\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"contacts\",\"type\":\"flags.0?true\"},{\"name\":\"message_users\",\"type\":\"flags.1?true\"},{\"name\":\"message_chats\",\"type\":\"flags.2?true\"},{\"name\":\"message_megagroups\",\"type\":\"flags.3?true\"},{\"name\":\"message_channels\",\"type\":\"flags.4?true\"},{\"name\":\"files\",\"type\":\"flags.5?true\"},{\"name\":\"file_max_size\",\"type\":\"flags.5?long\"}],\"type\":\"account.Takeout\"},{\"id\":489050862,\"method\":\"account.finishTakeoutSession\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"success\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":486505992,\"method\":\"messages.getSplitRanges\",\"params\":[],\"type\":\"Vector<MessageRange>\"},{\"id\":911373810,\"method\":\"invokeWithMessagesRange\",\"params\":[{\"name\":\"range\",\"type\":\"MessageRange\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1398145746,\"method\":\"invokeWithTakeout\",\"params\":[{\"name\":\"takeout_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":-1031349873,\"method\":\"messages.markDialogUnread\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"unread\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputDialogPeer\"}],\"type\":\"Bool\"},{\"id\":585256482,\"method\":\"messages.getDialogUnreadMarks\",\"params\":[],\"type\":\"Vector<DialogPeer>\"},{\"id\":-2062238246,\"method\":\"contacts.toggleTopPeers\",\"params\":[{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":2119757468,\"method\":\"messages.clearAllDrafts\",\"params\":[],\"type\":\"Bool\"},{\"id\":-1735311088,\"method\":\"help.getAppConfig\",\"params\":[],\"type\":\"JSONValue\"},{\"id\":1862465352,\"method\":\"help.saveAppLog\",\"params\":[{\"name\":\"events\",\"type\":\"Vector<InputAppEvent>\"}],\"type\":\"Bool\"},{\"id\":-966677240,\"method\":\"help.getPassportConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.PassportConfig\"},{\"id\":1784243458,\"method\":\"langpack.getLanguage\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"LangPackLanguage\"},{\"id\":-760547348,\"method\":\"messages.updatePinnedMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"unpin\",\"type\":\"flags.1?true\"},{\"name\":\"pm_oneside\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-1881204448,\"method\":\"account.confirmPasswordEmail\",\"params\":[{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":2055154197,\"method\":\"account.resendPasswordEmail\",\"params\":[],\"type\":\"Bool\"},{\"id\":-1043606090,\"method\":\"account.cancelPasswordEmail\",\"params\":[],\"type\":\"Bool\"},{\"id\":-748624084,\"method\":\"help.getSupportName\",\"params\":[],\"type\":\"help.SupportName\"},{\"id\":59377875,\"method\":\"help.getUserInfo\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"help.UserInfo\"},{\"id\":1723407216,\"method\":\"help.editUserInfo\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"}],\"type\":\"help.UserInfo\"},{\"id\":-1626880216,\"method\":\"account.getContactSignUpNotification\",\"params\":[],\"type\":\"Bool\"},{\"id\":-806076575,\"method\":\"account.setContactSignUpNotification\",\"params\":[{\"name\":\"silent\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":1398240377,\"method\":\"account.getNotifyExceptions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"compare_sound\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"flags.0?InputNotifyPeer\"}],\"type\":\"Updates\"},{\"id\":283795844,\"method\":\"messages.sendVote\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"}],\"type\":\"Updates\"},{\"id\":1941660731,\"method\":\"messages.getPollResults\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1848369232,\"method\":\"messages.getOnlines\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"ChatOnlines\"},{\"id\":-554301545,\"method\":\"messages.editChatAbout\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"about\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-1517917375,\"method\":\"messages.editChatDefaultBannedRights\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"Updates\"},{\"id\":-57811990,\"method\":\"account.getWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"}],\"type\":\"WallPaper\"},{\"id\":-578472351,\"method\":\"account.uploadWallPaper\",\"params\":[{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":1817860919,\"method\":\"account.saveWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"},{\"name\":\"unsave\",\"type\":\"Bool\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"Bool\"},{\"id\":-18000023,\"method\":\"account.installWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"Bool\"},{\"id\":-1153722364,\"method\":\"account.resetWallPapers\",\"params\":[],\"type\":\"Bool\"},{\"id\":1457130303,\"method\":\"account.getAutoDownloadSettings\",\"params\":[],\"type\":\"account.AutoDownloadSettings\"},{\"id\":1995661875,\"method\":\"account.saveAutoDownloadSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"low\",\"type\":\"flags.0?true\"},{\"name\":\"high\",\"type\":\"flags.1?true\"},{\"name\":\"settings\",\"type\":\"AutoDownloadSettings\"}],\"type\":\"Bool\"},{\"id\":899735650,\"method\":\"messages.getEmojiKeywords\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":352892591,\"method\":\"messages.getEmojiKeywordsDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":1318675378,\"method\":\"messages.getEmojiKeywordsLanguages\",\"params\":[{\"name\":\"lang_codes\",\"type\":\"Vector<string>\"}],\"type\":\"Vector<EmojiLanguage>\"},{\"id\":-709817306,\"method\":\"messages.getEmojiURL\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiURL\"},{\"id\":1749536939,\"method\":\"folders.editPeerFolders\",\"params\":[{\"name\":\"folder_peers\",\"type\":\"Vector<InputFolderPeer>\"}],\"type\":\"Updates\"},{\"id\":472471681,\"method\":\"folders.deleteFolder\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":11435201,\"method\":\"messages.getSearchCounters\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"filters\",\"type\":\"Vector<MessagesFilter>\"}],\"type\":\"Vector<messages.SearchCounter>\"},{\"id\":-170208392,\"method\":\"channels.getGroupsForDiscussion\",\"params\":[],\"type\":\"messages.Chats\"},{\"id\":1079520178,\"method\":\"channels.setDiscussionGroup\",\"params\":[{\"name\":\"broadcast\",\"type\":\"InputChannel\"},{\"name\":\"group\",\"type\":\"InputChannel\"}],\"type\":\"Bool\"},{\"id\":428848198,\"method\":\"messages.requestUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"flags.1?InputPeer\"},{\"name\":\"msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"button_id\",\"type\":\"flags.1?int\"},{\"name\":\"url\",\"type\":\"flags.2?string\"}],\"type\":\"UrlAuthResult\"},{\"id\":-1322487515,\"method\":\"messages.acceptUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"write_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"flags.1?InputPeer\"},{\"name\":\"msg_id\",\"type\":\"flags.1?int\"},{\"name\":\"button_id\",\"type\":\"flags.1?int\"},{\"name\":\"url\",\"type\":\"flags.2?string\"}],\"type\":\"UrlAuthResult\"},{\"id\":1336717624,\"method\":\"messages.hidePeerSettingsBar\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-386636848,\"method\":\"contacts.addContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"add_phone_privacy_exception\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"InputUser\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-130964977,\"method\":\"contacts.acceptContact\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":-1892102881,\"method\":\"channels.editCreator\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"Updates\"},{\"id\":-750207932,\"method\":\"contacts.getLocated\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"background\",\"type\":\"flags.1?true\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"self_expires\",\"type\":\"flags.0?int\"}],\"type\":\"Updates\"},{\"id\":1491484525,\"method\":\"channels.editLocation\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"address\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-304832784,\"method\":\"channels.toggleSlowMode\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"seconds\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-183077365,\"method\":\"messages.getScheduledHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":-1111817116,\"method\":\"messages.getScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.Messages\"},{\"id\":-1120369398,\"method\":\"messages.sendScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":1504586518,\"method\":\"messages.deleteScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":473805619,\"method\":\"account.uploadTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"thumb\",\"type\":\"flags.0?InputFile\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":1697530880,\"method\":\"account.createTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<InputThemeSettings>\"}],\"type\":\"Theme\"},{\"id\":737414348,\"method\":\"account.updateTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"theme\",\"type\":\"InputTheme\"},{\"name\":\"slug\",\"type\":\"flags.0?string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"document\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"settings\",\"type\":\"flags.3?Vector<InputThemeSettings>\"}],\"type\":\"Theme\"},{\"id\":-229175188,\"method\":\"account.saveTheme\",\"params\":[{\"name\":\"theme\",\"type\":\"InputTheme\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-953697477,\"method\":\"account.installTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"theme\",\"type\":\"flags.1?InputTheme\"},{\"name\":\"format\",\"type\":\"flags.2?string\"},{\"name\":\"base_theme\",\"type\":\"flags.3?BaseTheme\"}],\"type\":\"Bool\"},{\"id\":978872812,\"method\":\"account.getTheme\",\"params\":[{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"theme\",\"type\":\"InputTheme\"}],\"type\":\"Theme\"},{\"id\":1913054296,\"method\":\"account.getThemes\",\"params\":[{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.Themes\"},{\"id\":-1210022402,\"method\":\"auth.exportLoginToken\",\"params\":[{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"except_ids\",\"type\":\"Vector<long>\"}],\"type\":\"auth.LoginToken\"},{\"id\":-1783866140,\"method\":\"auth.importLoginToken\",\"params\":[{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":-392909491,\"method\":\"auth.acceptLoginToken\",\"params\":[{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"Authorization\"},{\"id\":-1250643605,\"method\":\"account.setContentSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"sensitive_enabled\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":-1952756306,\"method\":\"account.getContentSettings\",\"params\":[],\"type\":\"account.ContentSettings\"},{\"id\":300429806,\"method\":\"channels.getInactiveChannels\",\"params\":[],\"type\":\"messages.InactiveChats\"},{\"id\":1705865692,\"method\":\"account.getMultiWallPapers\",\"params\":[{\"name\":\"wallpapers\",\"type\":\"Vector<InputWallPaper>\"}],\"type\":\"Vector<WallPaper>\"},{\"id\":-1200736242,\"method\":\"messages.getPollVotes\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"option\",\"type\":\"flags.0?bytes\"},{\"name\":\"offset\",\"type\":\"flags.1?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.VotesList\"},{\"id\":-1257951254,\"method\":\"messages.toggleStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"uninstall\",\"type\":\"flags.0?true\"},{\"name\":\"archive\",\"type\":\"flags.1?true\"},{\"name\":\"unarchive\",\"type\":\"flags.2?true\"},{\"name\":\"stickersets\",\"type\":\"Vector<InputStickerSet>\"}],\"type\":\"Bool\"},{\"id\":779736953,\"method\":\"payments.getBankCardData\",\"params\":[{\"name\":\"number\",\"type\":\"string\"}],\"type\":\"payments.BankCardData\"},{\"id\":-241247891,\"method\":\"messages.getDialogFilters\",\"params\":[],\"type\":\"Vector<DialogFilter>\"},{\"id\":-1566780372,\"method\":\"messages.getSuggestedDialogFilters\",\"params\":[],\"type\":\"Vector<DialogFilterSuggested>\"},{\"id\":450142282,\"method\":\"messages.updateDialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"filter\",\"type\":\"flags.0?DialogFilter\"}],\"type\":\"Bool\"},{\"id\":-983318044,\"method\":\"messages.updateDialogFiltersOrder\",\"params\":[{\"name\":\"order\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":-1421720550,\"method\":\"stats.getBroadcastStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"stats.BroadcastStats\"},{\"id\":1646092192,\"method\":\"stats.loadAsyncGraph\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"x\",\"type\":\"flags.0?long\"}],\"type\":\"StatsGraph\"},{\"id\":-1707717072,\"method\":\"stickers.setStickerSetThumb\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"thumb\",\"type\":\"InputDocument\"}],\"type\":\"messages.StickerSet\"},{\"id\":85399130,\"method\":\"bots.setBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"commands\",\"type\":\"Vector<BotCommand>\"}],\"type\":\"Bool\"},{\"id\":2127598753,\"method\":\"messages.getOldFeaturedStickers\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":-1063816159,\"method\":\"help.getPromoData\",\"params\":[],\"type\":\"help.PromoData\"},{\"id\":505748629,\"method\":\"help.hidePromoData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-8744061,\"method\":\"phone.sendSignalingData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-589330937,\"method\":\"stats.getMegagroupStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"stats.MegagroupStats\"},{\"id\":-349483786,\"method\":\"account.getGlobalPrivacySettings\",\"params\":[],\"type\":\"GlobalPrivacySettings\"},{\"id\":517647042,\"method\":\"account.setGlobalPrivacySettings\",\"params\":[{\"name\":\"settings\",\"type\":\"GlobalPrivacySettings\"}],\"type\":\"GlobalPrivacySettings\"},{\"id\":-183649631,\"method\":\"help.dismissSuggestion\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"suggestion\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1935116200,\"method\":\"help.getCountriesList\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.CountriesList\"},{\"id\":584962828,\"method\":\"messages.getReplies\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Messages\"},{\"id\":1147761405,\"method\":\"messages.getDiscussionMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"messages.DiscussionMessage\"},{\"id\":-147740172,\"method\":\"messages.readDiscussion\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"read_max_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":698914348,\"method\":\"contacts.blockFromReplies\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"delete_message\",\"type\":\"flags.0?true\"},{\"name\":\"delete_history\",\"type\":\"flags.1?true\"},{\"name\":\"report_spam\",\"type\":\"flags.2?true\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":1445996571,\"method\":\"stats.getMessagePublicForwards\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"offset_rate\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":-1226791947,\"method\":\"stats.getMessageStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"stats.MessageStats\"},{\"id\":-299714136,\"method\":\"messages.unpinAllMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":1221445336,\"method\":\"phone.createGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"rtmp_stream\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"schedule_date\",\"type\":\"flags.1?int\"}],\"type\":\"Updates\"},{\"id\":-1322057861,\"method\":\"phone.joinGroupCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"muted\",\"type\":\"flags.0?true\"},{\"name\":\"video_stopped\",\"type\":\"flags.2?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"join_as\",\"type\":\"InputPeer\"},{\"name\":\"invite_hash\",\"type\":\"flags.1?string\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Updates\"},{\"id\":1342404601,\"method\":\"phone.leaveGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"source\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":2067345760,\"method\":\"phone.inviteToGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":2054648117,\"method\":\"phone.discardGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":1958458429,\"method\":\"phone.toggleGroupCallSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reset_invite_hash\",\"type\":\"flags.1?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"join_muted\",\"type\":\"flags.0?Bool\"}],\"type\":\"Updates\"},{\"id\":68699611,\"method\":\"phone.getGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"phone.GroupCall\"},{\"id\":-984033109,\"method\":\"phone.getGroupParticipants\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"ids\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"},{\"name\":\"offset\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"phone.GroupParticipants\"},{\"id\":-1248003721,\"method\":\"phone.checkGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"sources\",\"type\":\"Vector<int>\"}],\"type\":\"Vector<int>\"},{\"id\":1540419152,\"method\":\"messages.deleteChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":-104078327,\"method\":\"messages.deletePhoneCallHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke\",\"type\":\"flags.0?true\"}],\"type\":\"messages.AffectedFoundMessages\"},{\"id\":1140726259,\"method\":\"messages.checkHistoryImport\",\"params\":[{\"name\":\"import_head\",\"type\":\"string\"}],\"type\":\"messages.HistoryImportParsed\"},{\"id\":873008187,\"method\":\"messages.initHistoryImport\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"media_count\",\"type\":\"int\"}],\"type\":\"messages.HistoryImport\"},{\"id\":713433234,\"method\":\"messages.uploadImportedMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"import_id\",\"type\":\"long\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"InputMedia\"}],\"type\":\"MessageMedia\"},{\"id\":-1271008444,\"method\":\"messages.startHistoryImport\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"import_id\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":-1565154314,\"method\":\"messages.getExportedChatInvites\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"admin_id\",\"type\":\"InputUser\"},{\"name\":\"offset_date\",\"type\":\"flags.2?int\"},{\"name\":\"offset_link\",\"type\":\"flags.2?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ExportedChatInvites\"},{\"id\":1937010524,\"method\":\"messages.getExportedChatInvite\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":-1110823051,\"method\":\"messages.editExportedChatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoked\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"expire_date\",\"type\":\"flags.0?int\"},{\"name\":\"usage_limit\",\"type\":\"flags.1?int\"},{\"name\":\"request_needed\",\"type\":\"flags.3?Bool\"},{\"name\":\"title\",\"type\":\"flags.4?string\"}],\"type\":\"messages.ExportedChatInvite\"},{\"id\":1452833749,\"method\":\"messages.deleteRevokedExportedChatInvites\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"admin_id\",\"type\":\"InputUser\"}],\"type\":\"Bool\"},{\"id\":-731601877,\"method\":\"messages.deleteExportedChatInvite\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":958457583,\"method\":\"messages.getAdminsWithInvites\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.ChatAdminsWithInvites\"},{\"id\":-553329330,\"method\":\"messages.getChatInviteImporters\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"requested\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"flags.1?string\"},{\"name\":\"q\",\"type\":\"flags.2?string\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"offset_user\",\"type\":\"InputUser\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ChatInviteImporters\"},{\"id\":-1207017500,\"method\":\"messages.setHistoryTTL\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":-91437323,\"method\":\"account.reportProfilePhoto\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"photo_id\",\"type\":\"InputPhoto\"},{\"name\":\"reason\",\"type\":\"ReportReason\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":187239529,\"method\":\"channels.convertToGigagroup\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":1573261059,\"method\":\"messages.checkHistoryImportPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.CheckedHistoryImportPeer\"},{\"id\":-248985848,\"method\":\"phone.toggleGroupCallRecord\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"start\",\"type\":\"flags.0?true\"},{\"name\":\"video\",\"type\":\"flags.2?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"video_portrait\",\"type\":\"flags.2?Bool\"}],\"type\":\"Updates\"},{\"id\":-1524155713,\"method\":\"phone.editGroupCallParticipant\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"participant\",\"type\":\"InputPeer\"},{\"name\":\"muted\",\"type\":\"flags.0?Bool\"},{\"name\":\"volume\",\"type\":\"flags.1?int\"},{\"name\":\"raise_hand\",\"type\":\"flags.2?Bool\"},{\"name\":\"video_stopped\",\"type\":\"flags.3?Bool\"},{\"name\":\"video_paused\",\"type\":\"flags.4?Bool\"},{\"name\":\"presentation_paused\",\"type\":\"flags.5?Bool\"}],\"type\":\"Updates\"},{\"id\":480685066,\"method\":\"phone.editGroupCallTitle\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-277077702,\"method\":\"phone.getGroupCallJoinAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"phone.JoinAsPeers\"},{\"id\":-425040769,\"method\":\"phone.exportGroupCallInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_self_unmute\",\"type\":\"flags.0?true\"},{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"phone.ExportedGroupCallInvite\"},{\"id\":563885286,\"method\":\"phone.toggleGroupCallStartSubscription\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"subscribed\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":1451287362,\"method\":\"phone.startScheduledGroupCall\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":1465786252,\"method\":\"phone.saveDefaultGroupCallJoinAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"join_as\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-873829436,\"method\":\"phone.joinGroupCallPresentation\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"Updates\"},{\"id\":475058500,\"method\":\"phone.leaveGroupCallPresentation\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"Updates\"},{\"id\":676017721,\"method\":\"stickers.checkShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":1303364867,\"method\":\"stickers.suggestShortName\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"stickers.SuggestedShortName\"},{\"id\":1032708345,\"method\":\"bots.resetBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-481554986,\"method\":\"bots.getBotCommands\",\"params\":[{\"name\":\"scope\",\"type\":\"BotCommandScope\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Vector<BotCommand>\"},{\"id\":-1828139493,\"method\":\"account.resetPassword\",\"params\":[],\"type\":\"account.ResetPasswordResult\"},{\"id\":1284770294,\"method\":\"account.declinePasswordReset\",\"params\":[],\"type\":\"Bool\"},{\"id\":221691769,\"method\":\"auth.checkRecoveryPassword\",\"params\":[{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":-700916087,\"method\":\"account.getChatThemes\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.Themes\"},{\"id\":-432283329,\"method\":\"messages.setChatTheme\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":-1095836780,\"method\":\"channels.viewSponsoredMessage\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"random_id\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":-333377601,\"method\":\"channels.getSponsoredMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"messages.SponsoredMessages\"},{\"id\":745510839,\"method\":\"messages.getMessageReadParticipants\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Vector<long>\"},{\"id\":1240514025,\"method\":\"messages.getSearchResultsCalendar\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"}],\"type\":\"messages.SearchResultsCalendar\"},{\"id\":1855292323,\"method\":\"messages.getSearchResultsPositions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.SearchResultsPositions\"},{\"id\":2145904661,\"method\":\"messages.hideChatJoinRequest\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"approved\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":-528091926,\"method\":\"messages.hideAllChatJoinRequests\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"approved\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"link\",\"type\":\"flags.1?string\"}],\"type\":\"Updates\"},{\"id\":-1323389022,\"method\":\"messages.toggleNoForwards\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-855777386,\"method\":\"messages.saveDefaultSendAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"send_as\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":231174382,\"method\":\"channels.getSendAs\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"channels.SendAsPeers\"},{\"id\":-1081501024,\"method\":\"account.setAuthorizationTTL\",\"params\":[{\"name\":\"authorization_ttl_days\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1089766498,\"method\":\"account.changeAuthorizationSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"encrypted_requests_disabled\",\"type\":\"flags.0?Bool\"},{\"name\":\"call_requests_disabled\",\"type\":\"flags.1?Bool\"}],\"type\":\"Bool\"},{\"id\":913655003,\"method\":\"channels.deleteParticipantHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"participant\",\"type\":\"InputPeer\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":-754091820,\"method\":\"messages.sendReaction\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"big\",\"type\":\"flags.1?true\"},{\"name\":\"add_to_recent\",\"type\":\"flags.2?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"flags.0?Vector<Reaction>\"}],\"type\":\"Updates\"},{\"id\":-1950707482,\"method\":\"messages.getMessagesReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":1176190792,\"method\":\"messages.getMessageReactionsList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"reaction\",\"type\":\"flags.0?Reaction\"},{\"name\":\"offset\",\"type\":\"flags.1?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.MessageReactionsList\"},{\"id\":-21928079,\"method\":\"messages.setChatAvailableReactions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"available_reactions\",\"type\":\"ChatReactions\"}],\"type\":\"Updates\"},{\"id\":417243308,\"method\":\"messages.getAvailableReactions\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.AvailableReactions\"},{\"id\":1330094102,\"method\":\"messages.setDefaultReaction\",\"params\":[{\"name\":\"reaction\",\"type\":\"Reaction\"}],\"type\":\"Bool\"},{\"id\":617508334,\"method\":\"messages.translateText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"flags.0?InputPeer\"},{\"name\":\"msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"text\",\"type\":\"flags.1?string\"},{\"name\":\"from_lang\",\"type\":\"flags.2?string\"},{\"name\":\"to_lang\",\"type\":\"string\"}],\"type\":\"messages.TranslatedText\"},{\"id\":841173339,\"method\":\"messages.getUnreadReactions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":1420459918,\"method\":\"messages.readReactions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"top_msg_id\",\"type\":\"flags.0?int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":-1963375804,\"method\":\"contacts.resolvePhone\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":447879488,\"method\":\"phone.getGroupCallStreamChannels\",\"params\":[{\"name\":\"call\",\"type\":\"InputGroupCall\"}],\"type\":\"phone.GroupCallStreamChannels\"},{\"id\":-558650433,\"method\":\"phone.getGroupCallStreamRtmpUrl\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"revoke\",\"type\":\"Bool\"}],\"type\":\"phone.GroupCallStreamRtmpUrl\"},{\"id\":276705696,\"method\":\"messages.searchSentMedia\",\"params\":[{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":385663691,\"method\":\"messages.getAttachMenuBots\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"AttachMenuBots\"},{\"id\":1998676370,\"method\":\"messages.getAttachMenuBot\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"}],\"type\":\"AttachMenuBotsBot\"},{\"id\":1777704297,\"method\":\"messages.toggleBotInAttachMenu\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"write_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":395003915,\"method\":\"messages.requestWebView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"from_bot_menu\",\"type\":\"flags.4?true\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"url\",\"type\":\"flags.1?string\"},{\"name\":\"start_param\",\"type\":\"flags.3?string\"},{\"name\":\"theme_params\",\"type\":\"flags.2?DataJSON\"},{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"top_msg_id\",\"type\":\"flags.9?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"WebViewResult\"},{\"id\":2146648841,\"method\":\"messages.prolongWebView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"top_msg_id\",\"type\":\"flags.9?int\"},{\"name\":\"send_as\",\"type\":\"flags.13?InputPeer\"}],\"type\":\"Bool\"},{\"id\":698084494,\"method\":\"messages.requestSimpleWebView\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"theme_params\",\"type\":\"flags.0?DataJSON\"},{\"name\":\"platform\",\"type\":\"string\"}],\"type\":\"SimpleWebViewResult\"},{\"id\":172168437,\"method\":\"messages.sendWebViewResultMessage\",\"params\":[{\"name\":\"bot_query_id\",\"type\":\"string\"},{\"name\":\"result\",\"type\":\"InputBotInlineResult\"}],\"type\":\"WebViewMessageSent\"},{\"id\":-603831608,\"method\":\"messages.sendWebViewData\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"button_text\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":1157944655,\"method\":\"bots.setBotMenuButton\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"button\",\"type\":\"BotMenuButton\"}],\"type\":\"Bool\"},{\"id\":-1671369944,\"method\":\"bots.getBotMenuButton\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"BotMenuButton\"},{\"id\":-510647672,\"method\":\"account.getSavedRingtones\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.SavedRingtones\"},{\"id\":1038768899,\"method\":\"account.saveRingtone\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"account.SavedRingtone\"},{\"id\":-2095414366,\"method\":\"account.uploadRingtone\",\"params\":[{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":2021942497,\"method\":\"bots.setBotBroadcastDefaultAdminRights\",\"params\":[{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"}],\"type\":\"Bool\"},{\"id\":-1839281686,\"method\":\"bots.setBotGroupDefaultAdminRights\",\"params\":[{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"}],\"type\":\"Bool\"},{\"id\":1092913030,\"method\":\"phone.saveCallLog\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"file\",\"type\":\"InputFile\"}],\"type\":\"Bool\"},{\"id\":-456419968,\"method\":\"channels.toggleJoinToSend\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":1277789622,\"method\":\"channels.toggleJoinRequest\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":261206117,\"method\":\"payments.exportInvoice\",\"params\":[{\"name\":\"invoice_media\",\"type\":\"InputMedia\"}],\"type\":\"payments.ExportedInvoice\"},{\"id\":647928393,\"method\":\"messages.transcribeAudio\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"messages.TranscribedAudio\"},{\"id\":2132608815,\"method\":\"messages.rateTranscribedAudio\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"transcription_id\",\"type\":\"long\"},{\"name\":\"good\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-2131921795,\"method\":\"payments.assignAppStoreTransaction\",\"params\":[{\"name\":\"receipt\",\"type\":\"bytes\"},{\"name\":\"purpose\",\"type\":\"InputStorePaymentPurpose\"}],\"type\":\"Updates\"},{\"id\":-537046829,\"method\":\"payments.assignPlayMarketTransaction\",\"params\":[{\"name\":\"receipt\",\"type\":\"DataJSON\"},{\"name\":\"purpose\",\"type\":\"InputStorePaymentPurpose\"}],\"type\":\"Updates\"},{\"id\":-1614700874,\"method\":\"payments.canPurchasePremium\",\"params\":[{\"name\":\"purpose\",\"type\":\"InputStorePaymentPurpose\"}],\"type\":\"Bool\"},{\"id\":-1206152236,\"method\":\"help.getPremiumPromo\",\"params\":[],\"type\":\"help.PremiumPromo\"},{\"id\":-643100844,\"method\":\"messages.getCustomEmojiDocuments\",\"params\":[{\"name\":\"document_id\",\"type\":\"Vector<long>\"}],\"type\":\"Vector<Document>\"},{\"id\":-67329649,\"method\":\"messages.getEmojiStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.AllStickers\"},{\"id\":248473398,\"method\":\"messages.getFeaturedEmojiStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":-70001045,\"method\":\"account.updateEmojiStatus\",\"params\":[{\"name\":\"emoji_status\",\"type\":\"EmojiStatus\"}],\"type\":\"Bool\"},{\"id\":-696962170,\"method\":\"account.getDefaultEmojiStatuses\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.EmojiStatuses\"},{\"id\":257392901,\"method\":\"account.getRecentEmojiStatuses\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"account.EmojiStatuses\"},{\"id\":404757166,\"method\":\"account.clearRecentEmojiStatuses\",\"params\":[],\"type\":\"Bool\"},{\"id\":1063567478,\"method\":\"messages.reportReaction\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"reaction_peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":-1149164102,\"method\":\"messages.getTopReactions\",\"params\":[{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Reactions\"},{\"id\":960896434,\"method\":\"messages.getRecentReactions\",\"params\":[{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"messages.Reactions\"},{\"id\":-1644236876,\"method\":\"messages.clearRecentReactions\",\"params\":[],\"type\":\"Bool\"},{\"id\":-2064119788,\"method\":\"messages.getExtendedMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":767062953,\"method\":\"auth.importWebTokenAuthorization\",\"params\":[{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"web_auth_token\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":-279966037,\"method\":\"account.reorderUsernames\",\"params\":[{\"name\":\"order\",\"type\":\"Vector<string>\"}],\"type\":\"Bool\"},{\"id\":1490465654,\"method\":\"account.toggleUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"active\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":-1268978403,\"method\":\"channels.reorderUsernames\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"order\",\"type\":\"Vector<string>\"}],\"type\":\"Bool\"},{\"id\":1358053637,\"method\":\"channels.toggleUsername\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"active\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":170155475,\"method\":\"channels.deactivateAllUsernames\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Bool\"},{\"id\":-1540781271,\"method\":\"channels.toggleForum\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-200539612,\"method\":\"channels.createForumTopic\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"icon_color\",\"type\":\"flags.0?int\"},{\"name\":\"icon_emoji_id\",\"type\":\"flags.3?long\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"send_as\",\"type\":\"flags.2?InputPeer\"}],\"type\":\"Updates\"},{\"id\":233136337,\"method\":\"channels.getForumTopics\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"q\",\"type\":\"flags.0?string\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_topic\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ForumTopics\"},{\"id\":-1333584199,\"method\":\"channels.getForumTopicsByID\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"topics\",\"type\":\"Vector<int>\"}],\"type\":\"messages.ForumTopics\"},{\"id\":-186670715,\"method\":\"channels.editForumTopic\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"topic_id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"icon_emoji_id\",\"type\":\"flags.1?long\"},{\"name\":\"closed\",\"type\":\"flags.2?Bool\"},{\"name\":\"hidden\",\"type\":\"flags.3?Bool\"}],\"type\":\"Updates\"},{\"id\":1814925350,\"method\":\"channels.updatePinnedForumTopic\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"topic_id\",\"type\":\"int\"},{\"name\":\"pinned\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":876830509,\"method\":\"channels.deleteTopicHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"top_msg_id\",\"type\":\"int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":693150095,\"method\":\"channels.reorderPinnedForumTopics\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"order\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":1760814315,\"method\":\"channels.toggleAntiSpam\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":-1471109485,\"method\":\"channels.reportAntiSpamFalsePositive\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":-1632299963,\"method\":\"messages.setDefaultHistoryTTL\",\"params\":[{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":1703637384,\"method\":\"messages.getDefaultHistoryTTL\",\"params\":[],\"type\":\"DefaultHistoryTTL\"},{\"id\":-127582169,\"method\":\"contacts.exportContactToken\",\"params\":[],\"type\":\"ExportedContactToken\"},{\"id\":318789512,\"method\":\"contacts.importContactToken\",\"params\":[{\"name\":\"token\",\"type\":\"string\"}],\"type\":\"User\"},{\"id\":-1189444673,\"method\":\"photos.uploadContactProfilePhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"suggest\",\"type\":\"flags.3?true\"},{\"name\":\"save\",\"type\":\"flags.4?true\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"file\",\"type\":\"flags.0?InputFile\"},{\"name\":\"video\",\"type\":\"flags.1?InputFile\"},{\"name\":\"video_start_ts\",\"type\":\"flags.2?double\"}],\"type\":\"photos.Photo\"},{\"id\":1785624660,\"method\":\"channels.toggleParticipantsHidden\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"}]},\"layer\":151} as {\n  MTProto: {\n    constructors: MTProtoConstructor[],\n    methods: MTProtoMethod[],\n    constructorsIndex?: {[id: number]: number}\n  },\n  API: {\n    constructors: MTProtoConstructor[],\n    methods: MTProtoMethod[],\n    constructorsIndex?: {[id: number]: number}\n  },\n  layer: number,\n};\n","export default function intToUint(val: number) {\n  // return val < 0 ? val + 4294967296 : val; // 0 <= val <= Infinity\n  return val >>> 0; // (4294967296 >>> 0) === 0; 0 <= val <= 4294967295\n}\n","import bigInt from 'big-integer';\nimport intToUint from '../number/intToUint';\n\nexport default function ulongFromInts(high: number, low: number) {\n  high = intToUint(high), low = intToUint(low);\n  return bigInt(high).shiftLeft(32).add(bigInt(low));\n}\n","import bigInt from 'big-integer';\n\nexport const safeBigInt = bigInt(Number.MAX_SAFE_INTEGER);\nexport const ulongBigInt = bigInt(bigInt[2]).pow(64);\nexport const longBigInt = ulongBigInt.divide(bigInt[2]);\n","import bigInt from 'big-integer';\nimport { longBigInt, ulongBigInt } from './bigIntConstants';\n\nexport function bigIntFromBytes(bytes: Uint8Array | number[], base = 256) {\n  return bigInt.fromArray(bytes instanceof Uint8Array ? [...bytes] : bytes, base);\n}\n\nexport function bigIntToBytes(bigInt: bigInt.BigInteger) {\n  return new Uint8Array(bigInt.toArray(256).value);\n}\n\nexport function bigIntToSigned(bigInt: bigInt.BigInteger) {\n  return bigInt.greater(longBigInt) ? bigInt.minus(ulongBigInt) : bigInt;\n}\n\nexport function bigIntToUnsigned(bigInt: bigInt.BigInteger) {\n  return bigInt.isNegative() ? ulongBigInt.add(bigInt) : bigInt;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport Schema, {MTProtoConstructor} from './schema';\nimport {JSONValue} from '../../layer';\nimport {MOUNT_CLASS_TO} from '../../config/debug';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport isObject from '../../helpers/object/isObject';\nimport gzipUncompress from '../../helpers/gzipUncompress';\nimport bigInt from 'big-integer';\nimport ulongFromInts from '../../helpers/long/ulongFromInts';\nimport {safeBigInt} from '../../helpers/bigInt/bigIntConstants';\nimport {bigIntToSigned, bigIntToUnsigned} from '../../helpers/bigInt/bigIntConversion';\n\nconst boolFalse = +Schema.API.constructors.find((c) => c.predicate === 'boolFalse').id;\nconst boolTrue = +Schema.API.constructors.find((c) => c.predicate === 'boolTrue').id;\nconst vector = +Schema.API.constructors.find((c) => c.predicate === 'vector').id;\nconst gzipPacked = +Schema.MTProto.constructors.find((c) => c.predicate === 'gzip_packed').id;\n\n// * using slice to have a new buffer, otherwise the buffer will be copied to main thread\nconst sliceMethod: 'slice' | 'subarray' = 'slice'; // subarray\n\nclass TLSerialization {\n  private maxLength = 2048; // 2Kb\n  private offset = 0; // in bytes\n  private mtproto = false;\n  private debug = false;// Modes.debug;\n\n  private buffer: ArrayBuffer;\n  private intView: Int32Array;\n  private byteView: Uint8Array;\n\n  constructor(options: Partial<{startMaxLength: number, mtproto: true}> = {}) {\n    this.maxLength = options.startMaxLength || 2048; // 2Kb\n    this.mtproto = options.mtproto || false;\n    this.createBuffer();\n  }\n\n  public createBuffer() {\n    this.buffer = new ArrayBuffer(this.maxLength);\n    this.intView = new Int32Array(this.buffer);\n    this.byteView = new Uint8Array(this.buffer);\n  }\n\n  public getArray() {\n    const resultBuffer = new ArrayBuffer(this.offset);\n\n    // let perf = performance.now();\n    /* const resultUint8: any = new Uint8Array(resultBuffer);\n    resultUint8.set(this.byteView.subarray(0, this.offset)); */\n    // console.log('perf uint8', performance.now() - perf);\n\n    // perf = performance.now();\n    const resultInt32 = new Int32Array(resultBuffer);\n    resultInt32.set(this.intView.subarray(0, this.offset / 4));\n    // console.log('perf int32', performance.now() - perf);\n\n    /* if(resultUint8.buffer.byteLength !== resultInt32.buffer.byteLength) {\n      console.error(resultUint8, resultInt32);\n    } */\n\n    return resultInt32;\n  }\n\n  public getBuffer() {\n    return this.getArray().buffer;\n  }\n\n  public getBytes(typed: true): Uint8Array;\n  public getBytes(typed?: false): number[];\n  public getBytes(typed: boolean = true): number[] | Uint8Array {\n    if(typed) {\n      const resultBuffer = new ArrayBuffer(this.offset);\n      const resultArray = new Uint8Array(resultBuffer);\n\n      resultArray.set(this.byteView.subarray(0, this.offset));\n\n      return resultArray;\n    }\n\n    const bytes: number[] = new Array(this.offset);\n    for(let i = 0; i < this.offset; ++i) {\n      bytes[i] = this.byteView[i];\n    }\n    return bytes;\n  }\n\n  public getOffset() {\n    return this.offset;\n  }\n\n  public checkLength(needBytes: number) {\n    if(this.offset + needBytes < this.maxLength) {\n      return;\n    }\n\n    // console.log('Increase buffer start', this.offset, needBytes, this.maxLength, this.byteView.slice(0, 32));\n    this.maxLength = Math.ceil(Math.max(this.maxLength * 2, this.offset + needBytes + 16) / 4) * 4;\n    const previousBuffer = this.buffer;\n    // const previousByteView = this.byteView;\n    const previousArray = new Int32Array(previousBuffer);\n\n    this.createBuffer();\n\n    new Int32Array(this.buffer).set(previousArray);\n    /* console.log('Increase buffer end', this.offset, needBytes, this.maxLength, this.byteView.slice(0, 32),\n      bytesCmp(previousByteView, this.byteView.slice(0, previousByteView.length))); */\n  }\n\n  public writeInt(i: number, field: string) {\n    this.debug && console.log('>>>', i.toString(16), i, field);\n\n    const offset = this.offset / 4;\n    this.checkLength(4);\n    this.intView[offset] = i;\n    this.offset += 4;\n\n    return offset;\n  }\n\n  public storeInt(i: number, field?: string) {\n    return this.writeInt(i, (field || '') + ':int');\n  }\n\n  public storeBool(i: boolean, field?: string) {\n    if(i) {\n      this.writeInt(boolTrue, (field || '') + ':bool');\n    } else {\n      this.writeInt(boolFalse, (field || '') + ':bool');\n    }\n  }\n\n  public storeLongP(iHigh: number, iLow: number, field?: string) {\n    this.writeInt(iLow, (field || '') + ':long[low]');\n    this.writeInt(iHigh, (field || '') + ':long[high]');\n  }\n\n  public storeLong(sLong: Array<number> | string | number, field?: string) {\n    if(Array.isArray(sLong)) {\n      if(sLong.length === 2) {\n        return this.storeLongP(sLong[0], sLong[1], field);\n      } else {\n        return this.storeIntBytes(sLong, 64, field);\n      }\n    }\n\n    const _bigInt = bigIntToUnsigned(bigInt(sLong as string));\n    const {quotient, remainder} = _bigInt.divmod(0x100000000);\n    const high = quotient.toJSNumber();\n    const low = remainder.toJSNumber();\n\n    this.writeInt(low, (field || '') + ':long[low]');\n    this.writeInt(high, (field || '') + ':long[high]');\n  }\n\n  public storeDouble(f: any, field?: string) {\n    const buffer = new ArrayBuffer(8);\n    const intView = new Int32Array(buffer);\n    const doubleView = new Float64Array(buffer);\n\n    doubleView[0] = f;\n\n    this.writeInt(intView[0], (field || '') + ':double[low]');\n    this.writeInt(intView[1], (field || '') + ':double[high]');\n  }\n\n  public storeString(s: string, field?: string) {\n    this.debug && console.log('>>>', s, (field || '') + ':string');\n\n    if(s === undefined) {\n      s = '';\n    }\n    const sUTF8 = unescape(encodeURIComponent(s));\n\n    this.checkLength(sUTF8.length + 8);\n\n    const len = sUTF8.length;\n    if(len <= 253) {\n      this.byteView[this.offset++] = len;\n    } else {\n      this.byteView[this.offset++] = 254;\n      this.byteView[this.offset++] = len & 0xFF;\n      this.byteView[this.offset++] = (len & 0xFF00) >> 8;\n      this.byteView[this.offset++] = (len & 0xFF0000) >> 16;\n    }\n    for(let i = 0; i < len; ++i) {\n      this.byteView[this.offset++] = sUTF8.charCodeAt(i);\n    }\n\n    // Padding\n    while(this.offset % 4) {\n      this.byteView[this.offset++] = 0;\n    }\n  }\n\n  public storeBytes(bytes: ArrayBuffer | Uint8Array | number[], field?: string) {\n    if(bytes instanceof ArrayBuffer) {\n      bytes = new Uint8Array(bytes);\n    } else if(bytes === undefined) {\n      bytes = [];\n    }\n\n    this.debug && console.log('>>>', bytesToHex(bytes as number[]), (field || '') + ':bytes');\n\n    // if uint8array was json.stringified, then will be: {'0': 123, '1': 123}\n    const len = (bytes as Uint8Array).length;\n    this.checkLength(len + 8);\n    if(len <= 253) {\n      this.byteView[this.offset++] = len;\n    } else {\n      this.byteView[this.offset++] = 254;\n      this.byteView[this.offset++] = len & 0xFF;\n      this.byteView[this.offset++] = (len & 0xFF00) >> 8;\n      this.byteView[this.offset++] = (len & 0xFF0000) >> 16;\n    }\n\n    this.byteView.set(bytes as Uint8Array, this.offset);\n    this.offset += len;\n\n    // Padding\n    while(this.offset % 4) {\n      this.byteView[this.offset++] = 0;\n    }\n  }\n\n  public storeIntBytes(bytes: ArrayBuffer | Uint8Array | number[], bits: number, field?: string) {\n    if(bytes instanceof ArrayBuffer) {\n      bytes = new Uint8Array(bytes);\n    }\n\n    const len = (bytes as Uint8Array).length;\n    if((bits % 32) || (len * 8) !== bits) {\n      const error = new Error('Invalid bits: ' + bits + ', ' + len);\n      console.error(error, bytes, field);\n      throw error;\n    }\n\n    this.debug && console.log('>>>', bytesToHex(bytes as Uint8Array), (field || '') + ':int' + bits);\n    this.checkLength(len);\n\n    this.byteView.set(bytes as Uint8Array, this.offset);\n    this.offset += len;\n  }\n\n  public storeRawBytes(bytes: ArrayLike<number>, field?: string) {\n    if(bytes instanceof ArrayBuffer) {\n      bytes = new Uint8Array(bytes);\n    }\n\n    const len = bytes.length;\n\n    this.debug && console.log('>>>', bytesToHex(bytes), (field || ''));\n    this.checkLength(len);\n\n    this.byteView.set(bytes, this.offset);\n    this.offset += len;\n  }\n\n  public storeMethod(methodName: string, params: any) {\n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\n    const methodData = schema.methods.find((m) => m.method === methodName);\n\n    if(!methodData) {\n      throw new Error('No method ' + methodName + ' found');\n    }\n\n    this.storeInt(methodData.id, methodName + '[id]');\n\n    const pFlags = params.pFlags || params; // * support pFlags, though am not expecting it to be there\n    const flagsOffsets: {[paramName: string]: number} = {};\n    // console.log('storeMethod', len, methodData);\n    for(const param of methodData.params) {\n      let type = param.type;\n\n      if(type.indexOf('?') !== -1) {\n        const condType = type.split('?');\n        const fieldBit = condType[0].split('.');\n\n        if(!(params[fieldBit[0]] & (1 << +fieldBit[1]))) {\n          if(condType[1] === 'true' ? pFlags[param.name] : params[param.name] !== undefined) {\n            // console.log('storeMethod autocompleting', methodName, param.name, params[param.name], type);\n            params[fieldBit[0]] |= 1 << +fieldBit[1];\n          } else {\n            continue;\n          }\n        }\n\n        // console.log('storeMethod', methodName, fieldBit, params[fieldBit[0]], params, param, condType, !!(params[fieldBit[0]] & (1 << +fieldBit[1])));\n        type = condType[1];\n      }\n\n      // console.log('storeMethod', methodName, param.name, params[param.name], type);\n      const result = this.storeObject(params[param.name], type, methodName + '[' + param.name + ']');\n\n      if(type === '#') {\n        params[param.name] = params[param.name] || 0;\n        flagsOffsets[param.name] = result as number;\n      }\n    }\n\n    for(const paramName in flagsOffsets) {\n      this.intView[flagsOffsets[paramName]] = params[paramName];\n    }\n\n    return methodData.type;\n  }\n\n  public storeObject(obj: any, type: string, field?: string) {\n    // console.log('storeObject', obj, type, field, this.offset, this.getBytes(true).hex);\n    switch(type) {\n      case '#':\n        obj = obj || 0;\n      case 'int':\n        return this.storeInt(obj, field);\n      case 'long':\n        return this.storeLong(obj, field);\n      case 'int128':\n        return this.storeIntBytes(obj, 128, field);\n      case 'int256':\n        return this.storeIntBytes(obj, 256, field);\n      case 'int512':\n        return this.storeIntBytes(obj, 512, field);\n      case 'string':\n        return this.storeString(obj, field);\n      case 'bytes':\n        return this.storeBytes(obj, field);\n      case 'double':\n        return this.storeDouble(obj, field);\n      case 'Bool':\n        return this.storeBool(obj, field);\n      case 'true':\n        return\n    }\n\n    if(Array.isArray(obj)) {\n      if(type.substr(0, 6) === 'Vector') {\n        this.writeInt(vector, field + '[id]');\n      } else if(type.substr(0, 6) !== 'vector') {\n        throw new Error('Invalid vector type ' + type);\n      }\n\n      const itemType = type.substr(7, type.length - 8); // for \"Vector<itemType>\"\n      this.writeInt(obj.length, field + '[count]');\n      for(let i = 0; i < obj.length; ++i) {\n        this.storeObject(obj[i], itemType, field + '[' + i + ']');\n      }\n\n      return true;\n    } else if(type.substr(0, 6).toLowerCase() === 'vector') {\n      throw new Error('Invalid vector object');\n    }\n\n    if(!isObject(obj)) {\n      throw new Error('Invalid object for type ' + type);\n    }\n\n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\n    const predicate = obj['_'];\n    let isBare = false;\n    const constructorData: MTProtoConstructor = schema.constructors.find((c) => c.predicate === predicate);\n\n    if(isBare = (type.charAt(0) === '%')) {\n      type = type.substr(1);\n    }\n\n    if(!constructorData) {\n      throw new Error('No predicate ' + predicate + ' found');\n    }\n\n    if(predicate === type) {\n      isBare = true;\n    }\n\n    if(!isBare) {\n      this.writeInt(constructorData.id, field + '[' + predicate + '][id]');\n    }\n\n    const pFlags = obj.pFlags;\n    const flagsOffsets: {[paramName: string]: number} = {};\n    // console.log('storeObject', len, constructorData);\n    for(const param of constructorData.params) {\n      let type = param.type;\n\n      // console.log('storeObject', param, type);\n      if(type.indexOf('?') !== -1) {\n        const condType = type.split('?');\n        const fieldBit = condType[0].split('.');\n\n        // console.log('storeObject fieldBit', fieldBit, obj[fieldBit[0]]);\n\n        if(!(obj[fieldBit[0]] & (1 << +fieldBit[1]))) {\n          if(condType[1] === 'true' ? pFlags && pFlags[param.name] : obj[param.name] !== undefined) {\n            // console.log('storeObject autocompleting', param.name, obj[param.name], type);\n            obj[fieldBit[0]] |= 1 << +fieldBit[1];\n          } else {\n            continue;\n          }\n        }\n\n        type = condType[1];\n      }\n      // console.log('storeObject', param, type);\n\n      const result = this.storeObject(obj[param.name], type, field + '[' + predicate + '][' + param.name + ']');\n\n      if(type === '#') {\n        obj[param.name] = obj[param.name] || 0;\n        flagsOffsets[param.name] = result as number;\n      }\n    }\n\n    for(const paramName in flagsOffsets) {\n      this.intView[flagsOffsets[paramName]] = obj[paramName];\n    }\n\n    return constructorData.type;\n  }\n}\n\nclass TLDeserialization<FetchLongAs extends Long> {\n  private offset = 0; // in bytes\n  private override: {[key: string]: (result: any, field: string) => void};\n\n  private buffer: ArrayBuffer;\n  private intView: Int32Array;\n  private byteView: Uint8Array;\n\n  // this.debug =\n  private mtproto: boolean = false;\n  private debug: boolean;\n\n  constructor(buffer: ArrayBuffer | Uint8Array, options: Partial<{override: any, mtproto: true, debug: true}> = {}) {\n    // buffer = addPadding(buffer, 4, true); // fix 21.01.2020 for wss\n    if(buffer instanceof ArrayBuffer) {\n      this.buffer = buffer;\n      this.intView = new Int32Array(buffer);\n      this.byteView = new Uint8Array(this.buffer);\n    } else {\n      this.buffer = buffer.buffer;\n      this.intView = new Int32Array(buffer.buffer);\n      this.byteView = buffer;\n    }\n\n    // console.log(this.intView);\n\n    this.override = options.override || {};\n    this.mtproto = !!options.mtproto;\n    this.debug = options.debug !== undefined ? options.debug : /* Modes.debug */false;\n  }\n\n  /* public setMtproto(mtproto: boolean) {\n    this.mtproto = mtproto;\n  } */\n\n  private readInt(field: string) {\n    // if(this.offset >= this.intView.length * 4) {\n    if((this.byteView.length - this.offset) < 4) {\n      console.error(this.byteView, this.offset);\n      throw new Error('Nothing to fetch: ' + field);\n    }\n\n    const i = this.intView[this.offset / 4];\n    // const i = new Uint32Array(this.byteView.buffer.slice(this.offset, this.offset + 4))[0];\n\n    this.debug &&/*  || field.includes('[dialog][read_outbox_max_id]') */\n      console.log('<<<', i.toString(16), i, field,\n        this.byteView.slice(this.offset - 16, this.offset + 16),\n        bytesToHex(this.byteView.slice(this.offset - 16, this.offset + 16)));\n\n    this.offset += 4;\n\n    return i;\n  }\n\n  public fetchInt(field?: string) {\n    return this.readInt((field || '') + ':int');\n  }\n\n  public fetchDouble(field?: string) {\n    const buffer = new ArrayBuffer(8);\n    const intView = new Int32Array(buffer);\n    const doubleView = new Float64Array(buffer);\n\n    intView[0] = this.readInt((field || '') + ':double[low]'),\n    intView[1] = this.readInt((field || '') + ':double[high]');\n\n    return doubleView[0];\n  }\n\n  // ! it should've been signed\n  public fetchLong(field?: string): FetchLongAs {\n    const iLow = this.readInt((field || '') + ':long[low]');\n    const iHigh = this.readInt((field || '') + ':long[high]');\n\n    let ulong = ulongFromInts(iHigh, iLow);\n    if(/* !unsigned &&  */!this.mtproto) { // make it signed\n      ulong = bigIntToSigned(ulong);\n    }\n\n    if(!this.mtproto) {\n      if(safeBigInt.greaterOrEquals(ulong.abs())) {\n        // @ts-ignore\n        return ulong.toJSNumber();\n      }\n    }\n\n    // @ts-ignore\n    return ulong.toString(10);\n  }\n\n  public fetchBool(field?: string): boolean {\n    const i = this.readInt((field || '') + ':bool');\n    if(i === boolTrue) {\n      return true;\n    } else if(i === boolFalse) {\n      return false;\n    }\n\n    this.offset -= 4;\n    return this.fetchObject('Object', field);\n  }\n\n  public fetchString(field?: string): string {\n    let len = this.byteView[this.offset++];\n\n    if(len === 254) {\n      len = this.byteView[this.offset++] |\n        (this.byteView[this.offset++] << 8) |\n        (this.byteView[this.offset++] << 16);\n    }\n\n    let sUTF8 = '';\n    for(let i = 0; i < len; ++i) {\n      sUTF8 += String.fromCharCode(this.byteView[this.offset++]);\n    }\n\n    // Padding\n    while(this.offset % 4) {\n      ++this.offset;\n    }\n\n    let s: string;\n    try {\n      s = decodeURIComponent(escape(sUTF8));\n    } catch(e) {\n      s = sUTF8;\n    }\n\n    this.debug && console.log('<<<', s, (field || '') + ':string');\n\n    return s;\n  }\n\n  public fetchBytes(field?: string) {\n    let len = this.byteView[this.offset++];\n\n    if(len === 254) {\n      len = this.byteView[this.offset++] |\n        (this.byteView[this.offset++] << 8) |\n        (this.byteView[this.offset++] << 16);\n    }\n\n    const bytes = this.byteView[sliceMethod](this.offset, this.offset + len);\n    this.offset += len;\n\n    // Padding\n    while(this.offset % 4) {\n      ++this.offset;\n    }\n\n    this.debug && console.log('<<<', bytesToHex(bytes), (field || '') + ':bytes');\n\n    return bytes;\n  }\n\n  public fetchIntBytes(bits: number, typed: true, field?: string): Uint8Array;\n  public fetchIntBytes(bits: number, typed?: false, field?: string): number[];\n  public fetchIntBytes(bits: number, typed: boolean = true, field?: string) {\n    if(bits % 32) {\n      throw new Error('Invalid bits: ' + bits);\n    }\n\n    const len = bits / 8;\n    if(typed) {\n      const result = this.byteView[sliceMethod](this.offset, this.offset + len);\n      this.offset += len;\n      return result;\n    }\n\n    const bytes: number[] = new Array(len);\n    for(let i = 0; i < len; ++i) {\n      bytes[i] = this.byteView[this.offset++];\n    }\n\n    this.debug && console.log('<<<', bytesToHex(bytes), (field || '') + ':int' + bits);\n\n    return bytes;\n  }\n\n  public fetchRawBytes(len: number | false, typed: true, field: string): Uint8Array;\n  public fetchRawBytes(len: number | false, typed: false, field: string): number[];\n  public fetchRawBytes(len: number | false, typed: boolean = true, field: string) {\n    if(len === false) {\n      len = this.readInt((field || '') + '_length');\n      if(len > this.byteView.byteLength) {\n        throw new Error('Invalid raw bytes length: ' + len + ', buffer len: ' + this.byteView.byteLength);\n      }\n    }\n\n    if(typed) {\n      const bytes = new Uint8Array(len);\n      bytes.set(this.byteView[sliceMethod](this.offset, this.offset + len));\n      this.offset += len;\n      return bytes;\n    }\n\n    const bytes: number[] = new Array(len);\n    for(let i = 0; i < len; ++i) {\n      bytes[i] = this.byteView[this.offset++];\n    }\n\n    this.debug && console.log('<<<', bytesToHex(bytes), (field || ''));\n\n    return bytes;\n  }\n\n  private fetchVector(type: string, field?: string) {\n    const len = this.readInt(field + '[count]');\n    const result: any[] = new Array(len);\n    if(len > 0) {\n      const itemType = type.substr(7, type.length - 8); // for \"Vector<itemType>\"\n      for(let i = 0; i < len; ++i) {\n        result[i] = this.fetchObject(itemType, field + '[' + i + ']');\n      }\n    }\n\n    return result;\n  }\n\n  public fetchObject(type: string, field?: string): any {\n    switch(type) {\n      case '#':\n      case 'int':\n        return this.fetchInt(field);\n      case 'long':\n        return this.fetchLong(field);\n      case 'int128':\n        return this.fetchIntBytes(128, true, field);\n      case 'int256':\n        return this.fetchIntBytes(256, true, field);\n      case 'int512':\n        return this.fetchIntBytes(512, true, field);\n      case 'string':\n        return this.fetchString(field);\n      case 'bytes':\n        return this.fetchBytes(field);\n      case 'double':\n        return this.fetchDouble(field);\n      case 'Bool':\n        return this.fetchBool(field);\n      case 'true':\n        return true;\n    }\n\n    field = field || type || 'Object';\n\n    if(type.charAt(0) === 'v' && type.substr(1, 5) === 'ector') {\n      return this.fetchVector(type, field);\n    }\n\n    const schema = this.mtproto ? Schema.MTProto : Schema.API;\n    let constructorData: MTProtoConstructor = null;\n    let fallback = false;\n\n    if(type.charAt(0) === '%') {\n      const checkType = type.substr(1);\n      constructorData = schema.constructors.find((c) => c.type === checkType);\n      if(!constructorData) {\n        throw new Error('Constructor not found for type: ' + type);\n      }\n    }/*  else if(type.charAt(0) >= 97 && type.charAt(0) <= 122) {\n      constructorData = schema.constructors.find((c) => c.predicate === type);\n      if(!constructorData) {\n        throw new Error('Constructor not found for predicate: ' + type);\n      }\n    } */ else {\n      const constructorCmp = this.readInt(field + '[id]');\n\n      if(constructorCmp === gzipPacked) { // Gzip packed\n        const compressed = this.fetchBytes(field + '[packed_string]');\n        const uncompressed = gzipUncompress(compressed) as Uint8Array;\n        const newDeserializer = new TLDeserialization(uncompressed); // rpc_result is packed here\n\n        return newDeserializer.fetchObject(type, field);\n      }\n\n      if(constructorCmp === vector) {\n        return this.fetchVector(type, field);\n      }\n\n      let index = schema.constructorsIndex;\n      if(!index) {\n        schema.constructorsIndex = index = {};\n        for(let i = 0, len = schema.constructors.length; i < len; ++i) {\n          index[schema.constructors[i].id] = i;\n        }\n      }\n\n      const i = index[constructorCmp];\n      if(i !== undefined) {\n        constructorData = schema.constructors[i];\n      }\n\n      if(!constructorData && this.mtproto) {\n        const schemaFallback = Schema.API;\n        for(let i = 0, len = schemaFallback.constructors.length; i < len; ++i) {\n          if(+schemaFallback.constructors[i].id === constructorCmp) {\n            constructorData = schemaFallback.constructors[i];\n\n            delete this.mtproto;\n            fallback = true;\n            break;\n          }\n        }\n      }\n\n      if(!constructorData) {\n        console.error('Constructor not found:', constructorCmp);\n\n        let int1: number, int2: number;\n        try {\n          int1 = this.fetchInt(field);\n          int2 = this.fetchInt(field);\n        } catch(err) {\n\n        }\n\n        throw new Error('Constructor not found: ' + constructorCmp + ' ' + int1 + ' ' + int2 + ' ' + field);\n      }\n    }\n\n    const predicate = constructorData.predicate;\n\n    const result: any = {'_': predicate};\n    const overrideKey = (this.mtproto ? 'mt_' : '') + predicate;\n    if(this.override[overrideKey]) {\n      this.override[overrideKey](result, field + '[' + predicate + ']');\n    } else {\n      for(let i = 0, len = constructorData.params.length; i < len; ++i) {\n        const param = constructorData.params[i];\n        let type = param.type;\n\n        if(type === '#' && result.pFlags === undefined) {\n          result.pFlags = {};\n        }\n\n        const isCond = type.indexOf('?') !== -1;\n        if(isCond) {\n          const condType = type.split('?');\n          const fieldBit = condType[0].split('.');\n\n          if(!(result[fieldBit[0]] & (1 << +fieldBit[1]))) {\n            continue;\n          }\n\n          type = condType[1];\n        }\n\n        const value = this.fetchObject(type, field + '[' + predicate + '][' + param.name + ']');\n\n        if(isCond && type === 'true') {\n          result.pFlags[param.name] = value;\n        } else {\n          result[param.name] = value;\n        }\n      }\n    }\n\n    if(fallback) {\n      this.mtproto = true;\n    }\n\n    if(type === 'JSONValue') {\n      return this.formatJSONValue(result);\n    }\n\n    return result;\n  }\n\n  private formatJSONValue(jsonValue: JSONValue): any {\n    if(!jsonValue._) return jsonValue;\n    switch(jsonValue._) {\n      case 'jsonNull':\n        return null;\n      case 'jsonObject': {\n        const out: any = {};\n        const objectValues = jsonValue.value;\n        for(let i = 0, length = objectValues.length; i < length; ++i) {\n          const objectValue = objectValues[i];\n          out[objectValue.key] = this.formatJSONValue(objectValue.value);\n        }\n        return out;\n      }\n      default:\n        return jsonValue.value;\n    }\n  }\n\n  public getOffset() {\n    return this.offset;\n  }\n\n  public setOffset(offset: number) {\n    this.offset = offset;\n  }\n\n  /* public fetchEnd() {\n    if(this.offset !== this.byteView.length) {\n      throw new Error('Fetch end with non-empty buffer');\n    }\n\n    return true;\n  } */\n}\n\nMOUNT_CLASS_TO.TLDeserialization = TLDeserialization;\nMOUNT_CLASS_TO.TLSerialization = TLSerialization;\nexport {TLDeserialization, TLSerialization};\n","// export function gzipUncompress(bytes: ArrayBuffer, toString: true): string;\n\n// @ts-ignore\nimport pako from 'pako/dist/pako_inflate.min.js';\n// import dT from './dT';\n\n// export function gzipUncompress(bytes: ArrayBuffer, toString?: false): Uint8Array;\nexport default function gzipUncompress(bytes: ArrayBuffer, toString?: boolean): string | Uint8Array {\n  // console.log(dT(), 'Gzip uncompress start');\n  const result = pako.inflate(bytes, toString ? {to: 'string'} : undefined);\n  // console.log(dT(), 'Gzip uncompress finish'/* , result */);\n  return result;\n}\n","import randomize from '../array/randomize';\nimport bufferConcats from './bufferConcats';\n\nexport default function addPadding<T extends number[] | ArrayBuffer | Uint8Array>(\n  bytes: T,\n  blockSize: number = 16,\n  zeroes?: boolean,\n  blockSizeAsTotalLength = false,\n  prepend = false\n): T {\n  const len = (bytes as ArrayBuffer).byteLength || (bytes as Uint8Array).length;\n  const needPadding = blockSizeAsTotalLength ? blockSize - len : blockSize - (len % blockSize);\n  if(needPadding > 0 && needPadding < blockSize) {\n    // //console.log('addPadding()', len, blockSize, needPadding);\n    const padding = new Uint8Array(needPadding);\n    if(zeroes) {\n      for(let i = 0; i < needPadding; ++i) {\n        padding[i] = 0;\n      }\n    } else {\n      randomize(padding);\n    }\n\n    if(bytes instanceof ArrayBuffer) {\n      return (prepend ? bufferConcats(padding, bytes) : bufferConcats(bytes, padding)).buffer as T;\n    } else if(bytes instanceof Uint8Array) {\n      return (prepend ? bufferConcats(padding, bytes) : bufferConcats(bytes, padding)) as T;\n    } else {\n      // @ts-ignore\n      return (prepend ? [...padding].concat(bytes) : bytes.concat([...padding])) as T;\n    }\n  }\n\n  return bytes;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {TLDeserialization, TLSerialization} from './tl_utils';\nimport CryptoWorker from '../crypto/cryptoMessagePort';\nimport sessionStorage from '../sessionStorage';\nimport Schema from './schema';\nimport {NetworkerFactory} from './networkerFactory';\nimport {logger, LogTypes} from '../logger';\nimport {InvokeApiOptions} from '../../types';\nimport longToBytes from '../../helpers/long/longToBytes';\nimport MTTransport from './transports/transport';\nimport {nextRandomUint, randomLong} from '../../helpers/random';\nimport App from '../../config/app';\nimport DEBUG from '../../config/debug';\nimport Modes from '../../config/modes';\nimport noop from '../../helpers/noop';\n\n                       \nimport HTTP from './transports/http';\n         \n\nimport type TcpObfuscated from './transports/tcpObfuscated';\nimport bigInt from 'big-integer';\nimport {ConnectionStatus} from './connectionStatus';\nimport ctx from '../../environment/ctx';\nimport bufferConcats from '../../helpers/bytes/bufferConcats';\nimport bytesCmp from '../../helpers/bytes/bytesCmp';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport convertToUint8Array from '../../helpers/bytes/convertToUint8Array';\nimport isObject from '../../helpers/object/isObject';\nimport forEachReverse from '../../helpers/array/forEachReverse';\nimport sortLongsArray from '../../helpers/long/sortLongsArray';\nimport randomize from '../../helpers/array/randomize';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport pause from '../../helpers/schedulers/pause';\nimport {getEnvironment} from '../../environment/utils';\nimport {TimeManager} from './timeManager';\n\n// console.error('networker included!', new Error().stack);\n\nexport type MTMessageOptions = InvokeApiOptions & Partial<{\n  noResponse: true, // http_wait\n  longPoll: true,\n\n  notContentRelated: true, // ACK\n  noSchedule: true,\n  // withResult: true,\n  messageId: MTLong,\n}>;\n\nexport type MTMessage = InvokeApiOptions & MTMessageOptions & {\n  msg_id: MTLong,\n  seq_no: number,\n  body?: Uint8Array | number[],\n  isAPI?: boolean,\n  // only these four are important\n\n  acked?: boolean,\n\n  deferred?: CancellablePromise<void>,\n\n  container?: boolean,\n  inner?: MTLong[],\n\n  // below - options\n\n  notContentRelated?: true,\n  noSchedule?: true,\n\n  resultType?: string,\n\n  longPoll?: true,\n  noResponse?: true, // only with http (http_wait for longPoll)\n};\n\nconst DRAIN_TIMEOUT = 10000;\nconst delays: {\n  [k in 'client' | 'file']: {\n    disconnectDelayMin: number,\n    disconnectDelayMax: number,\n    pingInterval: number,\n    pingMaxTime: number,\n    connectionTimeout: number\n  }\n} = {\n  client: {\n    disconnectDelayMin: 7,\n    disconnectDelayMax: 20,\n    pingInterval: 2000,\n    pingMaxTime: 5,\n    connectionTimeout: 5000\n  },\n  file: {\n    disconnectDelayMin: 10,\n    disconnectDelayMax: 24,\n    pingInterval: 3000,\n    pingMaxTime: 7,\n    connectionTimeout: 7500\n  }\n};\nconst RESEND_OPTIONS: MTMessageOptions = {\n  noSchedule: true,\n  notContentRelated: true\n};\nlet invokeAfterMsgConstructor: number;\nlet networkerTempId = 0;\n\nexport default class MTPNetworker {\n  private authKeyUint8: Uint8Array;\n\n  public isFileNetworker: boolean;\n  private isFileUpload: boolean;\n  private isFileDownload: boolean;\n\n  private lastServerMessages: Array<MTLong> = [];\n\n  private sentMessages: {\n    [msgId: MTLong]: MTMessage\n  } = {};\n\n  private pendingMessages: {[msgId: MTLong]: number} = {};\n  private pendingAcks: Array<MTLong> = [];\n  private pendingResendReq: MTLong[] = [];\n  // private pendingResendAnsReq: MTLong[] = [];\n  public connectionInited: boolean;\n\n  private nextReqTimeout: number;\n  private nextReq: number = 0;\n\n                         \n  private longPollInterval: number;\n  private longPollPending: number;\n  private checkConnectionRetryAt: number;\n  private checkConnectionTimeout: number;\n  private checkConnectionPeriod = 0;\n  private sleepAfter: number;\n  private offline = false;\n  private sendingLongPoll: boolean;\n           \n\n  private seqNo: number;\n  private prevSessionId: Uint8Array;\n  private sessionId: Uint8Array;\n  private serverSalt: Uint8Array;\n\n  private lastResendReq: {\n    reqMsgId: MTLong,\n    msgIds: MTPNetworker['pendingResendReq']\n  };\n  // private lastResendAnsReq: MTPNetworker['lastResendReq'];\n\n  private name: string;\n  private log: ReturnType<typeof logger>;\n\n  public isOnline = false;\n  private status: ConnectionStatus = ConnectionStatus.Closed;\n  private lastResponseTime = 0;\n\n  private debug = DEBUG /* && false */ || Modes.debug;\n\n  public activeRequests = 0;\n\n  public onDrain: () => void;\n  private onDrainTimeout: number;\n\n  public transport: MTTransport;\n\n                       \n  private pingDelayDisconnectDeferred: CancellablePromise<string>;\n  private pingPromise: Promise<void>;\n  // private pingInterval: number;\n  private lastPingTime: number;\n  private lastPingStartTime: number;\n  private lastPingDelayDisconnectId: string;\n           \n  // public onConnectionStatusChange: (online: boolean) => void;\n\n  // private debugRequests: Array<{before: Uint8Array, after: Uint8Array}> = [];\n\n  private delays: typeof delays[keyof typeof delays];\n  // private getNewTimeOffset: boolean;\n\n  constructor(\n    private networkerFactory: NetworkerFactory,\n    private timeManager: TimeManager,\n    public dcId: number,\n    private authKey: Uint8Array,\n    private authKeyId: Uint8Array,\n    serverSalt: Uint8Array,\n    options: InvokeApiOptions = {}\n  ) {\n    this.authKeyUint8 = convertToUint8Array(this.authKey);\n    this.serverSalt = convertToUint8Array(serverSalt);\n\n    this.isFileUpload = !!options.fileUpload;\n    this.isFileDownload = !!options.fileDownload;\n    this.isFileNetworker = this.isFileUpload || this.isFileDownload;\n    this.delays = this.isFileNetworker ? delays.file : delays.client;\n\n    const suffix = this.isFileUpload ? '-U' : this.isFileDownload ? '-D' : '';\n    this.name = 'NET-' + dcId + suffix;\n    // this.log = logger(this.name, this.upload && this.dcId === 2 ? LogLevels.debug | LogLevels.warn | LogLevels.log | LogLevels.error : LogLevels.error);\n    this.log = logger(this.name + (suffix ? '' : '-C') + '-' + networkerTempId++, LogTypes.Log/*  | LogTypes.Debug */ | LogTypes.Error | LogTypes.Warn);\n    this.log('constructor'/* , this.authKey, this.authKeyID, this.serverSalt */);\n\n    // Test resend after bad_server_salt\n    /* if(this.dcId === 2 && this.upload) {\n      //timeManager.applyServerTime((Date.now() / 1000 - 86400) | 0);\n      this.serverSalt[0] = 0;\n    } */\n\n    this.updateSession();\n\n    // if(!NetworkerFactory.offlineInited) {\n    //   NetworkerFactory.offlineInited = true;\n    //   /* rootScope.offline = true\n    //   rootScope.offlineConnecting = true */\n    // }\n  }\n\n  private updateSession() {\n    this.seqNo = 0;\n    this.prevSessionId = this.sessionId;\n    this.sessionId = randomize(new Uint8Array(8));\n  }\n\n  /* private clearContainers() {\n    for(const messageId in this.sentMessages) {\n      const message = this.sentMessages[messageId];\n      if(message.container) {\n        delete this.sentMessages[messageId];\n      }\n    }\n  } */\n\n  private updateSentMessage(sentMessageId: string) {\n    const sentMessage = this.sentMessages[sentMessageId];\n    if(!sentMessage) {\n      return false;\n    }\n\n    if(sentMessage.container) {\n      forEachReverse(sentMessage.inner, (innerSentMessageId, idx) => {\n        const innerSentMessage = this.updateSentMessage(innerSentMessageId);\n        if(!innerSentMessage) {\n          sentMessage.inner.splice(idx, 1);\n        } else {\n          sentMessage.inner[idx] = innerSentMessage.msg_id;\n        }\n      });\n    }\n\n    sentMessage.msg_id = this.timeManager.generateId();\n    sentMessage.seq_no = this.generateSeqNo(sentMessage.notContentRelated || sentMessage.container);\n\n    if(this.debug) {\n      this.log(`updateSentMessage, old=${sentMessageId}, new=${sentMessage.msg_id}`);\n    }\n\n    this.sentMessages[sentMessage.msg_id] = sentMessage;\n    delete this.sentMessages[sentMessageId];\n\n    return sentMessage;\n  }\n\n  private generateSeqNo(notContentRelated?: boolean) {\n    let seqNo = this.seqNo * 2;\n\n    if(!notContentRelated) {\n      seqNo++;\n      this.seqNo++;\n    }\n\n    return seqNo;\n  }\n\n  public wrapMtpCall(method: string, params: any, options: MTMessageOptions) {\n    const serializer = new TLSerialization({mtproto: true});\n\n    serializer.storeMethod(method, params);\n\n    const messageId = this.timeManager.generateId();\n    const seqNo = this.generateSeqNo();\n    const message = {\n      msg_id: messageId,\n      seq_no: seqNo,\n      body: serializer.getBytes(true)\n    };\n\n    if(Modes.debug) {\n      this.log('MT call', method, params, messageId, seqNo);\n    }\n\n    return this.pushMessage(message, options);\n  }\n\n  public wrapMtpMessage(object: any, options: MTMessageOptions) {\n    const serializer = new TLSerialization({mtproto: true});\n    serializer.storeObject(object, 'Object');\n\n    const messageId = this.timeManager.generateId();\n    const seqNo = this.generateSeqNo(options.notContentRelated);\n    const message = {\n      msg_id: messageId,\n      seq_no: seqNo,\n      body: serializer.getBytes(true)\n    };\n\n    if(Modes.debug) {\n      this.log('MT message', object, messageId, seqNo);\n    }\n\n    return this.pushMessage(message, options);\n  }\n\n  public wrapApiCall(method: string, params: any = {}, options: InvokeApiOptions = {}) {\n    const serializer = new TLSerialization(options);\n\n    if(!this.connectionInited) { // this will call once for each new session\n      // /////this.log('Wrap api call !this.connectionInited');\n\n      const invokeWithLayer = Schema.API.methods.find((m) => m.method === 'invokeWithLayer');\n      if(!invokeWithLayer) throw new Error('no invokeWithLayer!');\n      serializer.storeInt(+invokeWithLayer.id, 'invokeWithLayer');\n\n      // @ts-ignore\n      serializer.storeInt(Schema.layer, 'layer');\n\n      const initConnection = Schema.API.methods.find((m) => m.method === 'initConnection');\n      if(!initConnection) throw new Error('no initConnection!');\n\n      serializer.storeInt(+initConnection.id, 'initConnection');\n      serializer.storeInt(0x0, 'flags');\n      serializer.storeInt(App.id, 'api_id');\n      serializer.storeString(getEnvironment().USER_AGENT || 'Unknown UserAgent', 'device_model');\n      serializer.storeString(navigator.platform || 'Unknown Platform', 'system_version');\n      serializer.storeString(App.version + (App.isMainDomain ? ' ' + App.suffix : ''), 'app_version');\n      serializer.storeString(navigator.language || 'en', 'system_lang_code');\n      serializer.storeString(App.langPack, 'lang_pack');\n      serializer.storeString(this.networkerFactory.language, 'lang_code');\n      // serializer.storeInt(0x0, 'proxy');\n      /* serializer.storeMethod('initConnection', {\n        'flags': 0,\n        'api_id': App.id,\n        'device_model': navigator.userAgent || 'Unknown UserAgent',\n        'system_version': navigator.platform || 'Unknown Platform',\n        'app_version': App.version,\n        'system_lang_code': navigator.language || 'en',\n        'lang_pack': '',\n        'lang_code': navigator.language || 'en'\n      }); */\n    }\n\n    if(options.afterMessageId) {\n      if(invokeAfterMsgConstructor === undefined) {\n        const m = Schema.API.methods.find((m) => m.method === 'invokeAfterMsg');\n        invokeAfterMsgConstructor = m ? +m.id : 0;\n      }\n\n      if(invokeAfterMsgConstructor) {\n        // if(this.debug) {\n        //   this.log('invokeApi: store invokeAfterMsg');\n        // }\n\n        serializer.storeInt(invokeAfterMsgConstructor, 'invokeAfterMsg');\n        serializer.storeLong(options.afterMessageId, 'msg_id');\n      } else {\n        this.log.error('no invokeAfterMsg!');\n      }\n    }\n\n    options.resultType = serializer.storeMethod(method, params);\n\n    /* if(method === 'account.updateNotifySettings') {\n      this.log('api call body:', serializer.getBytes(true));\n    } */\n\n    const messageId = this.timeManager.generateId();\n    const seqNo = this.generateSeqNo();\n    const message = {\n      msg_id: messageId,\n      seq_no: seqNo,\n      body: serializer.getBytes(true),\n      isAPI: true\n    };\n\n    if(Modes.debug/*  || true */) {\n      this.log('Api call', method, message, params, options);\n    } else if(this.debug) {\n      this.log('Api call', method, params, options);\n    }\n\n    return this.pushMessage(message, options);\n  }\n\n  public changeTransport(transport?: MTTransport) {\n    const oldTransport = this.transport;\n    if(oldTransport) {\n      oldTransport.destroy();\n\n      if(this.nextReqTimeout) {\n        clearTimeout(this.nextReqTimeout);\n        this.nextReqTimeout = 0;\n        this.nextReq = 0;\n      }\n\n      this.connectionInited = false;\n\n                             \n      if(this.longPollInterval !== undefined) {\n        clearInterval(this.longPollInterval);\n        this.longPollInterval = undefined;\n      }\n\n      this.clearCheckConnectionTimeout();\n               \n    }\n\n    this.log('change transport', transport, oldTransport);\n\n                         \n    this.clearPingDelayDisconnect();\n\n    // if(this.pingInterval !== undefined) {\n    //   clearInterval(this.pingInterval);\n    //   this.pingInterval = undefined;\n    // }\n\n    // this.clearPing();\n             \n\n    this.transport = transport;\n    if(!transport) {\n      return;\n    }\n\n    transport.networker = this;\n\n                           \n                         \n    if(transport instanceof HTTP) {\n             \n      this.longPollInterval = ctx.setInterval(this.checkLongPoll, 10000);\n      this.checkLongPoll();\n      this.checkConnection('changed transport');\n                         \n    }\n             \n             \n\n                         \n    // * handle outcoming dead socket, server will close the connection\n    if((transport as TcpObfuscated).connection) {\n      // this.sendPingDelayDisconnect();\n\n      if(transport.connected) {\n        this.setConnectionStatus(ConnectionStatus.Connected);\n      }\n\n      // this.pingInterval = ctx.setInterval(this.sendPing, PING_INTERVAL);\n      // this.sendPing();\n    }\n             \n\n    this.resend();\n  }\n\n  public destroy() {\n    this.log('destroy');\n  }\n\n  public forceReconnectTimeout() {\n    if((this.transport as TcpObfuscated).reconnect) {\n      (this.transport as TcpObfuscated).reconnect();\n    } else {\n      this.resend();\n    }\n  }\n\n  public forceReconnect() {\n    if((this.transport as TcpObfuscated).forceReconnect) {\n      (this.transport as TcpObfuscated).forceReconnect();\n    } else {\n      this.checkConnection('force reconnect');\n    }\n  }\n\n  /* private clearPing() {\n    if(this.pingPromise) {\n      this.pingPromise = undefined;\n    }\n\n    this.lastPingTime = undefined;\n  }\n\n  private sendPing = () => {\n    // return;\n\n    // if(!(this.transport as TcpObfuscated).connected) {\n    //   this.clearPing();\n    //   return;\n    // }\n\n    if(this.pingPromise) {\n      return;\n    }\n\n    const startTime = Date.now();\n    this.log('sendPing: ping', startTime);\n    const promise = this.pingPromise = this.wrapMtpCall('ping', {\n      ping_id: randomLong()\n    }, {\n      notContentRelated: true\n    }).then(() => {\n      const elapsedTime = Date.now() - startTime;\n      this.lastPingTime = elapsedTime / 1000;\n      this.log('sendPing: pong', elapsedTime);\n\n      setTimeout(() => {\n        if(this.pingPromise !== promise) {\n          return;\n        }\n\n        this.pingPromise = undefined;\n        this.sendPing();\n      }, Math.max(0, PING_INTERVAL - elapsedTime));\n    });\n  }; */\n\n  private clearPingDelayDisconnect() {\n    const deferred = this.pingDelayDisconnectDeferred;\n    this.pingDelayDisconnectDeferred = undefined;\n    this.lastPingDelayDisconnectId = undefined;\n\n    if(deferred) {\n      deferred.reject();\n    }\n  }\n\n  private sendPingDelayDisconnect = () => {\n    // return;\n\n    if(this.pingDelayDisconnectDeferred || !this.transport || !this.transport.connected) return;\n\n    /* if(!this.isOnline) {\n      if((this.transport as TcpObfuscated).connected) {\n        (this.transport as TcpObfuscated).connection.close();\n      }\n\n      return;\n    } */\n\n    const deferred = this.pingDelayDisconnectDeferred = deferredPromise();\n    const delays = this.delays;\n    const pingMaxTime = this.delays.pingMaxTime;\n    const lastPingTime = Math.min(this.lastPingTime ?? 0, pingMaxTime);\n    const disconnectDelay = Math.round(delays.disconnectDelayMin + lastPingTime / pingMaxTime * (delays.disconnectDelayMax - delays.disconnectDelayMin));\n    const timeoutTime = disconnectDelay * 1000;\n    const startTime = this.lastPingStartTime = Date.now();\n    const pingId = this.lastPingDelayDisconnectId = randomLong();\n    const options: MTMessageOptions = {notContentRelated: true};\n    this.wrapMtpCall('ping_delay_disconnect', {\n      ping_id: pingId,\n      disconnect_delay: disconnectDelay\n    }, options);\n\n    const log = this.log.bindPrefix('sendPingDelayDisconnect');\n    this.debug && log.debug(`ping, timeout=${timeoutTime}, lastPingTime=${this.lastPingTime}, msgId=${options.messageId}, pingId=${pingId}`);\n    const rejectTimeout = ctx.setTimeout(deferred.reject, timeoutTime);\n\n    const onResolved = (reason: string) => {\n      clearTimeout(rejectTimeout);\n      const elapsedTime = Date.now() - startTime;\n      this.lastPingTime = elapsedTime / 1000;\n      this.debug && log.debug(`pong, reason='${reason}', time=${lastPingTime}, msgId=${options.messageId}`);\n      if(elapsedTime > timeoutTime) {\n        throw undefined;\n      } else {\n        return pause(Math.max(0, this.delays.pingInterval - elapsedTime/* timeoutTime - elapsedTime - PING_INTERVAL */));\n      }\n    };\n\n    const onTimeout = () => {\n      clearTimeout(rejectTimeout);\n      const transport = this.transport as TcpObfuscated;\n      if(this.pingDelayDisconnectDeferred !== deferred || !transport?.connection) {\n        return;\n      }\n\n      log.error('catch, closing connection', this.lastPingTime, options.messageId);\n      transport.connection.close();\n    };\n\n    const onFinally = () => {\n      if(this.pingDelayDisconnectDeferred !== deferred) {\n        return;\n      }\n\n      this.pingDelayDisconnectDeferred = undefined;\n      this.sendPingDelayDisconnect();\n    };\n\n    deferred\n    .then(onResolved)\n    .catch(onTimeout)\n    .finally(onFinally);\n  };\n\n                         \n  private checkLongPoll = () => {\n    const isClean = this.cleanupSent();\n    // this.log.error('Check lp', this.longPollPending, this.dcId, isClean, this);\n    if((this.longPollPending && Date.now() < this.longPollPending) ||\n      this.offline ||\n      this.isStopped() ||\n      this.isFileNetworker) {\n      // this.log('No lp this time');\n      return false;\n    }\n\n    sessionStorage.get('dc').then((baseDcId) => {\n      if(isClean && (\n        baseDcId !== this.dcId ||\n          (this.sleepAfter && Date.now() > this.sleepAfter)\n      )) {\n        // console.warn(dT(), 'Send long-poll for DC is delayed', this.dcId, this.sleepAfter);\n        return;\n      }\n\n      this.sendLongPoll();\n    });\n  };\n\n  private sendLongPoll() {\n    if(this.sendingLongPoll) return;\n    this.sendingLongPoll = true;\n    const maxWait = 25000;\n\n    this.longPollPending = Date.now() + maxWait;\n    this.debug && this.log.debug('sendLongPoll', this.longPollPending);\n\n    this.wrapMtpCall('http_wait', {\n      max_delay: 500,\n      wait_after: 150,\n      max_wait: maxWait\n    }, {\n      noResponse: true,\n      // notContentRelated: true,\n      longPoll: true\n    }).then(() => {\n      this.longPollPending = undefined;\n      setTimeout(this.checkLongPoll, 0);\n    }, (error: ErrorEvent) => {\n      this.log('Long-poll failed', error);\n    }).finally(() => {\n      this.sendingLongPoll = undefined;\n    });\n  }\n\n  private checkConnection = (event: Event | string) => {\n    this.debug && this.log('Check connection', event);\n    this.clearCheckConnectionTimeout();\n\n    if(!this.transport) {\n      this.log.warn('No transport for checkConnection');\n      return;\n    }\n\n    const serializer = new TLSerialization({mtproto: true});\n    const pingId = randomLong();\n\n    serializer.storeMethod('ping', {\n      ping_id: pingId\n    });\n\n    const pingMessage = {\n      msg_id: this.timeManager.generateId(),\n      seq_no: this.generateSeqNo(true),\n      body: serializer.getBytes(true)\n    };\n\n    if(this.offline) {\n      this.setConnectionStatus(ConnectionStatus.Connecting);\n    }\n\n    this.sendEncryptedRequest(pingMessage).then(() => {\n      this.toggleOffline(false);\n    }, () => {\n      this.debug && this.log('Delay', this.checkConnectionPeriod * 1000);\n      this.checkConnectionTimeout = ctx.setTimeout(() => this.checkConnection('from failed checkConnection request'), this.checkConnectionPeriod * 1000 | 0);\n      this.checkConnectionPeriod = Math.min(60, this.checkConnectionPeriod * 1.5);\n    });\n  };\n\n  private clearCheckConnectionTimeout() {\n    if(this.checkConnectionTimeout !== undefined) {\n      clearTimeout(this.checkConnectionTimeout);\n      this.checkConnectionTimeout = undefined;\n    }\n  }\n\n  private toggleOffline(offline: boolean) {\n    if(this.offline !== offline) {\n      this.offline = offline;\n\n      this.clearCheckConnectionTimeout();\n      if(offline) {\n        clearTimeout(this.nextReqTimeout);\n        this.nextReqTimeout = 0;\n        this.nextReq = 0;\n\n        if(this.checkConnectionPeriod < 1.5) {\n          this.checkConnectionPeriod = 0;\n        }\n\n        const delay = this.checkConnectionPeriod * 1000 | 0;\n        this.checkConnectionRetryAt = Date.now() + delay;\n        this.setConnectionStatus(ConnectionStatus.Closed, this.checkConnectionRetryAt);\n        this.checkConnectionTimeout = ctx.setTimeout(() => this.checkConnection('from toggleOfline'), delay);\n        this.checkConnectionPeriod = Math.min(30, (1 + this.checkConnectionPeriod) * 1.5);\n\n                              \n                                                                              \n                                                                             \n                 \n      } else {\n        this.setConnectionStatus(ConnectionStatus.Connected);\n        this.checkLongPoll();\n\n        this.scheduleRequest();\n\n                              \n                                                                          \n                                                                         \n                 \n      }\n    }\n\n    this.setConnectionStatus(offline ? ConnectionStatus.Closed : ConnectionStatus.Connected, offline ? this.checkConnectionRetryAt : undefined);\n  }\n\n  private handleSentEncryptedRequestHTTP(promise: ReturnType<MTPNetworker['sendEncryptedRequest']>, message: MTMessage, noResponseMsgs: string[]) {\n    // let timeout = setTimeout(() => {\n    //   this.log.error('handleSentEncryptedRequestHTTP timeout', promise, message, noResponseMsgs);\n    // }, 5e3);\n\n    promise.then((result) => {\n      this.toggleOffline(false);\n      // this.log('parse for', message);\n      return this.parseResponse(result).then((response) => {\n        this.debug && this.log.debug('Server response', response);\n\n        this.processMessage(response.response, response.messageId, response.sessionId);\n\n        this.checkLongPoll();\n        this.checkConnectionPeriod = Math.max(1.1, Math.sqrt(this.checkConnectionPeriod));\n\n        return true;\n      });\n    }, (error) => {\n      this.log.error('Encrypted request failed', error, message);\n\n      this.pushResend(message.msg_id);\n      this.toggleOffline(true);\n\n      return false;\n    }).then((shouldResolve) => {\n      // clearTimeout(timeout);\n      const sentMessages = this.sentMessages;\n      noResponseMsgs.forEach((msgId) => {\n        const sentMessage = sentMessages[msgId];\n        if(sentMessage) {\n          const deferred = sentMessage.deferred;\n          delete sentMessages[msgId];\n          delete this.pendingMessages[msgId];\n          shouldResolve ? deferred.resolve() : deferred.reject();\n        }\n      });\n    });\n  }\n           \n\n  // тут можно сделать таймаут и выводить дисконнект\n  private pushMessage(message: {\n    msg_id: string,\n    seq_no: number,\n    body: Uint8Array | number[],\n    isAPI?: boolean\n  }, options: MTMessageOptions) {\n    let promise: CancellablePromise<void>;\n    if(!options.notContentRelated || options.noResponse) {\n      promise = deferredPromise();\n    }\n\n    this.sentMessages[message.msg_id] = Object.assign(\n      message,\n      options,\n      promise ? {deferred: promise} : undefined\n    );\n\n    // this.log.error('Networker pushMessage:', this.sentMessages[message.msg_id]);\n\n    this.pendingMessages[message.msg_id] = 0;\n\n    if(!options.noSchedule) {\n      this.scheduleRequest();\n    }\n\n    if(isObject(options)) {\n      options.messageId = message.msg_id;\n    }\n\n    return promise;\n  }\n\n  public attachPromise(promise: Promise<any>, message: MTMessage) {\n    const canIncrement = true;\n    const timeout = setTimeout(() => {\n      if(this.lastResponseTime && (Date.now() - this.lastResponseTime) < this.delays.connectionTimeout) {\n        return;\n      }\n\n      this.log.error('timeout', message);\n      if(this.isOnline) {\n        this.setConnectionStatus(ConnectionStatus.TimedOut);\n      }\n\n      /* this.getEncryptedOutput(message).then((bytes) => {\n        this.log.error('timeout encrypted', bytes);\n      }); */\n    }, this.delays.connectionTimeout);\n\n    promise.catch(noop).finally(() => {\n      clearTimeout(timeout);\n      this.setConnectionStatus(ConnectionStatus.Connected);\n\n      if(canIncrement) {\n        --this.activeRequests;\n        this.setDrainTimeout();\n      }\n    });\n\n    if(canIncrement) {\n      ++this.activeRequests;\n      if(this.onDrainTimeout !== undefined) {\n        clearTimeout(this.onDrainTimeout);\n        this.onDrainTimeout = undefined;\n      }\n    }\n  }\n\n  public setDrainTimeout() {\n    if(!this.activeRequests && this.onDrain && this.onDrainTimeout === undefined) {\n      this.onDrainTimeout = ctx.setTimeout(() => {\n        this.onDrainTimeout = undefined;\n        this.log('drain');\n        this.onDrain();\n      }, DRAIN_TIMEOUT);\n    }\n  }\n\n  public setConnectionStatus(status: ConnectionStatus, retryAt?: number) {\n    const isOnline = status === ConnectionStatus.Connected;\n    const willChange = this.status !== status;\n    this.isOnline = isOnline;\n    this.status = status;\n\n    if(willChange) {\n      if(this.networkerFactory.onConnectionStatusChange) {\n        this.networkerFactory.onConnectionStatusChange({\n          _: 'networkerStatus',\n          status,\n          dcId: this.dcId,\n          name: this.name,\n          isFileNetworker: this.isFileNetworker,\n          isFileDownload: this.isFileDownload,\n          isFileUpload: this.isFileUpload,\n          retryAt\n        });\n      }\n\n      if(this.isOnline) {\n        this.scheduleRequest();\n      }\n\n      if((this.transport as TcpObfuscated)?.connection) {\n        this.clearPingDelayDisconnect();\n        this.sendPingDelayDisconnect();\n      }\n\n      // this.getNewTimeOffset = true;\n    }\n    /* if(this.onConnectionStatusChange) {\n      this.onConnectionStatusChange(this.isOnline);\n    } */\n  }\n\n  private pushResend(messageId: string, delay = 100) {\n    const value = delay ? Date.now() + delay : 0;\n    const sentMessage = this.sentMessages[messageId];\n    if(sentMessage.container) {\n      for(const innerMsgId of sentMessage.inner) {\n        this.pendingMessages[innerMsgId] = value;\n      }\n    } else {\n      this.pendingMessages[messageId] = value;\n    }\n\n    if(sentMessage.acked) {\n      this.log.error('pushResend: acked message?', sentMessage);\n    }\n\n    if(this.debug) {\n      this.log.debug('pushResend:', messageId, sentMessage, this.pendingMessages, delay);\n    }\n\n    this.scheduleRequest(delay);\n  }\n\n  // * correct, fully checked\n  private async getMsgKey(dataWithPadding: Uint8Array, isOut: boolean) {\n    const x = isOut ? 0 : 8;\n    const msgKeyLargePlain = bufferConcats(this.authKeyUint8.subarray(88 + x, 88 + x + 32), dataWithPadding);\n\n    const msgKeyLarge = await CryptoWorker.invokeCrypto('sha256', msgKeyLargePlain);\n    const msgKey = new Uint8Array(msgKeyLarge).subarray(8, 24);\n    return msgKey;\n  };\n\n  // * correct, fully checked\n  private getAesKeyIv(msgKey: Uint8Array, isOut: boolean): Promise<[Uint8Array, Uint8Array]> {\n    const x = isOut ? 0 : 8;\n    const sha2aText = new Uint8Array(52);\n    const sha2bText = new Uint8Array(52);\n    const promises: Array<Promise<Uint8Array>> = [];\n\n    sha2aText.set(msgKey, 0);\n    sha2aText.set(this.authKeyUint8.subarray(x, x + 36), 16);\n    promises.push(CryptoWorker.invokeCrypto('sha256', sha2aText));\n\n    sha2bText.set(this.authKeyUint8.subarray(40 + x, 40 + x + 36), 0);\n    sha2bText.set(msgKey, 36);\n    promises.push(CryptoWorker.invokeCrypto('sha256', sha2bText));\n\n    return Promise.all(promises).then((results) => {\n      const aesKey = new Uint8Array(32);\n      const aesIv = new Uint8Array(32);\n      const sha2a = new Uint8Array(results[0]);\n      const sha2b = new Uint8Array(results[1]);\n\n      aesKey.set(sha2a.subarray(0, 8));\n      aesKey.set(sha2b.subarray(8, 24), 8);\n      aesKey.set(sha2a.subarray(24, 32), 24);\n\n      aesIv.set(sha2b.subarray(0, 8));\n      aesIv.set(sha2a.subarray(8, 24), 8);\n      aesIv.set(sha2b.subarray(24, 32), 24);\n\n      return [aesKey, aesIv];\n    });\n  }\n\n  public isStopped() {\n    return this.networkerFactory.akStopped && !this.isFileNetworker;\n  }\n\n  private performScheduledRequest() {\n    if(this.isStopped()) {\n      return false;\n    }\n\n    if(this.pendingAcks.length) {\n      const ackMsgIds = this.pendingAcks.slice();\n\n      // this.log('acking messages', ackMsgIDs)\n      this.wrapMtpMessage({\n        _: 'msgs_ack',\n        msg_ids: ackMsgIds\n      }, {\n        notContentRelated: true,\n        noSchedule: true\n      });\n    }\n\n    const pendingResendReqLength = this.pendingResendReq.length;\n    if(pendingResendReqLength) {\n      const options: MTMessageOptions = {...RESEND_OPTIONS};\n      const msgIds = this.pendingResendReq.splice(0, pendingResendReqLength);\n      this.wrapMtpMessage({\n        _: 'msg_resend_req',\n        msg_ids: msgIds\n      }, options);\n\n      this.log('resend: resending requests', options.messageId, msgIds);\n      /* this.lastResendReq = {\n        reqMsgId: options.messageId,\n        msgIds: msgIds\n      }; */\n\n      // this.pendingResendReq.length = 0;\n    }\n\n    // if(this.pendingResendAnsReq.length) {\n    //   const options: MTMessageOptions = {...RESEND_OPTIONS};\n    //   const msgIds = this.pendingResendAnsReq.slice();\n    //   this.wrapMtpMessage({\n    //     _: 'msg_resend_ans_req',\n    //     msg_ids: msgIds\n    //   }, options);\n\n    //   this.log('resend: requesting answers', options.messageId, msgIds);\n    //   this.lastResendAnsReq = {\n    //     reqMsgId: options.messageId,\n    //     msgIds: msgIds\n    //   };\n\n    //   // this.pendingResendAnsReq.length = 0;\n    // }\n\n    let outMessage: MTMessage;\n    const messages: typeof outMessage[] = [];\n\n    // const currentTime = Date.now();\n    let messagesByteLen = 0;\n\n                           \n    let hasApiCall = false;\n    let hasHttpWait = false;\n             \n\n    let lengthOverflow = false;\n\n    // * Сюда никогда не попадут контейнеры, так как их не будет в pendingMessages\n    const keys = sortLongsArray(Object.keys(this.pendingMessages));\n    for(const messageId of keys) {\n      // const value = this.pendingMessages[messageId];\n\n      // if(!value || value <= currentTime) {\n      const message = this.sentMessages[messageId];\n      if(message && message.body) {\n        /* if(message.fileUpload) {\n            this.log('performScheduledRequest message:', message, message.body.length, (message.body as Uint8Array).byteLength, (message.body as Uint8Array).buffer.byteLength);\n          } */\n\n        const messageByteLength = message.body.length + 32;\n\n        if((messagesByteLen + messageByteLength) > 655360) { // 640 Kb\n          this.log.warn('lengthOverflow', message, messages);\n          lengthOverflow = true;\n\n          if(outMessage) { // if it's not a first message\n            break;\n          }\n        }\n\n        messages.push(message);\n        messagesByteLen += messageByteLength;\n\n                               \n        if(message.isAPI) {\n          hasApiCall = true;\n        } else if(message.longPoll) {\n          hasHttpWait = true;\n        }\n                 \n\n        outMessage = message;\n      } else {\n        // this.log(message, messageId)\n      }\n\n      delete this.pendingMessages[messageId];\n      // }\n    }\n\n                           \n                         \n    if(this.transport instanceof HTTP)\n             \n      if(hasApiCall && !hasHttpWait) {\n        const serializer = new TLSerialization({mtproto: true});\n        serializer.storeMethod('http_wait', {\n          max_delay: 500,\n          wait_after: 150,\n          max_wait: 3000\n        });\n\n        messages.push({\n          msg_id: this.timeManager.generateId(),\n          seq_no: this.generateSeqNo(),\n          body: serializer.getBytes(true)\n        });\n      }\n             \n\n    if(!messages.length) {\n      // this.log('no scheduled messages')\n      return;\n    }\n\n                           \n    const noResponseMsgs: Array<string> = messages.filter((message) => message.noResponse).map((message) => message.msg_id);\n             \n\n    if(messages.length > 1) {\n      const container = this.generateContainerMessage(messagesByteLen, messages);\n      outMessage = container.messageWithBody;\n\n      this.sentMessages[outMessage.msg_id] = container.message;\n    } else {\n      this.sentMessages[outMessage.msg_id] = outMessage;\n    }\n\n    this.pendingAcks = [];\n\n    const promise = this.sendEncryptedRequest(outMessage);\n\n                           \n                         \n    if(this.transport instanceof HTTP)\n             \n      this.handleSentEncryptedRequestHTTP(promise, outMessage, noResponseMsgs);\n             \n\n                         \n                           \n    if(!(this.transport instanceof HTTP))\n             \n      this.cleanupSent(); // ! WARNING\n             \n\n    if(lengthOverflow) {\n      this.scheduleRequest();\n    }\n  }\n\n  private generateContainerMessage(messagesByteLen: number, messages: MTMessage[]) {\n    const container = new TLSerialization({\n      mtproto: true,\n      startMaxLength: messagesByteLen + 64\n    });\n\n    container.storeInt(0x73f1f8dc, 'CONTAINER[id]');\n    container.storeInt(messages.length, 'CONTAINER[count]');\n\n    const innerMessages: string[] = [];\n    messages.forEach((message, i) => {\n      innerMessages.push(message.msg_id);\n      // this.log('Pushing to container:', message.msg_id);\n      container.storeLong(message.msg_id, 'CONTAINER[' + i + '][msg_id]');\n      container.storeInt(message.seq_no, 'CONTAINER[' + i + '][seq_no]');\n      container.storeInt(message.body.length, 'CONTAINER[' + i + '][bytes]');\n      container.storeRawBytes(message.body, 'CONTAINER[' + i + '][body]');\n    });\n\n    const message: MTMessage = {\n      msg_id: this.timeManager.generateId(),\n      seq_no: this.generateSeqNo(true),\n      container: true,\n      inner: innerMessages\n    };\n\n    if(Modes.debug/*  || true */) {\n      this.log.warn('Container', innerMessages, message.msg_id, message.seq_no);\n    }\n\n    return {\n      message,\n      messageWithBody: Object.assign({body: container.getBytes(true)}, message)\n    };\n  }\n\n  private async getEncryptedMessage(dataWithPadding: Uint8Array) {\n    const msgKey = await this.getMsgKey(dataWithPadding, true);\n    const keyIv = await this.getAesKeyIv(msgKey, true);\n    // this.log('after msg key iv')\n\n    const encryptedBytes = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithPadding, keyIv[0], keyIv[1]);\n    // this.log('Finish encrypt')\n\n    return {\n      bytes: encryptedBytes,\n      msgKey\n    };\n  }\n\n  private getDecryptedMessage(msgKey: Uint8Array, encryptedData: Uint8Array) {\n    // this.log('get decrypted start')\n    return this.getAesKeyIv(msgKey, false).then((keyIv) => {\n      // this.log('after msg key iv')\n      return CryptoWorker.invokeCrypto('aes-decrypt', encryptedData, keyIv[0], keyIv[1]);\n    });\n  }\n\n  private getEncryptedOutput(message: MTMessage) {\n    /* if(DEBUG) {\n      this.log.debug('Send encrypted', message, this.authKeyId);\n    } */\n    /* if(!this.isOnline) {\n      this.log('trying to send message when offline:', Object.assign({}, message));\n      //debugger;\n    } */\n\n    const data = new TLSerialization({\n      startMaxLength: message.body.length + 2048\n    });\n\n    data.storeIntBytes(this.serverSalt, 64, 'salt');\n    data.storeIntBytes(this.sessionId, 64, 'session_id');\n\n    data.storeLong(message.msg_id, 'message_id');\n    data.storeInt(message.seq_no, 'seq_no');\n\n    data.storeInt(message.body.length, 'message_data_length');\n    data.storeRawBytes(message.body, 'message_data');\n\n    /* const des = new TLDeserialization(data.getBuffer().slice(16));\n    const desSalt = des.fetchLong();\n    const desSessionId = des.fetchLong();\n\n    if(!this.isOnline) {\n      this.log.error('trying to send message when offline', message, new Uint8Array(des.buffer), desSalt, desSessionId);\n    } */\n\n    /* const messageDataLength = message.body.length;\n    let canBeLength = 0; // bytes\n    canBeLength += 8;\n    canBeLength += 8;\n    canBeLength += 8;\n    canBeLength += 4;\n    canBeLength += 4;\n    canBeLength += message.body.length; */\n\n    const dataBuffer = data.getBuffer();\n\n    /* if(dataBuffer.byteLength !== canBeLength || !bytesCmp(new Uint8Array(dataBuffer.slice(dataBuffer.byteLength - message.body.length)), new Uint8Array(message.body))) {\n      this.log.error('wrong length', dataBuffer, canBeLength, message.msg_id);\n    } */\n\n    const paddingLength = (16 - (data.getOffset() % 16)) + 16 * (1 + nextRandomUint(8) % 5);\n    const padding = /* (message as any).padding ||  */randomize(new Uint8Array(paddingLength))/* .fill(0) */;\n    /* const padding = [167, 148, 207, 226, 86, 192, 193, 57, 124, 153, 174, 145, 159, 1, 5, 70, 127, 157,\n      51, 241, 46, 85, 141, 212, 139, 234, 213, 164, 197, 116, 245, 70, 184, 40, 40, 201, 233, 211, 150,\n      94, 57, 84, 1, 135, 108, 253, 34, 139, 222, 208, 71, 214, 90, 67, 36, 28, 167, 148, 207, 226, 86, 192, 193, 57, 124, 153, 174, 145, 159, 1, 5, 70, 127, 157,\n      51, 241, 46, 85, 141, 212, 139, 234, 213, 164, 197, 116, 245, 70, 184, 40, 40, 201, 233, 211, 150,\n      94, 57, 84, 1, 135, 108, 253, 34, 139, 222, 208, 71, 214, 90, 67, 36, 28].slice(0, paddingLength); */\n\n    // (message as any).padding = padding;\n\n    const dataWithPadding = bufferConcats(dataBuffer, padding);\n    // this.log('Adding padding', dataBuffer, padding, dataWithPadding)\n    // this.log('auth_key_id', bytesToHex(self.authKeyID))\n\n    /* if(dataWithPadding.byteLength % 16) {\n      this.log.error('aaa', dataWithPadding, paddingLength);\n    }\n\n    if(message.fileUpload) {\n      this.log('Send encrypted: body length:', (message.body as ArrayBuffer).byteLength, paddingLength, dataWithPadding);\n    } */\n\n    // * full next block is correct\n    return this.getEncryptedMessage(dataWithPadding).then((encryptedResult) => {\n      /* if(DEBUG) {\n        this.log('Got encrypted out message', encryptedResult);\n      } */\n\n      const request = new TLSerialization({\n        startMaxLength: encryptedResult.bytes.length + 256\n      });\n      request.storeIntBytes(this.authKeyId, 64, 'auth_key_id');\n      request.storeIntBytes(encryptedResult.msgKey, 128, 'msg_key');\n      request.storeRawBytes(encryptedResult.bytes, 'encrypted_data');\n\n      const requestData = request.getBytes(true);\n\n      // if(this.isFileNetworker) {\n      //   //this.log('Send encrypted: requestData length:', requestData.length, requestData.length % 16, paddingLength % 16, paddingLength, data.offset, encryptedResult.msgKey.length % 16, encryptedResult.bytes.length % 16);\n      //   //this.log('Send encrypted: messageId:', message.msg_id, requestData.length);\n      //   //this.log('Send encrypted:', message, new Uint8Array(bufferConcat(des.buffer, padding)), requestData, this.serverSalt.hex, this.sessionId.hex/* new Uint8Array(des.buffer) */);\n      //   this.debugRequests.push({before: new Uint8Array(bufferConcat(des.buffer, padding)), after: requestData});\n      // }\n\n      return requestData;\n    });\n  }\n\n  private async sendEncryptedRequest(message: MTMessage) {\n    const requestData = await this.getEncryptedOutput(message);\n\n    if(!this.transport) {\n      this.log.error('trying to send something when offline', this.transport, this);\n    }\n\n    this.debug && this.log.debug('sending:', message, [message.msg_id].concat(message.inner || []), requestData.length);\n    const promise: Promise<Uint8Array> = this.transport ? this.transport.send(requestData) as any : Promise.reject({});\n    // this.debug && this.log.debug('sendEncryptedRequest: launched message into space:', message, promise);\n\n                            \n                   \n            \n\n                         \n    if(!(this.transport instanceof HTTP)) return promise;\n             \n\n    const baseError: ApiError = {\n      code: 406,\n      type: 'NETWORK_BAD_RESPONSE',\n      // @ts-ignore\n      transport: this.transport\n    };\n\n    return promise.then((result) => {\n      if(!result?.byteLength) {\n        throw baseError;\n      }\n\n      // this.debug && this.log.debug('sendEncryptedRequest: got response for:', message, [message.msg_id].concat(message.inner || []));\n      return result;\n    }, (error) => {\n      if(!error.message && !error.type) {\n        error = Object.assign(baseError, {\n          type: 'NETWORK_BAD_REQUEST',\n          originalError: error\n        });\n      }\n\n      throw error;\n    });\n             \n  }\n\n  public parseResponse(responseBuffer: Uint8Array) {\n    // const perf = performance.now();\n    /* if(this.debug) {\n      this.log.debug('Start parsing response', responseBuffer);\n    } */\n\n    this.lastResponseTime = Date.now();\n\n    const deserializer = new TLDeserialization(responseBuffer);\n\n    const authKeyId = deserializer.fetchIntBytes(64, true, 'auth_key_id');\n    if(!bytesCmp(authKeyId, this.authKeyId)) {\n      throw new Error('[MT] Invalid server auth_key_id: ' + bytesToHex(authKeyId));\n    }\n\n    const msgKey = deserializer.fetchIntBytes(128, true, 'msg_key');\n    const encryptedData = deserializer.fetchRawBytes(responseBuffer.byteLength - deserializer.getOffset(), true, 'encrypted_data');\n\n    return this.getDecryptedMessage(msgKey, encryptedData).then((dataWithPadding) => {\n      // this.log('after decrypt')\n      return this.getMsgKey(dataWithPadding, false).then((calcMsgKey) => {\n        if(!bytesCmp(msgKey, calcMsgKey)) {\n          this.log.warn('[MT] msg_keys', msgKey, calcMsgKey);\n          this.updateSession(); // fix 28.01.2020\n          throw new Error('[MT] server msgKey mismatch, updating session');\n        }\n        // this.log('after msgKey check')\n\n        let deserializer = new TLDeserialization<MTLong>(dataWithPadding, {mtproto: true});\n\n        /* const salt =  */deserializer.fetchIntBytes(64, true, 'salt'); // need\n        const sessionId = deserializer.fetchIntBytes(64, true, 'session_id');\n        const messageId = deserializer.fetchLong('message_id');\n\n        if(!bytesCmp(sessionId, this.sessionId) &&\n          (!this.prevSessionId || !bytesCmp(sessionId, this.prevSessionId))) {\n          this.log.warn('Sessions', sessionId, this.sessionId, this.prevSessionId, dataWithPadding);\n          // this.updateSession();\n          // this.sessionID = sessionID;\n          throw new Error('[MT] Invalid server session_id: ' + bytesToHex(sessionId));\n        }\n\n        const seqNo = deserializer.fetchInt('seq_no');\n\n        const totalLength = dataWithPadding.byteLength;\n\n        const messageBodyLength = deserializer.fetchInt('message_data[length]');\n        let offset = deserializer.getOffset();\n\n        if((messageBodyLength % 4) ||\n          messageBodyLength > totalLength - offset) {\n          throw new Error('[MT] Invalid body length: ' + messageBodyLength);\n        }\n        const messageBody = deserializer.fetchRawBytes(messageBodyLength, true, 'message_data');\n\n        offset = deserializer.getOffset();\n        const paddingLength = totalLength - offset;\n        if(paddingLength < 12 || paddingLength > 1024) {\n          throw new Error('[MT] Invalid padding length: ' + paddingLength);\n        }\n\n        // let buffer = bytesToArrayBuffer(messageBody);\n        deserializer = new TLDeserialization<MTLong>(/* buffer */messageBody, {\n          mtproto: true,\n          override: {\n            mt_message: (result: any, field: string) => {\n              result.msg_id = deserializer.fetchLong(field + '[msg_id]');\n              result.seqno = deserializer.fetchInt(field + '[seqno]');\n              result.bytes = deserializer.fetchInt(field + '[bytes]');\n\n              const offset = deserializer.getOffset();\n\n              // self.log('mt_message!!!!!', result, field);\n\n              try {\n                result.body = deserializer.fetchObject('Object', field + '[body]');\n              } catch(e) {\n                this.log.error('parse error', (e as Error).message, (e as Error).stack);\n                result.body = {\n                  _: 'parse_error',\n                  error: e\n                };\n              }\n\n              if(deserializer.getOffset() !== offset + result.bytes) {\n                // console.warn(dT(), 'set offset', this.offset, offset, result.bytes)\n                // this.log(result)\n                deserializer.setOffset(offset + result.bytes);\n              }\n              // this.log('override message', result)\n            },\n            mt_rpc_result: (result: any, field: any) => {\n              result.req_msg_id = deserializer.fetchLong(field + '[req_msg_id]');\n\n              const sentMessage = this.sentMessages[result.req_msg_id];\n              const type = sentMessage && sentMessage.resultType || 'Object';\n\n              if(result.req_msg_id && !sentMessage) {\n                // console.warn(dT(), 'Result for unknown message', result);\n                return;\n              }\n\n              // deserializer.setMtproto(false);\n              result.result = deserializer.fetchObject(type, field + '[result]');\n              // deserializer.setMtproto(true);\n              // self.log(dT(), 'override rpc_result', sentMessage, type, result);\n            }\n          }\n        });\n\n        const response = deserializer.fetchObject('', 'INPUT');\n        // this.log.error('Parse response time:', performance.now() - perf);\n        return {\n          response,\n          messageId,\n          sessionId,\n          seqNo\n        };\n      });\n    });\n  }\n\n  private applyServerSalt(newServerSalt: string) {\n    const serverSalt = longToBytes(newServerSalt);\n\n    sessionStorage.set({\n      ['dc' + this.dcId + '_server_salt']: bytesToHex(serverSalt)\n    });\n\n    this.serverSalt = new Uint8Array(serverSalt);\n  }\n\n  // ! таймаут очень сильно тормозит скорость работы сокета (даже нулевой)\n  public scheduleRequest(delay?: number) {\n    /* if(!this.isOnline) {\n      return;\n    } */\n\n                           \n                         \n    if(this.transport instanceof HTTP) {\n             \n      if(this.offline) {\n        this.checkConnection('forced schedule');\n      }\n\n      delay ||= 0; // set zero timeout to pack other messages too\n                         \n    }\n             \n             \n\n    const nextReq = Date.now() + (delay || 0);\n    if(this.nextReq && (delay === undefined || this.nextReq <= nextReq)) {\n      // this.debug && this.log('scheduleRequest: nextReq', this.nextReq, nextReq);\n      return;\n    }\n\n    // this.debug && this.log('scheduleRequest: delay', delay);\n\n    /* if(this.nextReqTimeout) {\n      return;\n    } */\n\n    // const perf = performance.now();\n    if(this.nextReqTimeout) {\n      clearTimeout(this.nextReqTimeout);\n    }\n\n    const cb = () => {\n      // this.debug && this.log('scheduleRequest: timeout delay was:', performance.now() - perf);\n\n      this.nextReqTimeout = 0;\n      this.nextReq = 0;\n\n                             \n                           \n      if(this.transport instanceof HTTP)\n               \n        if(this.offline) {\n        // this.log('Cancel scheduled');\n          return;\n        }\n               \n\n      this.performScheduledRequest();\n    };\n\n    this.nextReq = nextReq;\n\n    if(delay !== undefined) {\n      this.nextReqTimeout = ctx.setTimeout(cb, delay);\n    } else {\n      cb();\n    }\n  }\n\n  private ackMessage(msgId: MTLong) {\n    // this.log('ack message', msgID)\n    this.pendingAcks.push(msgId);\n\n    let delay: number;\n\n                           \n                         \n    if(this.transport instanceof HTTP)\n             \n      delay = 30000;\n             \n\n    this.scheduleRequest(delay);\n  }\n\n  private reqResend(msgId: MTLong/* , isAnswer?: boolean */) {\n    if(this.debug) {\n      this.log.debug('Req resend', msgId/* , isAnswer */);\n    }\n\n    // (isAnswer ? this.pendingResendAnsReq : this.pendingResendReq).push(msgId);\n    this.pendingResendReq.push(msgId);\n    this.scheduleRequest(100);\n  }\n\n  public cleanupSent() {\n    let notEmpty = false;\n    const sentMessages = this.sentMessages;\n    // this.log('clean start', this.dcId/*, sentMessages*/)\n    Object.keys(sentMessages).forEach((msgId) => {\n      const message = sentMessages[msgId];\n\n      // this.log('clean iter', msgID, message)\n      if(message.notContentRelated && this.pendingMessages[msgId] === undefined) {\n        // this.log('clean notContentRelated', msgID)\n        delete sentMessages[msgId];\n      } else if(message.container) {\n        for(const innerMsgId of message.inner) {\n          if(sentMessages[innerMsgId] !== undefined) {\n            // this.log('clean failed, found', msgID, message.inner[i], sentMessages[message.inner[i]].seq_no)\n            notEmpty = true;\n            return;\n          }\n        }\n        // this.log('clean container', msgID)\n        delete sentMessages[msgId];\n      } else {\n        notEmpty = true;\n      }\n    });\n\n    return !notEmpty;\n  }\n\n  private processMessageAck(messageId: Long) {\n    const sentMessage = this.sentMessages[messageId];\n    if(sentMessage && !sentMessage.acked) {\n      // delete sentMessage.body;\n      sentMessage.acked = true;\n    }\n  }\n\n  private processError(rawError: {error_message: string, error_code: number}): ApiError {\n    const matches = (rawError.error_message || '').match(/^([A-Z_0-9]+\\b)(: (.+))?/) || [];\n    rawError.error_code = rawError.error_code;\n\n    return {\n      code: !rawError.error_code || rawError.error_code <= 0 ? 500 : rawError.error_code,\n      type: matches[1] as any || 'UNKNOWN',\n      description: matches[3] || ('CODE#' + rawError.error_code + ' ' + rawError.error_message),\n      originalError: rawError\n    };\n  }\n\n  /**\n   * * только для сокета\n   * TODO: consider about containers resend\n   */\n  public resend() {\n    const sentMessages = this.sentMessages;\n    for(const id in sentMessages) {\n      const msg = sentMessages[id];\n      if(msg.body || msg.container) {\n        this.pushResend(id);\n      }\n    }\n\n    if((this.transport as TcpObfuscated).connection) {\n      this.clearPingDelayDisconnect();\n      this.sendPingDelayDisconnect();\n    }\n  }\n\n  /* public requestMessageStatus() {\n    const ids: string[] = [];\n    for(const id in this.sentMessages) {\n      const message = this.sentMessages[id];\n      if(message.isAPI && message.fileUpload) {\n        ids.push(message.msg_id);\n      }\n    }\n\n    this.wrapMtpMessage({\n      _: 'msgs_state_req',\n      msg_ids: ids\n    }, {\n      notContentRelated: true\n    }).then((res) => {\n      this.log('status', res);\n    });\n  } */\n\n  private applyServerTime(messageId: string) {\n    const serverTime = bigInt(messageId).shiftRight(32).toJSNumber();\n    this.log('applying server time', serverTime);\n    return this.timeManager.applyServerTime(serverTime);\n  }\n\n  // * https://core.telegram.org/mtproto/service_messages_about_messages#notice-of-ignored-error-message\n  public processMessage(message: any, messageId: MTLong, sessionId: Uint8Array | number[]) {\n    if(message._ === 'messageEmpty') {\n      this.log.warn('processMessage: messageEmpty', message, messageId);\n      return;\n    }\n\n    // messageId = messageId.toString();\n\n    const msgidInt = parseInt(messageId.substr(0, -10), 10);\n    if(msgidInt % 2) {\n      this.log.warn('Server even message id: ', messageId, message);\n      return;\n    }\n\n    if(this.debug) {\n      this.log.debug('process message', message, messageId);\n    }\n\n    if(this.pingDelayDisconnectDeferred) {\n      this.pingDelayDisconnectDeferred.resolve('any message');\n    }\n\n    // let changedTimeOffset: boolean;\n    // if(this.getNewTimeOffset) {\n    //   changedTimeOffset = this.applyServerTime(messageId);\n    //   this.getNewTimeOffset = undefined;\n    // }\n\n    switch(message._) {\n      case 'msg_container': {\n        for(const innerMessage of message.messages) {\n          this.processMessage(innerMessage, innerMessage.msg_id, sessionId);\n        }\n\n        break;\n      }\n\n      case 'bad_server_salt': {\n        this.log('Bad server salt', message);\n\n        this.applyServerSalt(message.new_server_salt);\n\n        if(this.sentMessages[message.bad_msg_id]) {\n          this.pushResend(message.bad_msg_id);\n        }\n\n        this.ackMessage(messageId);\n\n        // simulate disconnect\n        /* try {\n          this.log('networker state:', this);\n          // @ts-ignore\n          this.transport.ws.close(1000);\n        } catch(err) {\n          this.log.error('transport', this.transport, err);\n        } */\n\n        break;\n      }\n\n      case 'bad_msg_notification': {\n        this.log.error('Bad msg notification', message);\n\n        switch(message.error_code) {\n          case 16:    // * msg_id too low\n          case 17:    // * msg_id too high\n          case 32:    // * msg_seqno too low\n          case 33:    // * msg_seqno too high\n          case 64: {  // * invalid container\n            // if(changedTimeOffset === undefined) {\n            //   changedTimeOffset = this.applyServerTime(messageId);\n            // }\n\n            const changedTimeOffset = this.applyServerTime(messageId);\n            if(message.error_code === 17 || changedTimeOffset) {\n              this.log('Update session');\n              this.updateSession();\n            }\n\n            const badMessage = this.updateSentMessage(message.bad_msg_id);\n            if(badMessage) this.pushResend(badMessage.msg_id); // fix 23.01.2020\n            // this.ackMessage(messageId);\n          }\n\n          // * invalid container\n          /* case 64: {\n            const badMessage = this.sentMessages[message.bad_msg_id];\n            if(badMessage) {\n              for(const msgId of badMessage.inner) {\n                if(this.sentMessages[msgId] !== undefined) {\n                  this.updateSentMessage\n                }\n              }\n              const inner = badMessage.inner;\n            }\n          } */\n        }\n\n        break;\n      }\n\n      case 'message': {\n        if(this.lastServerMessages.indexOf(messageId) !== -1) {\n          // console.warn('[MT] Server same messageId: ', messageId)\n          this.ackMessage(messageId);\n          return;\n        }\n\n        this.lastServerMessages.push(messageId);\n        if(this.lastServerMessages.length > 100) {\n          this.lastServerMessages.shift();\n        }\n\n        this.processMessage(message.body, message.msg_id, sessionId);\n        break;\n      }\n\n      case 'new_session_created': {\n        this.ackMessage(messageId);\n\n        if(this.debug) {\n          this.log.debug('new_session_created', message);\n        }\n        // this.updateSession();\n\n        this.processMessageAck(message.first_msg_id);\n        this.applyServerSalt(message.server_salt);\n\n        sessionStorage.get('dc').then((baseDcId) => {\n          if(baseDcId === this.dcId && !this.isFileNetworker && this.networkerFactory.updatesProcessor) {\n            this.networkerFactory.updatesProcessor(message);\n          }\n        });\n        break;\n      }\n\n      case 'msgs_ack': {\n        this.debug && this.log('got acks', message.msg_ids);\n        for(const msgId of message.msg_ids) {\n          this.processMessageAck(msgId);\n        }\n\n        break;\n      }\n\n      case 'msg_detailed_info': {\n        const sentMessage = this.sentMessages[message.msg_id];\n        if(!sentMessage) {\n          this.ackMessage(message.answer_msg_id);\n          break;\n        }/*  else if(sentMessage.acked) {\n          this.reqResend(message.answer_msg_id, true);\n        }\n\n        break; */\n      }\n\n      case 'msg_new_detailed_info': {\n        if(this.pendingAcks.indexOf(message.answer_msg_id) !== -1) {\n          break;\n        }\n\n        this.reqResend(message.answer_msg_id);\n        break;\n      }\n\n      case 'msgs_state_info': {\n        this.ackMessage(message.answer_msg_id);\n        const arr = [\n          [this.lastResendReq, this.pendingResendReq] as const\n          // [this.lastResendAnsReq, this.pendingResendAnsReq] as const\n        ];\n\n        for(const [lastResend, pendingResend] of arr) {\n          if(lastResend?.reqMsgId === message.req_msg_id && pendingResend.length) {\n            for(const badMsgId of lastResend.msgIds) {\n              const pos = pendingResend.indexOf(badMsgId);\n              if(pos !== -1) {\n                pendingResend.splice(pos, 1);\n              }\n            }\n          }\n        }\n\n        break;\n      }\n\n      case 'rpc_result': {\n        this.ackMessage(messageId);\n\n        const sentMessageId = message.req_msg_id;\n        const sentMessage = this.sentMessages[sentMessageId];\n\n        if(this.debug) {\n          this.log('Rpc response', message.result, sentMessage);\n        }\n\n        this.processMessageAck(sentMessageId);\n        if(sentMessage) {\n          const deferred = sentMessage.deferred;\n          if(message.result._ === 'rpc_error') {\n            const error = this.processError(message.result);\n            this.log('Rpc error', error);\n            if(deferred) {\n              deferred.reject(error);\n            }\n          } else {\n            if(deferred) {\n              deferred.resolve(message.result);\n            }\n\n            if(sentMessage.isAPI && !this.connectionInited) {\n              this.connectionInited = true;\n            }\n          }\n\n          delete this.sentMessages[sentMessageId];\n        } else {\n          if(this.debug) {\n            this.log('Rpc result for unknown message:', sentMessageId, message);\n          }\n        }\n\n        break;\n      }\n\n      case 'pong': { // * https://core.telegram.org/mtproto/service_messages#ping-messages-pingpong - These messages don't require acknowledgments\n        /* const sentMessageId = message.msg_id;\n        const sentMessage = this.sentMessages[sentMessageId];\n\n        if(sentMessage) {\n          sentMessage.deferred.resolve(message);\n          delete this.sentMessages[sentMessageId];\n        } */\n        const pingId = message.ping_id;\n        if(this.lastPingDelayDisconnectId === pingId) {\n          const deferred = this.pingDelayDisconnectDeferred;\n          if(deferred) {\n            deferred.resolve('pong');\n          } else {\n            this.log('ping deferred deleted', pingId);\n          }\n        }\n\n        break;\n      }\n\n      default:\n        this.ackMessage(messageId);\n\n        /* if(this.debug) {\n          this.log.debug('Update', message);\n        } */\n\n        if(this.networkerFactory.updatesProcessor !== null) {\n          this.networkerFactory.updatesProcessor(message);\n        }\n        break;\n    }\n  }\n}\n","import bigInt from 'big-integer';\n\nexport default function sortLongsArray(arr: string[]) {\n  return arr.map((long) => {\n    return bigInt(long);\n  }).sort((a, b) => {\n    return a.compare(b);\n  }).map((bigInt) => {\n    return bigInt.toString(10);\n  });\n}\n","import addPadding from '../bytes/addPadding';\nimport bigInt from 'big-integer';\nimport {bigIntToBytes} from '../bigInt/bigIntConversion';\n\nexport default function longToBytes(sLong: string) {\n  const bigIntBytes = bigIntToBytes(bigInt(sLong)).reverse();\n  const bytes = addPadding(bigIntBytes, 8, true, false, false);\n  // console.log('longToBytes', bytes, bigIntBytes);\n\n  return bytes;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport type {ConnectionStatusChange} from './connectionStatus';\nimport MTPNetworker from './networker';\nimport {InvokeApiOptions} from '../../types';\nimport App from '../../config/app';\nimport indexOfAndSplice from '../../helpers/array/indexOfAndSplice';\nimport {AppManager} from '../appManagers/manager';\n\nexport class NetworkerFactory extends AppManager {\n  private networkers: MTPNetworker[] = [];\n  public language = navigator.language || App.langPackCode;\n  public updatesProcessor: (obj: any) => void = null;\n  // public onConnectionStatusChange: (status: ConnectionStatusChange) => void = null;\n  public akStopped = false;\n\n  public onConnectionStatusChange(status: ConnectionStatusChange) {\n    this.rootScope.dispatchEvent('connection_status_change', status);\n    //  ({type: 'connectionStatusChange', payload: status});\n  }\n\n  public removeNetworker(networker: MTPNetworker) {\n    indexOfAndSplice(this.networkers, networker);\n  }\n\n  public setUpdatesProcessor(callback: (obj: any) => void) {\n    this.updatesProcessor = callback;\n  }\n\n  public getNetworker(dcId: number, authKey: Uint8Array, authKeyId: Uint8Array, serverSalt: Uint8Array, options: InvokeApiOptions) {\n    // console.log('NetworkerFactory: creating new instance of MTPNetworker:', dcId, options);\n    const networker = new MTPNetworker(this, this.timeManager, dcId, authKey, authKeyId, serverSalt, options);\n    this.networkers.push(networker);\n    return networker;\n  }\n\n  public startAll() {\n    if(this.akStopped) {\n      const stoppedNetworkers = this.networkers.filter((networker) => networker.isStopped());\n\n      this.akStopped = false;\n      this.updatesProcessor && this.updatesProcessor({_: 'new_session_created'});\n\n      for(const networker of stoppedNetworkers) {\n        networker.scheduleRequest();\n      }\n    }\n  }\n\n  public stopAll() {\n    this.akStopped = true;\n  }\n\n  public setLanguage(langCode: string) {\n    this.language = langCode;\n    for(const networker of this.networkers) {\n      if(!networker.isFileNetworker) {\n        networker.connectionInited = false;\n      }\n    }\n  }\n\n  public unsetConnectionInited() {\n    for(const networker of this.networkers) {\n      networker.connectionInited = false;\n    }\n  }\n\n  public forceReconnectTimeout() {\n    for(const networker of this.networkers) {\n      networker.forceReconnectTimeout();\n    }\n  }\n\n  public forceReconnect() {\n    for(const networker of this.networkers) {\n      if(!networker.isFileNetworker) {\n        networker.forceReconnect();\n        break;\n      }\n    }\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport {TLSerialization} from './tl_utils';\nimport cryptoWorker from '../crypto/cryptoMessagePort';\nimport Modes from '../../config/modes';\nimport bytesFromHex from '../../helpers/bytes/bytesFromHex';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport bigInt from 'big-integer';\n\nexport type RSAPublicKeyHex = {\n  modulus: string,\n  exponent: string\n};\n\nexport class RSAKeysManager {\n  /**\n   *  Server public key, obtained from here: https://core.telegram.org/api/obtaining_api_id\n   *\n   *\n   *  -----BEGIN RSA PUBLIC KEY-----\n   *  MIIBCgKCAQEA6LszBcC1LGzyr992NzE0ieY+BSaOW622Aa9Bd4ZHLl+TuFQ4lo4g\n   *  5nKaMBwK/BIb9xUfg0Q29/2mgIR6Zr9krM7HjuIcCzFvDtr+L0GQjae9H0pRB2OO\n   *  62cECs5HKhT5DZ98K33vmWiLowc621dQuwKWSQKjWf50XYFw42h21P2KXUGyp2y/\n   *  +aEyZ+uVgLLQbRA1dEjSDZ2iGRy12Mk5gpYc397aYp438fsJoHIgJ2lgMv5h7WY9\n   *  t6N/byY9Nw9p21Og3AoXSL2q/2IJ1WRUhebgAdGVMlV1fkuOQoEzR7EdpqtQD9Cs\n   *  5+bfo3Nhmcyvk5ftB0WkJ9z6bNZ7yxrP8wIDAQAB\n   *  -----END RSA PUBLIC KEY-----\n   *\n   *  -----BEGIN RSA PUBLIC KEY-----\n   *  MIIBCgKCAQEBadMIUYSKhyznMh+Pg+OxTLyDZrWEjQIPZC3oJCtuZX7qUxgcWqFX\n   *  Q1952TSY8S8NYuz12sK9Fvp+lil1hIG0U/cuPsK08VB1hB4VA+p0S46fGwVsRovq\n   *  4qUiUIzQSjSHDASuXTOinlYEHwmg/GaLc5G7qhePWa0p9YmqYR5Ha3xHJywcXZrn\n   *  yE3nC9igL96Aanqv+Prbu1N+r9vAgZeHh9cfbtbV8WWwruOANOTEv2ctQLR0dfr9\n   *  MwQXNePTPQlYsO9HNIGS1LWe7hZFtGBAVJH92F7Kig68WqHM3PIZ6Sq7N0VSzfzL\n   *  b11Z/YHz2UXYtXADwL/m5pTpKBUtJBXkOQIDAQAB\n   *  -----END RSA PUBLIC KEY-----\n   *\n   * Bytes can be got via\n   * $ openssl rsa -in rsa.pem -RSAPublicKey_in -pubout > pub.pem\n   * $ openssl rsa -pubin -in pub.pem -text -noout\n   */\n\n  /* private publisKeysHex = [{\n    modulus: 'c150023e2f70db7985ded064759cfecf0af328e69a41daf4d6f01b538135a6f91f8f8b2a0ec9ba9720ce352efcf6c5680ffc424bd634864902de0b4bd6d49f4e580230e3ae97d95c8b19442b3c0a10d8f5633fecedd6926a7f6dab0ddb7d457f9ea81b8465fcd6fffeed114011df91c059caedaf97625f6c96ecc74725556934ef781d866b34f011fce4d835a090196e9a5f0e4449af7eb697ddb9076494ca5f81104a305b6dd27665722c46b60e5df680fb16b210607ef217652e60236c255f6a28315f4083a96791d7214bf64c1df4fd0db1944fb26a2a57031b32eee64ad15a8ba68885cde74a5bfc920f6abf59ba5c75506373e7130f9042da922179251f',\n    exponent: '010001'\n  }, {\n    modulus: 'aeec36c8ffc109cb099624685b97815415657bd76d8c9c3e398103d7ad16c9bba6f525ed0412d7ae2c2de2b44e77d72cbf4b7438709a4e646a05c43427c7f184debf72947519680e651500890c6832796dd11f772c25ff8f576755afe055b0a3752c696eb7d8da0d8be1faf38c9bdd97ce0a77d3916230c4032167100edd0f9e7a3a9b602d04367b689536af0d64b613ccba7962939d3b57682beb6dae5b608130b2e52aca78ba023cf6ce806b1dc49c72cf928a7199d22e3d7ac84e47bc9427d0236945d10dbd15177bab413fbf0edfda09f014c7a7da088dde9759702ca760af2b8e4e97cc055c617bd74c3d97008635b98dc4d621b4891da9fb0473047927',\n    exponent: '010001'\n  }, {\n    modulus: 'bdf2c77d81f6afd47bd30f29ac76e55adfe70e487e5e48297e5a9055c9c07d2b93b4ed3994d3eca5098bf18d978d54f8b7c713eb10247607e69af9ef44f38e28f8b439f257a11572945cc0406fe3f37bb92b79112db69eedf2dc71584a661638ea5becb9e23585074b80d57d9f5710dd30d2da940e0ada2f1b878397dc1a72b5ce2531b6f7dd158e09c828d03450ca0ff8a174deacebcaa22dde84ef66ad370f259d18af806638012da0ca4a70baa83d9c158f3552bc9158e69bf332a45809e1c36905a5caa12348dd57941a482131be7b2355a5f4635374f3bd3ddf5ff925bf4809ee27c1e67d9120c5fe08a9de458b1b4a3c5d0a428437f2beca81f4e2d5ff',\n    exponent: '010001'\n  }, {\n    modulus: 'b3f762b739be98f343eb1921cf0148cfa27ff7af02b6471213fed9daa0098976e667750324f1abcea4c31e43b7d11f1579133f2b3d9fe27474e462058884e5e1b123be9cbbc6a443b2925c08520e7325e6f1a6d50e117eb61ea49d2534c8bb4d2ae4153fabe832b9edf4c5755fdd8b19940b81d1d96cf433d19e6a22968a85dc80f0312f596bd2530c1cfb28b5fe019ac9bc25cd9c2a5d8a0f3a1c0c79bcca524d315b5e21b5c26b46babe3d75d06d1cd33329ec782a0f22891ed1db42a1d6c0dea431428bc4d7aabdcf3e0eb6fda4e23eb7733e7727e9a1915580796c55188d2596d2665ad1182ba7abf15aaa5a8b779ea996317a20ae044b820bff35b6e8a1',\n    exponent: '010001'\n  }, {\n    modulus: 'be6a71558ee577ff03023cfa17aab4e6c86383cff8a7ad38edb9fafe6f323f2d5106cbc8cafb83b869cffd1ccf121cd743d509e589e68765c96601e813dc5b9dfc4be415c7a6526132d0035ca33d6d6075d4f535122a1cdfe017041f1088d1419f65c8e5490ee613e16dbf662698c0f54870f0475fa893fc41eb55b08ff1ac211bc045ded31be27d12c96d8d3cfc6a7ae8aa50bf2ee0f30ed507cc2581e3dec56de94f5dc0a7abee0be990b893f2887bd2c6310a1e0a9e3e38bd34fded2541508dc102a9c9b4c95effd9dd2dfe96c29be647d6c69d66ca500843cfaed6e440196f1dbe0e2e22163c61ca48c79116fa77216726749a976a1c4b0944b5121e8c01',\n    exponent: '010001'\n  }]; */\n\n  private testPublicKeysHex: RSAPublicKeyHex[] = [{\n    modulus: 'c8c11d635691fac091dd9489aedced2932aa8a0bcefef05fa800892d9b52ed03200865c9e97211cb2ee6c7ae96d3fb0e15aeffd66019b44a08a240cfdd2868a85e1f54d6fa5deaa041f6941ddf302690d61dc476385c2fa655142353cb4e4b59f6e5b6584db76fe8b1370263246c010c93d011014113ebdf987d093f9d37c2be48352d69a1683f8f6e6c2167983c761e3ab169fde5daaa12123fa1beab621e4da5935e9c198f82f35eae583a99386d8110ea6bd1abb0f568759f62694419ea5f69847c43462abef858b4cb5edc84e7b9226cd7bd7e183aa974a712c079dde85b9dc063b8a5c08e8f859c0ee5dcd824c7807f20153361a7f63cfd2a433a1be7f5',\n    exponent: '010001'\n  }];\n\n  private publisKeysHex: RSAPublicKeyHex[] = [{\n    // modulus: '00e8bb3305c0b52c6cf2afdf7637313489e63e05268e5badb601af417786472e5f93b85438968e20e6729a301c0afc121bf7151f834436f7fda680847a66bf64accec78ee21c0b316f0edafe2f41908da7bd1f4a5107638eeb67040ace472a14f90d9f7c2b7def99688ba3073adb5750bb02964902a359fe745d8170e36876d4fd8a5d41b2a76cbff9a13267eb9580b2d06d10357448d20d9da2191cb5d8c93982961cdfdeda629e37f1fb09a0722027696032fe61ed663db7a37f6f263d370f69db53a0dc0a1748bdaaff6209d5645485e6e001d1953255757e4b8e42813347b11da6ab500fd0ace7e6dfa3736199ccaf9397ed0745a427dcfa6cd67bcb1acff3',\n    modulus: 'e8bb3305c0b52c6cf2afdf7637313489e63e05268e5badb601af417786472e5f93b85438968e20e6729a301c0afc121bf7151f834436f7fda680847a66bf64accec78ee21c0b316f0edafe2f41908da7bd1f4a5107638eeb67040ace472a14f90d9f7c2b7def99688ba3073adb5750bb02964902a359fe745d8170e36876d4fd8a5d41b2a76cbff9a13267eb9580b2d06d10357448d20d9da2191cb5d8c93982961cdfdeda629e37f1fb09a0722027696032fe61ed663db7a37f6f263d370f69db53a0dc0a1748bdaaff6209d5645485e6e001d1953255757e4b8e42813347b11da6ab500fd0ace7e6dfa3736199ccaf9397ed0745a427dcfa6cd67bcb1acff3',\n    exponent: '010001'\n  }];\n\n  private publicKeysParsed: {\n    [hex: string]: RSAPublicKeyHex\n  } = {};\n  private prepared = false;\n  private preparePromise: Promise<void> = null;\n\n  constructor() {\n    if(Modes.test) {\n      this.publisKeysHex = this.testPublicKeysHex;\n    }\n  }\n\n  public prepare(): Promise<void> {\n    if(this.preparePromise) return this.preparePromise;\n    else if(this.prepared) {\n      return Promise.resolve();\n    }\n\n    return this.preparePromise = Promise.all(this.publisKeysHex.map((keyParsed) => {\n      const RSAPublicKey = new TLSerialization();\n      RSAPublicKey.storeBytes(bytesFromHex(keyParsed.modulus), 'n');\n      RSAPublicKey.storeBytes(bytesFromHex(keyParsed.exponent), 'e');\n\n      const buffer = RSAPublicKey.getBuffer();\n\n      return cryptoWorker.invokeCrypto('sha1', buffer).then((bytes) => {\n        const fingerprintBytes = bytes.slice(-8);\n        fingerprintBytes.reverse();\n\n        this.publicKeysParsed[bytesToHex(fingerprintBytes).toLowerCase()] = {\n          modulus: keyParsed.modulus,\n          exponent: keyParsed.exponent\n        };\n      });\n    })).then(() => {\n      this.prepared = true;\n\n      // console.log('[MT] Prepared keys');\n      this.preparePromise = null;\n    });\n  }\n\n  public async select(fingerprints: Array<string>) {\n    await this.prepare();\n\n    for(let i = 0; i < fingerprints.length; ++i) {\n      let fingerprintHex = bigInt(fingerprints[i]).toString(16).toLowerCase();\n\n      if(fingerprintHex.length < 16) {\n        fingerprintHex = new Array(16 - fingerprintHex.length).fill('0').join('') + fingerprintHex;\n      }\n\n      // console.log(fingerprintHex, this.publicKeysParsed);\n      const foundKey = this.publicKeysParsed[fingerprintHex];\n      if(foundKey) {\n        return Object.assign({\n          fingerprint: fingerprints[i]\n        }, foundKey);\n      }\n    }\n  }\n}\n\nexport default new RSAKeysManager();\n","export default function bytesXor(bytes1: Uint8Array, bytes2: Uint8Array) {\n  const len = bytes1.length;\n  const bytes = new Uint8Array(len);\n\n  for(let i = 0; i < len; ++i) {\n    bytes[i] = bytes1[i] ^ bytes2[i];\n  }\n\n  return bytes;\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\n                   \nimport transportController from './transports/controller';\n         \n\nimport {TLSerialization, TLDeserialization} from './tl_utils';\nimport {TransportType} from './dcConfigurator';\nimport rsaKeysManager from './rsaKeysManager';\n\nimport CryptoWorker from '../crypto/cryptoMessagePort';\n\nimport {logger, LogTypes} from '../logger';\nimport DEBUG from '../../config/debug';\nimport {Awaited, DcId} from '../../types';\nimport addPadding from '../../helpers/bytes/addPadding';\nimport bytesCmp from '../../helpers/bytes/bytesCmp';\nimport bytesFromHex from '../../helpers/bytes/bytesFromHex';\nimport bytesToHex from '../../helpers/bytes/bytesToHex';\nimport bytesXor from '../../helpers/bytes/bytesXor';\nimport {bigIntFromBytes} from '../../helpers/bigInt/bigIntConversion';\nimport bigInt from 'big-integer';\nimport randomize from '../../helpers/array/randomize';\nimport {AppManager} from '../appManagers/manager';\n\n/* let fNewNonce: any = bytesFromHex('8761970c24cb2329b5b2459752c502f3057cb7e8dbab200e526e8767fdc73b3c').reverse();\nlet fNonce: any = bytesFromHex('b597720d11faa5914ef485c529cde414').reverse();\nlet fResult: any = new Uint8Array(bytesFromHex('000000000000000001b473a0661b285e480000006324160514e4cd29c585f44e91a5fa110d7297b5c0c4134c84893db5715ecd56af5ed618082182053cc5de91cd00000015c4b51c02000000a5b7f709355fc30b216be86c022bb4c3'));\n\nfNewNonce = false;\nfNonce = false;\nfResult = false; */\n\ntype AuthOptions = {\n  dcId: number,\n  nonce: Uint8Array,\n\n  serverNonce?: Uint8Array,\n  pq?: Uint8Array,\n  fingerprints?: string[],\n  publicKey?: {\n    modulus: string,\n    exponent: string,\n    fingerprint: string\n  },\n\n  // good\n  p?: Uint8Array,\n  q?: Uint8Array,\n\n  newNonce?: Uint8Array,\n\n  retry?: number,\n\n  b?: Uint8Array,\n  g?: number,\n  gA?: Uint8Array,\n  dhPrime?: Uint8Array,\n\n  tmpAesKey?: Uint8Array,\n  tmpAesIv?: Uint8Array,\n\n  authKeyId?: Uint8Array,\n  authKey?: Uint8Array,\n  serverSalt?: Uint8Array,\n\n  localTime?: number,\n  serverTime?: any,\n};\n\ntype ResPQ = {\n  _: 'resPQ';\n  nonce: Uint8Array;\n  pq: Uint8Array;\n  server_nonce: Uint8Array;\n  server_public_key_fingerprints: string[];\n};\n\ntype P_Q_inner_data = {\n  _: 'p_q_inner_data_dc';\n  pq: Uint8Array;\n  p: Uint8Array;\n  q: Uint8Array;\n  nonce: Uint8Array;\n  server_nonce: Uint8Array;\n  new_nonce: Uint8Array;\n  dc: number;\n};\n\ntype req_DH_params = {\n  nonce: Uint8Array;\n  server_nonce: Uint8Array;\n  p: Uint8Array;\n  q: Uint8Array;\n  public_key_fingerprint: string;\n  encrypted_data: Uint8Array;\n};\n\nexport class Authorizer extends AppManager {\n  private cached: {\n    [dcId: DcId]: Promise<AuthOptions>\n  };\n\n  private log: ReturnType<typeof logger>;\n\n  private transportType: TransportType;\n\n                     \n  private getTransportTypePromise: Promise<void>;\n           \n\n  protected after() {\n    this.cached = {};\n    this.log = logger(`AUTHORIZER`, LogTypes.Error | LogTypes.Log);\n  }\n\n  private sendPlainRequest(dcId: DcId, requestArray: Uint8Array) {\n    const requestLength = requestArray.byteLength;\n\n    const header = new TLSerialization();\n    header.storeLongP(0, 0, 'auth_key_id');\n    header.storeLong(this.timeManager.generateId(), 'msg_id');\n    header.storeInt(requestLength, 'request_length');\n\n    const headerArray = header.getBytes(true) as Uint8Array;\n    const resultArray = new Uint8Array(headerArray.byteLength + requestLength);\n    resultArray.set(headerArray);\n    resultArray.set(requestArray, headerArray.length);\n\n    const transport = this.dcConfigurator.chooseServer(dcId, 'client', this.transportType);\n    const baseError = {\n      code: 406,\n      type: 'NETWORK_BAD_RESPONSE'\n    };\n\n    if(DEBUG) {\n      this.log('mtpSendPlainRequest: creating requestPromise');\n    }\n\n    const promise = transport.send(resultArray) as any as Promise<Uint8Array>;\n    return promise.then((result) => {\n      if(DEBUG) {\n        this.log('mtpSendPlainRequest: in good sector', result);\n      }\n\n      if(!result || !result.byteLength) {\n        throw baseError;\n      }\n\n      try {\n        /* result = fResult ? fResult : result;\n        fResult = new Uint8Array(0); */\n\n        const deserializer = new TLDeserialization<MTLong>(result, {mtproto: true});\n\n        if(result.length === 4) {\n          const errorCode = deserializer.fetchInt();\n          this.log.error('mtpSendPlainRequest: wrong response, error code:', errorCode);\n          throw errorCode;\n        }\n\n        const auth_key_id = deserializer.fetchLong('auth_key_id');\n        if(auth_key_id !== '0') this.log.error('auth_key_id !== 0', auth_key_id);\n\n        const msg_id = deserializer.fetchLong('msg_id');\n        if(msg_id === '0') this.log.error('msg_id === 0', msg_id);\n\n        const msg_len = deserializer.fetchInt('msg_len');\n        if(!msg_len) this.log.error('no msg_len', msg_len);\n\n        return deserializer;\n      } catch(e) {\n        this.log.error('mtpSendPlainRequest: deserialization went bad', e);\n        const error = Object.assign(baseError, {originalError: e});\n        throw error;\n      }\n    }, (error) => {\n      if(!error.message && !error.type) {\n        error = Object.assign(baseError, {\n          originalError: error\n        });\n      }\n\n      throw error;\n    });\n  }\n\n  private async sendReqPQ(auth: AuthOptions) {\n    const request = new TLSerialization({mtproto: true});\n\n    request.storeMethod('req_pq_multi', {nonce: auth.nonce});\n\n    if(DEBUG) {\n      this.log('Send req_pq', bytesToHex(auth.nonce));\n    }\n\n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\n    try {\n      const promise = this.sendPlainRequest(auth.dcId, request.getBytes(true));\n      rsaKeysManager.prepare();\n      deserializer = await promise;\n    } catch(error) {\n      this.log.error('req_pq error', (error as Error).message);\n      throw error;\n    }\n\n    const response: ResPQ = deserializer.fetchObject('ResPQ');\n\n    if(response._ !== 'resPQ') {\n      throw new Error('[MT] resPQ response invalid: ' + response._);\n    }\n\n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      this.log.error(auth.nonce, response.nonce);\n      throw new Error('[MT] resPQ nonce mismatch');\n    }\n\n    auth.serverNonce = response.server_nonce; // need\n    auth.pq = response.pq;\n    auth.fingerprints = response.server_public_key_fingerprints;\n\n    if(DEBUG) {\n      this.log('Got ResPQ', bytesToHex(auth.serverNonce), bytesToHex(auth.pq), auth.fingerprints);\n    }\n\n    const publicKey = await rsaKeysManager.select(auth.fingerprints);\n    if(!publicKey) {\n      throw new Error('[MT] No public key found');\n    }\n\n    auth.publicKey = publicKey;\n\n    if(DEBUG) {\n      this.log('PQ factorization start', auth.pq);\n    }\n\n    // let pAndQ: Awaited<ReturnType<typeof CryptoWorker['factorize']>>;\n    try {\n      var pAndQ = await CryptoWorker.invokeCrypto('factorize', auth.pq);\n    } catch(error) {\n      this.log.error('worker error factorize', error);\n      throw error;\n    }\n\n    auth.p = pAndQ[0];\n    auth.q = pAndQ[1];\n\n    if(DEBUG) {\n      this.log('PQ factorization done', pAndQ);\n    }\n\n    return this.sendReqDhParams(auth);\n  }\n\n  private async sendReqDhParams(auth: AuthOptions): Promise<AuthOptions> {\n    auth.newNonce = randomize(new Uint8Array(32));\n\n    const p_q_inner_data_dc: P_Q_inner_data = {\n      _: 'p_q_inner_data_dc',\n      pq: auth.pq,\n      p: auth.p,\n      q: auth.q,\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      new_nonce: auth.newNonce,\n      dc: 0\n    };\n\n    const pQInnerDataSerialization = new TLSerialization({mtproto: true});\n    pQInnerDataSerialization.storeObject(p_q_inner_data_dc, 'P_Q_inner_data', 'DECRYPTED_DATA');\n\n    const data = pQInnerDataSerialization.getBytes(true);\n    if(data.length > 144) {\n      throw 'DH_params: data is more than 144 bytes!';\n    }\n\n    const dataWithPadding = addPadding(data, 192, false, true, false);\n    const dataPadReversed = dataWithPadding.slice().reverse();\n\n    const getKeyAesEncrypted = async() => {\n      for(;;) {\n        const tempKey = randomize(new Uint8Array(32));\n        const dataWithHash = dataPadReversed.concat(await CryptoWorker.invokeCrypto('sha256', tempKey.concat(dataWithPadding)));\n        if(dataWithHash.length !== 224) {\n          throw 'DH_params: dataWithHash !== 224 bytes!';\n        }\n\n        const aesEncrypted = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithHash, tempKey, new Uint8Array([0]));\n        const tempKeyXor = bytesXor(tempKey, await CryptoWorker.invokeCrypto('sha256', aesEncrypted));\n        const keyAesEncrypted = tempKeyXor.concat(aesEncrypted);\n\n        const keyAesEncryptedBigInt = bigIntFromBytes(keyAesEncrypted);\n        const publicKeyModulusBigInt = bigInt(auth.publicKey.modulus, 16);\n\n        if(keyAesEncryptedBigInt.compare(publicKeyModulusBigInt) === -1) {\n          return keyAesEncrypted;\n        }\n      }\n    };\n\n    const keyAesEncrypted = await getKeyAesEncrypted();\n    const encryptedData = addPadding(await CryptoWorker.invokeCrypto('rsa-encrypt', keyAesEncrypted, auth.publicKey), 256, true, true, true);\n\n    const req_DH_params: req_DH_params = {\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      p: auth.p,\n      q: auth.q,\n      public_key_fingerprint: auth.publicKey.fingerprint,\n      encrypted_data: encryptedData\n    };\n\n    const request = new TLSerialization({mtproto: true});\n    request.storeMethod('req_DH_params', req_DH_params);\n\n    const requestBytes = request.getBytes(true);\n\n    if(DEBUG) {\n      this.log('Send req_DH_params', req_DH_params/* , requestBytes.hex */);\n    }\n\n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\n    try {\n      deserializer = await this.sendPlainRequest(auth.dcId, requestBytes);\n    } catch(error) {\n      this.log.error('Send req_DH_params FAIL!', error);\n      throw error;\n    }\n\n    const response = deserializer.fetchObject('Server_DH_Params', 'RESPONSE');\n\n    if(DEBUG) {\n      this.log('Sent req_DH_params, response:', response);\n    }\n\n    if(response._ !== 'server_DH_params_fail' && response._ !== 'server_DH_params_ok') {\n      throw new Error('[MT] Server_DH_Params response invalid: ' + response._);\n    }\n\n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      throw new Error('[MT] Server_DH_Params nonce mismatch');\n    }\n\n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\n      throw new Error('[MT] Server_DH_Params server_nonce mismatch');\n    }\n\n    if(response._ === 'server_DH_params_fail') {\n      const newNonceHash = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce)).slice(-16);\n      if(!bytesCmp(newNonceHash, response.new_nonce_hash)) {\n        throw new Error('[MT] server_DH_params_fail new_nonce_hash mismatch');\n      }\n\n      throw new Error('[MT] server_DH_params_fail');\n    }\n\n    // fill auth object\n    try {\n      await this.decryptServerDhDataAnswer(auth, response.encrypted_answer);\n    } catch(e) {\n      this.log.error('mtpDecryptServerDhDataAnswer FAILED!', e);\n      throw e;\n    }\n\n    // console.log(dT(), 'mtpSendReqDhParams: executing mtpSendSetClientDhParams...');\n\n    return this.sendSetClientDhParams(auth);\n  }\n\n  private async decryptServerDhDataAnswer(auth: AuthOptions, encryptedAnswer: any) {\n    auth.localTime = Date.now();\n\n    // ! can't concat Array with Uint8Array!\n    auth.tmpAesKey = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat(auth.serverNonce)))\n    .concat((await CryptoWorker.invokeCrypto('sha1', auth.serverNonce.concat(auth.newNonce))).slice(0, 12));\n\n    auth.tmpAesIv = (await CryptoWorker.invokeCrypto('sha1', auth.serverNonce.concat(auth.newNonce))).slice(12)\n    .concat(await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat(auth.newNonce)), auth.newNonce.slice(0, 4));\n\n    const answerWithHash = new Uint8Array(await CryptoWorker.invokeCrypto('aes-decrypt', encryptedAnswer, auth.tmpAesKey, auth.tmpAesIv));\n\n    const hash = answerWithHash.slice(0, 20);\n    const answerWithPadding = answerWithHash.slice(20);\n\n    const deserializer = new TLDeserialization<MTLong>(answerWithPadding, {mtproto: true});\n    const response = deserializer.fetchObject('Server_DH_inner_data');\n\n    if(response._ !== 'server_DH_inner_data') {\n      throw new Error('[MT] server_DH_inner_data response invalid: ' + response);\n    }\n\n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      throw new Error('[MT] server_DH_inner_data nonce mismatch');\n    }\n\n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\n      throw new Error('[MT] server_DH_inner_data serverNonce mismatch');\n    }\n\n    if(DEBUG) {\n      this.log('Done decrypting answer');\n    }\n    auth.g = response.g;\n    auth.dhPrime = response.dh_prime;\n    auth.gA = response.g_a;\n    auth.serverTime = response.server_time;\n    auth.retry = 0;\n\n    this.verifyDhParams(auth.g, auth.dhPrime, auth.gA);\n\n    const offset = deserializer.getOffset();\n\n    if(!bytesCmp(hash, await CryptoWorker.invokeCrypto('sha1', answerWithPadding.slice(0, offset)))) {\n      throw new Error('[MT] server_DH_inner_data SHA1 mismatch');\n    }\n\n    this.timeManager.applyServerTime(auth.serverTime, auth.localTime);\n  }\n\n  private verifyDhParams(g: number, dhPrime: Uint8Array, gA: Uint8Array) {\n    if(DEBUG) {\n      this.log('Verifying DH params', g, dhPrime, gA);\n    }\n\n    const dhPrimeHex = bytesToHex(dhPrime);\n    if(g !== 3 || dhPrimeHex !== 'c71caeb9c6b1c9048e6c522f70f13f73980d40238e3e21c14934d037563d930f48198a0aa7c14058229493d22530f4dbfa336f6e0ac925139543aed44cce7c3720fd51f69458705ac68cd4fe6b6b13abdc9746512969328454f18faf8c595f642477fe96bb2a941d5bcd1d4ac8cc49880708fa9b378e3c4f3a9060bee67cf9a4a4a695811051907e162753b56b0f6b410dba74d8a84b2a14b3144e0ef1284754fd17ed950d5965b4b9dd46582db1178d169c6bc465b0d6ff9ca3928fef5b9ae4e418fc15e83ebea0f87fa9ff5eed70050ded2849f47bf959d956850ce929851f0d8115f635b105ee2e4e15d04b2454bf6f4fadf034b10403119cd8e3b92fcc5b') {\n      // The verified value is from https://core.telegram.org/mtproto/security_guidelines\n      throw new Error('[MT] DH params are not verified: unknown dhPrime');\n    }\n\n    if(DEBUG) {\n      this.log('dhPrime cmp OK');\n    }\n\n    const gABigInt = bigIntFromBytes(gA);\n    const dhPrimeBigInt = bigInt(dhPrimeHex, 16);\n\n    if(gABigInt.compare(bigInt.one) <= 0) {\n      throw new Error('[MT] DH params are not verified: gA <= 1');\n    }\n\n    if(gABigInt.compare(dhPrimeBigInt.subtract(bigInt.one)) >= 0) {\n      throw new Error('[MT] DH params are not verified: gA >= dhPrime - 1');\n    }\n\n    if(DEBUG) {\n      this.log('1 < gA < dhPrime-1 OK');\n    }\n\n    const twoPow = bigInt(2).pow(2048 - 64);\n\n    if(gABigInt.compare(twoPow) < 0) {\n      throw new Error('[MT] DH params are not verified: gA < 2^{2048-64}');\n    }\n    if(gABigInt.compare(dhPrimeBigInt.subtract(twoPow)) >= 0) {\n      throw new Error('[MT] DH params are not verified: gA > dhPrime - 2^{2048-64}');\n    }\n\n    if(DEBUG) {\n      this.log('2^{2048-64} < gA < dhPrime-2^{2048-64} OK');\n    }\n\n    return true;\n  }\n\n  private async sendSetClientDhParams(auth: AuthOptions): Promise<AuthOptions> {\n    const gBytes = bytesFromHex(auth.g.toString(16));\n\n    auth.b = randomize(new Uint8Array(256));\n    // MTProto.secureRandom.nextBytes(auth.b);\n\n    // let gB: Awaited<ReturnType<typeof CryptoWorker['modPow']>>;\n    try {\n      var gB = await CryptoWorker.invokeCrypto('mod-pow', gBytes, auth.b, auth.dhPrime);\n    } catch(error) {\n      throw error;\n    }\n\n    const data = new TLSerialization({mtproto: true});\n    data.storeObject({\n      _: 'client_DH_inner_data',\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      retry_id: [0, auth.retry++],\n      g_b: gB\n    }, 'Client_DH_Inner_Data');\n\n    const dataWithHash = (await CryptoWorker.invokeCrypto('sha1', data.getBuffer())).concat(data.getBytes(true));\n    const encryptedData = await CryptoWorker.invokeCrypto('aes-encrypt', dataWithHash, auth.tmpAesKey, auth.tmpAesIv);\n\n    const request = new TLSerialization({mtproto: true});\n    request.storeMethod('set_client_DH_params', {\n      nonce: auth.nonce,\n      server_nonce: auth.serverNonce,\n      encrypted_data: encryptedData\n    });\n\n    if(DEBUG) {\n      this.log('Send set_client_DH_params');\n    }\n\n    let deserializer: Awaited<ReturnType<Authorizer['sendPlainRequest']>>;\n    try {\n      deserializer = await this.sendPlainRequest(auth.dcId, request.getBytes(true));\n    } catch(err) {\n      throw err;\n    }\n\n    const response = deserializer.fetchObject('Set_client_DH_params_answer');\n\n    if(response._ !== 'dh_gen_ok' && response._ !== 'dh_gen_retry' && response._ !== 'dh_gen_fail') {\n      throw new Error('[MT] Set_client_DH_params_answer response invalid: ' + response._);\n    }\n\n    if(!bytesCmp(auth.nonce, response.nonce)) {\n      throw new Error('[MT] Set_client_DH_params_answer nonce mismatch');\n    }\n\n    if(!bytesCmp(auth.serverNonce, response.server_nonce)) {\n      throw new Error('[MT] Set_client_DH_params_answer server_nonce mismatch');\n    }\n\n    // let authKey: Uint8Array;\n    try {\n      var authKey = await CryptoWorker.invokeCrypto('mod-pow', auth.gA, auth.b, auth.dhPrime);\n    } catch(err) {\n      throw authKey;\n    }\n\n    const authKeyHash = await CryptoWorker.invokeCrypto('sha1', authKey),\n      authKeyAux = authKeyHash.slice(0, 8),\n      authKeyId = authKeyHash.slice(-8);\n\n    if(DEBUG) {\n      this.log('Got Set_client_DH_params_answer', response._, authKey);\n    }\n    switch(response._) {\n      case 'dh_gen_ok': {\n        const newNonceHash1 = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat([1], authKeyAux))).slice(-16);\n\n        if(!bytesCmp(newNonceHash1, response.new_nonce_hash1)) {\n          this.log.error('Set_client_DH_params_answer new_nonce_hash1 mismatch', newNonceHash1, response);\n          throw new Error('new_nonce_hash1 mismatch');\n        }\n\n        const serverSalt = bytesXor(auth.newNonce.slice(0, 8), auth.serverNonce.slice(0, 8));\n        if(DEBUG) {\n          this.log('Auth successfull!', authKeyId, authKey, serverSalt);\n        }\n\n        auth.authKeyId = authKeyId;\n        auth.authKey = authKey;\n        auth.serverSalt = serverSalt;\n\n        return auth;\n      }\n\n      case 'dh_gen_retry': {\n        const newNonceHash2 = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat([2], authKeyAux))).slice(-16);\n        if(!bytesCmp(newNonceHash2, response.new_nonce_hash2)) {\n          throw new Error('[MT] Set_client_DH_params_answer new_nonce_hash2 mismatch');\n        }\n\n        return this.sendSetClientDhParams(auth);\n      }\n\n      case 'dh_gen_fail': {\n        const newNonceHash3 = (await CryptoWorker.invokeCrypto('sha1', auth.newNonce.concat([3], authKeyAux))).slice(-16);\n        if(!bytesCmp(newNonceHash3, response.new_nonce_hash3)) {\n          throw new Error('[MT] Set_client_DH_params_answer new_nonce_hash3 mismatch');\n        }\n\n        throw new Error('[MT] Set_client_DH_params_answer fail');\n      }\n    }\n  }\n\n                     \n  private getTransportType() {\n    if(this.getTransportTypePromise) return this.getTransportTypePromise;\n    return this.getTransportTypePromise = transportController.pingTransports().then(({websocket}) => {\n      this.transportType = websocket ? 'websocket' : 'https';\n      this.log('will use transport:', this.transportType);\n    });\n  }\n           \n\n  public auth(dcId: DcId) {\n    let promise = this.cached[dcId];\n    if(promise) {\n      return promise;\n    }\n\n    promise = new Promise(async(resolve, reject) => {\n                         \n      await this.getTransportType();\n               \n\n      let error: ApiError;\n      let _try = 1;\n      while(_try++ <= 3) {\n        try {\n          const auth: AuthOptions = {\n            dcId,\n            nonce: randomize(new Uint8Array(16))\n          };\n\n          const promise = this.sendReqPQ(auth);\n          resolve(await promise);\n          return;\n        } catch(err) {\n          error = err;\n        }\n      }\n\n      reject(error);\n    });\n\n    return this.cached[dcId] = promise;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport sessionStorage from '../sessionStorage';\nimport {nextRandomUint} from '../../helpers/random';\nimport {WorkerTaskVoidTemplate} from '../../types';\nimport ulongFromInts from '../../helpers/long/ulongFromInts';\nimport {AppManager} from '../appManagers/manager';\n\n/*\nlet lol: any = {};\nfor(var i = 0; i < 100; i++) {\n    timeManager.generateId();\n}\n*/\n\nexport interface ApplyServerTimeOffsetTask extends WorkerTaskVoidTemplate {\n  type: 'applyServerTimeOffset',\n  payload: TimeManager['timeOffset']\n};\n\nexport class TimeManager extends AppManager {\n  private lastMessageId: [number, number];\n  private timeOffset: number;\n\n  /* private midnightNoOffset: number;\n  private midnightOffseted: Date;\n\n  private midnightOffset: number; */\n\n  /* private timeParams: {\n    midnightOffset: number,\n    serverTimeOffset: number\n  }; */\n\n  protected after() {\n    this.lastMessageId = [0, 0];\n    this.timeOffset = 0;\n\n    sessionStorage.get('server_time_offset').then((to) => {\n      if(to) {\n        this.timeOffset = to;\n      }\n    });\n\n\n    // * migrated from ServerTimeManager\n    /* const timestampNow = tsNow(true);\n    this.midnightNoOffset = timestampNow - (timestampNow % 86400);\n    this.midnightOffseted = new Date();\n    this.midnightOffseted.setHours(0, 0, 0, 0);\n\n    this.midnightOffset = this.midnightNoOffset - (Math.floor(+this.midnightOffseted / 1000)); */\n\n    /* this.timeParams = {\n      midnightOffset: this.midnightOffset,\n      serverTimeOffset: this.serverTimeOffset\n    }; */\n  }\n\n  public getServerTimeOffset() {\n    return this.timeOffset;\n  }\n\n  public generateId(): string {\n    const timeTicks = Date.now(),\n      timeSec = Math.floor(timeTicks / 1000) + this.timeOffset,\n      timeMSec = timeTicks % 1000,\n      random = nextRandomUint(16);\n\n    let messageId: TimeManager['lastMessageId'] = [timeSec, (timeMSec << 21) | (random << 3) | 4];\n    if(this.lastMessageId[0] > messageId[0] ||\n      this.lastMessageId[0] === messageId[0] && this.lastMessageId[1] >= messageId[1]) {\n      messageId = [this.lastMessageId[0], this.lastMessageId[1] + 4];\n    }\n\n    this.lastMessageId = messageId;\n\n    const ret = ulongFromInts(messageId[0], messageId[1]).toString(10);\n\n    // if(lol[ret]) {\n    //   console.error('[TimeManager]: Generated SAME msg id', messageId, this.timeOffset, ret);\n    // }\n    // lol[ret] = true;\n\n    // console.log('[TimeManager]: Generated msg id', messageId, this.timeOffset, ret);\n\n    return ret\n  }\n\n  public applyServerTime(serverTime: number, localTime?: number) {\n    localTime = (localTime || Date.now()) / 1000 | 0;\n    const newTimeOffset = serverTime - localTime;\n    const changed = Math.abs(this.timeOffset - newTimeOffset) > 10;\n    this.lastMessageId = [0, 0];\n\n    if(this.timeOffset !== newTimeOffset) {\n      sessionStorage.set({\n        server_time_offset: newTimeOffset\n      });\n\n      this.timeOffset = newTimeOffset;\n    }\n\n    // console.log('[TimeManager]: Apply server time', serverTime, localTime, newTimeOffset, changed);\n\n    return changed;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {DocumentAttribute, WebDocument} from '../../layer';\n\nexport default class AppWebDocsManager {\n  public saveWebDocument(webDocument: WebDocument) {\n    if(!webDocument) {\n      return;\n    }\n\n    const attribute: DocumentAttribute.documentAttributeImageSize = webDocument.attributes.find((attribute) => attribute._ === 'documentAttributeImageSize') as any;\n    if(attribute) {\n      webDocument.w = attribute.w;\n      webDocument.h = attribute.h;\n    }\n\n    return webDocument;\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {InputInvoice, InputPaymentCredentials, PaymentRequestedInfo, PaymentsPaymentForm} from '../../layer';\nimport {AppManager} from './manager';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\n\nexport default class AppPaymentsManager extends AppManager {\n  public getInputInvoiceBySlug(slug: string): InputInvoice.inputInvoiceSlug {\n    return {\n      _: 'inputInvoiceSlug',\n      slug\n    };\n  }\n\n  public getInputInvoiceByPeerId(peerId: PeerId, mid: number): InputInvoice.inputInvoiceMessage {\n    return {\n      _: 'inputInvoiceMessage',\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: getServerMessageId(mid)\n    };\n  }\n\n  public getPaymentForm(invoice: InputInvoice) {\n    return this.apiManager.invokeApi('payments.getPaymentForm', {\n      invoice\n    }).then((paymentForm) => {\n      this.appUsersManager.saveApiUsers(paymentForm.users);\n\n      return paymentForm;\n    });\n  }\n\n  public getPaymentReceipt(peerId: PeerId, mid: number) {\n    return this.apiManager.invokeApi('payments.getPaymentReceipt', {\n      peer: this.appPeersManager.getInputPeerById(peerId),\n      msg_id: getServerMessageId(mid)\n    }).then((paymentForm) => {\n      this.appUsersManager.saveApiUsers(paymentForm.users);\n\n      return paymentForm;\n    });\n  }\n\n  public validateRequestedInfo(invoice: InputInvoice, info: PaymentRequestedInfo, save?: boolean) {\n    return this.apiManager.invokeApi('payments.validateRequestedInfo', {\n      save,\n      invoice,\n      info\n    });\n  }\n\n  public sendPaymentForm(\n    invoice: InputInvoice,\n    formId: PaymentsPaymentForm['form_id'],\n    requestedInfoId: string,\n    shippingOptionId: string,\n    credentials: InputPaymentCredentials,\n    tipAmount?: number\n  ) {\n    return this.apiManager.invokeApi('payments.sendPaymentForm', {\n      form_id: formId,\n      invoice,\n      requested_info_id: requestedInfoId,\n      shipping_option_id: shippingOptionId,\n      credentials,\n      tip_amount: tipAmount || undefined\n    }).then((result) => {\n      if(result._ === 'payments.paymentResult') {\n        this.apiUpdatesManager.processUpdateMessage(result.updates);\n      }\n\n      return result;\n    });\n  }\n\n  public clearSavedInfo(info?: boolean, credentials?: boolean) {\n    return this.apiManager.invokeApi('payments.clearSavedInfo', {\n      info,\n      credentials\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {MessageSendingParams} from './appMessagesManager';\nimport {AppManager} from './manager';\nimport {AttachMenuBots, AttachMenuBot, Update, DataJSON} from '../../layer';\nimport assumeType from '../../helpers/assumeType';\nimport makeError from '../../helpers/makeError';\nimport getAttachMenuBotIcon from './utils/attachMenuBots/getAttachMenuBotIcon';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\n\nexport default class AppAttachMenuBotsManager extends AppManager {\n  private attachMenuBots: Map<BotId, AttachMenuBot>;\n  private attachMenuBotsArr: AttachMenuBot[];\n\n  protected after() {\n    this.clear(true);\n\n    this.apiUpdatesManager.addMultipleEventsListeners({\n      updateAttachMenuBots: this.onUpdateAttachMenuBots\n    });\n  }\n\n  public clear = (init = false) => {\n    if(!init) {\n      this.attachMenuBots.clear();\n      this.attachMenuBotsArr = undefined;\n    } else {\n      this.attachMenuBots = new Map();\n    }\n  };\n\n  private onUpdateAttachMenuBots = (update: Update.updateAttachMenuBots) => {\n    this.clear();\n    this.getAttachMenuBots();\n  };\n\n  public saveAttachMenuBot(attachMenuBot: AttachMenuBot) {\n    this.attachMenuBots.set(attachMenuBot.bot_id, attachMenuBot);\n    const icon = getAttachMenuBotIcon(attachMenuBot);\n    icon.icon = this.appDocsManager.saveDoc(icon.icon, {type: 'attachMenuBotIcon', botId: attachMenuBot.bot_id});\n    return attachMenuBot;\n  }\n\n  public saveAttachMenuBots(attachMenuBots: AttachMenuBot[]) {\n    if((attachMenuBots as any).saved) return;\n    (attachMenuBots as any).saved = true;\n    attachMenuBots.forEach((user) => this.saveAttachMenuBot(user));\n  }\n\n  public getAttachMenuBots() {\n    return this.attachMenuBotsArr ?? this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getAttachMenuBots',\n      processResult: (attachMenuBots) => {\n        assumeType<AttachMenuBots.attachMenuBots>(attachMenuBots);\n        this.appUsersManager.saveApiUsers(attachMenuBots.users);\n        this.saveAttachMenuBots(attachMenuBots.bots);\n        // ! temporary\n        return this.attachMenuBotsArr = attachMenuBots.bots.slice(0, 0);\n      }\n    });\n  }\n\n  public getAttachMenuBotCached(botId: BotId) {\n    return this.attachMenuBots.get(botId);\n  }\n\n  public getAttachMenuBot(botId: BotId, overwrite?: boolean) {\n    if(!this.appUsersManager.isAttachMenuBot(botId) || true) {\n      throw makeError('BOT_INVALID');\n    }\n\n    return (!overwrite && this.getAttachMenuBotCached(botId)) ?? this.apiManager.invokeApiSingleProcess({\n      method: 'messages.getAttachMenuBot',\n      params: {\n        bot: this.appUsersManager.getUserInput(botId)\n      },\n      processResult: (attachMenuBotsBot) => {\n        this.appUsersManager.saveApiUsers(attachMenuBotsBot.users);\n        const attachMenuBot = this.saveAttachMenuBot(attachMenuBotsBot.bot);\n        return attachMenuBot;\n      }\n    });\n  }\n\n  public requestWebView(options: MessageSendingParams & {\n    botId: BotId,\n    peerId: PeerId,\n    // platform: string,\n    startParam?: string,\n    fromBotMenu?: boolean,\n    url?: string,\n    themeParams?: DataJSON\n  }) {\n    const {\n      botId,\n      peerId,\n      url,\n      fromBotMenu,\n      themeParams,\n      // platform,\n      replyToMsgId,\n      silent,\n      sendAsPeerId,\n      startParam,\n      threadId\n    } = options;\n\n    const platform = 'web';\n\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.requestWebView',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(peerId),\n        bot: this.appUsersManager.getUserInput(botId),\n        silent,\n        platform,\n        url,\n        reply_to_msg_id: replyToMsgId ? getServerMessageId(replyToMsgId) : undefined,\n        from_bot_menu: fromBotMenu,\n        theme_params: themeParams,\n        send_as: sendAsPeerId ? this.appPeersManager.getInputPeerById(sendAsPeerId) : undefined,\n        start_param: startParam,\n        top_msg_id: threadId ? getServerMessageId(threadId) : undefined\n      },\n      processResult: (result) => {\n        console.log(result);\n        return result;\n      }\n    });\n  }\n\n  public prolongWebView(options: MessageSendingParams & {\n    peerId: PeerId,\n    botId: BotId,\n    queryId: string | number\n  }) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'messages.prolongWebView',\n      params: {\n        peer: this.appPeersManager.getInputPeerById(options.peerId),\n        bot: this.appUsersManager.getUserInput(options.botId),\n        query_id: options.queryId,\n        silent: options.silent,\n        reply_to_msg_id: options.replyToMsgId ? getServerMessageId(options.replyToMsgId) : undefined,\n        send_as: options.sendAsPeerId ? this.appPeersManager.getInputPeerById(options.sendAsPeerId) : undefined,\n        top_msg_id: options.threadId ? getServerMessageId(options.threadId) : undefined\n      },\n      processResult: (result) => {\n        console.log(result);\n      }\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {UrlAuthResult} from '../../layer';\nimport {AppManager} from './manager';\nimport getServerMessageId from './utils/messageId/getServerMessageId';\n\nexport default class AppSeamlessLoginManager extends AppManager {\n  public requestUrlAuth(url: string, peerId?: PeerId, mid?: number, buttonId?: number) {\n    return this.apiManager.invokeApi('messages.requestUrlAuth', {\n      button_id: buttonId,\n      msg_id: mid ? getServerMessageId(mid) : undefined,\n      peer: peerId ? this.appPeersManager.getInputPeerById(peerId) : undefined,\n      url\n    }).then((urlAuthResult) => {\n      if(urlAuthResult._ === 'urlAuthResultRequest') {\n        this.appUsersManager.saveApiUser(urlAuthResult.bot);\n      }\n\n      return urlAuthResult;\n    });\n  }\n\n  public acceptUrlAuth(url: string, peerId?: PeerId, mid?: number, buttonId?: number, writeAllowed?: boolean) {\n    return this.apiManager.invokeApi('messages.acceptUrlAuth', {\n      button_id: buttonId,\n      msg_id: mid ? getServerMessageId(mid) : undefined,\n      peer: peerId ? this.appPeersManager.getInputPeerById(peerId) : undefined,\n      url,\n      write_allowed: writeAllowed\n    }).then((urlAuthResult) => {\n      return urlAuthResult as Exclude<UrlAuthResult, UrlAuthResult.urlAuthResultRequest>;\n    });\n  }\n\n  public getWebAuthorizations() {\n    return this.apiManager.invokeApi('account.getWebAuthorizations').then((webAuthorizations) => {\n      this.appUsersManager.saveApiUsers(webAuthorizations.users);\n      return webAuthorizations.authorizations;\n    });\n  }\n\n  public resetWebAuthorization(hash: Long) {\n    return this.apiManager.invokeApi('account.resetWebAuthorization', {\n      hash\n    });\n  }\n\n  public resetWebAuthorizations() {\n    return this.apiManager.invokeApi('account.resetWebAuthorizations');\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport assumeType from '../../helpers/assumeType';\nimport {AccountThemes, AccountWallPapers, InputWallPaper, WallPaper} from '../../layer';\nimport {AppManager} from './manager';\n\ntype WallPaperId = WallPaper['id'];\n\nexport default class AppThemesManager extends AppManager {\n  private wallPapers: {[id: WallPaperId]: WallPaper};\n\n  protected after() {\n    this.wallPapers = {};\n  }\n\n  private saveWallPaper(wallPaper: WallPaper) {\n    if(!wallPaper) {\n      return wallPaper;\n    }\n    // const oldWallPaper = this.wallPapers[wallPaper.id];\n\n    // ! IT'S BROKEN NOW. SERVER RETURNS SAME ID FOR DIFFERENT WALLPAPERS\n    // if(oldWallPaper) {\n    //   console.log('rewrite', {...oldWallPaper}, {...wallPaper});\n    // }\n\n    if(wallPaper._ !== 'wallPaperNoFile') {\n      wallPaper.document = this.appDocsManager.saveDoc(wallPaper.document, {type: 'wallPaper', wallPaperId: wallPaper.id});\n    }\n\n    // if(oldWallPaper) {\n    //   return Object.assign(oldWallPaper, wallPaper);\n    // } else {\n    this.wallPapers[wallPaper.id] = wallPaper;\n    // }\n\n    return wallPaper;\n  }\n\n  public getWallPaper(inputWallPaper: InputWallPaper) {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'account.getWallPaper',\n      params: {wallpaper: inputWallPaper},\n      processResult: (wallPaper) => {\n        return this.saveWallPaper(wallPaper);\n      }\n    });\n  }\n\n  public getInputWallPaper(wallPaper: WallPaper | string): InputWallPaper {\n    if(typeof(wallPaper) === 'string') {\n      return {_: 'inputWallPaperSlug', slug: wallPaper};\n    } else if(wallPaper._ === 'wallPaperNoFile') {\n      return {_: 'inputWallPaperNoFile', id: wallPaper.id};\n    } else {\n      return {_: 'inputWallPaper', id: wallPaper.id, access_hash: wallPaper.access_hash};\n    }\n  }\n\n  public getWallPaperById(id: WallPaperId) {\n    const wallPaper = this.wallPapers[id];\n    return this.getWallPaper(this.getInputWallPaper(wallPaper));\n  }\n\n  public getThemes() {\n    return this.apiManager.invokeApiSingleProcess({\n      method: 'account.getThemes',\n      params: {format: 'macos', hash: 0},\n      processResult: (accountThemes) => {\n        assumeType<AccountThemes.accountThemes>(accountThemes);\n\n        accountThemes.themes.forEach((theme) => {\n          if(!theme.settings) {\n            return;\n          }\n\n          theme.settings.forEach((themeSettings) => {\n            themeSettings.wallpaper = this.saveWallPaper(themeSettings.wallpaper);\n          });\n        });\n\n        return accountThemes.themes;\n      }\n    });\n  }\n\n  public getWallPapers() {\n    return this.apiManager.invokeApiHashable({method: 'account.getWallPapers'}).then((accountWallpapers) => {\n      const wallPapers = (accountWallpapers as AccountWallPapers.accountWallPapers).wallpapers;\n      wallPapers.forEach((wallPaper, idx, arr) => {\n        arr[idx] = this.saveWallPaper(wallPaper);\n      });\n\n      return wallPapers;\n    });\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport App from '../../config/app';\nimport {MOUNT_CLASS_TO} from '../../config/debug';\nimport callbackify from '../../helpers/callbackify';\nimport deferredPromise, {CancellablePromise} from '../../helpers/cancellablePromise';\nimport cryptoMessagePort from '../crypto/cryptoMessagePort';\nimport MTProtoMessagePort from '../mtproto/mtprotoMessagePort';\nimport appStateManager from './appStateManager';\nimport {AppStoragesManager} from './appStoragesManager';\nimport createManagers from './createManagers';\n\ntype Managers = Awaited<ReturnType<typeof createManagers>>;\n\nexport class AppManagersManager {\n  private managers: Managers | Promise<Managers>;\n  private cryptoWorkersURLs: string[];\n  private cryptoPortsAttached: number;\n  private cryptoPortPromise: CancellablePromise<void>;\n\n  constructor() {\n    this.cryptoWorkersURLs = [];\n    this.cryptoPortsAttached = 0;\n    this.cryptoPortPromise = deferredPromise();\n    this.cryptoPortPromise.then(() => {\n      this.cryptoPortPromise = undefined;\n    });\n  }\n\n  public start() {\n    const port = MTProtoMessagePort.getInstance<false>();\n\n    port.addEventListener('manager', ({name, method, args}) => {\n      return callbackify(this.getManagers(), (managers) => {\n        // @ts-ignore\n        const manager = managers[name];\n        return manager[method].apply(manager, args);\n      });\n    });\n\n    port.addEventListener('cryptoPort', (payload, source, event) => {\n      const port = event.ports[0];\n      if(this.cryptoPortsAttached >= this.cryptoWorkersURLs.length) {\n        port.close();\n        return;\n      }\n\n      ++this.cryptoPortsAttached;\n      cryptoMessagePort.attachPort(port);\n      this.cryptoPortPromise?.resolve();\n    });\n\n    port.addEventListener('createProxyWorkerURLs', ({originalUrl, blob}) => {\n      let length = this.cryptoWorkersURLs.length;\n      if(!length) {\n        this.cryptoWorkersURLs.push(originalUrl);\n        ++length;\n      }\n\n      const maxLength = App.cryptoWorkers;\n      if(length === maxLength) {\n        return this.cryptoWorkersURLs;\n      }\n\n      const newURLs = new Array(maxLength - length).fill(undefined).map(() => URL.createObjectURL(blob));\n      this.cryptoWorkersURLs.push(...newURLs);\n      return this.cryptoWorkersURLs;\n    });\n  }\n\n  public async createManagers() {\n    const appStoragesManager = new AppStoragesManager();\n\n    await Promise.all([\n      // new Promise(() => {}),\n      appStoragesManager.loadStorages(),\n      this.cryptoPortPromise\n    ]);\n\n    const managers = await createManagers(appStoragesManager, appStateManager.userId);\n    return this.managers = managers;\n  }\n\n  public getManagers() {\n    return this.managers ??= this.createManagers();\n  }\n}\n\nconst appManagersManager = new AppManagersManager();\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.appManagersManager = appManagersManager);\nexport default appManagersManager;\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport {PasswordManager} from '../mtproto/passwordManager';\nimport {ReferenceDatabase} from '../mtproto/referenceDatabase';\nimport DialogsStorage from '../storages/dialogs';\nimport FiltersStorage from '../storages/filters';\nimport {ApiUpdatesManager} from './apiUpdatesManager';\nimport {AppAvatarsManager} from './appAvatarsManager';\nimport {AppCallsManager} from './appCallsManager';\nimport {AppChatsManager} from './appChatsManager';\nimport {AppDocsManager} from './appDocsManager';\nimport {AppDraftsManager} from './appDraftsManager';\nimport {AppEmojiManager} from './appEmojiManager';\nimport {AppGroupCallsManager} from './appGroupCallsManager';\nimport {AppInlineBotsManager} from './appInlineBotsManager';\nimport {AppMessagesIdsManager} from './appMessagesIdsManager';\nimport {AppMessagesManager} from './appMessagesManager';\nimport {AppNotificationsManager} from './appNotificationsManager';\nimport {AppPeersManager} from './appPeersManager';\nimport {AppPhotosManager} from './appPhotosManager';\nimport {AppPollsManager} from './appPollsManager';\nimport {AppPrivacyManager} from './appPrivacyManager';\nimport {AppProfileManager} from './appProfileManager';\nimport {AppReactionsManager} from './appReactionsManager';\nimport {AppStickersManager} from './appStickersManager';\nimport {AppUsersManager} from './appUsersManager';\nimport {AppWebPagesManager} from './appWebPagesManager';\nimport {ApiFileManager} from '../mtproto/apiFileManager';\nimport {ApiManager} from '../mtproto/apiManager';\nimport ctx from '../../environment/ctx';\nimport PeersStorage from '../storages/peers';\nimport ThumbsStorage from '../storages/thumbs';\nimport {NetworkerFactory} from '../mtproto/networkerFactory';\nimport {RootScope} from '../rootScope';\nimport {Authorizer} from '../mtproto/authorizer';\nimport {DcConfigurator} from '../mtproto/dcConfigurator';\nimport {TimeManager} from '../mtproto/timeManager';\nimport {AppStoragesManager} from './appStoragesManager';\nimport cryptoMessagePort from '../crypto/cryptoMessagePort';\nimport appStateManager from './appStateManager';\nimport filterUnique from '../../helpers/array/filterUnique';\nimport AppWebDocsManager from './appWebDocsManager';\nimport AppPaymentsManager from './appPaymentsManager';\nimport AppAttachMenuBotsManager from './appAttachMenuBotsManager';\nimport AppSeamlessLoginManager from './appSeamlessLoginManager';\nimport AppThemesManager from './appThemesManager';\n\nexport default function createManagers(appStoragesManager: AppStoragesManager, userId: UserId) {\n  const managers = {\n    appPeersManager: new AppPeersManager,\n    appChatsManager: new AppChatsManager,\n    appDocsManager: new AppDocsManager,\n    appPhotosManager: new AppPhotosManager,\n    appPollsManager: new AppPollsManager,\n    appUsersManager: new AppUsersManager,\n    appWebPagesManager: new AppWebPagesManager,\n    appDraftsManager: new AppDraftsManager,\n    appProfileManager: new AppProfileManager,\n    appNotificationsManager: new AppNotificationsManager,\n    apiUpdatesManager: new ApiUpdatesManager,\n    appAvatarsManager: new AppAvatarsManager,\n    appGroupCallsManager: new AppGroupCallsManager,\n    appCallsManager: new AppCallsManager,\n    appReactionsManager: new AppReactionsManager,\n    appMessagesManager: new AppMessagesManager,\n    appMessagesIdsManager: new AppMessagesIdsManager,\n    appPrivacyManager: new AppPrivacyManager,\n    appInlineBotsManager: new AppInlineBotsManager,\n    appStickersManager: new AppStickersManager,\n    referenceDatabase: new ReferenceDatabase,\n    appEmojiManager: new AppEmojiManager,\n    filtersStorage: new FiltersStorage,\n    dialogsStorage: new DialogsStorage,\n    apiManager: new ApiManager,\n    cryptoWorker: cryptoMessagePort,\n    passwordManager: new PasswordManager,\n    apiFileManager: new ApiFileManager,\n    peersStorage: new PeersStorage,\n    thumbsStorage: new ThumbsStorage,\n    networkerFactory: new NetworkerFactory,\n    rootScope: new RootScope,\n    authorizer: new Authorizer,\n    dcConfigurator: new DcConfigurator,\n    timeManager: new TimeManager,\n    appStoragesManager: appStoragesManager,\n    appStateManager: appStateManager,\n    appWebDocsManager: new AppWebDocsManager,\n    appPaymentsManager: new AppPaymentsManager,\n    appAttachMenuBotsManager: new AppAttachMenuBotsManager,\n    appSeamlessLoginManager: new AppSeamlessLoginManager,\n    appThemesManager: new AppThemesManager\n  };\n\n  type T = typeof managers;\n\n  for(const name in managers) {\n    const manager = managers[name as keyof T];\n    if(!manager) {\n      continue;\n    }\n\n    if((manager as AppMessagesManager).setManagers) {\n      (manager as AppMessagesManager).setManagers(managers as any);\n      delete (manager as AppMessagesManager).setManagers;\n    }\n\n    // @ts-ignore\n    ctx[name] = manager;\n  }\n\n  const promises: Array<Promise<(() => void) | void> | void>[] = [];\n  let names = Object.keys(managers) as (keyof T)[];\n  names.unshift('appUsersManager', 'appChatsManager', 'appNotificationsManager', 'appMessagesManager', 'dialogsStorage');\n  names = filterUnique(names);\n  for(const name of names) {\n    const manager = managers[name];\n    if((manager as any)?.after) {\n      // console.log('injecting after', name);\n      const result = (manager as any).after();\n      promises.push(result);\n\n      // if(result instanceof Promise) {\n      //   result.then(() => {\n      //     console.log('injected after', name);\n      //   });\n      // }\n    }\n  }\n\n  if(userId) {\n    managers.apiManager.setUserAuth(userId);\n  }\n\n  return Promise.all(promises).then(() => managers);\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\n// just to include\nimport '../polyfill';\nimport '../../helpers/peerIdPolyfill';\n\nimport cryptoWorker from '../crypto/cryptoMessagePort';\nimport {setEnvironment} from '../../environment/utils';\nimport appStateManager from '../appManagers/appStateManager';\nimport transportController from './transports/controller';\nimport MTProtoMessagePort from './mtprotoMessagePort';\nimport RESET_STORAGES_PROMISE from '../appManagers/utils/storages/resetStoragesPromise';\nimport appManagersManager from '../appManagers/appManagersManager';\nimport listenMessagePort from '../../helpers/listenMessagePort';\nimport {logger} from '../logger';\nimport {State} from '../../config/state';\nimport toggleStorages from '../../helpers/toggleStorages';\nimport appTabsManager from '../appManagers/appTabsManager';\nimport ServiceMessagePort from '../serviceWorker/serviceMessagePort';\nimport callbackify from '../../helpers/callbackify';\n\nlet _isServiceWorkerOnline = true;\nexport function isServiceWorkerOnline() {\n  return _isServiceWorkerOnline;\n}\n\nlet serviceMessagePort: ServiceMessagePort<true>, _serviceMessagePort: MessagePort;\nexport function getServiceMessagePort() {\n  return _isServiceWorkerOnline ? serviceMessagePort : undefined;\n}\n\nconst log = logger('MTPROTO');\n// let haveState = false;\n\nconst port = new MTProtoMessagePort<false>();\nport.addMultipleEventsListeners({\n  environment: (environment) => {\n    setEnvironment(environment);\n\n    transportController.waitForWebSocket();\n  },\n\n  crypto: ({method, args}) => {\n    return cryptoWorker.invokeCrypto(method as any, ...args as any);\n  },\n\n  state: ({state, resetStorages, pushedKeys, newVersion, oldVersion, userId}) => {\n    // if(haveState) {\n    //   return;\n    // }\n\n    log('got state', state, pushedKeys);\n\n    appStateManager.userId = userId;\n    appStateManager.newVersion = newVersion;\n    appStateManager.oldVersion = oldVersion;\n\n    (Object.keys(state) as any as (keyof State)[]).forEach((key) => {\n      appStateManager.pushToState(key, state[key], true, !pushedKeys.includes(key));\n    });\n\n    RESET_STORAGES_PROMISE.resolve(resetStorages);\n    // haveState = true;\n  },\n\n  toggleStorages: ({enabled, clearWrite}) => {\n    return toggleStorages(enabled, clearWrite);\n  },\n\n  event: (payload, source) => {\n    log('will redirect event', payload, source);\n    port.invokeExceptSource('event', payload, source);\n  },\n\n  serviceWorkerOnline: (online) => {\n    _isServiceWorkerOnline = online;\n  },\n\n  serviceWorkerPort: (payload, source, event) => {\n    if(serviceMessagePort) {\n      serviceMessagePort.detachPort(_serviceMessagePort);\n      _serviceMessagePort = undefined;\n    } else {\n      serviceMessagePort = new ServiceMessagePort();\n      serviceMessagePort.addMultipleEventsListeners({\n        requestFilePart: (payload) => {\n          return callbackify(appManagersManager.getManagers(), (managers) => {\n            const {docId, dcId, offset, limit} = payload;\n            return managers.appDocsManager.requestDocPart(docId, dcId, offset, limit);\n          });\n        }\n      });\n    }\n\n    // * port can be undefined in the future\n    if(_serviceMessagePort = event.ports[0]) {\n      serviceMessagePort.attachPort(_serviceMessagePort);\n    }\n  },\n\n  createObjectURL: (blob) => {\n    return URL.createObjectURL(blob);\n  }\n\n  // socketProxy: (task) => {\n  //   const socketTask = task.payload;\n  //   const id = socketTask.id;\n\n  //   const socketProxied = socketsProxied.get(id);\n  //   if(socketTask.type === 'message') {\n  //     socketProxied.dispatchEvent('message', socketTask.payload);\n  //   } else if(socketTask.type === 'open') {\n  //     socketProxied.dispatchEvent('open');\n  //   } else if(socketTask.type === 'close') {\n  //     socketProxied.dispatchEvent('close');\n  //     socketsProxied.delete(id);\n  //   }\n  // },\n});\n\nlog('MTProto start');\n\nappManagersManager.start();\nappManagersManager.getManagers();\nappTabsManager.start();\n\n// let sentHello = false;\nlistenMessagePort(port, (source) => {\n  appTabsManager.addTab(source);\n\n  // port.invokeVoid('hello', undefined, source);\n  // if(!sentHello) {\n  //   port.invokeVoid('hello', undefined, source);\n  //   sentHello = true;\n  // }\n}, (source) => {\n  appTabsManager.deleteTab(source);\n});\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type SuperMessagePort from '../lib/mtproto/superMessagePort';\nimport ctx from '../environment/ctx';\n\nexport default function listenMessagePort(\n  messagePort: SuperMessagePort<any, any, any>,\n  onConnect?: (source: MessageEventSource) => void,\n  onDisconnect?: (source: MessageEventSource) => void\n) {\n  const attachPort = (listenPort: any, sendPort: any) => {\n    messagePort.attachListenPort(listenPort);\n    sendPort && messagePort.attachSendPort(sendPort);\n    onConnect?.(listenPort);\n  };\n\n  messagePort.setOnPortDisconnect(onDisconnect);\n\n  if(typeof(SharedWorkerGlobalScope) !== 'undefined') {\n    (ctx as any as SharedWorkerGlobalScope).addEventListener('connect', (e) => attachPort(e.source, e.source));\n  } else if(typeof(ServiceWorkerGlobalScope) !== 'undefined') {\n    attachPort(ctx, null);\n  } else {\n    attachPort(ctx, ctx);\n  }\n}\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport type {MyDialogFilter} from '../storages/filters';\n\n/**\n * Legacy Webogram's format, don't change dcID to camelCase. date is timestamp\n */\nexport type UserAuth = {dcID: number | string, date: number, id: PeerId};\nexport type REAL_FOLDER_ID = 0 | 1;\n\nexport const NULL_PEER_ID: PeerId = 0;\nexport const REPLIES_PEER_ID: PeerId = 1271266957;\nexport const REPLIES_HIDDEN_CHANNEL_ID: ChatId = 777;\nexport const SERVICE_PEER_ID: PeerId = 777000;\nexport const MUTE_UNTIL = 0x7FFFFFFF;\nexport const BOT_START_PARAM = '';\nexport const MAX_FILE_SAVE_SIZE = 20 * 1024 * 1024;\nexport const THUMB_TYPE_FULL = '';\nexport const TOPIC_COLORS = [0x6FB9F0, 0xFFD67E, 0xCB86DB, 0x8EEE98, 0xFF93B2, 0xFB6F5F];\nexport const ATTACH_MENU_BOT_ICON_NAME = 'default_static';\nexport const GENERAL_TOPIC_ID = 4295032831;\nexport const T_ME_PREFIXES = new Set(['web', 'k', 'z']);\n\nexport const FOLDER_ID_ALL: REAL_FOLDER_ID = 0;\nexport const FOLDER_ID_ARCHIVE: REAL_FOLDER_ID = 1;\nexport const REAL_FOLDERS: Set<number> = new Set([FOLDER_ID_ALL, FOLDER_ID_ARCHIVE]);\nexport const START_LOCAL_ID = Math.max(...Array.from(REAL_FOLDERS)) + 1 as MyDialogFilter['localId'];\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n *\n * Originally from:\n * https://github.com/zhukov/webogram\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\n * https://github.com/zhukov/webogram/blob/master/LICENSE\n */\n\nimport emojiRegExp from '../../vendor/emoji/regex';\nimport {MessageEntity} from '../../layer';\n\nconst EmojiHelper = {\n  emojiMap: (code: string) => { return code; },\n  shortcuts: [] as any,\n  emojis: [] as any\n};\n\nexport const ALPHA_CHARS_REG_EXP = 'a-z' +\n  '\\\\u00c0-\\\\u00d6\\\\u00d8-\\\\u00f6\\\\u00f8-\\\\u00ff' + // Latin-1\n  '\\\\u0100-\\\\u024f' + // Latin Extended A and B\n  '\\\\u0253\\\\u0254\\\\u0256\\\\u0257\\\\u0259\\\\u025b\\\\u0263\\\\u0268\\\\u026f\\\\u0272\\\\u0289\\\\u028b' + // IPA Extensions\n  '\\\\u02bb' + // Hawaiian\n  '\\\\u0300-\\\\u036f' + // Combining diacritics\n  '\\\\u1e00-\\\\u1eff' + // Latin Extended Additional (mostly for Vietnamese)\n  '\\\\u0400-\\\\u04ff\\\\u0500-\\\\u0527' + // Cyrillic\n  '\\\\u2de0-\\\\u2dff\\\\ua640-\\\\ua69f' + // Cyrillic Extended A/B\n  '\\\\u0591-\\\\u05bf\\\\u05c1-\\\\u05c2\\\\u05c4-\\\\u05c5\\\\u05c7' +\n  '\\\\u05d0-\\\\u05ea\\\\u05f0-\\\\u05f4' + // Hebrew\n  '\\\\ufb1d-\\\\ufb28\\\\ufb2a-\\\\ufb36\\\\ufb38-\\\\ufb3c\\\\ufb3e\\\\ufb40-\\\\ufb41' +\n  '\\\\ufb43-\\\\ufb44\\\\ufb46-\\\\ufb4f' + // Hebrew Pres. Forms\n  '\\\\u0610-\\\\u061a\\\\u0620-\\\\u065f\\\\u066e-\\\\u06d3\\\\u06d5-\\\\u06dc' +\n  '\\\\u06de-\\\\u06e8\\\\u06ea-\\\\u06ef\\\\u06fa-\\\\u06fc\\\\u06ff' + // Arabic\n  '\\\\u0750-\\\\u077f\\\\u08a0\\\\u08a2-\\\\u08ac\\\\u08e4-\\\\u08fe' + // Arabic Supplement and Extended A\n  '\\\\ufb50-\\\\ufbb1\\\\ufbd3-\\\\ufd3d\\\\ufd50-\\\\ufd8f\\\\ufd92-\\\\ufdc7\\\\ufdf0-\\\\ufdfb' + // Pres. Forms A\n  '\\\\ufe70-\\\\ufe74\\\\ufe76-\\\\ufefc' + // Pres. Forms B\n  '\\\\u200c' + // Zero-Width Non-Joiner\n  '\\\\u0e01-\\\\u0e3a\\\\u0e40-\\\\u0e4e' + // Thai\n  '\\\\u1100-\\\\u11ff\\\\u3130-\\\\u3185\\\\uA960-\\\\uA97F\\\\uAC00-\\\\uD7AF\\\\uD7B0-\\\\uD7FF' + // Hangul (Korean)\n  '\\\\u3003\\\\u3005\\\\u303b' + // Kanji/Han iteration marks\n  '\\\\uff21-\\\\uff3a\\\\uff41-\\\\uff5a' + // full width Alphabet\n  '\\\\uff66-\\\\uff9f' + // half width Katakana\n  '\\\\uffa1-\\\\uffdc'; // half width Hangul (Korean)\nexport const ALPHA_NUMERIC_REG_EXP = '0-9\\_' + ALPHA_CHARS_REG_EXP;\nexport const DOMAIN_ADD_CHARS = '\\u00b7';\n// Based on Regular Expression for URL validation by Diego Perini\nexport const URL_ALPHANUMERIC_REG_EXP_PART = '[' + ALPHA_CHARS_REG_EXP + '0-9]';\nexport const URL_PROTOCOL_REG_EXP_PART = '((?:https?|ftp)://|mailto:)?';\nexport const URL_REG_EXP = URL_PROTOCOL_REG_EXP_PART +\n  // user:pass authentication\n  '(?:' + URL_ALPHANUMERIC_REG_EXP_PART + '{1,64}(?::' + URL_ALPHANUMERIC_REG_EXP_PART + '{0,64})?@)?' +\n  '(?:' +\n  // sindresorhus/ip-regexp\n  '(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])(?:\\\\.(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])){3}' +\n  '|' +\n  // host name\n  URL_ALPHANUMERIC_REG_EXP_PART + '[' + ALPHA_CHARS_REG_EXP + DOMAIN_ADD_CHARS + '0-9\\-]{0,64}' +\n  // domain name\n  '(?:\\\\.' + URL_ALPHANUMERIC_REG_EXP_PART + '[' + ALPHA_CHARS_REG_EXP + DOMAIN_ADD_CHARS + '0-9\\-]{0,64}){0,10}' +\n  // TLD identifier\n  '(?:\\\\.(xn--[0-9a-z]{2,16}|[' + ALPHA_CHARS_REG_EXP + ']{2,24}))' +\n  ')' +\n  // port number\n  '(?::\\\\d{2,5})?' +\n  // resource path\n  '(?:/(?:\\\\S{0,255}[^\\\\s.;,(\\\\[\\\\]{}<>\"\\'])?)?';\nexport const URL_PROTOCOL_REG_EXP = new RegExp('^' + URL_PROTOCOL_REG_EXP_PART.slice(0, -1), 'i');\nexport const URL_ANY_PROTOCOL_REG_EXP = /^((?:[^\\/]+?):\\/\\/|mailto:)/;\nexport const USERNAME_REG_EXP = '[a-zA-Z\\\\d_]{5,32}';\nexport const BOT_COMMAND_REG_EXP = '\\\\/([a-zA-Z\\\\d_]{1,32})(?:@(' + USERNAME_REG_EXP + '))?(\\\\b|$)';\nexport const FULL_REG_EXP = new RegExp('(^| )(@)(' + USERNAME_REG_EXP + ')|(' + URL_REG_EXP + ')|(\\\\n)|(' + emojiRegExp + ')|(^|[\\\\s\\\\(\\\\]])(#[' + ALPHA_NUMERIC_REG_EXP + ']{2,64})|(^|\\\\s)' + BOT_COMMAND_REG_EXP, 'i');\nexport const EMAIL_REG_EXP = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n// const markdownTestRegExp = /[`_*@~]/;\nexport const MARKDOWN_REG_EXP = /(^|\\s|\\n)(````?)([\\s\\S]+?)(````?)([\\s\\n\\.,:?!;]|$)|(^|\\s|\\x01)(`|~~|\\*\\*|__|_-_|\\|\\|)([^\\n]+?)\\7([\\x01\\s\\.,:?!;]|$)|@(\\d+)\\s*\\((.+?)\\)|(\\[(.+?)\\]\\((.+?)\\))/m;\nexport const SITE_HASHTAGS: {[siteName: string]: string} = {\n  'Telegram': 'tg://search_hashtag?hashtag={1}',\n  'Twitter': 'https://twitter.com/hashtag/{1}',\n  'Instagram': 'https://instagram.com/explore/tags/{1}/',\n  'Google Plus': 'https://plus.google.com/explore/{1}'\n};\n\n// export const SITE_MENTIONS: {[siteName in 'Telegram' | 'Twitter' | 'Instagram' | 'GitHub']: string} = {\n//   Telegram: '#{1}',\n//   Twitter: 'https://twitter.com/{1}',\n//   Instagram: 'https://instagram.com/{1}/',\n//   GitHub: 'https://github.com/{1}'\n// };\n\nexport const MARKDOWN_ENTITIES: {[markdown: string]: MessageEntity['_']} = {\n  '`': 'messageEntityCode',\n  '``': 'messageEntityPre',\n  '**': 'messageEntityBold',\n  '__': 'messageEntityItalic',\n  '~~': 'messageEntityStrike',\n  '_-_': 'messageEntityUnderline',\n  '||': 'messageEntitySpoiler'\n};\n\nexport const PASS_CONFLICTING_ENTITIES: Set<MessageEntity['_']> = new Set([\n  'messageEntityEmoji',\n  'messageEntityLinebreak',\n  'messageEntityCaret'\n]);\nfor(const i in MARKDOWN_ENTITIES) {\n  PASS_CONFLICTING_ENTITIES.add(MARKDOWN_ENTITIES[i]);\n}\n\nexport const PHONE_NUMBER_REG_EXP = /^\\+\\d+$/;\n\n/* export function parseEmojis(text: string) {\n  return text.replace(/:([a-z0-9\\-\\+\\*_]+?):/gi, function (all, shortcut) {\n    var emojiCode = EmojiHelper.shortcuts[shortcut]\n    if (emojiCode !== undefined) {\n      return EmojiHelper.emojis[emojiCode][0]\n    }\n    return all\n  })\n} */\n\n\n/* export function replaceUrlEncodings(urlWithEncoded: string) {\n  return urlWithEncoded.replace(/(%[A-Z\\d]{2})+/g, (str) => {\n    try {\n      return decodeURIComponent(str);\n    } catch (e) {\n      return str;\n    }\n  });\n} */\n","// https://github.com/twitter/twemoji-parser/blob/master/src/lib/regex.js\n\nexport function encodeEmoji(emojiText: string) {\n  const codepoints = toCodePoints(removeVS16s(emojiText)).join('-');\n  return codepoints;\n}\n\nconst vs16RegExp = /\\uFE0F/g;\n// avoid using a string literal like '\\u200D' here because minifiers expand it inline\nconst zeroWidthJoiner = String.fromCharCode(0x200d);\n\nconst removeVS16s = (rawEmoji: string) => (rawEmoji.indexOf(zeroWidthJoiner) < 0 ? rawEmoji.replace(vs16RegExp, '') : rawEmoji);\n\nexport function toCodePoints(unicodeSurrogates: string): Array<string> {\n  const points = [];\n  let char = 0;\n  let previous = 0;\n  let i = 0;\n  while(i < unicodeSurrogates.length) {\n    char = unicodeSurrogates.charCodeAt(i++);\n    if(previous) {\n      points.push((0x10000 + ((previous - 0xd800) << 10) + (char - 0xdc00)).toString(16));\n      previous = 0;\n    } else if(char > 0xd800 && char <= 0xdbff) {\n      previous = char;\n    } else {\n      points.push(char.toString(16));\n    }\n  }\n\n  if(points.length && points[0].length === 2) {\n    points[0] = '00' + points[0];\n  }\n\n  return points;\n}\n\nexport function getEmojiToneIndex(input: string) {\n  const match = input.match(/[\\uDFFB-\\uDFFF]/);\n  return match ? 5 - (57343 - match[0].charCodeAt(0)) : 0;\n}\n\nconst VIRTUAL_COUNTRIES_EMOJIS: Map<string, string> = new Map([\n  ['FT', '🏴‍☠']\n]);\n\nexport function getCountryEmoji(iso2: string) {\n  return VIRTUAL_COUNTRIES_EMOJIS.get(iso2) ??\n    String.fromCharCode(55356, 56741 + iso2.charCodeAt(0), 55356, 56741 + iso2.charCodeAt(1));\n}\n\nexport function emojiFromCodePoints(codePoints: string) {\n  return codePoints.split('-').reduce((prev, curr) => prev + String.fromCodePoint(parseInt(curr, 16)), '');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [699,211,147,85,110], () => (__webpack_require__(9092)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames not based on template\n\tif (chunkId === 85) return \"85.308e3be95e49c2e36d0d.bundle.js\";\n\tif (chunkId === 110) return \"110.a07846d66a5f7ee34cf3.bundle.js\";\n\t// return url for filenames based on template\n\treturn \"\" + ({\"211\":\"npm.big-integer\",\"699\":\"npm.pako\"}[chunkId] || chunkId) + \".\" + {\"8\":\"f400704066ccf1976603\",\"104\":\"05f84a44e81991285c8a\",\"147\":\"a46f295fff53645b66f3\",\"211\":\"363d763daad0ee4e2741\",\"301\":\"8586974f41f40a1f65a9\",\"642\":\"5a168694a37ee84cbaed\",\"699\":\"89deb457201f16c93925\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","(() => {\n  if (typeof __webpack_require__ !== 'undefined') {\n    var oldGetScript = __webpack_require__.u;\n    var oldLoadScript = __webpack_require__.e;\n    var queryMap = {};\n    var countMap = {};\n    var getRetryDelay = function () {\n      return 3000;\n    };\n    __webpack_require__.u = function (chunkId) {\n      var result = oldGetScript(chunkId);\n      return (\n        result +\n        (queryMap.hasOwnProperty(chunkId) ? '?' + queryMap[chunkId] : '')\n      );\n    };\n    __webpack_require__.e = function (chunkId) {\n      var result = oldLoadScript(chunkId);\n      return result.catch(function (error) {\n        var retries = countMap.hasOwnProperty(chunkId)\n          ? countMap[chunkId]\n          : 999999;\n        if (retries < 1) {\n          var realSrc = oldGetScript(chunkId);\n          error.message =\n            'Loading chunk ' +\n            chunkId +\n            ' failed after 999999 retries.\\n(' +\n            realSrc +\n            ')';\n          error.request = realSrc;\n          throw error;\n        }\n        return new Promise(function (resolve) {\n          var retryAttempt = 999999 - retries + 1;\n          setTimeout(function () {\n            var retryAttemptString = '&retry-attempt=' + retryAttempt;\n            var cacheBust = (function () {\n              return Date.now();\n            })();\n            +retryAttemptString;\n            queryMap[chunkId] = cacheBust;\n            countMap[chunkId] = retries - 1;\n            resolve(__webpack_require__.e(chunkId));\n          }, getRetryDelay(retryAttempt));\n        });\n      });\n    };\n  }\n})();\n","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t678: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = this[\"webpackChunktweb\"] = this[\"webpackChunktweb\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["deferred","next","DEBUG","MOUNT_CLASS_TO","window","self","EmojiVersions","Emoji","version","Object","assign","USER_AGENT","navigator","userAgent","IS_SAFARI","search","toLowerCase","indexOf","test","vendor","platform","maxTouchPoints","match","IS_FIREFOX","undefined","badCharsRe","trimRe","C2L","cleanSearchText","text","latinize","processSearchText","clearBadChars","ignoreCase","options","hasTag","includeTag","charAt","originalText","replace","clearBadCharsAndTrim","ch","latinizeCh","latinizeString","fixCyrillic","FILENAME_JOINER","getFileNameByLocation","location","ext","length","str","_","id","thumb_size","filter","Boolean","join","photo_id","pFlags","big","stickerset","short_name","emoticon","thumb_version","volume_id","local_id","url","console","error","downloadId","getFileURL","type","encodeURIComponent","JSON","stringify","platforms","Set","ignore","getRestrictionReason","reasons","find","reason","has","isRestricted","ignoreRestrictionReasons","clear","forEach","add","getPeerId","peerId","isPeerId","userId","user_id","toPeerId","chatId","channel_id","chat_id","isUser","peerParams","substr","split","IDB","constructor","db","this","name","storageIsAvailable","log","openDatabase","INSTANCES","push","isAvailable","createNew","openDbPromise","createIndexes","os","store","indexNames","Array","from","indexName","deleteIndex","indexes","index","contains","createIndex","keyPath","objectParameters","request","indexedDB","open","Promise","reject","message","finished","setTimeout","onerror","resolve","onsuccess","event","result","calledNew","onclose","e","onabort","transaction","target","close","onversionchange","onupgradeneeded","warn","oldVersion","newVersion","stores","objectStoreNames","objectStore","createObjectStore","static","instance","preserve","storage","IDBStorage","storeName","idb","create","delete","entryName","isArray","concat","getObjectStore","promises","map","save","value","idx","put","get","mode","callback","perf","performance","now","then","onError","clearTimeout","timeout","onComplete","results","requests","r","waitForTransactionComplete","oncomplete","callbackResult","left","onRequestFinished","i","getAll","environment","getEnvironment","setEnvironment","env","RootScope","super","myId","connectionStatus","premium","addEventListener","isNew","isPremium","dispatchEventSingle","status","dispatchEvent","args","invokeVoid","settings","getConnectionStatus","getPremium","state","stateStorage","getState","setByKey","key","object","splitted","getDeepProperty","slice","pop","setDeepProperty","first","pushToState","direct","onlyLocal","setKeyValueToStorage","set","HTTP","dcId","logSuffix","pending","debug","logTypes","Log","logger","connected","_send","body","fetch","method","response","arrayBuffer","buffer","TextDecoder","decode","Uint8Array","setConnected","err","destroyed","destroy","send","networker","promise","releasePending","releasing","splice","pause","Socket","handleOpen","handleError","handleClose","removeListeners","handleMessage","data","byteLength","ws","connect","removeEventListener","WebSocket","binaryType","randomize","arr","crypto","Error","getRandomValues","Obfuscation","_process","operation","cryptoMessagePort","transfer","init","codec","idPromise","release","initPayload","val","val2","reversedPayload","reverse","encKey","encIv","decKey","decIv","process","obfuscateTag","encrypted","encode","payload","tag","encodePacket","len","header","readPacket","bytesToHex","bytes","toString","TcpObfuscated","Connection","retryTimeout","abridged","obfuscation","autoReconnect","onOpen","connection","setConnectionStatus","cleanupSent","resend","onMessage","parseResponse","processMessage","messageId","sessionId","catch","shift","onClose","needTimeout","retryAt","time","Date","diff","lastCloseTime","isNaN","reconnectTimeout","ctx","reconnect","bodySent","forceReconnect","setAutoReconnect","once","enable","changeUrl","encodeBody","toEncode","encoded","releasingPending","sent","TEST_SUFFIX","getTelegramConnectionSuffix","connectionType","constructTelegramWebSocketUrl","suffix","path","DcConfigurator","sslSubdomains","dcOptions","host","port","chosenServers","transportSocket","chosenServer","oooohLetMeLive","transportHTTP","dcOption","chooseServer","transportType","reuse","hasOwnProperty","client","download","upload","servers","transports","transport","obj","indexOfAndSplice","MTTransportController","opened","Map","waitForWebSocket","pingTransports","dcConfigurator","https","websocket","httpPromise","websocketPromise","socket","isFulfilled","isRejected","isHttpAvailable","isWebSocketAvailable","all","pinging","setTransportValue","setTransportOpened","setTransportClosed","AppManager","setManagers","managers","loadStorages","storages","recordPromise","storagesKeys","keys","storagesPromises","storagesResults","resetStorages","size","loadStoragesInner","AppStoragesManager","names","createStorages","loadStorage","PasswordManager","apiManager","invokeApi","updateSettings","currentHashPromise","newHashPromise","params","password","new_settings","hint","email","currentPassword","cryptoWorker","invokeCrypto","newAlgo","new_algo","salt1","newPassword","hashes","new_password_hash","getInputCheckPassword","check","inputCheckPassword","auth","setUser","user","confirmPasswordEmail","code","resendPasswordEmail","cancelPasswordEmail","ReferenceDatabase","contexts","links","saveContext","reference","context","getContexts","_context","deepEqual","getReferenceByLink","getContext","values","deleteContext","refreshReference","c","appMessagesManager","reloadMessages","refreshEmojiesSoundsPromise","appStickersManager","getAnimatedEmojiSounds","appProfileManager","getProfile","appEmojiManager","getCustomEmojiDocuments","docId","appAttachMenuBotsManager","getAttachMenuBot","botId","appThemesManager","getWallPaperById","wallPaperId","hex","newHex","newContext","makeError","safeReplaceObject","wasObject","newObject","getPeerIdsFromMessage","peerIds","fromId","viaBotId","fwdFromId","media","contactUserId","recentVoters","recent_voters","recentReactions","recent_reactions","reaction","peer_id","action","userIds","users","inviter_id","chatIds","recentRepliers","recent_repliers","reply","setDialogIndex","dialog","indexKey","GLOBAL_FOLDER_ID","DialogsStorage","allDialogsLoaded","pinnedOrders","folderId","saveAllDialogsLoaded","resetPinnedOrder","savePinnedOrders","forumTopics","folders","dialogsOffsetDate","dialogsNum","dialogsIndex","cachedResults","query","count","dialogs","onUpdateFolderPeers","update","folder_peers","folderPeer","folder_id","peer","appPeersManager","dropDialog","pinned","handleDialogUnpinning","generateIndexForDialog","pushDialog","scheduleHandleNewDialogs","onUpdateDialogPinned","getDialogOnly","handleDialogTogglePinned","onUpdateChannelPinnedTopic","topicId","generateMessageId","topic_id","topic","getForumTopic","getFilterIdForForum","onUpdatePinnedDialogs","order","handleDialogsPinned","dialogsResult","applyDialogs","d","onUpdateChannelPinnedTopics","filterId","limit","getLimit","channel","appChatsManager","getChannelInput","toChatId","offset_date","offset_id","offset_topic","processTopics","topics","after","rootScope","appUsersManager","getSelf","peerText","getPeerSearchText","indexObject","onFilterUpdate","getCachedDialogs","processDialogForFilter","processDialogForFilters","getDialogIndexKeyByFilterId","processChangedUnreadOrUnmuted","chat","getChat","dropDialogOnDeletion","enabled","flushForumTopicsCache","apiUpdatesManager","addMultipleEventsListeners","updateFolderPeers","updateDialogPinned","updateChannelPinnedTopic","updatePinnedDialogs","updateChannelPinnedTopics","appStateManager","appStoragesManager","getCache","_order","getPinnedOrders","setDialogsFromState","bind","appDraftsManager","addMissedDialogs","top_message","getServerMessageId","topMessage","saveMessages","saveDialog","ignoreOffsetDate","getMessageByPeer","reloadConversation","isDialogsLoaded","setDialogsLoaded","loaded","isForum","isFilterIdForForum","defineNotNumerableProperties","every","orders","isDialogPinned","filtersStorage","getFilter","isPinned","pinnedPeerIds","getOffsetDate","offsetDate","Math","min","sort","a","b","generateFolder","folder","unreadMessagesCount","unreadPeerIds","unreadUnmutedPeerIds","getFolder","forumTopic","getDialogKey","isTopic","getFolderDialogs","skipMigrated","hidden","migratedTo","getNextDialog","currentPeerId","findIndex","getDialogIndexKey","localId","isDialogUnmuted","appNotificationsManager","isPeerLocalMuted","respectType","threadId","getFolderUnreadCount","unreadUnmutedCount","unreadCount","arrays","setDialogIndexInFilter","isRealFolder","testDialogForFilter","pinnedIds","pinnedKey","pinnedIndex","generateDialogIndex","generateDialogPinnedDateByIndex","getDialogIndex","getDialog","verify","skipped","getDialogOrTopic","isObject","date","tsNow","timeManager","getServerTimeOffset","noIndex","filters","getFilters","cmp","wasIndex","wasDialog","wasDialogIndex","newDialogIndex","prepareFolderUnreadCountModifyingByDialog","insertInDescendSortedArray","prepareDialogUnreadCountModifying","toggle","callbacks","wasUnreadCount","getDialogUnreadCount","wasUnmuted","newUnreadCount","newUnmuted","addMessagesCount","modifyFolderUnreadCount","toggleDialog","toggleUnmuted","forumUnreadCount","getForumUnreadCount","hasUnmuted","some","max","dispatchUnreadTimeout","_folder","justReturn","noPinnedOrderUpdate","topDate","generateDialogPinnedDate","channelId","isChannel","draft","dialogKey","unshift","setDialogToState","pts","historyStorage","getHistoryStorage","messagesStorage","getHistoryMessagesStorage","history","incomingMessage","mid","getMessageFromStorage","is_outgoing","peersStorage","requestPeersForKey","isAnyChat","newPts","getChannelState","requestPeer","saveGlobalOffset","getForumTopicsCache","getDialogOffsetDate","savedGlobalOffsetDate","savedOffsetDate","dropDialogFromFolders","foundDialog","wasPinned","keepLocal","clearDialogFromState","releasePeer","dropDialogWithEvent","dropped","items","forEachReverse","assumeType","saveApiUsers","saveApiChats","chats","messages","updatedDialogs","topMid","topPendingMid","pendingTopMsgs","topPendingMessage","maxId","cache","getUpdateCache","getUpdateAfterReloadKey","updates","newUpdatesAfterReloadToHandle","saveUpdate","canSaveDialogByPeerId","isDialog","wasDialogBefore","wasTopMessage","generateTempMessageId","from_id","getOutputPeer","deleted","out","isOutgoing","migrated_to","deactivated","migratedToPeer","migratedFromTo","migratedToFrom","read_inbox_max_id","read_outbox_max_id","saveDraft","isOut","unread","unread_count","isEnd","insertSlice","setEnd","mergeReplyKeyboard","readMaxId","readOutboxMaxId","savePeerSettings","notify_settings","addChannelState","releaseUnreadCount","dialogsStorage","processTopicUpdate","oldTopic","isIconChanged","icon_emoji_id","isTitleChanged","title","isChanged","getDialogs","offsetIndex","fillContactsResult","fillContacts","cached","reloadMissingDialogsPromise","reloadMissingPeerIds","realFolderId","curDialogStorage","d1","d2","offset","loadedAll","isEnoughDialogs","isTopEnd","getTopMessages","deletedTopics","getTopicPromises","getForumTopicById","getTopicsPromise","ids","fullfillLeft","messagesForumTopics","getForumTopicOrReload","callbackify","processTopicsPromise","f","reduce","acc","v","newPinned","convertment","PREPENDED_FILTERS","LOCAL_FILTER","flags","exclude_peers","include_peers","pinned_peers","excludePeerIds","includePeerIds","FiltersStorage","filtersArr","reloadedPeerIds","localFilters","generateLocalFilter","clearFilters","onUpdateDialogFilter","saveDialogFilter","findAndSplice","onUpdateDialogFilters","oldFilters","copy","getDialogFilters","_filterId","onUpdateDialogFilterOrder","includes","setLocalId","updateDialogFilter","updateDialogFilters","updateDialogFilterOrder","prependFilters","allChatsFilter","archiveFilter","allChatsFilterIndex","exclude_archived","exclude_unarchived","exclude_read","isDialogUnread","exclude_muted","unread_mentions_count","broadcasts","isBroadcast","groups","isAnyGroup","toUserId","isBot","bots","non_contacts","isContact","contacts","testDialogForFilterId","toggleDialogPin","getConfig","pinned_infolder_count_max","getInputPeerById","createDialogFilter","prepend","remove","getOutputDialogFilter","bool","updateDialogFiltersOrder","filterIncludedPinnedPeers","peers","reloadDialogs","inputPeer","isAlreadyReloaded","reloadPromises","missingPeerIds","overwrite","invokeApiSingle","getSuggestedDialogsFilters","silent","to","oldFilter","_filter","isFilterIdAvailable","applyMixins","derivedCtor","constructors","baseCtor","getOwnPropertyNames","prototype","getOwnPropertyDescriptor","defineProperty","ApiUpdatesManager","updatesState","pendingPtsUpdates","pendingSeqUpdates","syncPending","syncLoading","channelStates","attached","subscriptions","processUpdateMessage","updateMessage","processOpts","seq","seqStart","seq_start","forceGetDifference","processUpdate","toId","fwd_from","reply_to","entities","pts_count","override","_constructor","setProxy","Proxy","saveUpdatesState","us","popPendingSeqUpdate","nextSeq","pendingUpdatesData","seqAwaiting","ptsAwaiting","clearStatePendingSync","popPendingPtsUpdate","curState","curPts","goodPts","goodIndex","getDifference","processLocalUpdate","wasSyncing","pts_total_limit","qts","differenceResult","other_updates","new_messages","apiMessage","nextState","intermediate_state","onDifferenceTooLong","justAName","getChannelDifference","channelState","bindPrefix","lastDifferenceTime","final","lastPtsUpdateTime","fwdHeader","hasUser","post","hasChat","popPts","popSeq","subscribeToChannelUpdates","subscription","cb","interval","unsubscribeFromChannelUpdates","force","clearInterval","attach","langCode","noErrorBox","stateResult","setUpdatesProcessor","strs","en","ru","getChangelog","lang","res","ok","langStr","parseMarkdown","inbox_date","languages","filterUnique","language","AppAvatarsManager","savedAvatarURLs","removeFromAvatarsCache","isAvatarCached","saved","loadAvatar","photo","peerPhotoFileLocation","downloadOptions","dc_id","limitPart","apiFileManager","blob","URL","createObjectURL","AppCallsManager","calls","IS_CALL_SUPPORTED","updatePhoneCall","saveCall","phone_call","updatePhoneCallSignalingData","callId","phone_call_id","computeKey","g_b","p","call","isDiscarded","oldCall","getCall","getCallInput","access_hash","savePhonePhoneCall","phonePhoneCall","generateDh","random_length","dhConfig","requestCall","protocol","g_a_hash","video","getUserInput","random_id","discardCall","duration","connection_id","AppChatsManager","isPeerNeeded","modifyUsernamesCache","onChatUpdated","updateChannelParticipant","clearCache","updateChatDefaultBannedRights","default_banned_rights","getFromCache","apiChats","saveApiChat","oldChat","participants_count","changedUsername","setUsernameToCache","oldPhotoId","newPhotoId","toggledForum","forum","changedPhoto","changedTitle","changedAnyBadge","verified","scam","fake","hasRights","rights","isThread","editChatDefaultBannedRights","banned_rights","until_date","isMegagroup","megagroup","isInChat","good","getInputPeer","getChannelInputPeer","getChatInputPeer","allowMin","getChatString","createChannel","inviteToChannel","input","usersInputs","u","createChat","leaveChannel","joinChannel","addChatUser","fwdLimit","fwd_limit","deleteChatUser","leaveChat","leave","deleteChannel","deleteChat","migrateChat","updateUsername","username","doNotRefresh","refreshChatAfterRequest","editPhoto","inputFile","inputChatPhoto","file","editTitle","editAbout","about","editBanned","participant","getParticipantPeerId","timestamp","actor_id","prev_participant","new_participant","kicked_by","clearChannelParticipantBannedRights","kickFromChannel","view_messages","kickFromChat","resolveChannel","messagesChats","togglePreHistoryHidden","toggleSignatures","toggleNoForwards","setChatAvailableReactions","reactions","chatFull","getCachedFullChat","available_reactions","getSendAs","invokeApiSingleProcess","processResult","sendAsPeers","importChatInvite","hash","checkUsername","getSponsoredMessage","invokeApiCacheable","cacheSeconds","sponsoredMessages","sponsoredMessage","viewSponsoredMessage","randomId","checkChatInvite","chatInvite","toggleUsername","active","reorderUsernames","deactivateAllUsernames","makeChannelPrivate","getChannels","toggleForum","editForumTopic","iconEmojiId","closed","createForumTopic","iconColor","channelFull","getChannelFull","sendAsInputPeer","default_send_as","icon_color","send_as","updatePinnedForumTopic","wrapUrl","unsafe","matchUrlProtocol","tgMeMatch","telescoPeMatch","tgMatch","onclick","prefix","pathname","fullPath","I18n","pluralRules","cacheLangPackPromise","setLangCode","lastRequestedLangCode","lastRequestedNormalizedLangCode","updateAmPm","timeFormat","dateTimeFormat","getDateTimeFormat","hour","minute","hour12","setHours","amText","format","amPmCache","am","pmText","pm","loadLocalLangPack","defaultCode","langSign","countries","strings","formatLocalStrings","default","saveLangPack","from_version","lang_code","local","loadLangPack","web","requestedServerLanguage","lang_pack","polyfillPromise","pushTo","langPack","appVersion","applyLangPack","currentLangCode","Intl","PluralRules","string","countriesList","country","langPackKey","default_name","lastAppliedLangCode","cachedDateTimeFormats","document","querySelectorAll","element","weakMap","superFormatter","indexHolder","lastIndex","p1","p2","p3","p4","createElement","append","lastIndexOf","wrappedUrl","href","setAttribute","DocumentFragment","firstChild","textContent","arg","pushNextArgument","plain","select","item","Node","isRTL","setRTL","rtl","getCacheLangPack","finally","setTimeFormat","haveToUpdate","IntlDateElement","getStrings","getLangPack","langPack1","langPack2","localLangPack1","localLangPack2","l","_Intl","WeakMap","IntlElementBase","classList","property","IntlElement","safeAssign","formatted","dataset","compareAndUpdate","json","DateTimeFormat","hours","getHours","getMinutes","capitalizeFirstLetter","i18n","i18n_","_i18n","months","days","getWeekNumber","UTC","getFullYear","getMonth","getDate","dayNum","getUTCDay","setUTCDate","getUTCDate","yearStart","getUTCFullYear","ceil","getTime","today","year","day","month","weekday","minYear","yearPattern","RegExp","monthYearOrDayPattern","yearOrDayAndMonthPattern","shortDate","longDate","numberOfDaysEachMonth","createForMonthYear","dates","selectedYear","currentYear","setFullYear","minDate","setMonth","maxDate","formatterMonthYear","createForDayMonth","validDateForMonth","formatterDayMonth","formatterYearMax","formatWeekLong","getDay","q","safeReplaceArrayInObject","trim","dayOfWeek","setDate","getDayOfWeek","distance","setTime","matches","exec","g1","g2","k","g3","parseInt","k1","EXTENSION_MIME_TYPE_MAP","pdf","tgv","tgs","wav","mp3","ogg","jpeg","jpg","png","gif","webp","mp4","webm","mov","svg","MIME_TYPE_EXTENSION_MAP","uploadWallPaperTempId","AppDocsManager","onServiceWorkerFail","docs","doc","supportsStreaming","thumbsStorage","deleteCacheContext","stickerCachedThumbs","uploadingWallPapers","online","saveDoc","oldDoc","file_reference","referenceDatabase","attributes","attribute","file_name","wrapPlainText","voice","mime_type","w","h","round_message","alt","stickerEmojiRaw","stickerSetInput","thumbs","IS_WEBP_SUPPORTED","sticker","IS_WEBM_SUPPORTED","animated","mappedMimeType","joiner","monthAsNumber","noSeconds","getSeconds","leadingZero","noTime","getFullDate","isServiceWorkerOnline","getCacheContext","setCacheContextURL","thumb","getDocumentDownloadOptions","getDocumentURL","getDoc","downloadDoc","queueId","onlyCache","downloadMedia","getLottieCachedThumb","toneIndex","saveLottiePreview","width","height","saveWebPConvertedStrippedThumb","stickerThumbConverted","prepareWallPaperUpload","cacheContext","wallpaper","slug","uploadWallPaper","fileName","wallPaper","downloaded","getGifs","invokeApiHashable","gifs","requestDocPart","requestFilePart","getDocumentInputFileLocation","AppDraftsManager","drafts","updateDraftMessage","notify","getKey","getDraft","getAllDrafts","getAllDraftPromise","apiDraft","processApiDraft","isEmptyDraft","reply_to_msg_id","syncDraft","localDraft","saveOnServer","serverDraft","draftsAreEqual","draftObj","getInputEntities","no_webpage","top_msg_id","saveLocalDraft","clearAllDrafts","combined","clearDraft","emptyDraft","setDraft","EMOJI_LANG_PACK","keywords","AppEmojiManager","keywordLangPacks","indexedLangPacks","getKeywordsPromises","recent","getRecentEmojisPromises","getCustomEmojiDocumentPromises","getEmojiKeywords","storageKey","pack","validateInitObject","keywordsDifference","packKeywords","keyword","emoticons","getBothEmojiKeywords","networkerFactory","native","getRecentEmojis","indexEmojis","searchEmojis","emojis","POPULAR_EMOJI","recentEmoji","recentCustomEmoji","pushRecentEmoji","emoji","fixEmoji","docIds","document_id","documents","appDocsManager","getCachedCustomEmojiDocuments","setDebouncedGetCustomEmojiDocuments","getCustomEmojiDocumentsPromise","allIds","getCustomEmojiDocument","getCustomEmojis","getEmojiStickers","AppGroupCallsManager","groupCalls","participants","nextOffsets","updateGroupCall","saveGroupCall","updateGroupCallParticipants","groupCallId","saveApiParticipants","groupCall","getCachedParticipants","prepareToSavingNextOffset","nextOffsetsMap","nextOffset","setNextOffset","newNextOffset","saveApiParticipant","skipCounterUpdating","oldParticipant","hasLeft","muted","can_self_unmute","getGroupCall","modified","just_joined","apiParticipants","editParticipant","getGroupCallInput","getInputPeerSelf","volume","raise_hand","raiseHand","video_paused","videoPaused","video_stopped","videoStopped","presentation_paused","presentationPaused","getGroupCallFull","participants_next_offset","shouldUpdate","createGroupCall","scheduleDate","schedule_date","getGroupCallParticipants","sources","groupCallParticipants","next_offset","hangUp","discard","groupCallInput","source","join_as","joinGroupCall","isMuted","joinVideo","leaveGroupCallPresentation","getPhotoInput","getPhotoMediaInput","ttl_seconds","getMediaInput","AppInlineBotsManager","inlineResults","setHash","getGeoInput","geo","lat","long","accuracy_radius","getInlineResults","bot","geo_point","stopTime","botResults","queryId","query_id","appPhotosManager","savePhoto","generateQId","pushPopularBot","getTopPeers","topPeers","botPeerId","topPeer","rating","switchToPM","fromPeerId","startParam","startBot","checkSwitchReturn","getUser","bot_inline_placeholder","peerData","switchInlineQuery","getPeerUsername","callbackButtonClick","button","msg_id","sendInlineResult","queryAndResultIds","inlineResult","queryID","resultID","resultId","send_message","reply_markup","replyMarkup","sendText","inputMedia","messageMedia","caption","sendMessage","geoPoint","address","provider","venue_id","venue_type","phone_number","first_name","last_name","vcard","description","currency","total_amount","shipping_address_requested","start_param","sendOther","AppMessagesIdsManager","tempNum","num","splitStringByLength","maxLength","lastSliceStartIndex","arrayIndex","cut","end","part","_arrayIndex","partLength","appTabsManager","tabs","start","getTabs","tab","addTab","deleteTab","getDocumentInput","setBooleanFlag","processAfter","UPDATE_STICKERSET_ORDER","AppMessagesManager","pendingByRandomId","pendingByMessageId","pendingAfterMsgs","tempFinalizeCallbacks","sendSmthLazyLoadQueue","needSingleMessages","extendedMedia","maxSeenId","newDialogsToHandle","notificationsToHandle","reloadConversationsPeers","groupedTempId","typings","unreadMentions","goToNextMentionPromises","batchUpdates","middleware","clean","uploadFilePromises","messagesStorageByPeerId","groupedMessagesStorage","scheduledMessagesStorage","historiesStorage","threadsStorage","searchesStorage","pinnedMessages","threadsServiceMessagesIdsStorage","threadsToReplies","handleNewDialogs","newMaxSeenId","updateMap","processDialog","isDialogDefined","incrementMaxSeenId","handleNotifications","notificationsHandlePromise","notifyPeerToHandle","getNotifyPeerSettings","peerTypeNotifySettings","mentioned","notifyAboutMessage","fwdCount","onUpdateMessageId","onUpdateNewMessage","getMessagePeer","isLocalThreadUpdate","createMessageStorage","threadKey","getThreadKey","handleNewUpdateAfterReload","threadStorage","reply_to_peer_id","reply_to_mid","receiptMessage","checkPendingMessage","updateMessageRepliesIfNeeded","ignoreExisting","findSlice","firstSlice","forceUserOnline","handleNewMessage","inboxUnread","modifyCachedMentions","setDialogTopMessage","notifyPeer","onUpdateMessageReactions","recentReaction","previousReactions","previousRecentReactions","show_previews","peerReaction","pushBatchUpdate","batchUpdateReactions","setDialogToStateIfMessageIsTop","onUpdateDialogUnreadMark","unread_mark","onUpdateEditMessage","oldMessage","newMessage","handleEditedMessage","isTopMessage","clear_history","dispatchEditEvent","newReactions","grouped_id","onUpdateReadHistory","max_id","read_max_id","getObjectKeysAndSort","stillUnreadCount","still_unread_count","newUnreadMentionsCount","foundAffected","repliesKey","getReadMaxIdIfUnread","messageThreadId","getMessageThreadId","setCount","threadKeyPart","onUpdateReadMessagesContents","topMsgId","mids","findPeerIdByMids","media_unread","fixDialogUnreadMentionsIfNoMessage","onUpdateChannelAvailableMessages","availableMinId","available_min_id","onUpdateDeleteMessages","threadKeys","historyUpdated","handleDeletedMessages","threadsStorages","msgs","affected","onUpdateChannel","needDialog","getPeerActiveUsernames","onUpdateChannelReload","flushStoragesByPeerId","onUpdateChannelMessageViews","views","batchUpdateViews","onUpdateServiceNotification","popup","phone","onUpdatePinnedMessages","missingMessages","werePinned","getPinnedMessagesKey","hiddenPinnedMessages","onUpdateNotifySettings","onUpdateNewScheduledMessage","isScheduled","onUpdateDeleteScheduledMessages","onUpdateMessageExtendedMedia","extended_media","batch","toDispatch","getMessagesFromMap","previousResults","changedResults","reactionCount","previousReactionCount","_reactionCount","reactionsEqual","chosen_order","updateMessageID","updateNewDiscussionMessage","updateNewMessage","updateNewChannelMessage","updateDialogUnreadMark","updateEditMessage","updateEditChannelMessage","updateMessageReactions","updateReadChannelDiscussionInbox","updateReadChannelDiscussionOutbox","updateReadHistoryInbox","updateReadHistoryOutbox","updateReadChannelInbox","updateReadChannelOutbox","updateChannelReadMessagesContents","updateReadMessagesContents","updateChannelAvailableMessages","updateDeleteMessages","updateDeleteChannelMessages","updateChannel","updateChannelReload","updateChannelMessageViews","updateServiceNotification","updatePinnedMessages","updatePinnedChannelMessages","updateNotifySettings","updateNewScheduledMessage","updateDeleteScheduledMessages","updateMessageExtendedMedia","filterFunc","getScheduledMessagesStorage","webpage","appWebPagesManager","getCachedWebPage","drop","poll","appPollsManager","pollToMessages","startsWith","batchUpdatesDebounced","debounce","details","maxSeenMsgId","sendEntites","entity","invokeAfterMessageIsSent","tempId","callbackName","finalize","editMessage","is_scheduled","newMedia","noWebPage","handled","replyToMsgId","MAX_LENGTH","message_length_max","webPage","getPeerMigratedTo","generateOutgoingMessage","toggleError","onMessagesSendError","sentRequestOptions","afterMessageId","sendAs","sendAsPeerId","apiPromise","invokeApiAfter","clear_draft","update_stickersets_order","wrapMessageEntities","beforeMessageSending","sequential","noop","sendFile","attachType","apiFileName","fileType","File","isDocument","Blob","isPhoto","IMAGE_MIME_TYPES_SUPPORTED","strippedPhotoSize","strippedBytes","actionName","isVoiceMessage","waveform","isMedia","photoSize","sizes","objectURL","VIDEO_MIME_TYPES_SUPPORTED","videoAttribute","isRoundMessage","supports_streaming","noSound","thumbCacheContext","sentDeferred","spoiler","uploadingFileName","getFileNameForUpload","uploaded","uploadPromise","load","thumbUploadPromise","cancelPendingMessage","setTyping","addNotifyListener","progress","percents","floor","done","total","notifyAll","force_file","isGroupedItem","background","ret","sendAlbum","sendFileDetails","groupId","o","invoke","multiMedia","multi_media","originalInputMedia","inputSingleMedia","inputs","sendContact","contactPeerId","getContactMediaInput","pollId","savePoll","total_voters","getPoll","getPhoto","postAuthor","getPeer","signatures","generateFromId","post_author","generateFlags","generateReplyHeader","via_bot_id","replies","generateReplies","replyToTopId","originalMessage","forum_topic","reply_to_top_id","linked_chat_id","comments","replies_pts","isAnonymousSending","generateForwardHeader","isUserHidden","from_name","userFull","getCachedFullUser","private_forward_name","channel_post","saved_from_msg_id","saved_from_peer","generateFakeAvatarMessage","Number","MAX_SAFE_INTEGER","getUploadPromise","uploadFileName","admin_rights","anonymous","pendingData","fillConversations","chatHistoryStorage","maxSeenIdIncremented","hasPrepend","noIdsDialogs","setFolderId","setMessageUnreadByDialog","folderDialogs","dialogsLength","slicedDialogs","offset_peer","offsetPeerId","forwardMessages","config","overflowMids","forwarded_count_max","dropCaptions","dropAuthor","newMids","newMessages","replyToMid","replyToMessageIdx","newReplyToMid","getStickerEffectThumb","nopremium","group","from_peer","to_peer","with_my_score","withMyScore","drop_author","drop_media_captions","generateEmptyMessage","getMessagesStorageByKey","s","getMessagesStorage","getMessageById","cantForwardDeleteMids","cantForward","cantDelete","canForward","canDeleteMessage","reloadConversationOrTopic","inputDialogPeer","getInputDialogPeerById","reloadConversationsPromise","inputDialogPeers","currentState","doFlushHistory","just_clear","revoke","affectedHistory","flushHistory","justClear","getHistory","historyResult","getTypingKey","ss","hidePinnedMessages","getPinnedMessage","getSearch","inputFilter","getPinnedMessagesCount","getPinnedMessagesMaxId","updatePinnedMessage","unpin","pm_oneside","unpinAllMessages","unpinAll","getAlbumText","getGroupsFirstMessage","minMid","getMidsByAlbum","groupedId","getMessagesByAlbum","getMidsByMessage","filterMessages","appMessagesIdsManager","saveMessage","isMessage","replyTo","overwriting","msgId","savedFromPeerId","savedFromMid","savedFrom","mediaContext","unsupported","originalDoc","messageKey","getMessageKeyForPendingWebPage","saveWebPage","appWebDocsManager","saveWebDocument","extendedMediaMedia","totalEntities","migrateFrom","migrateTo","video_sizes","appGroupCallsManager","migrateChecks","getFirstMessageToEdit","goodMessage","myPeerId","canEditMessage","apiEntities","myEntities","parseEntities","mergeEntities","reportMessages","editPeerFolders","getDialogPeer","markDialogUnread","read","fromChat","canMessageBeEdited","kind","goodMedias","edit_time_limit","getReplyKeyboard","messageReplyMarkup","lastReplyMarkup","selective","maxOutId","single_use","getSearchStorage","getSearchCounters","canCache","isPeerRestricted","func","filterMessagesByInputFilterFromStorage","_storage","filterMessagesByInputFilter","nextRate","backLimit","offset_id_offset","next_rate","foundMsgs","min_date","max_date","add_offset","min_id","offsetId","offsetMessage","offset_rate","searchResult","foundCount","subscribeRepliesThread","getDiscussionMessage","generateThreadServiceStartMessage","maxMessageId","serviceStartMessage","is_single","getThreadServiceMessageId","getMessageWithReplies","newMaxId","unsetEnd","newDialogsHandlePromise","deleteMessages","localMessageIds","creator","delete_messages","affectedMessages","readHistory","triedToReadMaxId","readPromise","getPeerString","readAllHistory","getUnreadMentionsKey","slicedArray","fixUnreadMentionsCountIfNeeded","goToNextMention","loadNextPromise","loadNextMentions","last","getUnreadMentions","mergeHistoryResult","minId","messagesMessages","readMessages","msgIds","getHistoryStorageTransferable","historySerialized","toJSON","inputNotifyPeer","getInputNotifyPeerById","ignorePeerId","getNotifyPeerTypeSettings","getNotifySettings","isMessageIsTopMessage","threadMessage","broadcastEventName","pendingMessage","finalizePendingMessage","mutePeer","validatePeerSettings","muteUntil","mute_until","togglePeerMute","mute","canSendToPeer","canSendToUser","finalMessage","tempMessage","finalizePendingMessageCallbacks","newPhoto","newDoc","newPhotoSize","oldCacheContext","getPhotoDownloadOptions","thumbSize","polls","handleReleasingMessage","getMessageReactionsListAndReadParticipants","skipReadParticipants","skipReactionsList","emptyMessageReactionsList","canViewMessageReadParticipants","getMessageReadParticipants","appReactionsManager","getMessageReactionsList","messageReactionsList","readParticipantsPeerIds","filteredReadParticipants","readPeerId","reactionsCount","readParticipants","appConfig","getAppConfig","chat_read_mark_size_threshold","chat_read_mark_expire_period","incrementMessageViews","increment","chatPeerIds","idleStartTime","getScheduledMessageByPeer","getScheduledMessages","sendScheduledMessages","deleteScheduledMessages","getMessageWithCommentReplies","isFetchIntervalNeeded","getNewHistory","isBottomEnd","getEnds","offsetIdOffset","haveSlice","sliceMe","fulfilled","fillHistoryStorage","constructSlice","isHistoryResultEnd","topWasMeantToLoad","wasMaxId","requestHistory","deleteSlice","oldestMessage","foundSlice","_historyResult","fetchSingleMessages","fetchSingleMessagesPromise","requestPromises","getMessagesResult","getExtendedMedia","toRequest","fetchMessageReplyTo","replyToPeerId","typing","smth","deleteWebPageFromPending","updatePollToMessage","groupedStorage","albums","dispatchAlbumEdit","deletedMids","noforwards","noForwards","getElementCallback","newMap","peerIdStr","saveDefaultSendAs","convertInputKeyToKey","inputKey","AppNotificationsManager","peerSettings","notifyUsers","notifyChats","notifyBroadcasts","notifyForumTopic","checkMuteUntil","checkMuteUntilTimeout","closestMuteUntil","peerNotifySettings","typeKey","checkMuteUntilThrottled","throttle","isPeerType","notifySettings","getNotifyPeerTypePromise","getContactSignUpNotification","notifyContactsSignUp","setContactSignUpNotification","getPeerKey","getPeerMuted","getPeerLocalSettings","n","peerKey","typeNotifySettings","AppPeersManager","canPinMessage","getPeerPhoto","getUserString","getRestrictionReasonText","restriction_reason","getUserInputPeer","getUserSearchText","getDialogType","getDeleteButtonText","AppPhotosManager","photos","oldPhoto","Infinity","getUserPhotos","inputUser","photosResult","photoIds","photoId","AppPollsManager","updateMessagePoll","poll_id","saveResults","chosenIndexes","answer","chosen","getInputMediaPoll","correctAnswers","solution","solutionEntities","correct_answers","solution_entities","sendVote","optionIds","answers","option","getResults","getVotes","votesList","stopPoll","newPoll","AppPrivacyManager","privacy","updatePrivacy","rules","setPrivacy","privacyRules","inputRule","rule","getPrivacy","privacyKey","getGlobalPrivacySettings","setGlobalPrivacySettings","PEER_FULL_TTL","AppProfileManager","usersFull","chatsFull","fullExpiration","onUpdateUserTyping","getTypingsKey","typingsInPeer","t","cancelAction","getChatFull","onUpdatePeerBlocked","blocked","updateChatParticipants","updateChatParticipantAdd","_participants","updateChatParticipantDelete","updateUserTyping","updateChatUserTyping","updateChannelUserTyping","updatePeerBlocked","fullChat","updated","call_active","hasChatPhoto","chat_photo","refreshFullPeer","invalidateChannelParticipants","usersUserFull","full_user","profile_photo","botInfo","bot_info","referenceContext","description_document","description_photo","getProfileByPeerId","getCachedProfileByPeerId","getFullPhoto","profile","full_chat","getChatInviteLink","exported_invite","link","exportedInvite","getChannelParticipants","broadcast","getChannelParticipant","channelParticipant","fullChannel","processError","getMentions","processUserIds","ratingMap","cP","updateProfile","saveApiUser","uploadProfilePhoto","updateResult","strippedThumb","stripped_thumb","deletePhotos","deletedList","verifyParticipantForOnlineCount","reduceParticipantsForOnlineCount","getOnlines","chatInfo","channelParticipants","onlines","getPeerTypings","callbackifyAll","SAVE_DOC_KEYS","REFERENCE_CONTEXT","AppReactionsManager","availableReactions","getAvailableReactions","sendReactionPromises","lastSendingTimes","availableReaction","around_animation","static_icon","appear_animation","center_icon","messagesAvailableReactions","getActiveAvailableReactions","inactive","getAvailableReactionsForPeer","activeAvailableReactions","unshiftQuickReaction","getQuickReaction","quickReaction","chatAvailableReactions","filteredChatAvailableReactions","unshiftQuickReactionInner","getAvailableReactionsByMessage","isReactionActive","reactions_default","getReactionCached","getReaction","getMessagesReactions","setDefaultReaction","sendReaction","lastSendingTimeKey","unsetReactionCount","canSeeList","can_see_list","chosenReactions","unsetReactions","chosenReactionIdx","chosenReactionCount","chosenReactionsLength","reactionCountIdx","id1","id2","promiseKey","editMessageUpdateIdx","editMessageUpdate","LOCAL_IDS","EMOJI","EMOJI_ANIMATIONS","PREMIUM_GIFTS","GENERIC_ANIMATIONS","DEFAULT_STATUSES","DEFAULT_TOPIC_ICONS","LOCAL_IDS_SET","AppStickersManager","processAllStickersResult","allStickers","sets","stickerSet","videos","getStickerSetPromises","getStickersByEmoticonsPromises","sounds","getAnimatedEmojiStickerSet","getGreetingStickersPromise","getGreetingStickersTimeout","getGreetingSticker","onStickersUpdated","updateNewStickerSet","saveStickerSet","updateRecentStickers","updateFavedStickers","updateMoveStickerSetToTop","stickers","getFavedStickersStickers","getRecentStickersStickers","justPreload","getStickersByEmoticon","greetingStickers","random","saveStickers","canUseStickerSetCache","useCache","refreshTime","getStickerSet","cachedSet","getStickerSetInput","saveById","getLocalStickerSet","animations","getAnimatedEmojiSoundsPromise","emojies_sounds","sound","bytesStr","atob","file_reference_base64","charCodeAt","this_dc","getRecentStickers","recentStickers","saveRecentSticker","unsave","_doc","docEmoticon","faved","cleanEmoji","getAnimatedEmojiSticker","isAnimation","packs","getAnimatedEmojiSoundDocument","preloadAnimatedEmojiSticker","preloadEmojiPromise","preloadAnimatedEmojiStickerAnimation","animation","preloadSticker","isPremiumEffect","video_thumbs","newSet","setToCache","needSave","installed_date","getStickerSetThumbDownloadOptions","thumb_dc_id","isAnimated","mimeType","getFeaturedStickers","covered","getPromoPremiumStickers","getPremiumStickers","getFavedStickers","favedStickers","getFavedStickersLimit","faveSticker","unfave","toggleStickerSet","archived","toggleStickerSets","searchStickerSets","excludeFeatured","exclude_featured","foundSaved","cover","getAllStickers","preloadStickerSets","includeOurStickers","messagesStickers","installedSets","foundStickers","cachedStickersAnimated","cachedStickersStatic","iteratePacks","clearRecentStickers","AppUsersManager","usernames","getTopPeersPromises","contactsIndex","createSearchIndex","contactsFillPromise","contactsList","updatedContactsList","updateUsersStatuses","timestampNow","updateUserStatus","setInterval","expires","was_online","setUserToStateIfNeeded","updateUserName","contactsListCachedTime","contact","mutual_contact","pushContact","recentSearch","onContactsModified","fromServer","pushRecentSearch","clearRecentSearch","resolveUsername","resolvedPeer","processResolvedPeer","resolvePhone","popContact","getContacts","includeSaved","sortBy","_contactsList","userId1","userId2","sortName1","sortName","sortName2","localeCompare","status1","getUserStatusForSort","myUserId","testSelfSearch","getContactsPeerIds","toggleBlock","block","apiUsers","cleanedUsernames","cleanUsername","searchUsername","oldPeer","oldUser","fullName","wasContact","newContact","onContactUpdated","checkPremium","isUserOnlineVisible","getUserStatus","isRegularUser","getUserPhone","isAnonymous","fragment_prefixes","isAttachMenuBot","bot_attach_menu","support","isNonContactUser","eventTimestamp","importContact","importContacts","phones","inputContacts","j","client_id","importedContactsResult","imported","importedContact","topPeersCache","cachedTime","categories","getBlocked","contactsBlocked","getLocated","self_expires","searchContacts","my_results","curIsContact","setUserStatus","offline","updateMyOnlineStatus","addContact","addPhonePrivacyException","add_phone_privacy_exception","deleteContacts","photoTypeSet","AppWebPagesManager","webpages","pendingWebPages","updateWebPage","apiWebPage","oldWebPage","isUpdated","siteName","site_name","shortTitle","author","pendingSet","getWebPage","readBlobAsArrayBuffer","readBlobAs","fileNameRFC","escape","DownloadWriter","serviceMessagePort","getServiceMessagePort","write","chunk","saveToStorage","DownloadStorage","getFile","prepareWriting","headers","cancel","getWriter","MIN_PART_SIZE","IGNORE_ERRORS","ApiFileManager","cacheStorage","downloadStorage","downloadPromises","uploadPromises","downloadPulls","downloadActives","refreshReferencePromises","maxUploadParts","maxDownloadParts","uncompressTGS","uncompressTGV","svgIndex","__","fixFirefoxSvg","TextEncoder","convertWebp","convertOpus","webFileDcId","webfile_dc_id","upload_max_fileparts_premium","upload_max_fileparts_default","downloadRequest","activeDelta","downloadPull","downloadCheck","downloadLimit","setQueueId","getFileStorage","cancelDownload","canceled","requestWebFilePart","checkCancel","isLocalWebFile","extension","file_type","mtime","fileDownload","getDelta","checkedReference","getLimitPart","isUpload","maxParts","maxPartSize","inputFileLocation","isDownloading","getDownload","getUpload","getConvertMethod","IS_OPUS_SUPPORTED","allocateDeferredPromises","startOffset","delayed","writeDeferred","writePromise","originalMimeType","convertMethod","getDownloadFileNameFromOptions","cacheFileName","errorHandler","prepared","isWebFile","cachePrepared","downloadPrepared","possibleSize","_errorHandler","writer","truncate","downloadFileName","readBlobAsUint8Array","requestPart","dispatchProgress","throttledDispatchProgress","superpuper","isFinal","getParts","replaceParts","processedResult","getDownloadMediaDetails","downloadMediaURL","downloadMediaVoid","fileSize","isBigFile","partSize","totalParts","fileId","resultInputFile","parts","md5_checksum","resolved","it","_part","doneParts","file_id","file_part","file_total_parts","fileUpload","generator","ApiManagerMethods","apiPromisesSingleProcess","apiPromisesSingle","apiPromisesCacheable","afterMessageIdTemp","setUserAuth","prepareTempMessageId","queryJSON","newResult","cacheKey","oldPromise","getNewPromise","newPromise","ignore_restriction_reasons","pin","folderPin","bio","topicPin","ApiManager","cachedNetworkers","cachedExportPromise","gettingNetworkers","baseDcId","afterMessageTempIds","changeTransportType","updateConfig","iterateNetworkers","getTransportType","connections","dcs","array","oldTransportType","oldObject","oldGetKey","newGetKey","info","changeNetworkerTransport","getBaseDcId","sessionStorage","setBaseDcId","userAuth","dcID","user_auth","wasDcId","getNetworker","setOnDrainIfNeeded","dc","logOut","loggingOut","storageKeys","storageResult","logoutPromises","ignoreErrors","toggleStorages","generateNetworkerGetKey","networkers","maxNetworkers","found","isOnline","ak","authKeyHex","serverSaltHex","authKey","bytesFromHex","authKeyId","serverSalt","authorizer","_error","newTransportType","removeTransport","stack","getNetworkerVoid","oldTransport","changeTransport","onNetworkerDrain","onDrain","removeNetworker","isFileNetworker","canRelease","setDrainTimeout","updatesProcessor","cachedNetworker","startTime","isStopped","performRequest","wrapApiCall","exportResolve","exportReject","exportedAuth","newDcId","unsetConnectionInited","rawError","waitTime","floodMaxTimeout","attachPromise","originalError","PeersStorage","neededPeers","singlePeerMap","thumbFullSize","ThumbsStorage","thumbsCache","intToUint","ulongFromInts","high","low","shiftLeft","safeBigInt","ulongBigInt","pow","longBigInt","divide","bigIntFromBytes","base","boolFalse","predicate","boolTrue","vector","gzipPacked","sliceMethod","TLSerialization","mtproto","startMaxLength","createBuffer","ArrayBuffer","intView","Int32Array","byteView","getArray","resultBuffer","resultInt32","subarray","getBuffer","getBytes","typed","resultArray","getOffset","checkLength","needBytes","previousBuffer","previousArray","writeInt","field","storeInt","storeBool","storeLongP","iHigh","iLow","storeLong","sLong","storeIntBytes","_bigInt","bigInt","isNegative","quotient","remainder","divmod","toJSNumber","storeDouble","Float64Array","storeString","sUTF8","unescape","storeBytes","bits","storeRawBytes","storeMethod","methodName","methodData","methods","m","flagsOffsets","param","condType","fieldBit","storeObject","paramName","itemType","schema","isBare","constructorData","TLDeserialization","readInt","fetchInt","fetchDouble","doubleView","fetchLong","ulong","greater","minus","greaterOrEquals","abs","fetchBool","fetchObject","fetchString","String","fromCharCode","decodeURIComponent","fetchBytes","fetchIntBytes","fetchRawBytes","fetchVector","fallback","checkType","constructorCmp","uncompressed","constructorsIndex","schemaFallback","int1","int2","overrideKey","isCond","formatJSONValue","jsonValue","objectValues","objectValue","setOffset","addPadding","blockSize","zeroes","blockSizeAsTotalLength","needPadding","padding","bufferConcats","delays","disconnectDelayMin","disconnectDelayMax","pingInterval","pingMaxTime","connectionTimeout","RESEND_OPTIONS","noSchedule","notContentRelated","invokeAfterMsgConstructor","networkerTempId","MTPNetworker","lastServerMessages","sentMessages","pendingMessages","pendingAcks","pendingResendReq","nextReq","checkConnectionPeriod","lastResponseTime","activeRequests","sendPingDelayDisconnect","pingDelayDisconnectDeferred","lastPingTime","disconnectDelay","round","timeoutTime","lastPingStartTime","pingId","lastPingDelayDisconnectId","wrapMtpCall","ping_id","disconnect_delay","rejectTimeout","elapsedTime","checkLongPoll","isClean","longPollPending","sleepAfter","sendLongPoll","checkConnection","clearCheckConnectionTimeout","serializer","pingMessage","generateId","seq_no","generateSeqNo","sendEncryptedRequest","toggleOffline","checkConnectionTimeout","authKeyUint8","convertToUint8Array","isFileUpload","isFileDownload","updateSession","seqNo","prevSessionId","updateSentMessage","sentMessageId","sentMessage","container","inner","innerSentMessageId","innerSentMessage","pushMessage","wrapMtpMessage","connectionInited","invokeWithLayer","initConnection","resultType","isAPI","nextReqTimeout","longPollInterval","clearPingDelayDisconnect","forceReconnectTimeout","sendingLongPoll","max_delay","wait_after","max_wait","noResponse","longPoll","delay","checkConnectionRetryAt","scheduleRequest","handleSentEncryptedRequestHTTP","noResponseMsgs","sqrt","pushResend","shouldResolve","onDrainTimeout","willChange","onConnectionStatusChange","innerMsgId","acked","getMsgKey","dataWithPadding","x","msgKeyLargePlain","msgKeyLarge","getAesKeyIv","msgKey","sha2aText","sha2bText","aesKey","aesIv","sha2a","sha2b","akStopped","performScheduledRequest","ackMsgIds","msg_ids","pendingResendReqLength","outMessage","messagesByteLen","hasApiCall","hasHttpWait","lengthOverflow","compare","messageByteLength","generateContainerMessage","messageWithBody","innerMessages","getEncryptedMessage","keyIv","getDecryptedMessage","encryptedData","getEncryptedOutput","dataBuffer","paddingLength","encryptedResult","requestData","baseError","responseBuffer","deserializer","bytesCmp","calcMsgKey","totalLength","messageBodyLength","messageBody","mt_message","seqno","mt_rpc_result","req_msg_id","applyServerSalt","newServerSalt","toArray","ackMessage","reqResend","notEmpty","processMessageAck","error_message","error_code","msg","applyServerTime","serverTime","shiftRight","innerMessage","new_server_salt","bad_msg_id","changedTimeOffset","badMessage","first_msg_id","server_salt","answer_msg_id","lastResendReq","lastResend","pendingResend","reqMsgId","badMsgId","pos","NetworkerFactory","startAll","stoppedNetworkers","stopAll","setLanguage","testPublicKeysHex","modulus","exponent","publisKeysHex","publicKeysParsed","preparePromise","prepare","keyParsed","RSAPublicKey","fingerprintBytes","fingerprints","fingerprintHex","fill","foundKey","fingerprint","bytesXor","bytes1","bytes2","Authorizer","sendPlainRequest","requestArray","requestLength","headerArray","errorCode","auth_key_id","msg_len","sendReqPQ","nonce","rsaKeysManager","serverNonce","server_nonce","pq","server_public_key_fingerprints","publicKey","pAndQ","sendReqDhParams","newNonce","p_q_inner_data_dc","new_nonce","pQInnerDataSerialization","dataPadReversed","keyAesEncrypted","tempKey","dataWithHash","aesEncrypted","keyAesEncryptedBigInt","publicKeyModulusBigInt","getKeyAesEncrypted","req_DH_params","public_key_fingerprint","encrypted_data","requestBytes","newNonceHash","new_nonce_hash","decryptServerDhDataAnswer","encrypted_answer","sendSetClientDhParams","encryptedAnswer","localTime","tmpAesKey","tmpAesIv","answerWithHash","answerWithPadding","g","dhPrime","dh_prime","gA","g_a","server_time","retry","verifyDhParams","dhPrimeHex","gABigInt","dhPrimeBigInt","subtract","twoPow","gBytes","gB","retry_id","authKeyHash","authKeyAux","newNonceHash1","new_nonce_hash1","newNonceHash2","new_nonce_hash2","newNonceHash3","new_nonce_hash3","getTransportTypePromise","_try","TimeManager","lastMessageId","timeOffset","timeTicks","newTimeOffset","changed","server_time_offset","AppWebDocsManager","webDocument","AppPaymentsManager","getInputInvoiceBySlug","getInputInvoiceByPeerId","getPaymentForm","invoice","paymentForm","getPaymentReceipt","validateRequestedInfo","sendPaymentForm","formId","requestedInfoId","shippingOptionId","credentials","tipAmount","form_id","requested_info_id","shipping_option_id","tip_amount","clearSavedInfo","AppAttachMenuBotsManager","attachMenuBots","attachMenuBotsArr","onUpdateAttachMenuBots","getAttachMenuBots","updateAttachMenuBots","saveAttachMenuBot","attachMenuBot","bot_id","icon","getAttachMenuBotIcon","saveAttachMenuBots","getAttachMenuBotCached","requestWebView","fromBotMenu","themeParams","from_bot_menu","theme_params","prolongWebView","AppSeamlessLoginManager","requestUrlAuth","buttonId","button_id","urlAuthResult","acceptUrlAuth","writeAllowed","write_allowed","getWebAuthorizations","webAuthorizations","authorizations","resetWebAuthorization","resetWebAuthorizations","AppThemesManager","wallPapers","saveWallPaper","getWallPaper","inputWallPaper","getInputWallPaper","getThemes","accountThemes","themes","theme","themeSettings","getWallPapers","accountWallpapers","wallpapers","appManagersManager","cryptoWorkersURLs","cryptoPortsAttached","cryptoPortPromise","getManagers","manager","apply","ports","originalUrl","newURLs","createManagers","appAvatarsManager","appCallsManager","appPrivacyManager","appInlineBotsManager","passwordManager","appPaymentsManager","appSeamlessLoginManager","_serviceMessagePort","_isServiceWorkerOnline","pushedKeys","clearWrite","invokeExceptSource","serviceWorkerOnline","serviceWorkerPort","detachPort","attachPort","messagePort","onConnect","onDisconnect","listenPort","sendPort","attachListenPort","attachSendPort","setOnPortDisconnect","listenMessagePort","NULL_PEER_ID","REPLIES_PEER_ID","REPLIES_HIDDEN_CHANNEL_ID","SERVICE_PEER_ID","MUTE_UNTIL","MAX_FILE_SAVE_SIZE","THUMB_TYPE_FULL","ATTACH_MENU_BOT_ICON_NAME","GENERAL_TOPIC_ID","T_ME_PREFIXES","FOLDER_ID_ALL","FOLDER_ID_ARCHIVE","REAL_FOLDERS","START_LOCAL_ID","ALPHA_CHARS_REG_EXP","ALPHA_NUMERIC_REG_EXP","URL_ALPHANUMERIC_REG_EXP_PART","URL_PROTOCOL_REG_EXP_PART","URL_REG_EXP","URL_ANY_PROTOCOL_REG_EXP","USERNAME_REG_EXP","BOT_COMMAND_REG_EXP","FULL_REG_EXP","EMAIL_REG_EXP","MARKDOWN_REG_EXP","MARKDOWN_ENTITIES","PASS_CONFLICTING_ENTITIES","PHONE_NUMBER_REG_EXP","encodeEmoji","emojiText","unicodeSurrogates","points","char","previous","toCodePoints","removeVS16s","vs16RegExp","zeroWidthJoiner","rawEmoji","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","__webpack_exports__","O","chunkIds","fn","priority","notFulfilled","getter","__esModule","definition","enumerable","chunkId","miniCssF","globalThis","Function","prop","Symbol","toStringTag","nmd","paths","children","scriptUrl","importScripts","currentScript","src","scripts","getElementsByTagName","oldGetScript","oldLoadScript","queryMap","countMap","retries","realSrc","cacheBust","installedChunks","chunkLoadingGlobal","parentChunkLoadingFunction","moreModules","runtime"],"sourceRoot":""}